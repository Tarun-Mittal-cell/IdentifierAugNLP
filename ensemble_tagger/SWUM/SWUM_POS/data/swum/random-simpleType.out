BASE_VERB:NAME:SerializeTools static int parseStringForDateInformation(int information, String stringValue, Calendar cal, int fromI): parse (V)  | EQUIV[string (NI) , [ string (NI) - string (NM) value (NI) ]]-- for (P) EQUIV[date (NM) information (N) , [ int (N) - information (N) ]]	++ :: [ string (NI) - string (NM) value (NI) ] :: [ calendar (N) - cal (N) ] :: [ int (N) - from (NM) I (N) ] :: int (N)  :: serialize (NM) tools (N) 
V_3P_IRR:NAME:MandatoryDefinition boolean isValid(): is (V)  | valid (N) 	++ :: boolean (N)  :: mandatory (NM) definition (NI) 
SPECIAL:NAME:XTokenCore PreferencesSet getIMAPAccounts(): get (V)  | IMAP (NM) accounts (N) 	++ :: preferences (NM) set (N)  :: X (NM) token (NM) core (N) 
SPECIAL:NAME:LinkFilter void setLinkAnchor(String key, String anchor): set (V)  | link (NM) anchor (N) 	++ :: [ string (NI) - key (NI) ] :: [ string (NI) - anchor (N) ] :: link (NM) filter (N) 
SPECIAL:NAME:MainPanel ConfigurableKeyBinding getKeyBindings(): get (V)  | key (NM) bindings (N) 	++ :: configurable (NM) key (NM) binding (N)  :: main (NM) panel (N) 
SPECIAL:CLAS:LocationService Location searchByLocation(String location): search (V)  | location (NM) service (N) -- by (P) EQUIV[location (NI) , [ string (NI) - location (NI) ]]	++ :: location (NI) 
SPECIAL:NAME:AbstractActiveDirectoryAccountNewBlock void initStandardBlock(): init (V)  | standard (NM) block (N) 	++ :: abstract (NM) active (NM) directory (NM) account (NM) new (NM) block (N) 
BASE_VERB:FORM:DefaultHandshakeResponder HandshakeResponse respond(HandshakeResponse response, boolean outgoing): respond (V)  | [ handshake (NM) response (N) - response (N) ]	++ :: default (NM) handshake (NM) responder (N)  :: [ boolean (N) - outgoing (N) ] :: handshake (NM) response (N) 
BASE_VERB:NAME:IndentVisitor Object visitTryFinally(TryFinally node): visit (V)  | EQUIV[try (NM) finally (N) , [ try (NM) finally (N) - node (NI) ]]	++ :: object (NI)  :: indent (NM) visitor (N) 
SPECIAL:NAME:RuleSet void setFileName(String fileName): set (V)  | file (NM) name (NI) 	++ :: [ string (NI) - file (NM) name (NI) ] :: rule (NM) set (N) 
SPECIAL:NAME:TiffEncoder void writeIFD(DataOutputStream out, int imageOffset, int nextIFD): write (V)  | EQUIV[IFD (N) , [ int (N) - next (DT) IFD (N) ]]	++ :: [ data (NM) output (NM) stream (NI) - out (N) ] :: [ int (N) - image (NM) offset (N) ] :: tiff (NM) encoder (N) 
SPECIAL:NAME:HTMLTableCellElement String getAlign(): get (V)  | align (N) 	++ :: string (NI)  :: HTML (NM) table (NM) cell (NM) element (NI) 
V_3P_IRR:NAME:StartTag boolean isMasonTag(): is (V)  | mason (NM) tag (NI) 	++ :: boolean (N)  :: start (NM) tag (NI) 
SPECIAL:NAME:PluginLoader boolean initializePlugins(String pluginString, Jim jimProgram): initialize (V)  | plugins (N) 	++ :: [ string (NI) - plugin (NM) string (NI) ] :: [ jim (N) - jim (NM) program (N) ] :: boolean (N)  :: plugin (NM) loader (N) 
SPECIAL:NAME:Document NodeList getElementsByTagNameNS(String namespaceURI, String localName): get (V)  | elements (N) -- by (P) tag (NM) name (NM) NS (N) 	++ :: [ string (NI) - namespace (NM) URI (NI) ] :: [ string (NI) - local (NM) name (NI) ] :: node (NM) list (N)  :: document (NI) 
SPECIAL:NAME:AdventureApp int getYScreen(): get (V)  | Y (NM) screen (N) 	++ :: int (N)  :: adventure (NM) app (N) 
SPECIAL:NAME:WorkspaceHQLSource String getHQLQuery(): get (V)  | HQL (NM) query (N) 	++ :: string (NI)  :: workspace (NM) HQL (NM) source (NI) 
SPECIAL:NAME:XMLInstance String getLocalName(): get (V)  | local (NM) name (NI) 	++ :: string (NI)  :: XML (NM) instance (NI) 
SPECIAL:NAME:SimsorderBean String getStatus(): get (V)  | status (N) 	++ :: string (NI)  :: simsorder (NM) bean (NI) 
SPECIAL:NAME:ExternalClass String getName(): get (V)  | name (NI) 	++ :: string (NI)  :: external (NM) class (NI) 
BASE_VERB:CLAS:SetGroupsTest void tearDown(): tear (V) down (VP)  | set (NM) groups (NM) test (N) 	++
SPECIAL:NAME:TrackpointJTableModel Class getColumnClass(int c): get (V)  | column (NM) class (NI) 	++ :: [ int (N) - c (N) ] :: class (NI)  :: trackpoint (NM) J (NM) table (NM) model (NI) 
SPECIAL:CLAS:AbstractAnyAccountContractorsBlock Object clone(): clone (V)  | abstract (NM) any (DT) account (NM) contractors (NM) block (N) 	++ :: object (NI) 
SPECIAL:NAME:AlphabeticalIndex void setStyleName(String styleName): set (V)  | style (NM) name (NI) 	++ :: [ string (NI) - style (NM) name (NI) ] :: alphabetical (NM) index (NI) 
V_3P_IRR:NAME:CreateClass boolean isSamePackage(String packageName, TypeSummary parentSummary): is (V)  | EQUIV[same (NM) package (N) , [ string (NI) - package (NM) name (NI) ]]	++ :: [ type (NM) summary (N) - parent (NM) summary (N) ] :: boolean (N)  :: create (NM) class (NI) 
SPECIAL:NAME:GncGncEntryType String getEntryQty(): get (V)  | entry (NM) qty (N) 	++ :: string (NI)  :: gnc (NM) gnc (NM) entry (NM) type (N) 
ENDS_WITH_ED:NAME:void actionPerformed(ActionEvent evt): handle (V) | action (NM) performed (N) 	++ :: [ action (NM) event (NI) - evt (N) ] :: ANONYMOUS (N)  :: void (N) 
CONSTRUCTOR:NAME:NavigationPane NavigationPane NavigationPane():  | navigation (NM) pane (N) 	++
SPECIAL:NAME:GenericPostService GenericPost getPostsWithCreationBetween(Calendar fromDate, Calendar toDate, LimUser limUser): get (V)  | posts (N) -- with (P) creation (NM) between (N) 	++ :: [ calendar (N) - from (NM) date (N) ] :: [ calendar (N) - to (NM) date (N) ] :: [ lim (NM) user (N) - lim (NM) user (N) ] :: generic (NM) post (N)  :: generic (NM) post (NM) service (N) 
SPECIAL:NAME:MapLayerInfo String getLabel(): get (V)  | label (NI) 	++ :: string (NI)  :: map (NM) layer (NM) info (NI) 
SPECIAL:NAME:GanttTabbedPane void addTab(String title, Component component, Object userObject): add (V)  | tab (N) 	++ :: [ string (NI) - title (N) ] :: [ component (N) - component (N) ] :: [ object (NI) - user (NM) object (NI) ] :: gantt (NM) tabbed (NM) pane (N) 
SPECIAL:NAME:IncrementalZipMedium String getDescription(): get (V)  | description (NI) 	++ :: string (NI)  :: incremental (NM) zip (NM) medium (N) 
SPECIAL:NAME:DefaultProcessInstance void setVariables(Map variables): set (V)  | variables (N) 	++ :: [ map (N) - variables (N) ] :: default (NM) process (NM) instance (NI) 
CONSTRUCTOR:NAME:InvokationBreaker InvokationBreaker InvokationBreaker(ThreadReference thread, Method method, List list, int i, ObjectReference ref):  | invokation (NM) breaker (N) 	++ :: [ thread (NM) reference (NI) - thread (N) ] :: [ method (N) - method (N) ] :: [ list (N) - list (N) ] :: [ int (N) - i (N) ] :: [ object (NM) reference (NI) - ref (NI) ]
SPECIAL:NAME:SAXException String getMessage(): get (V)  | message (NI) 	++ :: string (NI)  :: SAX (NM) exception (N) 
EVENT_PARAM:NAME:EventHandler void incomingEvent(Event ev, int id): handle (V) | incoming (NM) event (NI) 	++ :: [ event (NI) - ev (N) ] :: [ int (N) - id (NI) ] :: event (NM) handler (N)  :: void (N) 
BASE_VERB:CLAS:RestrictionImpl MinCardinalityRestriction convertToMinCardinalityRestriction(int cardinality): convert (V)  | restriction (NM) impl (NI) -- to (P) min (NM) cardinality (NM) restriction (N) 	++ :: [ int (N) - cardinality (N) ] :: min (NM) cardinality (NM) restriction (N) 
CONSTRUCTOR:NAME:StoryTest StoryTest StoryTest(String name):  | story (NM) test (N) 	++ :: [ string (NI) - name (NI) ]
NOUN_PHRASE:NAME:BasicStatistics double factorial(int a, int b): get (V) | factorial (N) 	++ :: [ int (N) - a (N) ] :: [ int (N) - b (N) ] :: basic (NM) statistics (N)  :: double (N) 
SPECIAL:NAME:PrinterDriverInstaller String getName(): get (V)  | name (NI) 	++ :: string (NI)  :: printer (NM) driver (NM) installer (N) 
BASE_VERB:NAME:FolderDisplayPanel void unregisterKeyboardAction(KeyStroke aKeyStroke): unregister (V)  | keyboard (NM) action (N) 	++ :: [ key (NM) stroke (N) - a (NM) key (NM) stroke (N) ] :: folder (NM) display (NM) panel (N) 
SPECIAL:NAME:SmartTree String testDropTarget(TreePath destination, TreePath dropper): test (VI)  | drop (NM) target (N) 	++ :: [ tree (NM) path (NI) - destination (N) ] :: [ tree (NM) path (NI) - dropper (N) ] :: string (NI)  :: smart (NM) tree (NI) 
SPECIAL:NAME:JaasSecurityDomainMBean void setTrustStoreType(String type): set (V)  | trust (NM) store (NM) type (N) 	++ :: [ string (NI) - type (N) ] :: jaas (NM) security (NM) domain (NM) M (NM) bean (NI) 
CONSTRUCTOR:NAME:CorbaOperationDef CorbaOperationDef CorbaOperationDef(IdlOperation a_operation, CorbaRepository a_repository):  | corba (NM) operation (NM) def (NI) 	++ :: [ idl (NM) operation (N) - a (NM) operation (N) ] :: [ corba (NM) repository (N) - a (NM) repository (N) ]
CONSTRUCTOR:NAME:FilterCapabilities FilterCapabilities FilterCapabilities(Class type):  | filter (NM) capabilities (N) 	++ :: [ class (NI) - type (N) ]
SPECIAL:NAME:TagsEntryServiceUtil static int searchCount(long companyId, String name, String properties): search (V)  | count (N) 	++ :: [ long (N) - company (NM) id (NI) ] :: [ string (NI) - name (NI) ] :: [ string (NI) - properties (N) ] :: int (N)  :: tags (NM) entry (NM) service (NM) util (N) 
CONSTRUCTOR:NAME:CField CField CField():  | C (NM) field (N) 	++
SPECIAL:NAME:UO void readObjectFromResultSet(ResultSet rs): read (V)  | object (NI) -- from (P) EQUIV[result (NM) set (N) , [ result (NM) set (N) - rs (N) ]]	++ :: UO (N) 
BASE_VERB:FORM:LineCountVisitor Object visit(ASTMemberValue node, Object data): visit (V)  | [ AST (NM) member (NM) value (NI) - node (NI) ]	++ :: [ object (NI) - data (NI) ] :: line (NM) count (NM) visitor (N)  :: object (NI) 
BASE_VERB:CLAS:FromKey void saveToXML(Element parent): save (V)  | from (NM) key (NI) -- to (P) XML (N) 	++ :: [ element (NI) - parent (N) ]
SPECIAL:NAME:ResourceTypeDisplaySummary void setThroughput(Double throughput): set (V)  | throughput (N) 	++ :: [ double (N) - throughput (N) ] :: resource (NM) type (NM) display (NM) summary (N) 
SPECIAL:NAME:ScalarInterpolator float getValue(): get (V)  | value (NI) 	++ :: float (N)  :: scalar (NM) interpolator (N) 
SPECIAL:NAME:WordsUtil static String getRandomWord(): get (V)  | random (NM) word (N) 	++ :: string (NI)  :: words (NM) util (N) 
SPECIAL:NAME:SecurityServiceFactory static String getLoginContextName(): get (V)  | login (NM) context (NM) name (NI) 	++ :: string (NI)  :: security (NM) service (NM) factory (N) 
SPECIAL:NAME:GrossCashflow CashflowId getCashflowId(): get (V)  | cashflow (NM) id (NI) 	++ :: cashflow (NM) id (NI)  :: gross (NM) cashflow (N) 
CONSTRUCTOR:NAME:EtherealGolemRebuildException EtherealGolemRebuildException EtherealGolemRebuildException(String text):  | ethereal (NM) golem (NM) rebuild (NM) exception (N) 	++ :: [ string (NI) - text (NI) ]
SPECIAL:NAME:Py static void writeWarning(String type, String msg): write (V)  | warning (N) 	++ :: [ string (NI) - type (N) ] :: [ string (NI) - msg (NI) ] :: py (N) 
SPECIAL:NAME:UserManager void removeRoleFromUsers(Role role): remove (V)  | EQUIV[role (N) , [ role (N) - role (N) ]]-- from (P) users (N) 	++ :: user (NM) manager (N) 
BASE_VERB:CLAS:JEANMenuComponent void mergeWith(JEANMenuComponent otherMenuComponent): merge (V)  | JEAN (NM) menu (NM) component (N) -- with (P) [ JEAN (NM) menu (NM) component (N) - other (DT) menu (NM) component (N) ]	++ :: [ JEAN (NM) menu (NM) component (N) - other (DT) menu (NM) component (N) ]
SPECIAL:NAME:PictureChat JID getJID(): get (V)  | JID (N) 	++ :: JID (N)  :: picture (NM) chat (N) 
CONSTRUCTOR:NAME:EvoLabView EvoLabView EvoLabView(EvoLabViewAbsPartner abs, EvoLabLogger elogger):  | evo (NM) lab (NM) view (NI) 	++ :: [ evo (NM) lab (NM) view (NM) abs (NM) partner (N) - abs (N) ] :: [ evo (NM) lab (NM) logger (N) - elogger (N) ]
SPECIAL:NAME:TreeContext TreePath getSelectionPath(): get (V)  | selection (NM) path (NI) 	++ :: tree (NM) path (NI)  :: tree (NM) context (N) 
PREP:NAME:UniversalDispatcher void onGenericEvent(UniversalListener handler, GenericMessage event): handle (V) | on (NM) generic (NM) event (NI) 	++ :: [ universal (NM) listener (N) - handler (N) ] :: [ generic (NM) message (NI) - event (NI) ] :: universal (NM) dispatcher (N)  :: void (N) 
SPECIAL:CLAS:EdgeIterator void remove(): remove (V)  | edge (NM) iterator (N) 	++
SPECIAL:NAME:ScrollableGroupView void addItem(AbstractButton itemView): add (V)  | EQUIV[item (NI) , [ abstract (NM) button (N) - item (NM) view (NI) ]]	++ :: scrollable (NM) group (NM) view (NI) 
SPECIAL:CLAS:SnmpPduTrap SnmpSyntax duplicate(): duplicate (V)  | snmp (NM) pdu (NM) trap (N) 	++ :: snmp (NM) syntax (N) 
SPECIAL:NAME:BridgeRenderFilter void doFilter(ServletRequest request, ServletResponse response, FilterChain chain): do (VI)  | filter (N) 	++ :: [ servlet (NM) request (N) - request (N) ] :: [ servlet (NM) response (N) - response (N) ] :: [ filter (NM) chain (N) - chain (N) ] :: bridge (NM) render (NM) filter (N) 
SPECIAL:NAME:TemplateController TrayType createTrayType(String name, int condCount, String sSize, Category c, boolean sad): create (V)  | tray (NM) type (N) 	++ :: [ string (NI) - name (NI) ] :: [ int (N) - cond (NM) count (N) ] :: [ string (NI) - s (NM) size (N) ] :: [ category (N) - c (N) ] :: [ boolean (N) - sad (N) ] :: tray (NM) type (N)  :: template (NM) controller (N) 
CONSTRUCTOR:NAME:Connection Connection Connection(String host):  | connection (N) 	++ :: [ string (NI) - host (N) ]
SPECIAL:FORM:AllLogTests static void main(String args): main (V)  | [ string (NI) - args (N) ]	++ :: all (DT) log (NM) tests (N) 
SPECIAL:NAME:RaceStartResponse byte getSp0(): get (V)  | sp (N) 0 (D) 	++ :: byte (N)  :: race (NM) start (NM) response (N) 
ENDS_WITH_ED:NAME:document_home void actionPerformed(ActionEvent evt): handle (V) | action (NM) performed (N) 	++ :: [ action (NM) event (NI) - evt (N) ] :: document (NM) home (N)  :: void (N) 
PREP:NAME:CharacterAttributeHandler Object toPropertyValue(String s): convert (V) | to (P) property (NM) value (NI) 	++ :: [ string (NI) - s (N) ] :: character (NM) attribute (NM) handler (N)  :: object (NI) 
V_3PS:NAME:CapabilitiesVM int supportsCapability(byte capabilityName): supports (V)  | EQUIV[capability (N) , [ byte (N) - capability (NM) name (NI) ]]	++ :: int (N)  :: capabilities (NM) VM (N) 
SPECIAL:FORM:IpObject void read(IpInputStream stream): read (V)  | [ ip (NM) input (NM) stream (NI) - stream (NI) ]	++ :: ip (NM) object (NI) 
SPECIAL:NAME:CountryModel String getA2(): get (V)  | A (N) 2 (D) 	++ :: string (NI)  :: country (NM) model (NI) 
ENDS_WITH_ED:NAME:RunListener void stopped(): handle (V) | stopped (N) 	++ :: run (NM) listener (N)  :: void (N) 
SPECIAL:NAME:LinkedList void removeEntry(Entry e): remove (V)  | EQUIV[entry (NI) , [ entry (NI) - e (N) ]]	++ :: linked (NM) list (N) 
NOUN_PHRASE:NAME:StructPanel Struct newStruct(): get (V) | new (NM) struct (N) 	++ :: struct (NM) panel (N)  :: struct (N) 
CONSTRUCTOR:NAME:ScopesRequestUtils ScopesRequestUtils ScopesRequestUtils():  | scopes (NM) request (NM) utils (N) 	++
SPECIAL:NAME:DomainRefListTypeImpl DocumentDeclaration createRawValidator(): create (V)  | raw (NM) validator (N) 	++ :: document (NM) declaration (NI)  :: domain (NM) ref (NM) list (NM) type (NM) impl (NI) 
V_3PS:FORM:Inet6Address boolean equals(Object obj): equals (V)  | [ object (NI) - obj (NI) ]	++ :: inet (NM) 6 (NM) address (NI)  :: boolean (N) 
ENDS_WITH_ED:NAME:NexsmLabelerGraphMousePlugin void mouseMoved(MouseEvent e): handle (V) | mouse (NM) moved (N) 	++ :: [ mouse (NM) event (NI) - e (N) ] :: nexsm (NM) labeler (NM) graph (NM) mouse (NM) plugin (N)  :: void (N) 
BASE_VERB:NAME:ObjectPool void drainPool(long waitTime): drain (V)  | pool (N) 	++ :: [ long (N) - wait (NM) time (N) ] :: object (NM) pool (N) 
BASE_VERB:NAME:CharTupleChecker List<Type2> visitVarDecl(VarDecl varDecl): visit (V)  | EQUIV[var (NM) decl (NI) , [ var (NM) decl (NI) - var (NM) decl (NI) ]]	++ :: list (NM) type (NM) 2 (N)  :: char (NM) tuple (NM) checker (N) 
NOUN_PHRASE:NAME:World boolean propertyExists(int property): get (V) | property (NM) exists (N) 	++ :: [ int (N) - property (N) ] :: world (N)  :: boolean (N) 
SPECIAL:NAME:tuiStaticText static int get_default_align(): get (V)  | default (NM) align (N) 	++ :: int (N)  :: tui (NM) static (NM) text (NI) 
ENDS_WITH_ED:NAME:VagFilleMailleur void paramStructModified(FudaaParamEvent e): handle (V) | param (NM) struct (NM) modified (N) 	++ :: [ fudaa (NM) param (NM) event (NI) - e (N) ] :: vag (NM) fille (NM) mailleur (N)  :: void (N) 
V_3PS:NAME:DatabaseMetaData boolean supportsGroupBy(): supports (V)  | group (N) by (NM) 	++ :: boolean (N)  :: database (NM) meta (NM) data (NI) 
SPECIAL:NAME:DashboardService void deleteDashboard(IDashboard dashboard): delete (V)  | EQUIV[dashboard (N) , [ I (NM) dashboard (N) - dashboard (N) ]]	++ :: dashboard (NM) service (N) 
BASE_VERB:NAME:OMLFileFormat boolean handleDataCharacters(String text): handle (VI)  | data (NM) characters (N) 	++ :: [ string (NI) - text (NI) ] :: boolean (N)  :: OML (NM) file (NM) format (NI) 
BASE_VERB:FORM:BSHThrowStatement Object eval(CallStack callstack, Interpreter interpreter): eval (V)  | [ call (NM) stack (N) - callstack (N) ]	++ :: [ interpreter (N) - interpreter (N) ] :: BSH (NM) throw (NM) statement (NI)  :: object (NI) 
SPECIAL:FORM:testpool static void main(String args): main (V)  | [ string (NI) - args (N) ]	++ :: testpool (N) 
CONSTRUCTOR:NAME:GUIDialog GUIDialog GUIDialog(Frame _owner, String _title):  | GUI (NM) dialog (N) 	++ :: [ frame (N) - owner (N) ] :: [ string (NI) - title (N) ]
PREP:NAME:IGFolderJSONSerializer static JSONArray toJSONArray(List models): convert (V) | to (P) JSON (NM) array (N) 	++ :: [ list (N) - models (N) ] :: IG (NM) folder (NM) JSON (NM) serializer (N)  :: JSON (NM) array (N) 
BASE_VERB:FORM:Factory static TabIndexAttribute parse(File file, XmlOptions options): parse (V)  | [ file (NI) - file (NI) ]	++ :: [ xml (NM) options (N) - options (N) ] :: factory (N)  :: tab (NM) index (NM) attribute (N) 
SPECIAL:NAME:jcanalciJNI static long get_canalMsg_flags(long jarg1): get (V)  | canal (NM) msg (NM) flags (N) 	++ :: [ long (N) - jarg (NM) 1 (N) ] :: long (N)  :: jcanalci (NM) JNI (N) 
V_3P_IRR:NAME:ISchemaElement boolean isChameleon(): is (V)  | chameleon (N) 	++ :: boolean (N)  :: I (NM) schema (NM) element (NI) 
CONSTRUCTOR:NAME:PhpProcedureProxy PhpProcedureProxy PhpProcedureProxy(JavaBridge bridge, Map strings, Class interfaces, long object):  | php (NM) procedure (NM) proxy (NI) 	++ :: [ java (NM) bridge (N) - bridge (N) ] :: [ map (N) - strings (N) ] :: [ class (NI) - interfaces (N) ] :: [ long (N) - object (NI) ]
BASE_VERB:NAME:jdbcResultSet void updateAsciiStream(String columnName, InputStream x, int length): update (V)  | EQUIV[ascii (NM) stream (NI) , [ input (NM) stream (NI) - x (N) ]]	++ :: [ string (NI) - column (NM) name (NI) ] :: [ int (N) - length (N) ] :: jdbc (NM) result (NM) set (N) 
SPECIAL:NAME:DefaultBarHeader void setForeground(Color color): set (V)  | foreground (N) 	++ :: [ color (N) - color (N) ] :: default (NM) bar (NM) header (N) 
SPECIAL:NAME:InsertStmtIdsNew_1ParamsImpl Long getStart1(): get (V)  | start (N) 1 (D) 	++ :: long (N)  :: insert (NM) stmt (NM) ids (NM) new (NM) 1 (NM) params (NM) impl (NI) 
BASE_VERB:NAME:BlockTrackerArchiver static void saveBlockTracker(BlockTracker blockTracker, OutputStream oStream): save (V)  | EQUIV[block (NM) tracker (N) , [ block (NM) tracker (N) - block (NM) tracker (N) ]]	++ :: [ output (NM) stream (NI) - o (NM) stream (NI) ] :: block (NM) tracker (NM) archiver (N) 
SPECIAL:FORM:Compiler void set(String file): set (V)  | [ string (NI) - file (NI) ]	++ :: compiler (N) 
SPECIAL:NAME:YearTests void testDateConstructor1(): test (VI)  | date (NM) constructor (N) 1 (D) 	++ :: year (NM) tests (N) 
BASE_VERB:NAME:RegroupidAttribute XmlInteger xgetRegroupid(): xget (V)  | regroupid (N) 	++ :: xml (NM) integer (N)  :: regroupid (NM) attribute (N) 
CONSTRUCTOR:NAME:XMLFileHandlerTest XMLFileHandlerTest XMLFileHandlerTest(String testName):  | XML (NM) file (NM) handler (NM) test (N) 	++ :: [ string (NI) - test (NM) name (NI) ]
SPECIAL:NAME:DataTarget void deleteFile(String fileName): delete (V)  | EQUIV[file (NI) , [ string (NI) - file (NM) name (NI) ]]	++ :: data (NM) target (N) 
NOUN_PHRASE:NAME:Name int size(): get (V) | size (N) 	++ :: name (NI)  :: int (N) 
SPECIAL:NAME:AnimalMedical void setTreatmentRule(Integer newValue): set (V)  | treatment (NM) rule (N) 	++ :: [ integer (N) - new (NM) value (NI) ] :: animal (NM) medical (N) 
CONSTRUCTOR:NAME:NominalTrainingFeature NominalTrainingFeature NominalTrainingFeature():  | nominal (NM) training (NM) feature (N) 	++
BASE_VERB:NAME:PCRStatistics int hashCode(): hash (V)  | code (NI) 	++ :: int (N)  :: PCR (NM) statistics (N) 
NOUN_PHRASE:NAME:CouponAdjustment static Object unmarshal(Reader reader): get (V) | unmarshal (N) 	++ :: [ reader (N) - reader (N) ] :: coupon (NM) adjustment (N)  :: object (NI) 
V_3PS:FORM:ImmutableGregorianDate boolean equals(Object obj): equals (V)  | [ object (NI) - obj (NI) ]	++ :: immutable (NM) gregorian (NM) date (N)  :: boolean (N) 
SPECIAL:NAME:SimpleDecimalFormat static SimpleDecimalFormat getInstance(): get (V)  | instance (NI) 	++ :: simple (NM) decimal (NM) format (NI)  :: simple (NM) decimal (NM) format (NI) 
ENDS_WITH_ED:NAME:babylonUserToolDialog void itemStateChanged(ItemEvent E): handle (V) | item (NM) state (NM) changed (N) 	++ :: [ item (NM) event (NI) - E (N) ] :: babylon (NM) user (NM) tool (NM) dialog (N)  :: void (N) 
SPECIAL:NAME:ID3V2_3_0Tag TPE4TextInformationID3V2Frame getTPE4TextInformationFrame(): get (V)  | TPE (NM) 4 (D) text (NM) information (NM) frame (N) 	++ :: TPE (NM) 4 (NM) text (NM) information (NM) ID (NM) 3 (NM) V (NM) 2 (NM) frame (N)  :: ID (NM) 3 (NM) V (NM) 2 (NM) 3 (NM) 0 (NM) tag (NI) 
SPECIAL:NAME:ArchiveFile File getFile(): get (V)  | file (NI) 	++ :: file (NI)  :: archive (NM) file (NI) 
ENDS_WITH_ED:NAME:VKeyboard void presetCBActionPerformed(ActionEvent evt): handle (V) | preset (NM) CB (NM) action (NM) performed (N) 	++ :: [ action (NM) event (NI) - evt (N) ] :: V (NM) keyboard (N)  :: void (N) 
SPECIAL:NAME:InOut void removeSource(Source s): remove (V)  | EQUIV[source (NI) , [ source (NI) - s (N) ]]	++ :: in (NM) out (N) 
ENDS_WITH_ED:NAME:void actionPerformed(ActionEvent e): handle (V) | action (NM) performed (N) 	++ :: [ action (NM) event (NI) - e (N) ] :: ANONYMOUS (N)  :: void (N) 
SPECIAL:NAME:ObjectFactory DynamicValues createDynamicValues(): create (V)  | dynamic (NM) values (N) 	++ :: dynamic (NM) values (N)  :: object (NM) factory (N) 
V_3P_IRR:NAME:Placement boolean isUndefineSymbol(): is (V)  | undefine (NM) symbol (N) 	++ :: boolean (N)  :: placement (N) 
SPECIAL:NAME:BeanSearchUtil void processProperties(Properties p, Object obj, boolean removeFoundKeys, String prefix): process (VI)  | EQUIV[properties (N) , [ properties (N) - p (NI) ]]	++ :: [ object (NI) - obj (NI) ] :: [ string (NI) - prefix (N) ] :: [ boolean (N) - remove (NM) found (NM) keys (N) ] :: bean (NM) search (NM) util (N) 
SPECIAL:NAME:CharacterEnumSelectTag void setObjectName(String objectName): set (V)  | object (NM) name (NI) 	++ :: [ string (NI) - object (NM) name (NI) ] :: character (NM) enum (NM) select (NM) tag (NI) 
PREP:NAME:Sentry void onSabotage(MOB mob, Message msg, Map effects): handle (V) | on (NM) sabotage (N) 	++ :: [ MOB (N) - mob (N) ] :: [ message (NI) - msg (NI) ] :: [ map (N) - effects (N) ] :: sentry (N)  :: void (N) 
SPECIAL:NAME:Mortal void doCommand(String command): do (VI)  | EQUIV[command (N) , [ string (NI) - command (N) ]]	++ :: mortal (N) 
SPECIAL:NAME:ConeTypeImpl void setRmax1(Object value): set (V)  | rmax (N) 1 (D) 	++ :: [ object (NI) - value (NI) ] :: cone (NM) type (NM) impl (NI) 
BASE_VERB:NAME:DatabaseModelEditor void gotoMarker(IMarker marker): goto (V)  | EQUIV[marker (N) , [ I (NM) marker (N) - marker (N) ]]	++ :: database (NM) model (NM) editor (N) 
BASE_VERB:NAME:PositionTypeList void activateExternalPage(Object parameters, IRequestCycle cycle): activate (VI)  | external (NM) page (N) 	++ :: [ object (NI) - parameters (N) ] :: [ I (NM) request (NM) cycle (N) - cycle (N) ] :: position (NM) type (NM) list (N) 
SPECIAL:NAME:SAXOutputter XMLReader createDTDParser(): create (V)  | DTD (NM) parser (N) 	++ :: XML (NM) reader (N)  :: SAX (NM) outputter (N) 
CONSTRUCTOR:NAME:InnerObserverCapCacheDeleteEvent InnerObserverCapCacheDeleteEvent InnerObserverCapCacheDeleteEvent(CapCache cacheToBeObserved, Exe exeToCallOnChange):  | inner (NM) observer (NM) cap (NM) cache (NM) delete (NM) event (NI) 	++ :: [ cap (NM) cache (N) - cache (NM) to (NM) be (NM) observed (N) ] :: [ exe (N) - exe (NM) to (NM) call (NM) on (NM) change (N) ]
BASE_VERB:NAME:ArcType void xsetArcrole(Arcrole arcrole): xset (V)  | EQUIV[arcrole (N) , [ arcrole (N) - arcrole (N) ]]	++ :: arc (NM) type (N) 
V_3PS:FORM:IPAddress boolean equals(Object other): equals (V)  | [ object (NI) - other (DT) ]	++ :: IP (NM) address (NI)  :: boolean (N) 
SPECIAL:NAME:MonthTests void testEquals(): test (VI)  | equals (N) 	++ :: month (NM) tests (N) 
SPECIAL:NAME:AttributeList String getValue(String strName): get (V)  | value (NI) 	++ :: [ string (NI) - str (NM) name (NI) ] :: string (NI)  :: attribute (NM) list (N) 
SPECIAL:CLAS:strike void setOnKeyUp(String script): set (V)  | strike (N) -- on (P) key (NM) up (N) 	++ :: [ string (NI) - script (N) ]
SPECIAL:NAME:SAXContentHandler InputSource getInputSource(): get (V)  | input (NM) source (NI) 	++ :: input (NM) source (NI)  :: SAX (NM) content (NM) handler (N) 
CONSTRUCTOR:NAME:Unmarshaller Unmarshaller Unmarshaller(UnmarshallingContext context):  | unmarshaller (N) 	++ :: [ unmarshalling (NM) context (N) - context (N) ]
EMPTY:NONE:EJBQLParser boolean jj_3R_76():  | jj (PRE) 3 (D) R (PRE) 76 (D) 
NOUN_PHRASE:NAME:Index Node next(Node x): get (V) | next (DT) 	++ :: [ node (NI) - x (N) ] :: index (NI)  :: node (NI) 
SPECIAL:NAME:KSwingListener void setDemonstrateEvent(String name, Object eventSrc): set (V)  | demonstrate (NM) event (NI) 	++ :: [ string (NI) - name (NI) ] :: [ object (NI) - event (NM) src (N) ] :: K (NM) swing (NM) listener (N) 
V_3P_IRR:NAME:Column boolean isPrimaryKey(): is (V)  | primary (NM) key (NI) 	++ :: boolean (N)  :: column (N) 
SPECIAL:FORM:AppletServlet void doGet(HTTPRequest req, HTTPResponse res): do (VI) get (V)  | [ HTTP (NM) request (N) - req (N) ]	++ :: [ HTTP (NM) response (N) - res (N) ] :: applet (NM) servlet (N) 
NOUN_PHRASE:NAME:JGEngineInterface double random(double min, double max, double interval): get (V) | random (N) 	++ :: [ double (N) - min (N) ] :: [ double (N) - max (N) ] :: [ double (N) - interval (N) ] :: JG (NM) engine (NM) interface (NI)  :: double (N) 
SPECIAL:CLAS:LoggerThread void doStop(): do (VI) stop (VI)  | logger (NM) thread (N) 	++
BASE_VERB:NAME:Unmarshaller void leaveAttribute(String ___uri, String ___local, String ___qname): leave (V)  | attribute (N) 	++ :: [ string (NI) - uri (NI) ] :: [ string (NI) - local (N) ] :: [ string (NI) - qname (N) ] :: unmarshaller (N) 
SPECIAL:NAME:IntegerSeries double getRealValue(int index): get (V)  | real (NM) value (NI) 	++ :: [ int (N) - index (NI) ] :: double (N)  :: integer (NM) series (N) 
BASE_VERB:FORM:AgentMeasurementPlugin String translate(String template, ConfigResponse config): translate (V)  | [ string (NI) - template (N) ]	++ :: [ config (NM) response (N) - config (NI) ] :: agent (NM) measurement (NM) plugin (N)  :: string (NI) 
ENDS_WITH_ED:NAME:RecordListList void actionPerformed(ActionEvent e): handle (V) | action (NM) performed (N) 	++ :: [ action (NM) event (NI) - e (N) ] :: record (NM) list (NM) list (N)  :: void (N) 
CONSTRUCTOR:NAME:InvalidRequestException InvalidRequestException InvalidRequestException():  | invalid (NM) request (NM) exception (N) 	++
V_3P_IRR:NAME:ReplaceInWorksheetsGroup boolean isEdited(): is (V)  | edited (N) 	++ :: boolean (N)  :: replace (NM) in (NM) worksheets (NM) group (N) 
SPECIAL:NAME:EntityLoadHandler String getSearchResultsPageId(): get (V)  | search (NM) results (NM) page (NM) id (NI) 	++ :: string (NI)  :: entity (NM) load (NM) handler (N) 
VOID_NP:NAME:ASTAnalysisContainer void caseAMulMulOp(AMulMulOp node): handle (V) | case (NM) A (NM) mul (NM) mul (NM) op (N) 	++ :: [ A (NM) mul (NM) mul (NM) op (N) - node (NI) ] :: AST (NM) analysis (NM) container (NI)  :: void (N) 
V_3PS:FORM:Client boolean equals(Client other): equals (V)  | [ client (N) - other (DT) ]	++ :: client (N)  :: boolean (N) 
SPECIAL:NAME:HBCIPassportRDH HBCIKey getMyPrivateDigKey(): get (V)  | my (PR) private (NM) dig (NM) key (NI) 	++ :: HBCI (NM) key (NI)  :: HBCI (NM) passport (NM) RDH (N) 
ENDS_WITH_ED:NAME:AsyncActivityItemProvider void notifyChanged(Notification notification): handle (V) | notify (NM) changed (N) 	++ :: [ notification (N) - notification (N) ] :: async (NM) activity (NM) item (NM) provider (N)  :: void (N) 
V_3P_IRR:NAME:TrivialMBean boolean isGMSInvoked(): is (V)  | GMS (NM) invoked (N) 	++ :: boolean (N)  :: trivial (NM) M (NM) bean (NI) 
SPECIAL:NAME:TestSpansAdvanced void addDocument(IndexWriter writer, String id, String text): add (V)  | document (NI) 	++ :: [ index (NM) writer (N) - writer (N) ] :: [ string (NI) - id (NI) ] :: [ string (NI) - text (NI) ] :: test (NM) spans (NM) advanced (N) 
SPECIAL:NAME:JDBMWordsDataSource void addNonMatch(String word): add (V)  | non (NM) match (N) 	++ :: [ string (NI) - word (N) ] :: JDBM (NM) words (NM) data (NM) source (NI) 
CONSTRUCTOR:NAME:ServerAttender ServerAttender ServerAttender(int port):  | server (NM) attender (N) 	++ :: [ int (N) - port (N) ]
SPECIAL:NAME:AbstractDatabase String getFalseBooleanValue(): get (V)  | false (NM) boolean (NM) value (NI) 	++ :: string (NI)  :: abstract (NM) database (N) 
ENDS_WITH_ED:NAME:HeroImpl void fireActiveWeaponsChanged(): handle (V) | fire (NM) active (NM) weapons (NM) changed (N) 	++ :: hero (NM) impl (NI)  :: void (N) 
VOID_NP:NAME:OS static void FXWindow_detach(long handle): handle (V) | FX (PRE) window (NM) detach (N) 	++ :: [ long (N) - handle (NI) ] :: OS (N)  :: void (N) 
CONSTRUCTOR:NAME:PropertyType PropertyType PropertyType(String label):  | property (NM) type (N) 	++ :: [ string (NI) - label (NI) ]
SPECIAL:CLAS:Main void doDelete(): do (VI) delete (V)  | main (N) 	++
BASE_VERB:NAME:HibernateGenerator String generateJavaPk(TableMetadata table): generate (V)  | java (NM) pk (NI) 	++ :: [ table (NM) metadata (N) - table (N) ] :: string (NI)  :: hibernate (NM) generator (N) 
SPECIAL:NAME:SubjectiveTableModel Object getValueAt(int row, int column): get (V)  | value (NI) -- at (P) [ int (N) - row (N) ]	++ :: [ int (N) - row (N) ] :: [ int (N) - column (N) ] :: object (NI)  :: subjective (NM) table (NM) model (NI) 
CONSTRUCTOR:NAME:CharEntItem CharEntItem CharEntItem(CharEntNameItem ceNameItem):  | char (NM) ent (NM) item (NI) 	++ :: [ char (NM) ent (NM) name (NM) item (NI) - ce (NM) name (NM) item (NI) ]
BASE_VERB:FORM:ICClientSessionHelper static ICClientSession narrow(Object obj): narrow (V)  | [ object (NI) - obj (NI) ]	++ :: IC (NM) client (NM) session (NM) helper (N)  :: IC (NM) client (NM) session (N) 
BASE_VERB:FORM:MapTexture void paint(Graphics g): paint (V)  | [ graphics (N) - g (N) ]	++ :: map (NM) texture (N) 
ENDS_WITH_ED:NAME:StreamServiceProvider void neighOverloaded(int direction): handle (V) | neigh (NM) overloaded (N) 	++ :: [ int (N) - direction (N) ] :: stream (NM) service (NM) provider (N)  :: void (N) 
SPECIAL:NAME:ABTSaveArray Object popFront(): pop (V)  | front (N) 	++ :: object (NI)  :: ABT (NM) save (NM) array (N) 
NOUN_PHRASE:NAME:Label boolean allPositionsEqual(int geomIndex, int loc): get (V) | all (DT) positions (NM) equal (N) 	++ :: [ int (N) - geom (NM) index (NI) ] :: [ int (N) - loc (N) ] :: label (NI)  :: boolean (N) 
SPECIAL:NAME:SearchFormBean int getLastYearInSelect(): get (V)  | last (DT) year (N) -- in (P) select (N) 	++ :: int (N)  :: search (NM) form (NM) bean (NI) 
VOID_NP:NAME:EDSimulator static void nextExperiment(): handle (V) | next (DT) experiment (N) 	++ :: ED (NM) simulator (N)  :: void (N) 
SPECIAL:NAME:WaterfallBarRenderer void setNegativeBarPaint(Paint paint): set (V)  | negative (NM) bar (NM) paint (N) 	++ :: [ paint (N) - paint (N) ] :: waterfall (NM) bar (NM) renderer (N) 
CONSTRUCTOR:NAME:CoffeeProducer CoffeeProducer CoffeeProducer(AgentListManager inAgentListManager, String inAgentName, Map inProperties):  | coffee (NM) producer (N) 	++ :: [ agent (NM) list (NM) manager (N) - in (NM) agent (NM) list (NM) manager (N) ] :: [ string (NI) - in (NM) agent (NM) name (NI) ] :: [ map (N) - in (NM) properties (N) ]
SPECIAL:NAME:WeakMapValue Object getValue(): get (V)  | value (NI) 	++ :: object (NI)  :: weak (NM) map (NM) value (NI) 
SPECIAL:NAME:XmFormLayout void processConstraints(String newConstraints): process (VI)  | EQUIV[constraints (N) , [ string (NI) - new (NM) constraints (N) ]]	++ :: xm (NM) form (NM) layout (N) 
SPECIAL:NAME:WorkBenchDefinition String getPath(): get (V)  | path (NI) 	++ :: string (NI)  :: work (NM) bench (NM) definition (NI) 
CONSTRUCTOR:NAME:ContelligentDataSource ContelligentDataSource ContelligentDataSource(DataSource raw):  | contelligent (NM) data (NM) source (NI) 	++ :: [ data (NM) source (NI) - raw (N) ]
ENDS_WITH_ED:NAME:ActionState void postModelInitialized(): handle (V) | post (NM) model (NM) initialized (N) 	++ :: action (NM) state (N)  :: void (N) 
SPECIAL:NAME:BugTrackerServlet void writeBugs(PrintWriter out, Bug oBugs): write (V)  | EQUIV[bugs (N) , [ bug (N) - o (NM) bugs (N) ]]	++ :: [ print (NM) writer (N) - out (N) ] :: bug (NM) tracker (NM) servlet (N) 
VOID_NP:NAME:void completionJob(): handle (V) | completion (NM) job (N) 	++ :: ANONYMOUS (N)  :: void (N) 
CONSTRUCTOR:NAME:PGPAbstractSignatureParameterBuilder PGPAbstractSignatureParameterBuilder PGPAbstractSignatureParameterBuilder(KeyID issuerkeyid, byte sigtype):  | PGP (NM) abstract (NM) signature (NM) parameter (NM) builder (N) 	++ :: [ key (NM) ID (NI) - issuerkeyid (N) ] :: [ byte (N) - sigtype (N) ]
SPECIAL:FORM:GridSpaceClient static void main(String args): main (V)  | [ string (NI) - args (N) ]	++ :: grid (NM) space (NM) client (N) 
SPECIAL:NAME:TrimUtil static String getLeftTrimmedToken(String token): get (V)  | EQUIV[left (NM) trimmed (NM) token (N) , [ string (NI) - token (N) ]]	++ :: string (NI)  :: trim (NM) util (N) 
SPECIAL:CLAS:SubscriptionRefresh void run(): run (VI)  | subscription (NM) refresh (N) 	++
SPECIAL:NAME:Util static boolean initJdkLogger(String pvFileName): init (V)  | jdk (NM) logger (N) 	++ :: [ string (NI) - pv (NM) file (NM) name (NI) ] :: boolean (N)  :: util (N) 
V_3P_IRR:NAME:UserDefinedConstraint boolean isEquality(): is (V)  | equality (N) 	++ :: boolean (N)  :: user (NM) defined (NM) constraint (N) 
SPECIAL:NAME:Credential static Credential getCredential(String credential): get (V)  | EQUIV[credential (N) , [ string (NI) - credential (N) ]]	++ :: credential (N)  :: credential (N) 
SPECIAL:NAME:ReportProcessInstance void setRunningActivityItems(List<ReportActivityItem> items): set (V)  | running (NM) activity (NM) items (N) 	++ :: [ list (NM) report (NM) activity (NM) item (NI) - items (N) ] :: report (NM) process (NM) instance (NI) 
SPECIAL:NAME:AWTGraphics void setClipInternal(int x, int y, int width, int height): set (V)  | clip (NM) internal (N) 	++ :: [ int (N) - x (N) ] :: [ int (N) - y (N) ] :: [ int (N) - width (N) ] :: [ int (N) - height (N) ] :: AWT (NM) graphics (N) 
SPECIAL:NAME:VariableRowScale PeriodRow getLastRow(): get (V)  | last (DT) row (N) 	++ :: period (NM) row (N)  :: variable (NM) row (NM) scale (N) 
SPECIAL:FORM:email_bannedHelper static email_banned read(InputStream istream): read (V)  | [ input (NM) stream (NI) - istream (N) ]	++ :: email (NM) banned (NM) helper (N)  :: email (NM) banned (N) 
BASE_VERB:NAME:Bits static byte breakLong(long l, byte b, int off): break (V)  | EQUIV[long (N) , [ long (N) - l (N) ]]	++ :: [ byte (N) - b (N) ] :: [ int (N) - off (N) ] :: byte (N)  :: bits (N) 
SPECIAL:NAME:FQueryElement void initComponents(): init (V)  | components (N) 	++ :: F (NM) query (NM) element (NI) 
CONSTRUCTOR:NAME:OwnersQuery OwnersQuery OwnersQuery(DataSource ds, String sql):  | owners (NM) query (N) 	++ :: [ data (NM) source (NI) - ds (N) ] :: [ string (NI) - sql (N) ]
UNKOWN: :GenParse static boolean case$dot569(CleanVM vm):
SPECIAL:NAME:JavaCharStream int getBeginColumn(): get (V)  | begin (NM) column (N) 	++ :: int (N)  :: java (NM) char (NM) stream (NI) 
BASE_VERB:CLAS:BooleanKeyBooleanMap void trimToSize(): trim (V)  | boolean (NM) key (NM) boolean (NM) map (N) -- to (P) size (N) 	++
SPECIAL:NAME:EnumerationLiteralEditPart DragTracker getDragTracker(Request request): get (V)  | drag (NM) tracker (N) 	++ :: [ request (N) - request (N) ] :: drag (NM) tracker (N)  :: enumeration (NM) literal (NM) edit (NM) part (N) 
BASE_VERB:NAME:EditDistance static String dumpMatrix(String src, String dest, int matrix): dump (V)  | EQUIV[matrix (N) , [ int (N) - matrix (N) ]]	++ :: [ string (NI) - src (N) ] :: [ string (NI) - dest (N) ] :: string (NI)  :: edit (NM) distance (N) 
SPECIAL:NAME:NoteBodyImpl Circle addNewCircle(): add (V)  | new (NM) circle (N) 	++ :: circle (N)  :: note (NM) body (NM) impl (NI) 
VOID_NP:NAME:TrackChangesViewEltImpl void unsetComments(): handle (V) | unset (NM) comments (N) 	++ :: track (NM) changes (NM) view (NM) elt (NM) impl (NI)  :: void (N) 
BASE_VERB:FORM:boolean accept(File f): accept (VI)  | [ file (NI) - f (N) ]	++ :: ANONYMOUS (N)  :: boolean (N) 
CONSTRUCTOR:NAME:NVList NVList NVList(int count):  | NV (NM) list (N) 	++ :: [ int (N) - count (N) ]
SPECIAL:NAME:ServerChain Server getServerMapped(String location): get (V)  | server (NM) mapped (N) 	++ :: [ string (NI) - location (NI) ] :: server (N)  :: server (NM) chain (N) 
SPECIAL:CLAS:cite void setOnClick(String script): set (V)  | cite (N) -- on (P) click (N) 	++ :: [ string (NI) - script (N) ]
SPECIAL:NAME:OverlayPreferenceStore void addKeys(OverlayKey keys): add (V)  | EQUIV[keys (N) , [ overlay (NM) key (NI) - keys (N) ]]	++ :: overlay (NM) preference (NM) store (N) 
SPECIAL:NAME:Lecture void setDate(Calendar date): set (V)  | date (N) 	++ :: [ calendar (N) - date (N) ] :: lecture (N) 
BASE_VERB:CLAS:EmailerHttpConnector void dispose(): dispose (V)  | emailer (NM) http (NM) connector (N) 	++
SPECIAL:NAME:Main void setDestination(String value): set (V)  | destination (N) 	++ :: [ string (NI) - value (NI) ] :: main (N) 
BASE_VERB:CLAS:IRGoal void drop(): drop (V)  | IR (NM) goal (N) 	++
BASE_VERB:NAME:GHCFloatingPointCell double doubleValue(): double (V)  | value (NI) 	++ :: double (N)  :: GHC (NM) floating (NM) point (NM) cell (N) 
NOUN_PHRASE:NAME:EventsPOA String _all_interfaces(POA poa, byte objectId): get (V) | all (DT) interfaces (N) 	++ :: [ POA (N) - poa (N) ] :: [ byte (N) - object (NM) id (NI) ] :: events (NM) POA (N)  :: string (NI) 
SPECIAL:NAME:OptionalUiChildrenHasInterface void setOptionalUiChildren(OptionalUiChildrenInterface child): set (V)  | optional (NM) ui (NM) children (N) 	++ :: [ optional (NM) ui (NM) children (NM) interface (NI) - child (N) ] :: optional (NM) ui (NM) children (NM) has (NM) interface (NI) 
SPECIAL:NAME:ChannelModeInfo void setAction(ModeAction action): set (V)  | action (N) 	++ :: [ mode (NM) action (N) - action (N) ] :: channel (NM) mode (NM) info (NI) 
BASE_VERB:NAME:JProgrammableMaterial void unlockArray(JGeometry mesh): unlock (V)  | array (N) 	++ :: [ J (NM) geometry (N) - mesh (N) ] :: J (NM) programmable (NM) material (N) 
SPECIAL:NAME:MockPermissionMapSource PermissionMap getPermissionMap(): get (V)  | permission (NM) map (N) 	++ :: permission (NM) map (N)  :: mock (NM) permission (NM) map (NM) source (NI) 
SPECIAL:NAME:NetTunnel void loadSecondStage(Dictionary dictionaries): load (V)  | second (NM) stage (N) 	++ :: [ dictionary (N) - dictionaries (N) ] :: net (NM) tunnel (N) 
CONSTRUCTOR:NAME:FilePathPrefMenuItem FilePathPrefMenuItem FilePathPrefMenuItem(String label, Class objClass, String prefNm):  | file (NM) path (NM) pref (NM) menu (NM) item (NI) 	++ :: [ string (NI) - label (NI) ] :: [ class (NI) - obj (NM) class (NI) ] :: [ string (NI) - pref (NM) nm (N) ]
SPECIAL:CLAS:CyrusUserUtil static CyrusUser findByPrimaryKey(long userId): find (V)  | cyrus (NM) user (NM) util (N) -- by (P) primary (NM) key (NI) 	++ :: [ long (N) - user (NM) id (NI) ] :: cyrus (NM) user (N) 
SPECIAL:FORM:axRuleSearchFrameDefBuilder static void main(String args): main (V)  | [ string (NI) - args (N) ]	++ :: ax (NM) rule (NM) search (NM) frame (NM) def (NM) builder (N) 
SPECIAL:NAME:CallableStatement void setURL(String parameterName, URL val): set (V)  | URL (NI) 	++ :: [ string (NI) - parameter (NM) name (NI) ] :: [ URL (NI) - val (NI) ] :: callable (NM) statement (NI) 
SPECIAL:NAME:MessageUtil static String getYesOrNoHTML(String flag, AnyLogicContext alc): get (V)  | yes (NM) or (NM) no (DT) HTML (N) 	++ :: [ string (NI) - flag (N) ] :: [ any (DT) logic (NM) context (N) - alc (N) ] :: string (NI)  :: message (NM) util (N) 
BASE_VERB:NAME:ClientLevelProcess void updateLevelProcess(): update (V)  | level (NM) process (N) 	++ :: client (NM) level (NM) process (N) 
SPECIAL:NAME:XMLRef boolean removeObject(Object aObj): remove (V)  | EQUIV[object (NI) , [ object (NI) - a (NM) obj (NI) ]]	++ :: boolean (N)  :: XML (NM) ref (NI) 
SPECIAL:CLAS:Script void run(): run (VI)  | script (N) 	++
SPECIAL:NAME:X_MPC_Order_Node_Product void setMPC_Order_Workflow_ID(int MPC_Order_Workflow_ID): set (V)  | MPC (NM) order (NM) workflow (NM) ID (NI) 	++ :: [ int (N) - MPC (NM) order (NM) workflow (NM) ID (NI) ] :: X (NM) MPC (NM) order (NM) node (NM) product (N) 
EVENT_PARAM:NAME:ReactiveProcess void GenerateFortuneOfOtherEmotions(Event event, int desirability, int desirabilityForOther, String target): handle (V) | generate (NM) fortune (NM) of (NM) other (DT) emotions (N) 	++ :: [ event (NI) - event (NI) ] :: [ int (N) - desirability (N) ] :: [ int (N) - desirability (NM) for (NM) other (DT) ] :: [ string (NI) - target (N) ] :: reactive (NM) process (N)  :: void (N) 
CONSTRUCTOR:NAME:StdWand StdWand StdWand():  | std (NM) wand (N) 	++
BASE_VERB:NAME:RC564Cipher static long rotl64(long a, int n): rotl (V)  | 64 (D) 	++ :: [ long (N) - a (N) ] :: [ int (N) - n (N) ] :: long (N)  :: RC (NM) 564 (NM) cipher (N) 
SPECIAL:FORM:DefaultInstanceStoreOntology void init(InputStream stream): init (V)  | [ input (NM) stream (NI) - stream (NI) ]	++ :: default (NM) instance (NM) store (NM) ontology (N) 
SPECIAL:NAME:Model void removeAllResults(): remove (V)  | all (DT) results (N) 	++ :: model (NI) 
SPECIAL:NAME:Planet void setGasMass(double gasMass): set (V)  | gas (NM) mass (N) 	++ :: [ double (N) - gas (NM) mass (N) ] :: planet (N) 
SPECIAL:NAME:World void startExecutors(): start (V)  | executors (N) 	++ :: world (N) 
BASE_VERB:FORM:AtomInAromaticSystem FeatureResult calculate(Molecule mol): calculate (V)  | [ molecule (N) - mol (N) ]	++ :: atom (NM) in (NM) aromatic (NM) system (N)  :: feature (NM) result (N) 
V_3P_IRR:NAME:JarFile boolean isProduction(): is (V)  | production (N) 	++ :: boolean (N)  :: jar (NM) file (NI) 
ENDS_WITH_ED:NAME:TestSaveSettingsJDialog void windowDeactivated(WindowEvent windowEvent): handle (V) | window (NM) deactivated (N) 	++ :: [ window (NM) event (NI) - window (NM) event (NI) ] :: test (NM) save (NM) settings (NM) J (NM) dialog (N)  :: void (N) 
SPECIAL:NAME:BLUE_GREY short getTriplet(): get (V)  | triplet (N) 	++ :: short (N)  :: BLUE (NM) GREY (N) 
SPECIAL:NAME:SelectPatternWizzardPanel JPanel createTitle(): create (V)  | title (N) 	++ :: J (NM) panel (N)  :: select (NM) pattern (NM) wizzard (NM) panel (N) 
BASE_VERB:FORM:Factory static AppletDocument parse(String xmlAsString): parse (V)  | [ string (NI) - xml (NM) as (NM) string (NI) ]	++ :: factory (N)  :: applet (NM) document (NI) 
ENDS_WITH_ED:NAME:void actionPerformed(ActionEvent a): handle (V) | action (NM) performed (N) 	++ :: [ action (NM) event (NI) - a (N) ] :: ANONYMOUS (N)  :: void (N) 
BASE_VERB:NAME:ExperimentStorage String getpH(String ssid, String obs): getp (V)  | H (N) 	++ :: [ string (NI) - ssid (N) ] :: [ string (NI) - obs (N) ] :: string (NI)  :: experiment (NM) storage (N) 
SPECIAL:NAME:DocumentControlManager void removeBookmark(Bookmark bookmark): remove (V)  | EQUIV[bookmark (N) , [ bookmark (N) - bookmark (N) ]]	++ :: document (NM) control (NM) manager (N) 
EVENT_PARAM:NAME:MMQueues void showHelp(ActionEvent event): handle (V) | show (NM) help (N) 	++ :: [ action (NM) event (NI) - event (NI) ] :: MM (NM) queues (N)  :: void (N) 
SPECIAL:NAME:PageServerUtils static File getDirFile(Location loc, String dirString): get (V)  | dir (NM) file (NI) 	++ :: [ location (NI) - loc (N) ] :: [ string (NI) - dir (NM) string (NI) ] :: file (NI)  :: page (NM) server (NM) utils (N) 
V_3PS:NAME:TreeMap boolean containsKey(Object key): contains (V)  | EQUIV[key (NI) , [ object (NI) - key (NI) ]]	++ :: boolean (N)  :: tree (NM) map (N) 
BASE_VERB:NAME:AbstractEvaluator int evaluateTokens(IEnvironment environment, IAgent agent): evaluate (V)  | tokens (N) 	++ :: [ I (NM) environment (N) - environment (N) ] :: [ I (NM) agent (N) - agent (N) ] :: int (N)  :: abstract (NM) evaluator (N) 
BASE_VERB:NAME:DomePanel void updateAlt(String a): update (V)  | alt (N) 	++ :: [ string (NI) - a (N) ] :: dome (NM) panel (N) 
BASE_VERB:NAME:Documenter void documentReturns(MethodDoc doc): document (V)  | returns (N) 	++ :: [ method (NM) doc (NI) - doc (NI) ] :: documenter (N) 
SPECIAL:CLAS:BaseBugReport void runTest(): run (VI) test (VI)  | base (NM) bug (NM) report (N) 	++
SPECIAL:NAME:JGrid void setEditingRow(int aRow): set (V)  | editing (NM) row (N) 	++ :: [ int (N) - a (NM) row (N) ] :: J (NM) grid (N) 
BASE_VERB:NAME:OS static void gtk_style_unref(int style): gtk (PRE) style (V)  | unref (N) 	++ :: [ int (N) - style (N) ] :: OS (N) 
SPECIAL:NAME:X_C_InvoiceSchedule void setIsAmount(boolean IsAmount): set (V)  | is (NM) amount (N) 	++ :: [ boolean (N) - is (NM) amount (N) ] :: X (NM) C (NM) invoice (NM) schedule (N) 
CONSTRUCTOR:NAME:ConnectionDetails ConnectionDetails ConnectionDetails():  | connection (NM) details (N) 	++
SPECIAL:NAME:NavigationToolBarBeanInfo Image getIcon(int iconKind): get (V)  | icon (N) 	++ :: [ int (N) - icon (NM) kind (N) ] :: image (N)  :: navigation (NM) tool (NM) bar (NM) bean (NM) info (NI) 
EVENT_PARAM:NAME:MDIIDSMaster void menuItem2_click(Object source, Event e): handle (V) | menu (NM) item (NM) 2 (D) click (N) 	++ :: [ object (NI) - source (NI) ] :: [ event (NI) - e (N) ] :: MDIIDS (NM) master (N)  :: void (N) 
SPECIAL:FORM:TabbedTargetInstanceController ModelAndView processSave(Tab currentTab, HttpServletRequest req, HttpServletResponse res, Object comm, BindException errors): process (VI) save (V)  | [ tab (N) - current (NM) tab (N) ]	++ :: [ http (NM) servlet (NM) request (N) - req (N) ] :: [ http (NM) servlet (NM) response (N) - res (N) ] :: [ object (NI) - comm (N) ] :: [ bind (NM) exception (N) - errors (N) ] :: tabbed (NM) target (NM) instance (NM) controller (N)  :: model (NM) and (NM) view (NI) 
BASE_VERB:FORM:ARenamesItem void apply(Switch sw): apply (V)  | [ switch (N) - sw (N) ]	++ :: A (NM) renames (NM) item (NI) 
BASE_VERB:CLAS:GlobalModel void paste(): paste (V)  | global (NM) model (NI) 	++
V_3P_IRR:NAME:Line boolean isHorizontal(): is (V)  | horizontal (N) 	++ :: boolean (N)  :: line (N) 
CONSTRUCTOR:NAME:CMapSquareZebraCrossingEW CMapSquareZebraCrossingEW CMapSquareZebraCrossingEW(int x_pos, int z_pos):  | C (NM) map (NM) square (NM) zebra (NM) crossing (NM) EW (N) 	++ :: [ int (N) - x (NM) pos (N) ] :: [ int (N) - z (NM) pos (N) ]
SPECIAL:NAME:ConnectionMonitor Action getActions(): get (V)  | actions (N) 	++ :: action (N)  :: connection (NM) monitor (N) 
SPECIAL:NAME:Language static Language getLanguage(String langInfo): get (V)  | language (N) 	++ :: [ string (NI) - lang (NM) info (NI) ] :: language (N)  :: language (N) 
SPECIAL:NAME:BaseUIComponent HashMap getXslProperties(): get (V)  | xsl (NM) properties (N) 	++ :: hash (NM) map (N)  :: base (NM) UI (NM) component (N) 
CONSTRUCTOR:NAME:BatchInsertLongLiteral BatchInsertLongLiteral BatchInsertLongLiteral(InsertLongLiteralParams params, String longLiteralNodeTableName):  | batch (NM) insert (NM) long (NM) literal (N) 	++ :: [ insert (NM) long (NM) literal (NM) params (N) - params (N) ] :: [ string (NI) - long (NM) literal (NM) node (NM) table (NM) name (NI) ]
SPECIAL:NAME:HibernateRegistry Node getRoot(): get (V)  | root (N) 	++ :: node (NI)  :: hibernate (NM) registry (N) 
SPECIAL:NAME:Query List getList(String property): get (V)  | list (N) 	++ :: [ string (NI) - property (N) ] :: list (N)  :: query (N) 
SPECIAL:NAME:ActivityTypesChoiceElement XMLElement getControlledElement(): get (V)  | controlled (NM) element (NI) 	++ :: XML (NM) element (NI)  :: activity (NM) types (NM) choice (NM) element (NI) 
BASE_VERB:NAME:CClassContext CMethod lookupMethod(CTypeContext context, CClass caller, CType primary, String ident, CType actuals): lookup (V)  | method (N) 	++ :: [ C (NM) type (NM) context (N) - context (N) ] :: [ C (NM) class (NI) - caller (N) ] :: [ C (NM) type (N) - primary (N) ] :: [ string (NI) - ident (N) ] :: [ C (NM) type (N) - actuals (N) ] :: C (NM) method (N)  :: C (NM) class (NM) context (N) 
PREP:NAME:DragConstraints int inSectorNorthWest(Vector shift):  | in (P) sector (NM) north (NM) west (N) 	++ :: [ vector (N) - shift (N) ] :: drag (NM) constraints (N)  :: int (N) 
BASE_VERB:FORM:NotEqualNode Object accept(NodeVisitor visitor, Object results): accept (VI)  | [ node (NM) visitor (N) - visitor (N) ]	++ :: [ object (NI) - results (N) ] :: not (DT) equal (NM) node (NI)  :: object (NI) 
SPECIAL:NAME:TrackView String getLabel(): get (V)  | label (NI) 	++ :: string (NI)  :: track (NM) view (NI) 
SPECIAL:NAME:FileCopyDataModel void resetModified(): reset (V)  | modified (N) 	++ :: file (NM) copy (NM) data (NM) model (NI) 
SPECIAL:NAME:GalleryEntryImpl Folder getParentFolder(): get (V)  | parent (NM) folder (N) 	++ :: folder (N)  :: gallery (NM) entry (NM) impl (NI) 
CONSTRUCTOR:NAME:Overflow Overflow Overflow(FObj fobj, String propertyFullName, String attributeValue):  | overflow (N) 	++ :: [ F (NM) obj (NI) - fobj (N) ] :: [ string (NI) - property (NM) full (NM) name (NI) ] :: [ string (NI) - attribute (NM) value (NI) ]
SPECIAL:CLAS:EventAgent void init(): init (V)  | event (NM) agent (N) 	++
BASE_VERB:FORM:Skill_Puppeteer boolean tick(Tickable ticking, int tickID): tick (V)  | [ tickable (N) - ticking (N) ]	++ :: [ int (N) - tick (NM) ID (NI) ] :: skill (NM) puppeteer (N)  :: boolean (N) 
BASE_VERB:NAME:PsimiXmlExtractor void clearExperimentCache(): clear (V)  | experiment (NM) cache (N) 	++ :: psimi (NM) xml (NM) extractor (N) 
BASE_VERB:NAME:FilterChainConfigurationValidator ObjectViolationInfo valProp_methodMatcherRefName(ObjectViolationInfo valInfo, FilterChainConfiguration self, int severity, int scope, IContext context, boolean traverse): val (V)  | prop (NM) method (NM) matcher (NM) ref (NM) name (NI) 	++ :: [ object (NM) violation (NM) info (NI) - val (NM) info (NI) ] :: [ filter (NM) chain (NM) configuration (NI) - self (N) ] :: [ int (N) - severity (N) ] :: [ int (N) - scope (N) ] :: [ I (NM) context (N) - context (N) ] :: [ boolean (N) - traverse (N) ] :: object (NM) violation (NM) info (NI)  :: filter (NM) chain (NM) configuration (NM) validator (N) 
SPECIAL:NAME:AbstractQuery Object doQuery(Node root, Date date): do (VI)  | query (N) 	++ :: [ node (NI) - root (N) ] :: [ date (N) - date (N) ] :: object (NI)  :: abstract (NM) query (N) 
SPECIAL:NAME:CSVBuilder void setMessageSource(MessageSource messageSource): set (V)  | message (NM) source (NI) 	++ :: [ message (NM) source (NI) - message (NM) source (NI) ] :: CSV (NM) builder (N) 
V_3P_IRR:NAME:SingleStringInput boolean hasError(): has (V)  | error (N) 	++ :: boolean (N)  :: single (NM) string (NM) input (NI) 
ENDS_WITH_ED:NAME:void propertyChanged(): handle (V) | property (NM) changed (N) 	++ :: ANONYMOUS (N)  :: void (N) 
SPECIAL:NAME:Track String getName(): get (V)  | name (NI) 	++ :: string (NI)  :: track (N) 
CONSTRUCTOR:NAME:DeBroglieModel DeBroglieModel DeBroglieModel(Point2D position):  | de (NM) broglie (NM) model (NI) 	++ :: [ point (NM) 2 (NM) D (N) - position (N) ]
SPECIAL:CLAS:JournalTemplatePersistenceImpl JournalTemplate findByG_S_PrevAndNext(long id, long groupId, String structureId, OrderByComparator obc): find (V)  | journal (NM) template (NM) persistence (NM) impl (NI) -- by (P) G (NM) S (NM) prev (NM) and (NM) next (DT) 	++ :: [ long (N) - id (NI) ] :: [ long (N) - group (NM) id (NI) ] :: [ string (NI) - structure (NM) id (NI) ] :: [ order (NM) by (NM) comparator (N) - obc (N) ] :: journal (NM) template (N) 
CONSTRUCTOR:NAME:HVRotateDragUI HVRotateDragUI HVRotateDragUI(TGPanel tgp, HVScroll hvs, RotateScroll rs):  | HV (NM) rotate (NM) drag (NM) UI (N) 	++ :: [ TG (NM) panel (N) - tgp (N) ] :: [ HV (NM) scroll (N) - hvs (N) ] :: [ rotate (NM) scroll (N) - rs (N) ]
SPECIAL:NAME:AssetPathData String getLocation(): get (V)  | location (NI) 	++ :: string (NI)  :: asset (NM) path (NM) data (NI) 
BASE_VERB:FORM:AbstractExporter int export(Object keys, Object data, StringBuffer filename): export (V)  | [ object (NI) - keys (N) ]	++ :: [ object (NI) - data (NI) ] :: [ string (NM) buffer (NI) - filename (N) ] :: abstract (NM) exporter (N)  :: int (N) 
PREP:NAME:FringeObject String toString(): convert (V) | to (P) string (NI) 	++ :: fringe (NM) object (NI)  :: string (NI) 
ENDS_WITH_ED:NAME:LckSSchatClientPrivateFrame void windowDeactivated(WindowEvent arg0): handle (V) | window (NM) deactivated (N) 	++ :: [ window (NM) event (NI) - arg (NM) 0 (N) ] :: lck (NM) S (NM) schat (NM) client (NM) private (NM) frame (N)  :: void (N) 
SPECIAL:NAME:NoSettlInst Product getProduct(): get (V)  | product (N) 	++ :: product (N)  :: no (DT) settl (NM) inst (N) 
SPECIAL:NAME:NodeUtils static int getInternalNodeCount(Node root): get (V)  | internal (NM) node (NM) count (N) 	++ :: [ node (NI) - root (N) ] :: int (N)  :: node (NM) utils (N) 
SPECIAL:NAME:void setValue(Object object, Object value): set (V)  | value (NI) 	++ :: [ object (NI) - object (NI) ] :: [ object (NI) - value (NI) ] :: ANONYMOUS (N) 
BASE_VERB:NAME:Attachment boolean openAttachment(): open (V)  | attachment (N) 	++ :: boolean (N)  :: attachment (N) 
CONSTRUCTOR:NAME:CheckBoxMenuItemSetting CheckBoxMenuItemSetting CheckBoxMenuItemSetting():  | check (NM) box (NM) menu (NM) item (NM) setting (N) 	++
SPECIAL:NAME:MyTableModel void addEvent(EventDetails aEvent): add (V)  | EQUIV[event (NI) , [ event (NM) details (N) - a (NM) event (NI) ]]	++ :: my (PR) table (NM) model (NI) 
CONSTRUCTOR:NAME:NullTable NullTable NullTable():  | null (NM) table (N) 	++
ENDS_WITH_ED:NAME:Session void jmiExitActionPerformed(ActionEvent evt): handle (V) | jmi (NM) exit (NM) action (NM) performed (N) 	++ :: [ action (NM) event (NI) - evt (N) ] :: session (N)  :: void (N) 
BASE_VERB:FORM:BattlePanel void display(PlayerID id, Collection<Territory> battles, Collection<Territory> bombing): display (V)  | [ player (NM) ID (NI) - id (NI) ]	++ :: [ collection (NM) territory (N) - battles (N) ] :: [ collection (NM) territory (N) - bombing (N) ] :: battle (NM) panel (N) 
SPECIAL:NAME:OzoneMemberImpl_Proxy void removePlayerInternal(Topic arg0): remove (V)  | player (NM) internal (N) 	++ :: [ topic (N) - arg (NM) 0 (N) ] :: ozone (NM) member (NM) impl (NM) proxy (NI) 
CONSTRUCTOR:NAME:ContelligentMockHttpServletRequest ContelligentMockHttpServletRequest ContelligentMockHttpServletRequest():  | contelligent (NM) mock (NM) http (NM) servlet (NM) request (N) 	++
BASE_VERB:FORM:PNETDavService Xid recover(int i): recover (V)  | [ int (N) - i (N) ]	++ :: PNET (NM) dav (NM) service (N)  :: xid (N) 
SPECIAL:NAME:HOSECodeAnalyserTest void testGetElements_String(): test (VI) get (V)  | elements (NM) string (NI) 	++ :: HOSE (NM) code (NM) analyser (NM) test (N) 
SPECIAL:NAME:SqlParserTest void checkExpSame(String sql): check (VI)  | exp (NM) same (N) 	++ :: [ string (NI) - sql (N) ] :: sql (NM) parser (NM) test (N) 
BASE_VERB:NAME:FormulaViewApplet void paintFrame(Graphics g): paint (V)  | frame (N) 	++ :: [ graphics (N) - g (N) ] :: formula (NM) view (NM) applet (N) 
SPECIAL:NAME:PieDatasetBean Number getValue(int arg0): get (V)  | value (NI) 	++ :: [ int (N) - arg (NM) 0 (N) ] :: number (NI)  :: pie (NM) dataset (NM) bean (NI) 
BASE_VERB:CLAS:MockTaskValidator void expectValidateForDelete(Task p0_Task, Throwable toThrow): expect (VI) validate (VI)  | mock (NM) task (NM) validator (N) -- for (P) delete (N) 	++ :: [ task (N) - p (NM) 0 (NM) task (N) ] :: [ throwable (N) - to (NM) throw (N) ]
V_3P_IRR:NAME:DeleteValue boolean isEnabled(): is (V)  | enabled (N) 	++ :: boolean (N)  :: delete (NM) value (NI) 
SPECIAL:NAME:Window Toolkit getToolkit(): get (V)  | toolkit (N) 	++ :: toolkit (N)  :: window (N) 
CONSTRUCTOR:NAME:LogEntry LogEntry LogEntry(Integer offset, List<Integer> matches, List<Integer> mismatches, List<Integer> currentComparisions, List<Integer> sourceLinesHighlighted):  | log (NM) entry (NI) 	++ :: [ integer (N) - offset (N) ] :: [ list (NM) integer (N) - matches (N) ] :: [ list (NM) integer (N) - mismatches (N) ] :: [ list (NM) integer (N) - current (NM) comparisions (N) ] :: [ list (NM) integer (N) - source (NM) lines (NM) highlighted (N) ]
BASE_VERB:FORM:OsgiToolbarActionRegistry void register(Action action, String moduleId): register (V)  | [ action (N) - action (N) ]	++ :: [ string (NI) - module (NM) id (NI) ] :: osgi (NM) toolbar (NM) action (NM) registry (N) 
SPECIAL:NAME:ProteinConfiguration Integer getReferer(): get (V)  | referer (N) 	++ :: integer (N)  :: protein (NM) configuration (NI) 
SPECIAL:NAME:model_HOG_fuel void getConstants(): get (V)  | constants (N) 	++ :: model (NM) HOG (NM) fuel (N) 
CONSTRUCTOR:NAME:Thread Thread Thread(ThreadGroup group, Runnable target):  | thread (N) 	++ :: [ thread (NM) group (N) - group (N) ] :: [ runnable (N) - target (N) ]
SPECIAL:CLAS:OpenerThread void run(): run (VI)  | opener (NM) thread (N) 	++
SPECIAL:NAME:ZWorkspaceData void setColor(Color c): set (V)  | color (N) 	++ :: [ color (N) - c (N) ] :: Z (NM) workspace (NM) data (NI) 
PREP:NAME:CloseNeighbourConnectBehaviour String toString(): convert (V) | to (P) string (NI) 	++ :: close (NM) neighbour (NM) connect (NM) behaviour (N)  :: string (NI) 
NOUN_PHRASE:NAME:MemoryNamingEnumeration Object next(): get (V) | next (DT) 	++ :: memory (NM) naming (NM) enumeration (N)  :: object (NI) 
SPECIAL:NAME:HttpServletConnection HttpServletRequest getHttpServletRequest(): get (V)  | http (NM) servlet (NM) request (N) 	++ :: http (NM) servlet (NM) request (N)  :: http (NM) servlet (NM) connection (N) 
SPECIAL:FORM:StatesToStore void add(OID oid, State state, State origState, boolean fullSort): add (V)  | [ OID (N) - oid (N) ]	++ :: [ state (N) - state (N) ] :: [ state (N) - orig (NM) state (N) ] :: [ boolean (N) - full (NM) sort (N) ] :: states (NM) to (NM) store (N) 
SPECIAL:NAME:XmlWriter static XmlWriter createWriter(OutputStream stream): create (V)  | writer (N) 	++ :: [ output (NM) stream (NI) - stream (NI) ] :: xml (NM) writer (N)  :: xml (NM) writer (N) 
EVENT_PARAM:NAME:ProcessListener void errorOutput(ProcessEvent processEvent): handle (V) | error (NM) output (N) 	++ :: [ process (NM) event (NI) - process (NM) event (NI) ] :: process (NM) listener (N)  :: void (N) 
V_3P_IRR:NAME:FeatureDescriptor boolean isExpert(): is (V)  | expert (N) 	++ :: boolean (N)  :: feature (NM) descriptor (NI) 
V_3P_IRR:NAME:X_R_RequestType boolean isSelfService(): is (V)  | self (NM) service (N) 	++ :: boolean (N)  :: X (NM) R (NM) request (NM) type (N) 
SPECIAL:NAME:OutgoingMessageParser void doMath(): do (VI)  | math (N) 	++ :: outgoing (NM) message (NM) parser (N) 
SPECIAL:NAME:IPermission String getPrincipal(): get (V)  | principal (N) 	++ :: string (NI)  :: I (NM) permission (N) 
BASE_VERB:NAME:KappaLayout void calculateDimensions(): calculate (V)  | dimensions (N) 	++ :: kappa (NM) layout (N) 
SPECIAL:NAME:DataAccess static int getNextVersion(String id, int i): get (V)  | next (DT) version (N) 	++ :: [ string (NI) - id (NI) ] :: [ int (N) - i (N) ] :: int (N)  :: data (NM) access (N) 
SPECIAL:NAME:RDO_O01_COMPONENT int getNTEReps(): get (V)  | NTE (NM) reps (N) 	++ :: int (N)  :: RDO (NM) O (NM) 01 (NM) COMPONENT (N) 
SPECIAL:NAME:Configuration void setMaxresultSetSize(int maxResultSetSize): set (V)  | maxresult (NM) set (NM) size (N) 	++ :: [ int (N) - max (NM) result (NM) set (NM) size (N) ] :: configuration (NI) 
SPECIAL:NAME:PlayerTester void testCreateDuplicate(): test (VI) create (V)  | duplicate (N) 	++ :: player (NM) tester (N) 
SPECIAL:NAME:Project void setName(String name): set (V)  | name (NI) 	++ :: [ string (NI) - name (NI) ] :: project (N) 
CONSTRUCTOR:NAME:GUID GUID GUID():  | GUID (N) 	++
SPECIAL:NAME:RollingStockNode ImageIcon getIcon(): get (V)  | icon (N) 	++ :: image (NM) icon (N)  :: rolling (NM) stock (NM) node (NI) 
PREP:NAME:X_M_Product_Costing String toString(): convert (V) | to (P) string (NI) 	++ :: X (NM) M (NM) product (NM) costing (N)  :: string (NI) 
NOUN_PHRASE:NAME:Factory static DisplayAttribute newInstance(XmlOptions options): get (V) | new (NM) instance (NI) 	++ :: [ xml (NM) options (N) - options (N) ] :: factory (N)  :: display (NM) attribute (N) 
V_3P_IRR:NAME:WaferMapRenderer boolean isMethodValid(int method): is (V)  | method (NM) valid (N) 	++ :: [ int (N) - method (N) ] :: boolean (N)  :: wafer (NM) map (NM) renderer (N) 
V_3P_IRR:NAME:Priority boolean isEqual(Priority toCompare): is (V)  | equal (N) 	++ :: [ priority (N) - to (NM) compare (N) ] :: boolean (N)  :: priority (N) 
BASE_VERB:FORM:Graphics2D void transform(AffineTransform Tx): transform (V)  | [ affine (NM) transform (N) - tx (N) ]	++ :: graphics (NM) 2 (NM) D (N) 
BASE_VERB:NAME:RecordManager Vector slowSyncData(Vector pcRecords, Vector archivedRecords, Vector backupRecords): slow (V)  | sync (NM) data (NI) 	++ :: [ vector (N) - pc (NM) records (N) ] :: [ vector (N) - archived (NM) records (N) ] :: [ vector (N) - backup (NM) records (N) ] :: vector (N)  :: record (NM) manager (N) 
SPECIAL:NAME:DocTag String getTagID(): get (V)  | tag (NM) ID (NI) 	++ :: string (NI)  :: doc (NM) tag (NI) 
SPECIAL:NAME:AbstractModuleManager static String getLifeCycleTaskNameForLifeCycleState(int lifeCycleState): get (V)  | life (NM) cycle (NM) task (NM) name (NI) -- for (P) EQUIV[life (NM) cycle (NM) state (N) , [ int (N) - life (NM) cycle (NM) state (N) ]]	++ :: string (NI)  :: abstract (NM) module (NM) manager (N) 
SPECIAL:NAME:CapCommonClassImpl void addConceptRelDescription(Integer conceptRelId, Integer internalId, ConceptRelMapper conceptRelMapper): add (V)  | concept (NM) rel (NM) description (NI) 	++ :: [ integer (N) - concept (NM) rel (NM) id (NI) ] :: [ integer (N) - internal (NM) id (NI) ] :: [ concept (NM) rel (NM) mapper (N) - concept (NM) rel (NM) mapper (N) ] :: cap (NM) common (NM) class (NM) impl (NI) 
SPECIAL:NAME:PersistenceConfiguration static PersistenceConfiguration getInstance(): get (V)  | instance (NI) 	++ :: persistence (NM) configuration (NI)  :: persistence (NM) configuration (NI) 
BASE_VERB:FORM:Not boolean eval(Map context): eval (V)  | [ map (N) - context (N) ]	++ :: not (DT)  :: boolean (N) 
SPECIAL:NAME:E String getA(): get (V)  | A (N) 	++ :: string (NI)  :: E (N) 
BASE_VERB:NAME:OutlineLevelStyleImpl void xsetNumSuffix(String numSuffix): xset (V)  | EQUIV[num (NM) suffix (N) , [ string (NI) - num (NM) suffix (N) ]]	++ :: outline (NM) level (NM) style (NM) impl (NI) 
V_3P_IRR:NAME:BaseCommit boolean isStateChanged(EventChannelDescription sinkEventChannel): is (V)  | state (NM) changed (N) 	++ :: [ event (NM) channel (NM) description (NI) - sink (NM) event (NM) channel (N) ] :: boolean (N)  :: base (NM) commit (N) 
BASE_VERB:NAME:AbstractGroupEntryBlock void buildEditRecord(): build (V)  | edit (NM) record (N) 	++ :: abstract (NM) group (NM) entry (NM) block (N) 
SPECIAL:NAME:AbstractPortletLogicContext PortletRequest getPortletRequest(): get (V)  | portlet (NM) request (N) 	++ :: portlet (NM) request (N)  :: abstract (NM) portlet (NM) logic (NM) context (N) 
SPECIAL:NAME:JTree int getSelectionCount(): get (V)  | selection (NM) count (N) 	++ :: int (N)  :: J (NM) tree (NI) 
SPECIAL:NAME:DeleterConfirmDialog void initConnections(): init (V)  | connections (N) 	++ :: deleter (NM) confirm (NM) dialog (N) 
SPECIAL:NAME:MOB int getMoney(): get (V)  | money (N) 	++ :: int (N)  :: MOB (N) 
BASE_VERB:NAME:BytecodeVisitor void visit_fconst(float value): visit (V)  | fconst (N) 	++ :: [ float (N) - value (NI) ] :: bytecode (NM) visitor (N) 
SPECIAL:NAME:CDLTypeUtilTest void testIsDuplicateCDLTypeWithAttributeNull(): test (VI)  | is (NM) duplicate (NM) CDL (NM) type (N) -- with (P) attribute (NM) null (N) 	++ :: CDL (NM) type (NM) util (NM) test (N) 
SPECIAL:NAME:ItemTag int doStartTag(): do (VI) start (V)  | tag (NI) 	++ :: int (N)  :: item (NM) tag (NI) 
NOUN_PHRASE:NAME:A int sizeOfHiddenParagraphArray(): get (V) | size (NM) of (NM) hidden (NM) paragraph (NM) array (N) 	++ :: A (N)  :: int (N) 
SPECIAL:NAME:AmazonExplorer void loadWishlist(Object nLists, int index, Object listmania, Object resultlist, Object listname, Object prevlist, Object nextlist): load (V)  | wishlist (N) 	++ :: [ object (NI) - n (NM) lists (N) ] :: [ int (N) - index (NI) ] :: [ object (NI) - listmania (N) ] :: [ object (NI) - resultlist (N) ] :: [ object (NI) - listname (N) ] :: [ object (NI) - prevlist (N) ] :: [ object (NI) - nextlist (N) ] :: amazon (NM) explorer (N) 
SPECIAL:NAME:ModuleContainer Set getModuleSet(): get (V)  | module (NM) set (N) 	++ :: set (N)  :: module (NM) container (NI) 
ENDS_WITH_ED:NAME:void actionPerformed(ActionEvent e): handle (V) | action (NM) performed (N) 	++ :: [ action (NM) event (NI) - e (N) ] :: ANONYMOUS (N)  :: void (N) 
SPECIAL:NAME:DataAcMthImpl void addOwnerClassListener(PropertyChangeListener listener): add (V)  | EQUIV[owner (NM) class (NM) listener (N) , [ property (NM) change (NM) listener (N) - listener (N) ]]	++ :: data (NM) ac (NM) mth (NM) impl (NI) 
SPECIAL:NAME:NameSwitch void addChild(Node n, String str): add (V)  | child (N) 	++ :: [ node (NI) - n (N) ] :: [ string (NI) - str (NI) ] :: name (NM) switch (N) 
SPECIAL:NAME:WebContentGenerator String getSupportedMethods(): get (V)  | supported (NM) methods (N) 	++ :: string (NI)  :: web (NM) content (NM) generator (N) 
SPECIAL:NAME:JavaTray void setIcon(ImageIcon icon): set (V)  | icon (N) 	++ :: [ image (NM) icon (N) - icon (N) ] :: java (NM) tray (N) 
SPECIAL:NAME:ADollarCharacterSubstring void removeChild(Node child): remove (V)  | EQUIV[child (N) , [ node (NI) - child (N) ]]	++ :: A (NM) dollar (NM) character (NM) substring (N) 
BASE_VERB:NAME:Context Name composeName(Name name, Name prefix): compose (V)  | EQUIV[name (NI) , [ name (NI) - name (NI) ], [ name (NI) - prefix (N) ]]	++ :: name (NI)  :: context (N) 
SPECIAL:NAME:DBOutputPanel void createGUI(): create (V)  | GUI (N) 	++ :: DB (NM) output (NM) panel (N) 
BASE_VERB:NAME:XYPlot void drawRangeGridlines(Graphics2D g2, Rectangle2D area, List ticks): draw (V)  | range (NM) gridlines (N) 	++ :: [ graphics (NM) 2 (NM) D (N) - g (NM) 2 (N) ] :: [ rectangle (NM) 2 (NM) D (N) - area (N) ] :: [ list (N) - ticks (N) ] :: XY (NM) plot (N) 
SPECIAL:NAME:RowEvent void setSucceeded(boolean b): set (V)  | succeeded (N) 	++ :: [ boolean (N) - b (N) ] :: row (NM) event (NI) 
SPECIAL:NAME:Tlv Attributes getAttributes(): get (V)  | attributes (N) 	++ :: attributes (N)  :: tlv (N) 
CONSTRUCTOR:NAME:GeometricObjectsImpl GeometricObjectsImpl GeometricObjectsImpl(GeometricObjects source):  | geometric (NM) objects (NM) impl (NI) 	++ :: [ geometric (NM) objects (N) - source (NI) ]
BASE_VERB:NAME:LinkEditPart void refreshBendpointEditPolicy(): refresh (V)  | bendpoint (NM) edit (NM) policy (N) 	++ :: link (NM) edit (NM) part (N) 
SPECIAL:CLAS:DeviceObjectModifyDialog void initialize(): initialize (V)  | device (NM) object (NM) modify (NM) dialog (N) 	++
SPECIAL:NAME:PredictInfoWithDate Calendar getDate(): get (V)  | date (N) 	++ :: calendar (N)  :: predict (NM) info (NM) with (NM) date (N) 
EVENT_PARAM:NAME:Remote void changedUpdate(DocumentEvent documentevent): handle (V) | changed (NM) update (N) 	++ :: [ document (NM) event (NI) - documentevent (N) ] :: remote (N)  :: void (N) 
SPECIAL:NAME:ContextsApplication11 void addValidator(String arg0, String arg1): add (V)  | validator (N) 	++ :: [ string (NI) - arg (NM) 0 (N) ] :: [ string (NI) - arg (NM) 1 (N) ] :: contexts (NM) application (NM) 11 (N) 
SPECIAL:FORM:ExecutionReport OrigCrossID get(OrigCrossID value): get (V)  | [ orig (NM) cross (NM) ID (NI) - value (NI) ]	++ :: execution (NM) report (N)  :: orig (NM) cross (NM) ID (NI) 
SPECIAL:NAME:TaskPersistent void setType(TaskType type): set (V)  | type (N) 	++ :: [ task (NM) type (N) - type (N) ] :: task (NM) persistent (N) 
SPECIAL:NAME:UserPrefererences String getAllRecordsPublic(): get (V)  | all (DT) records (NM) public (N) 	++ :: string (NI)  :: user (NM) prefererences (N) 
SPECIAL:NAME:HorizontalSymbolicAxis String getSymbolicValue(): get (V)  | symbolic (NM) value (NI) 	++ :: string (NI)  :: horizontal (NM) symbolic (NM) axis (N) 
BASE_VERB:NAME:SeccontDAO List selectAllBySECID(int secid): select (V)  | all (DT) -- by (P) EQUIV[SECID (N) , [ int (N) - secid (N) ]]	++ :: list (N)  :: seccont (NM) DAO (N) 
ENDS_WITH_ED:NAME:JoinAction void messageReceived(IRCMessageEvent e): handle (V) | message (NM) received (N) 	++ :: [ IRC (NM) message (NM) event (NI) - e (N) ] :: join (NM) action (N)  :: void (N) 
CONSTRUCTOR:NAME:ReactionFacade ReactionFacade ReactionFacade(long oid, String hashcode, Double coeffRatio):  | reaction (NM) facade (NI) 	++ :: [ long (N) - oid (N) ] :: [ string (NI) - hashcode (N) ] :: [ double (N) - coeff (NM) ratio (N) ]
SPECIAL:NAME:NoosToolWindowManager NoosToolWindowBar getBar(ToolWindowAnchor anchor): get (V)  | bar (N) 	++ :: [ tool (NM) window (NM) anchor (N) - anchor (N) ] :: noos (NM) tool (NM) window (NM) bar (N)  :: noos (NM) tool (NM) window (NM) manager (N) 
SPECIAL:NAME:TransactionLib static int getNextMonthRow(List list, int row): get (V)  | EQUIV[next (DT) month (NM) row (N) , [ int (N) - row (N) ]]	++ :: [ list (N) - list (N) ] :: int (N)  :: transaction (NM) lib (N) 
SPECIAL:NAME:CounterMonitor void setDifferenceMode(boolean value): set (V)  | difference (NM) mode (N) 	++ :: [ boolean (N) - value (NI) ] :: counter (NM) monitor (N) 
SPECIAL:NAME:Toolkit static String replaceString(String s, String olds, String news): replace (V)  | EQUIV[string (NI) , [ string (NI) - s (N) ], [ string (NI) - olds (N) ], [ string (NI) - news (N) ]]	++ :: string (NI)  :: toolkit (N) 
SPECIAL:FORM:ExampleGIS static void main(String args): main (V)  | [ string (NI) - args (N) ]	++ :: example (NM) GIS (N) 
SPECIAL:NAME:HttpServletRequestWrapper String getServerName(): get (V)  | server (NM) name (NI) 	++ :: string (NI)  :: http (NM) servlet (NM) request (NM) wrapper (NI) 
SPECIAL:NAME:ChainManager void setCurrentBranch(int moveBranchNo): set (V)  | current (NM) branch (N) 	++ :: [ int (N) - move (NM) branch (NM) no (DT) ] :: chain (NM) manager (N) 
SPECIAL:NAME:BrokerConnection ConnectionContext getConnectionContext(): get (V)  | connection (NM) context (N) 	++ :: connection (NM) context (N)  :: broker (NM) connection (N) 
SPECIAL:FORM:Plugin_22K_CGDS void write(Resource resources, File path): write (V)  | [ resource (N) - resources (N) ]	++ :: [ file (NI) - path (NI) ] :: plugin (NM) 22 (NM) K (NM) CGDS (N) 
V_3P_IRR:NAME:PlainToken boolean isWhiteSpace(): is (V)  | white (NM) space (N) 	++ :: boolean (N)  :: plain (NM) token (N) 
SPECIAL:NAME:AttributeInfo void setAttributes(List attributes): set (V)  | attributes (N) 	++ :: [ list (N) - attributes (N) ] :: attribute (NM) info (NI) 
SPECIAL:NAME:ServletRequest Map getParameterMap(): get (V)  | parameter (NM) map (N) 	++ :: map (N)  :: servlet (NM) request (N) 
SPECIAL:NAME:ColorProcessor Object getPixels(): get (V)  | pixels (N) 	++ :: object (NI)  :: color (NM) processor (N) 
BASE_VERB:NAME:PackageInner void foo1(): foo (V)  | 1 (D) 	++ :: package (NM) inner (N) 
SPECIAL:NAME:Operator void setOpClass(String classIn): set (V)  | op (NM) class (NI) 	++ :: [ string (NI) - class (NM) in (NI) ] :: operator (N) 
BASE_VERB:CLAS:particleArrayBean void step(): step (V)  | particle (NM) array (NM) bean (NI) 	++
ENDS_WITH_ED:NAME:EventRedirector void actionPerformed(ActionEvent e): handle (V) | action (NM) performed (N) 	++ :: [ action (NM) event (NI) - e (N) ] :: event (NM) redirector (N)  :: void (N) 
V_3PS:FORM:XsltTransformer static boolean exists(String file): exists (V)  | [ string (NI) - file (NI) ]	++ :: xslt (NM) transformer (N)  :: boolean (N) 
SPECIAL:NAME:RequestType void removePutStylesAt(int index): remove (V)  | put (NM) styles (N) -- at (P) [ int (N) - index (NI) ]	++ :: [ int (N) - index (NI) ] :: request (NM) type (N) 
SPECIAL:NAME:AbstractDelegateDigraphOfCEPaths Object getEdge(Object fromNode, Object toNode): get (V)  | edge (N) 	++ :: [ object (NI) - from (NM) node (NI) ] :: [ object (NI) - to (NM) node (NI) ] :: object (NI)  :: abstract (NM) delegate (NM) digraph (NM) of (NM) CE (NM) paths (N) 
EVENT_PARAM:NAME:SimpleScrollPanel boolean drop(Event e): handle (V) | drop (N) 	++ :: [ event (NI) - e (N) ] :: simple (NM) scroll (NM) panel (N)  :: boolean (N) 
V_3P_IRR:NAME:ConcealableElement boolean isConcealed(int turn): is (V)  | concealed (N) 	++ :: [ int (N) - turn (N) ] :: boolean (N)  :: concealable (NM) element (NI) 
PREP:NAME:ERXJDBCConnectionBroker String toString(): convert (V) | to (P) string (NI) 	++ :: ERXJDBC (NM) connection (NM) broker (N)  :: string (NI) 
PREP:NAME:IntList int toArray(): convert (V) | to (P) array (N) 	++ :: int (NM) list (N)  :: int (N) 
SPECIAL:NAME:Mail void setMessageWindowHeight(int height): set (V)  | message (NM) window (NM) height (N) 	++ :: [ int (N) - height (N) ] :: mail (N) 
SPECIAL:NAME:BasicFileView String getTypeDescription(File f): get (V)  | type (NM) description (NI) 	++ :: [ file (NI) - f (N) ] :: string (NI)  :: basic (NM) file (NM) view (NI) 
BASE_VERB:NAME:PostfixExpAstItemProvider void collectNewChildDescriptors(Collection newChildDescriptors, Object object): collect (V)  | EQUIV[new (NM) child (NM) descriptors (N) , [ collection (N) - new (NM) child (NM) descriptors (N) ]]	++ :: [ object (NI) - object (NI) ] :: postfix (NM) exp (NM) ast (NM) item (NM) provider (N) 
CONSTRUCTOR:NAME:CountStream CountStream CountStream():  | count (NM) stream (NI) 	++
SPECIAL:NAME:Field void setBorder(Character b, boolean value): set (V)  | border (N) 	++ :: [ character (N) - b (N) ] :: [ boolean (N) - value (NI) ] :: field (N) 
SPECIAL:FORM:MultiprocessingAnalysisEngine_impl void process(AnalysisProcessData aProcessData, ResultSpecification aResultSpec): process (VI)  | [ analysis (NM) process (NM) data (NI) - a (NM) process (NM) data (NI) ]	++ :: [ result (NM) specification (N) - a (NM) result (NM) spec (NI) ] :: multiprocessing (NM) analysis (NM) engine (NM) impl (NI) 
SPECIAL:NAME:BarcodeDimension double getYOffset(): get (V)  | Y (NM) offset (N) 	++ :: double (N)  :: barcode (NM) dimension (N) 
SPECIAL:NAME:KunststoffUtilities static Color getTranslucentColorUIResource(Color color, int alpha): get (V)  | translucent (NM) color (NM) UI (NM) resource (N) 	++ :: [ color (N) - color (N) ] :: [ int (N) - alpha (N) ] :: color (N)  :: kunststoff (NM) utilities (N) 
SPECIAL:NAME:TestHybridNode Message getMessage(): get (V)  | message (NI) 	++ :: message (NI)  :: test (NM) hybrid (NM) node (NI) 
SPECIAL:NAME:WmlDeckBuilder void endDocument(): end (V)  | document (NI) 	++ :: wml (NM) deck (NM) builder (N) 
BASE_VERB:NAME:GlobeDocPersistImpl void putContentData_w(int cId, String name, long offset, byte data): put (V)  | content (NM) data (NM) w (N) 	++ :: [ int (N) - c (NM) id (NI) ] :: [ string (NI) - name (NI) ] :: [ long (N) - offset (N) ] :: [ byte (N) - data (NI) ] :: globe (NM) doc (NM) persist (NM) impl (NI) 
SPECIAL:NAME:NewOrderMultileg NoEvents getNoEvents(): get (V)  | no (DT) events (N) 	++ :: no (DT) events (N)  :: new (NM) order (NM) multileg (N) 
BASE_VERB:NAME:Plugin_HD_HPDT void setupPlugin(GameExtractor gameExt): setup (V)  | plugin (N) 	++ :: [ game (NM) extractor (N) - game (NM) ext (N) ] :: plugin (NM) HD (NM) HPDT (N) 
BASE_VERB:CLAS:skilled_living String stat(): stat (V)  | skilled (NM) living (N) 	++ :: string (NI) 
ING_VERB:NAME:HttpURLConnection boolean usingProxy(): using (V)  | proxy (NI) 	++ :: boolean (N)  :: http (NM) URL (NM) connection (N) 
SPECIAL:NAME:Connector void setHashSetIds(Set hashSetIds): set (V)  | hash (NM) set (NM) ids (N) 	++ :: [ set (N) - hash (NM) set (NM) ids (N) ] :: connector (N) 
BASE_VERB:NAME:Visitor void visitDASTORE(DASTORE obj): visit (V)  | EQUIV[DASTORE (N) , [ DASTORE (N) - obj (NI) ]]	++ :: visitor (N) 
SPECIAL:NAME:Dag void removeTreeModelListener(TreeModelListener treeModelListener): remove (V)  | EQUIV[tree (NM) model (NM) listener (N) , [ tree (NM) model (NM) listener (N) - tree (NM) model (NM) listener (N) ]]	++ :: dag (N) 
BASE_VERB:NAME:ReportingServlet void handleNonHTMLReport(String outputTypeParam, String reportTypeParam, HttpServletRequest request, HttpServletResponse response): handle (VI)  | non (NM) HTML (NM) report (N) 	++ :: [ string (NI) - output (NM) type (NM) param (N) ] :: [ string (NI) - report (NM) type (NM) param (N) ] :: [ http (NM) servlet (NM) request (N) - request (N) ] :: [ http (NM) servlet (NM) response (N) - response (N) ] :: reporting (NM) servlet (N) 
ENDS_WITH_ED:NAME:TreeChoiceWidget void actionPerformed(ActionEvent e): handle (V) | action (NM) performed (N) 	++ :: [ action (NM) event (NI) - e (N) ] :: tree (NM) choice (NM) widget (N)  :: void (N) 
SPECIAL:NAME:DeleteString void doOperation(EditorDocument doc): do (VI)  | operation (N) 	++ :: [ editor (NM) document (NI) - doc (NI) ] :: delete (NM) string (NI) 
BASE_VERB:FORM:LatherUtil static LatherValue deserialize(byte value, Class resClass): deserialize (V)  | [ byte (N) - value (NI) ]	++ :: [ class (NI) - res (NM) class (NI) ] :: lather (NM) util (N)  :: lather (NM) value (NI) 
BASE_VERB:NAME:SVMLightDocument int intList2Array(List integerList): int (V)  | list (NM) 2 (D) array (N) 	++ :: [ list (N) - integer (NM) list (N) ] :: int (N)  :: SVM (NM) light (NM) document (NI) 
SPECIAL:NAME:Pattern String getFileNamePattern(): get (V)  | file (NM) name (NM) pattern (N) 	++ :: string (NI)  :: pattern (N) 
BASE_VERB:FORM:ThreadLocalConnection static void commit(String name): commit (VI)  | [ string (NI) - name (NI) ]	++ :: thread (NM) local (NM) connection (N) 
SPECIAL:FORM:MjcFileFinder ClassDescription find(String name): find (V)  | [ string (NI) - name (NI) ]	++ :: mjc (NM) file (NM) finder (N)  :: class (NM) description (NI) 
CONSTRUCTOR:NAME:NoteSelectionWindow NoteSelectionWindow NoteSelectionWindow(Dialog owner, String title, boolean modal, NoteTreeNode root):  | note (NM) selection (NM) window (N) 	++ :: [ dialog (N) - owner (N) ] :: [ string (NI) - title (N) ] :: [ boolean (N) - modal (N) ] :: [ note (NM) tree (NM) node (NI) - root (N) ]
SPECIAL:NAME:StartupGUI void setIcons(): set (V)  | icons (N) 	++ :: startup (NM) GUI (N) 
PREP:NAME:SFSBTxSynchronizationBean void afterBegin(): handle (V) | after (NM) begin (N) 	++ :: SFSB (NM) tx (NM) synchronization (NM) bean (NI)  :: void (N) 
ENDS_WITH_ED:NAME:SpeciesIdentifier void windowIconified(WindowEvent e): handle (V) | window (NM) iconified (N) 	++ :: [ window (NM) event (NI) - e (N) ] :: species (NM) identifier (NI)  :: void (N) 
SPECIAL:NAME:ArrayCollection void setSet(Set aSet, boolean embbeded): set (V)  | set (N) 	++ :: [ set (N) - a (NM) set (N) ] :: [ boolean (N) - embbeded (N) ] :: array (NM) collection (N) 
BASE_VERB:NAME:SQLUtil static String fixTableName(String tableName, DataSource dataSource): fix (V)  | EQUIV[table (NM) name (NI) , [ string (NI) - table (NM) name (NI) ]]	++ :: [ data (NM) source (NI) - data (NM) source (NI) ] :: string (NI)  :: SQL (NM) util (N) 
SPECIAL:NAME:MatteBorder Insets getBorderInsets(): get (V)  | border (NM) insets (N) 	++ :: insets (N)  :: matte (NM) border (N) 
V_3P_IRR:NAME:boolean hasNext(): has (V)  | next (DT) 	++ :: boolean (N)  :: ANONYMOUS (N) 
SPECIAL:NAME:Page void setFormat(Format value): set (V)  | format (NI) 	++ :: [ format (NI) - value (NI) ] :: page (N) 
CONSTRUCTOR:NAME:AddressEditorFrame AddressEditorFrame AddressEditorFrame(AddressesModel model):  | address (NM) editor (NM) frame (N) 	++ :: [ addresses (NM) model (NI) - model (NI) ]
SPECIAL:NAME:InnerDataFrame void setFocusOnActiveTextbox(): set (V)  | focus (N) -- on (P) active (NM) textbox (N) 	++ :: inner (NM) data (NM) frame (N) 
SPECIAL:NAME:X_I_Product int getM_Product_ID(): get (V)  | M (NM) product (NM) ID (NI) 	++ :: int (N)  :: X (NM) I (NM) product (N) 
SPECIAL:CLAS:AbstractRed void copyToRaster(WritableRaster wr): copy (V)  | abstract (NM) red (N) -- to (P) EQUIV[raster (N) , [ writable (NM) raster (N) - wr (N) ]]	++
V_3P_IRR:NAME:MediaRegion boolean isSelected(): is (V)  | selected (N) 	++ :: boolean (N)  :: media (NM) region (N) 
SPECIAL:NAME:RSSItemBean void setPubDate(String pubDate): set (V)  | pub (NM) date (N) 	++ :: [ string (NI) - pub (NM) date (N) ] :: RSS (NM) item (NM) bean (NI) 
BASE_VERB:NAME:Unmarshaller void eatText1(String value): eat (V)  | text (NI) 1 (D) 	++ :: [ string (NI) - value (NI) ] :: unmarshaller (N) 
PREP:NAME:jdbcResultSetMetaData String toString(): convert (V) | to (P) string (NI) 	++ :: jdbc (NM) result (NM) set (NM) meta (NM) data (NI)  :: string (NI) 
BASE_VERB:NAME:ZZOpenGLGraphics void draw3DLine(int x1, int y1, int z1, int x2, int y2, int z2): draw (V)  | 3 (D) D (NM) line (N) 	++ :: [ int (N) - x (NM) 1 (N) ] :: [ int (N) - y (NM) 1 (N) ] :: [ int (N) - z (NM) 1 (N) ] :: [ int (N) - x (NM) 2 (N) ] :: [ int (N) - y (NM) 2 (N) ] :: [ int (N) - z (NM) 2 (N) ] :: ZZ (NM) open (NM) GL (NM) graphics (N) 
NOUN_PHRASE:NAME:PosKey int keyWidth(): get (V) | key (NM) width (N) 	++ :: pos (NM) key (NI)  :: int (N) 
BASE_VERB:FORM:ResizeMode static ResizeMode intern(int value): intern (V)  | [ int (N) - value (NI) ]	++ :: resize (NM) mode (N)  :: resize (NM) mode (N) 
SPECIAL:NAME:BufferDOM String getInitialVolume(String expname, String titrationID): get (V)  | initial (NM) volume (N) 	++ :: [ string (NI) - expname (N) ] :: [ string (NI) - titration (NM) ID (NI) ] :: string (NI)  :: buffer (NM) DOM (N) 
SPECIAL:NAME:CSS2PropertiesImpl String getMarks(): get (V)  | marks (N) 	++ :: string (NI)  :: CSS (NM) 2 (NM) properties (NM) impl (NI) 
SPECIAL:NAME:Field Node getNode(): get (V)  | node (NI) 	++ :: node (NI)  :: field (N) 
SPECIAL:NAME:PNode PAffineTransform getLocalToGlobalTransform(PAffineTransform dest): get (V)  | local (N) -- to (P) EQUIV[global (NM) transform (N) , [ P (NM) affine (NM) transform (N) - dest (N) ]]	++ :: P (NM) affine (NM) transform (N)  :: P (NM) node (NI) 
SPECIAL:NAME:GenericHasher CachedUrlSetNode getNextNode(): get (V)  | next (DT) node (NI) 	++ :: cached (NM) url (NM) set (NM) node (NI)  :: generic (NM) hasher (N) 
SPECIAL:NAME:DefaultIntervalXYDataset double getStartYValue(int series, int item): get (V)  | start (NM) Y (NM) value (NI) 	++ :: [ int (N) - series (N) ] :: [ int (N) - item (NI) ] :: double (N)  :: default (NM) interval (NM) XY (NM) dataset (N) 
CONSTRUCTOR:NAME:DefaultProcessExecutionEventsViewBlock DefaultProcessExecutionEventsViewBlock DefaultProcessExecutionEventsViewBlock():  | default (NM) process (NM) execution (NM) events (NM) view (NM) block (N) 	++
CONSTRUCTOR:NAME:TransactionDOBody TransactionDOBody TransactionDOBody(int id, int version):  | transaction (NM) DO (NM) body (N) 	++ :: [ int (N) - id (NI) ] :: [ int (N) - version (N) ]
CONSTRUCTOR:NAME:CopyMagnetLinkToClipboardAction CopyMagnetLinkToClipboardAction CopyMagnetLinkToClipboardAction(FileDetailsProvider provider):  | copy (NM) magnet (NM) link (NM) to (NM) clipboard (NM) action (N) 	++ :: [ file (NM) details (NM) provider (N) - provider (N) ]
SPECIAL:NAME:OrderMassStatusRequest InterestAccrualDate getInterestAccrualDate(): get (V)  | interest (NM) accrual (NM) date (N) 	++ :: interest (NM) accrual (NM) date (N)  :: order (NM) mass (NM) status (NM) request (N) 
CONSTRUCTOR:NAME:TranslateTextToNextLine TranslateTextToNextLine TranslateTextToNextLine():  | translate (NM) text (NM) to (NM) next (DT) line (N) 	++
ENDS_WITH_ED:NAME:void actionPerformed(ActionEvent e): handle (V) | action (NM) performed (N) 	++ :: [ action (NM) event (NI) - e (N) ] :: ANONYMOUS (N)  :: void (N) 
SPECIAL:NAME:JDBCXYDataset int getSeriesCount(): get (V)  | series (NM) count (N) 	++ :: int (N)  :: JDBCXY (NM) dataset (N) 
SPECIAL:FORM:AbstractStandardCityFactory StandardItem create(String name, PrimaryKey statePk, PrimaryKey countryPk, AnyLogicContext alc): create (V)  | [ string (NI) - name (NI) ]	++ :: [ primary (NM) key (NI) - state (NM) pk (NI) ] :: [ primary (NM) key (NI) - country (NM) pk (NI) ] :: [ any (DT) logic (NM) context (N) - alc (N) ] :: abstract (NM) standard (NM) city (NM) factory (N)  :: standard (NM) item (NI) 
BASE_VERB:NAME:XLParser void throwException(): throw (V)  | exception (N) 	++ :: XL (NM) parser (N) 
NOUN_PHRASE:NAME:PersistentNew LifeCycleState transitionMakeTransient(StateManager sm, boolean useFetchPlan, boolean detachAllOnCommit): get (V) | transition (NM) make (NM) transient (N) 	++ :: [ state (NM) manager (N) - sm (N) ] :: [ boolean (N) - use (NM) fetch (NM) plan (N) ] :: [ boolean (N) - detach (NM) all (DT) on (NM) commit (N) ] :: persistent (NM) new (NI)  :: life (NM) cycle (NM) state (N) 
SPECIAL:NAME:RelationalStorageTechnologyDefTypeImpl String getReferencePrimaryKeyConstraintNameConversionType(): get (V)  | reference (NM) primary (NM) key (NM) constraint (NM) name (NM) conversion (NM) type (N) 	++ :: string (NI)  :: relational (NM) storage (NM) technology (NM) def (NM) type (NM) impl (NI) 
BASE_VERB:FORM:Splash void paint(Graphics _g): paint (V)  | [ graphics (N) - g (N) ]	++ :: splash (N) 
SPECIAL:CLAS:CParse List<OidNode> Load(): load (V)  | C (NM) parse (N) 	++ :: list (NM) oid (NM) node (NI) 
VOID_NP:NAME:ReallyBigClass void methodB102(int i, byte d, float f): handle (V) | method (NM) B (N) 102 (D) 	++ :: [ int (N) - i (N) ] :: [ byte (N) - d (N) ] :: [ float (N) - f (N) ] :: really (NM) big (NM) class (NI)  :: void (N) 
V_3P_IRR:NAME:CastorClassTag boolean isVerifyConstructable(): is (V)  | verify (NM) constructable (N) 	++ :: boolean (N)  :: castor (NM) class (NM) tag (NI) 
SPECIAL:NAME:SimpleRowSource void setSourceRows(Collection sourceRows): set (V)  | source (NM) rows (N) 	++ :: [ collection (N) - source (NM) rows (N) ] :: simple (NM) row (NM) source (NI) 
BASE_VERB:CLAS:HaveMessage ByteBuffer send(): send (V)  | have (NM) message (NI) 	++ :: byte (NM) buffer (NI) 
SPECIAL:NAME:DatabaseStoredProcedureColumn void setTypeName(String typeName): set (V)  | type (NM) name (NI) 	++ :: [ string (NI) - type (NM) name (NI) ] :: database (NM) stored (NM) procedure (NM) column (N) 
SPECIAL:NAME:DefaultObjectConverter String getFormatPattern(String className, String pattern, Locale locale): get (V)  | EQUIV[format (NM) pattern (N) , [ string (NI) - pattern (N) ]]	++ :: [ string (NI) - class (NM) name (NI) ] :: [ locale (N) - locale (N) ] :: string (NI)  :: default (NM) object (NM) converter (N) 
SPECIAL:NAME:StandardBlock int getCurrentOrderInBlockSet(): get (V)  | current (NM) order (N) -- in (P) block (NM) set (N) 	++ :: int (N)  :: standard (NM) block (N) 
SPECIAL:NAME:UpdateCheckerImpl void addListener(UpdateCheckerListener l): add (V)  | EQUIV[listener (N) , [ update (NM) checker (NM) listener (N) - l (N) ]]	++ :: update (NM) checker (NM) impl (NI) 
SPECIAL:CLAS:FileSetTask void doExecute(): do (VI) execute (VI)  | file (NM) set (NM) task (N) 	++
SPECIAL:CLAS:void run(): run (VI)  | ANONYMOUS (N) 	++
V_3P_IRR:NAME:AllocationInstruction boolean isSetYieldType(): is (V)  | set (NM) yield (NM) type (N) 	++ :: boolean (N)  :: allocation (NM) instruction (N) 
BASE_VERB:NAME:RichDocEditorFrameMenu MyMenu buildImportMenu(): build (V)  | import (NM) menu (N) 	++ :: my (PR) menu (N)  :: rich (NM) doc (NM) editor (NM) frame (NM) menu (N) 
SPECIAL:NAME:ThinletControlUI void addThinletItem(String strLabel, Image imgIcon, String strName, String strKey, Object objTarget): add (V)  | thinlet (NM) item (NI) 	++ :: [ string (NI) - str (NM) label (NI) ] :: [ image (N) - img (NM) icon (N) ] :: [ string (NI) - str (NM) name (NI) ] :: [ string (NI) - str (NM) key (NI) ] :: [ object (NI) - obj (NM) target (N) ] :: thinlet (NM) control (NM) UI (N) 
V_3P_IRR:NAME:Context boolean isTrustedObject(Object obj): is (V)  | EQUIV[trusted (NM) object (NI) , [ object (NI) - obj (NI) ]]	++ :: boolean (N)  :: context (N) 
SPECIAL:NAME:FileEditPart Refresher getRefresher(EStructuralFeature feature, Notification msg): get (V)  | refresher (N) 	++ :: [ E (NM) structural (NM) feature (N) - feature (N) ] :: [ notification (N) - msg (NI) ] :: refresher (N)  :: file (NM) edit (NM) part (N) 
SPECIAL:NAME:BlogUserSettings void setBLOCKCONTENT4(String blockcontent4): set (V)  | BLOCKCONTENT (N) 4 (D) 	++ :: [ string (NI) - blockcontent (NM) 4 (N) ] :: blog (NM) user (NM) settings (N) 
CONSTRUCTOR:NAME:VirtuosoConnection VirtuosoConnection VirtuosoConnection(String url, String host, int port, Properties prop):  | virtuoso (NM) connection (N) 	++ :: [ string (NI) - url (NI) ] :: [ string (NI) - host (N) ] :: [ int (N) - port (N) ] :: [ properties (N) - prop (N) ]
SPECIAL:NAME:EmailRecipeCommand Recipe getRecipe(): get (V)  | recipe (N) 	++ :: recipe (N)  :: email (NM) recipe (NM) command (N) 
ENDS_WITH_ED:NAME:LwCombo void mouseEntered(LwMouseEvent e): handle (V) | mouse (NM) entered (N) 	++ :: [ lw (NM) mouse (NM) event (NI) - e (N) ] :: lw (NM) combo (N)  :: void (N) 
SPECIAL:NAME:PreferencesTitleBar void setDescription(String description): set (V)  | description (NI) 	++ :: [ string (NI) - description (NI) ] :: preferences (NM) title (NM) bar (N) 
BASE_VERB:NAME:YamahaDX7sFractionalScalingBankDriver void requestPatchDump(int bankNum, int patchNum): request (V)  | patch (NM) dump (N) 	++ :: [ int (N) - bank (NM) num (NI) ] :: [ int (N) - patch (NM) num (NI) ] :: yamaha (NM) DX (NM) 7 (NM) s (NM) fractional (NM) scaling (NM) bank (NM) driver (N) 
V_3P_IRR:NAME:DawnParser boolean isTopLiteral(): is (V)  | top (NM) literal (N) 	++ :: boolean (N)  :: dawn (NM) parser (N) 
SPECIAL:NAME:Panel Inputs getInputs(): get (V)  | inputs (N) 	++ :: inputs (N)  :: panel (N) 
SPECIAL:CLAS:HMIDigitalEventChart void run(): run (VI)  | HMI (NM) digital (NM) event (NM) chart (N) 	++
SPECIAL:NAME:ViewCvsInterface void setFileNameXpath(String fileNameXpath): set (V)  | file (NM) name (NM) xpath (N) 	++ :: [ string (NI) - file (NM) name (NM) xpath (N) ] :: view (NM) cvs (NM) interface (NI) 
SPECIAL:NAME:ViewLabelProvider String getColumnText(Object obj, int index): get (V)  | column (NM) text (NI) 	++ :: [ object (NI) - obj (NI) ] :: [ int (N) - index (NI) ] :: string (NI)  :: view (NM) label (NM) provider (N) 
NOUN_PHRASE:NAME:DummyListUI Point indexToLocation(JList list, int index): get (V) | index (NM) to (NM) location (NI) 	++ :: [ J (NM) list (N) - list (N) ] :: [ int (N) - index (NI) ] :: dummy (NM) list (NM) UI (N)  :: point (N) 
SPECIAL:NAME:ID3v2Tag int getSize(): get (V)  | size (N) 	++ :: int (N)  :: ID (NM) 3 (NM) v (NM) 2 (NM) tag (NI) 
BASE_VERB:CLAS:plasmaSwitchboard boolean deQueue(): de (PRE) queue (V)  | plasma (NM) switchboard (N) 	++ :: boolean (N) 
SPECIAL:NAME:ListSet boolean removeAll(Collection arg0): remove (V)  | all (DT) 	++ :: [ collection (N) - arg (NM) 0 (N) ] :: boolean (N)  :: list (NM) set (N) 
BASE_VERB:FORM:SetupInstitutionModule void update(HttpSession session): update (V)  | [ http (NM) session (N) - session (N) ]	++ :: setup (NM) institution (NM) module (N) 
SPECIAL:NAME:H2dTelemacSeuilMng void removeSeuil(int _idx, CtuluCommandContainer _cmd): remove (V)  | seuil (N) 	++ :: [ int (N) - idx (N) ] :: [ ctulu (NM) command (NM) container (NI) - cmd (N) ] :: H (NM) 2 (NM) d (NM) telemac (NM) seuil (NM) mng (N) 
BASE_VERB:NAME:GenericFieldManager void storeCharField(int field, char value): store (V)  | EQUIV[char (NM) field (N) , [ int (N) - field (N) ]]	++ :: [ char (N) - value (NI) ] :: generic (NM) field (NM) manager (N) 
SPECIAL:NAME:LockAcquiringStrategy EntityLock getWriteLock(EntityLockAdapter la, LogAdapter lga): get (V)  | EQUIV[write (NM) lock (N) , [ entity (NM) lock (NM) adapter (NI) - la (N) ]]	++ :: [ log (NM) adapter (NI) - lga (N) ] :: entity (NM) lock (N)  :: lock (NM) acquiring (NM) strategy (N) 
SPECIAL:NAME:NewsItem void setPublisher(String publisher): set (V)  | publisher (N) 	++ :: [ string (NI) - publisher (N) ] :: news (NM) item (NI) 
SPECIAL:NAME:SocketAppender String getRemoteHost(): get (V)  | remote (NM) host (N) 	++ :: string (NI)  :: socket (NM) appender (N) 
BASE_VERB:NAME:X10TypeSystem ClassType doubleArray(): double (V)  | array (N) 	++ :: class (NM) type (N)  :: X (NM) 10 (NM) type (NM) system (N) 
SPECIAL:NAME:Sheet void setFrame(Frame f): set (V)  | frame (N) 	++ :: [ frame (N) - f (N) ] :: sheet (N) 
SPECIAL:NAME:HideTextImpl String getStartScale(): get (V)  | start (NM) scale (N) 	++ :: string (NI)  :: hide (NM) text (NM) impl (NI) 
BASE_VERB:CLAS:IntSparseSet void clear(): clear (V)  | int (NM) sparse (NM) set (N) 	++
V_3P_IRR:NAME:AddressBookPanel boolean isModified(): is (V)  | modified (N) 	++ :: boolean (N)  :: address (NM) book (NM) panel (N) 
SPECIAL:NAME:LogCatcherUtils void addMessage(String type, String origin, int priority, String message, int code): add (V)  | EQUIV[message (NI) , [ string (NI) - message (NI) ]]	++ :: [ string (NI) - type (N) ] :: [ string (NI) - origin (N) ] :: [ int (N) - priority (N) ] :: [ int (N) - code (NI) ] :: log (NM) catcher (NM) utils (N) 
SPECIAL:NAME:MvExportX3D String getEndShape(): get (V)  | end (NM) shape (N) 	++ :: string (NI)  :: mv (NM) export (NM) X (NM) 3 (NM) D (N) 
SPECIAL:NAME:AbstractRenderer2D Point getScreenCoordinates(Point point): get (V)  | screen (NM) coordinates (N) 	++ :: [ point (N) - point (N) ] :: point (N)  :: abstract (NM) renderer (NM) 2 (NM) D (N) 
EMPTY:NONE:AsnParser static boolean jj_2_3(int xla):  | jj (PRE) 2 (D) 3 (D) 
SPECIAL:NAME:JIViewer void processPreviousImage(): process (VI)  | previous (NM) image (N) 	++ :: JI (NM) viewer (N) 
SPECIAL:NAME:SimpleTcpCluster void setClusterName(String clusterName): set (V)  | cluster (NM) name (NI) 	++ :: [ string (NI) - cluster (NM) name (NI) ] :: simple (NM) tcp (NM) cluster (N) 
CONSTRUCTOR:NAME:CQLog CQLog CQLog():  | CQ (NM) log (N) 	++
BASE_VERB:NAME:AssignedCasesPortlet void preProcess(): pre (V)  | process (N) 	++ :: assigned (NM) cases (NM) portlet (N) 
SPECIAL:NAME:X10ConditionHandler OutputFileEntry getEntry(X10FunctionEnum function, X10Pair pair, AST node, AST children): get (V)  | entry (NI) 	++ :: [ X (NM) 10 (NM) function (NM) enum (NI) - function (N) ] :: [ X (NM) 10 (NM) pair (N) - pair (N) ] :: [ AST (N) - node (NI) ] :: [ AST (N) - children (N) ] :: output (NM) file (NM) entry (NI)  :: X (NM) 10 (NM) condition (NM) handler (N) 
SPECIAL:NAME:BaseMapEditor void setAddressMgmt(AddressManagement addressMgmt): set (V)  | address (NM) mgmt (N) 	++ :: [ address (NM) management (N) - address (NM) mgmt (N) ] :: base (NM) map (NM) editor (N) 
SPECIAL:FORM:ICmdHeight void doSet(VoidPointer target, String val): do (VI) set (V)  | [ void (NM) pointer (N) - target (N) ]	++ :: [ string (NI) - val (NI) ] :: I (NM) cmd (NM) height (N) 
SPECIAL:NAME:Arbeitnehmer int setSzAbs(long vishandle, String s): set (V)  | sz (NM) abs (N) 	++ :: [ long (N) - vishandle (N) ] :: [ string (NI) - s (N) ] :: int (N)  :: arbeitnehmer (N) 
VOID_NP:NAME:GenericSearchDAO void topicsByKeyword(SearchData sd): handle (V) | topics (NM) by (NM) keyword (N) 	++ :: [ search (NM) data (NI) - sd (N) ] :: generic (NM) search (NM) DAO (N)  :: void (N) 
BASE_VERB:NAME:DefaultLinkShaper Point2D linkStart(Shape s, int orientation, Point2D ptRet): link (V)  | start (N) 	++ :: [ shape (N) - s (N) ] :: [ int (N) - orientation (N) ] :: [ point (NM) 2 (NM) D (N) - pt (NM) ret (N) ] :: point (NM) 2 (NM) D (N)  :: default (NM) link (NM) shaper (N) 
SPECIAL:NAME:SwingUtilities static double getDoubleFromString(String str): get (V)  | double (N) -- from (P) EQUIV[string (NI) , [ string (NI) - str (NI) ]]	++ :: double (N)  :: swing (NM) utilities (N) 
BASE_VERB:FORM:JavaParserVisitor Object visit(ASTExclusiveOrExpression node, Object data): visit (V)  | [ AST (NM) exclusive (NM) or (NM) expression (N) - node (NI) ]	++ :: [ object (NI) - data (NI) ] :: java (NM) parser (NM) visitor (N)  :: object (NI) 
BASE_VERB:NAME:StyleParagraphPropertiesContentStrict PunctuationWrap xgetPunctuationWrap(): xget (V)  | punctuation (NM) wrap (N) 	++ :: punctuation (NM) wrap (N)  :: style (NM) paragraph (NM) properties (NM) content (NM) strict (N) 
SPECIAL:NAME:FOraySession Log getLogger(): get (V)  | logger (N) 	++ :: log (N)  :: F (NM) oray (NM) session (N) 
SPECIAL:NAME:Terrain RGB getColor(double a): get (V)  | color (N) 	++ :: [ double (N) - a (N) ] :: RGB (N)  :: terrain (N) 
BASE_VERB:NAME:EventTraceInspectorWindow void viewHelp(): view (V)  | help (N) 	++ :: event (NM) trace (NM) inspector (NM) window (N) 
SPECIAL:NAME:ServerStatus void setServerDisk(int serverDisk): set (V)  | server (NM) disk (N) 	++ :: [ int (N) - server (NM) disk (N) ] :: server (NM) status (N) 
SPECIAL:CLAS:UltraDevWorkAround boolean execute(): execute (VI)  | ultra (NM) dev (NM) work (NM) around (N) 	++ :: boolean (N) 
V_3PS:NAME:Point2fTest void equalsMethod(Tester t): equals (V)  | method (N) 	++ :: [ tester (N) - t (N) ] :: point (NM) 2 (NM) f (NM) test (N) 
BASE_VERB:FORM:CharArrayList void swap(int index1, int index2): swap (V)  | [ int (N) - index (NM) 1 (N) ]	++ :: [ int (N) - index (NM) 2 (N) ] :: char (NM) array (NM) list (N) 
SPECIAL:NAME:LocaleAliasTest void TestDateFormat(): test (VI)  | date (NM) format (NI) 	++ :: locale (NM) alias (NM) test (N) 
SPECIAL:NAME:InventoryBase String getDescription(): get (V)  | description (NI) 	++ :: string (NI)  :: inventory (NM) base (N) 
BASE_VERB:FORM:JspJavaImplVisitor Object visit(ASTPackageDeclaration node, Object data): visit (V)  | [ AST (NM) package (NM) declaration (NI) - node (NI) ]	++ :: [ object (NI) - data (NI) ] :: jsp (NM) java (NM) impl (NM) visitor (N)  :: object (NI) 
SPECIAL:NAME:DownloadManagerStateImpl DownloadManager getDownloadManager(): get (V)  | download (NM) manager (N) 	++ :: download (NM) manager (N)  :: download (NM) manager (NM) state (NM) impl (NI) 
BASE_VERB:NAME:SAXClassAdapter void visitAttribute(Attribute attr): visit (V)  | EQUIV[attribute (N) , [ attribute (N) - attr (N) ]]	++ :: SAX (NM) class (NM) adapter (NI) 
CONSTRUCTOR:NAME:DjMultiLineToolTip DjMultiLineToolTip DjMultiLineToolTip():  | dj (NM) multi (NM) line (NM) tool (NM) tip (N) 	++
CONSTRUCTOR:NAME:ImageSelection ImageSelection ImageSelection(Image image):  | image (NM) selection (N) 	++ :: [ image (N) - image (N) ]
NOUN_PHRASE:NAME:SimpleSLLocal int idoSomething(): get (V) | ido (PRE) something (PR) 	++ :: simple (NM) SL (NM) local (N)  :: int (N) 
SPECIAL:FORM:void check(OnmsIpInterface entity): check (VI)  | [ onms (NM) ip (NM) interface (NI) - entity (N) ]	++ :: ANONYMOUS (N) 
SPECIAL:FORM:NumericParameterTest static void main(String argv): main (V)  | [ string (NI) - argv (N) ]	++ :: numeric (NM) parameter (NM) test (N) 
VOID_NP:NAME:_ValueDefStub void name(String _star_a): handle (V) | name (NI) 	++ :: [ string (NI) - star (NM) a (N) ] :: value (NM) def (NM) stub (N)  :: void (N) 
SPECIAL:FORM:BaseDataAccessLevelDOPeer static ObjectKey doInsert(Criteria criteria, Connection con): do (VI) insert (V)  | [ criteria (N) - criteria (N) ]	++ :: [ connection (N) - con (N) ] :: base (NM) data (NM) access (NM) level (NM) DO (NM) peer (N)  :: object (NM) key (NI) 
NOUN_PHRASE:NAME:AgentValue boolean agentTokenHasBeenSet(): get (V) | agent (NM) token (NM) has (NM) been (NM) set (N) 	++ :: agent (NM) value (NI)  :: boolean (N) 
ENDS_WITH_ING:NAME:Application void setupJDBCLogging(): handle (V) | setup (NM) JDBC (NM) logging (N) 	++ :: application (N)  :: void (N) 
BASE_VERB:NAME:EventDalImpl EventData resolveAlerts(EventData event, EventsFilter filter): resolve (V)  | alerts (N) 	++ :: [ event (NM) data (NI) - event (NI) ] :: [ events (NM) filter (N) - filter (N) ] :: event (NM) data (NI)  :: event (NM) dal (NM) impl (NI) 
ENDS_WITH_ED:NAME:ImportBundles void buttonCloseActionPerformed(ActionEvent evt): handle (V) | button (NM) close (NM) action (NM) performed (N) 	++ :: [ action (NM) event (NI) - evt (N) ] :: import (NM) bundles (N)  :: void (N) 
CONSTRUCTOR:NAME:EditingFrame EditingFrame EditingFrame():  | editing (NM) frame (N) 	++
BASE_VERB:FORM:IndexReader static void unlock(Directory directory): unlock (V)  | [ directory (N) - directory (N) ]	++ :: index (NM) reader (N) 
SPECIAL:NAME:JkStatusUpdateTask StringBuffer createLink(): create (V)  | link (N) 	++ :: string (NM) buffer (NI)  :: jk (NM) status (NM) update (NM) task (N) 
SPECIAL:NAME:HTMLConverter static String removeAllElements(String text): remove (V)  | all (DT) elements (N) 	++ :: [ string (NI) - text (NI) ] :: string (NI)  :: HTML (NM) converter (N) 
NOUN_PHRASE:NAME:OPT_IR OPT_Instruction firstInstructionInCodeOrder(): get (V) | first (NM) instruction (NM) in (NM) code (NM) order (N) 	++ :: OPT (NM) IR (N)  :: OPT (NM) instruction (N) 
CONSTRUCTOR:NAME:ResectionUnassignedStudentsSelection ResectionUnassignedStudentsSelection ResectionUnassignedStudentsSelection(DataProperties properties):  | resection (NM) unassigned (NM) students (NM) selection (N) 	++ :: [ data (NM) properties (N) - properties (N) ]
SPECIAL:NAME:CaptureStreamsTask void startCapturing(): start (V)  | capturing (N) 	++ :: capture (NM) streams (NM) task (N) 
CONSTRUCTOR:NAME:TyShutdown TyShutdown TyShutdown():  | ty (NM) shutdown (N) 	++
SPECIAL:NAME:CopeAttributeMap String getValueType(): get (V)  | value (NM) type (N) 	++ :: string (NI)  :: cope (NM) attribute (NM) map (N) 
SPECIAL:FORM:CategoryTableXYDataset void remove(double x, String seriesName): remove (V)  | [ double (N) - x (N) ]	++ :: [ string (NI) - series (NM) name (NI) ] :: category (NM) table (NM) XY (NM) dataset (N) 
SPECIAL:NAME:Help static File getAproposFile(): get (V)  | apropos (NM) file (NI) 	++ :: file (NI)  :: help (N) 
CONSTRUCTOR:NAME:MultiComparator MultiComparator MultiComparator(Comparator c):  | multi (NM) comparator (N) 	++ :: [ comparator (N) - c (N) ]
CONSTRUCTOR:NAME:EllipsePrimitive EllipsePrimitive EllipsePrimitive(double x, double y, double w, double h):  | ellipse (NM) primitive (N) 	++ :: [ double (N) - x (N) ] :: [ double (N) - y (N) ] :: [ double (N) - w (N) ] :: [ double (N) - h (N) ]
SPECIAL:NAME:UnknownLicense URL getLicenseDeed(URN urn): get (V)  | license (NM) deed (N) 	++ :: [ URN (N) - urn (N) ] :: URL (NI)  :: unknown (NM) license (N) 
BASE_VERB:NAME:JMSTestModule void verifyNumberTopicSubscribers(int indexOfSession, String topicName, int numberOfSubscribers): verify (VI)  | EQUIV[number (NM) topic (NM) subscribers (N) , [ int (N) - number (NM) of (NM) subscribers (N) ]]	++ :: [ int (N) - index (NM) of (NM) session (N) ] :: [ string (NI) - topic (NM) name (NI) ] :: JMS (NM) test (NM) module (N) 
SPECIAL:NAME:AttributeUISpec String getPostfix(): get (V)  | postfix (N) 	++ :: string (NI)  :: attribute (NM) UI (NM) spec (NI) 
SPECIAL:NAME:AbstractDaemon void setStatus(int status): set (V)  | status (N) 	++ :: [ int (N) - status (N) ] :: abstract (NM) daemon (N) 
SPECIAL:FORM:BaseAgUserAgendaPeer static void doDelete(Criteria criteria): do (VI) delete (V)  | [ criteria (N) - criteria (N) ]	++ :: base (NM) ag (NM) user (NM) agenda (NM) peer (N) 
BASE_VERB:NAME:TuningProfile static void disableIO(Session session): disable (V)  | IO (N) 	++ :: [ session (N) - session (N) ] :: tuning (NM) profile (NI) 
SPECIAL:NAME:FleetEntry void setStopTime(int stopTime): set (V)  | stop (NM) time (N) 	++ :: [ int (N) - stop (NM) time (N) ] :: fleet (NM) entry (NI) 
NOUN_PHRASE:NAME:NSTimestamp_Helper static int minuteOfHour(NSTimestamp myNSTimestamp): get (V) | minute (NM) of (NM) hour (N) 	++ :: [ NS (NM) timestamp (N) - my (PR) NS (NM) timestamp (N) ] :: NS (NM) timestamp (NM) helper (N)  :: int (N) 
SPECIAL:NAME:SWTSplashScreen Shell getShell(): get (V)  | shell (N) 	++ :: shell (N)  :: SWT (NM) splash (NM) screen (N) 
BASE_VERB:CLAS:CompoundEdit void redo(): redo (V)  | compound (NM) edit (N) 	++
SPECIAL:NAME:devItem void setMask(SWIGTYPE_p__u32 mask): set (V)  | mask (N) 	++ :: [ SWIGTYPE (NM) p (NM) u (NM) 32 (N) - mask (N) ] :: dev (NM) item (NI) 
SPECIAL:NAME:ContainerImp Object doPrivileged(PrivilegedAction action): do (VI)  | privileged (N) 	++ :: [ privileged (NM) action (N) - action (N) ] :: object (NI)  :: container (NM) imp (N) 
SPECIAL:NAME:TickQueryTableModel Tick getTick(int row): get (V)  | tick (N) 	++ :: [ int (N) - row (N) ] :: tick (N)  :: tick (NM) query (NM) table (NM) model (NI) 
SPECIAL:NAME:Node int getDepth(): get (V)  | depth (N) 	++ :: int (N)  :: node (NI) 
PREP:NAME:MBPartnerLocation String toString(): convert (V) | to (P) string (NI) 	++ :: MB (NM) partner (NM) location (NI)  :: string (NI) 
SPECIAL:NAME:WSUser Set<WSRole> getRoles(): get (V)  | roles (N) 	++ :: set (NM) WS (NM) role (N)  :: WS (NM) user (N) 
SPECIAL:NAME:Handler void processStartProcedure(): process (VI) start (V)  | procedure (N) 	++ :: handler (N) 
CONSTRUCTOR:NAME:CarRequestPanel CarRequestPanel CarRequestPanel():  | car (NM) request (NM) panel (N) 	++
SPECIAL:NAME:MockDnaseqDelegate Collection getMaterialItemInfosBySupSetForPrepare(Integer p0_Integer): get (V)  | material (NM) item (NM) infos (N) -- by (P) sup (NM) set (NM) for (NM) prepare (N) 	++ :: [ integer (N) - p (NM) 0 (NM) integer (N) ] :: collection (N)  :: mock (NM) dnaseq (NM) delegate (N) 
SPECIAL:CLAS:Profiler void run(): run (VI)  | profiler (N) 	++
BASE_VERB:NAME:AbstractDataSession void putMappingWithAlphanumericSingleId(MappingWithAlphanumericSingleId mapping, Class myClass, String recordId): put (V)  | mapping (N) -- with (P) alphanumeric (NM) single (NM) id (NI) 	++ :: [ mapping (NM) with (NM) alphanumeric (NM) single (NM) id (NI) - mapping (N) ] :: [ class (NI) - my (PR) class (NI) ] :: [ string (NI) - record (NM) id (NI) ] :: abstract (NM) data (NM) session (N) 
NOUN_PHRASE:NAME:PDFJob boolean lastPageFirst(): get (V) | last (DT) page (NM) first (N) 	++ :: PDF (NM) job (N)  :: boolean (N) 
SPECIAL:NAME:_SupplierAdminStub Property get_qos(): get (V)  | qos (N) 	++ :: property (N)  :: supplier (NM) admin (NM) stub (N) 
SPECIAL:NAME:Level IItem getItem(int x, int y): get (V)  | item (NI) 	++ :: [ int (N) - x (N) ] :: [ int (N) - y (N) ] :: I (NM) item (NI)  :: level (N) 
SPECIAL:NAME:UkkonenSuffixTree int getEdgeLength(SuffixNode child): get (V)  | edge (NM) length (N) 	++ :: [ suffix (NM) node (NI) - child (N) ] :: int (N)  :: ukkonen (NM) suffix (NM) tree (NI) 
BASE_VERB:NAME:InferenceNode int countInference(): count (V)  | inference (N) 	++ :: int (N)  :: inference (NM) node (NI) 
SPECIAL:NAME:UserLayoutStoreMock UserProfile getUserProfileById(IPerson person, int profileId): get (V)  | user (NM) profile (NI) -- by (P) id (NI) 	++ :: [ I (NM) person (N) - person (N) ] :: [ int (N) - profile (NM) id (NI) ] :: user (NM) profile (NI)  :: user (NM) layout (NM) store (NM) mock (N) 
BASE_VERB:NAME:CPContactGroup void postSaveAction(Vector resCommands): post (V)  | save (NM) action (N) 	++ :: [ vector (N) - res (NM) commands (N) ] :: CP (NM) contact (NM) group (N) 
BASE_VERB:FORM:Library static Integer dayofmonth(Date d): dayofmonth (V)  | [ date (N) - d (N) ]	++ :: library (N)  :: integer (N) 
SPECIAL:NAME:TreeModel Tree getRoot(): get (V)  | root (N) 	++ :: tree (NI)  :: tree (NM) model (NI) 
SPECIAL:NAME:ChangeTrackTableCell void setBooleanValue1(Enum booleanValue1): set (V)  | boolean (NM) value (NI) 1 (D) 	++ :: [ enum (NI) - boolean (NM) value (NM) 1 (N) ] :: change (NM) track (NM) table (NM) cell (N) 
SPECIAL:NAME:URLManager void copyContainer(URL source, URL destination): copy (V)  | container (NI) 	++ :: [ URL (NI) - source (NI) ] :: [ URL (NI) - destination (N) ] :: URL (NM) manager (N) 
BASE_VERB:CLAS:TextDocument Variant Save(): save (V)  | text (NM) document (NI) 	++ :: variant (N) 
SPECIAL:NAME:TestProjectFormBinding void testProjectForm(): test (VI)  | project (NM) form (N) 	++ :: test (NM) project (NM) form (NM) binding (N) 
SPECIAL:NAME:AccountRoleXrefMapping void setEnabledFlag(String enabledFlag): set (V)  | enabled (NM) flag (N) 	++ :: [ string (NI) - enabled (NM) flag (N) ] :: account (NM) role (NM) xref (NM) mapping (N) 
SPECIAL:NAME:JbEditorExtensions void setCaretPositionCenter(int offset): set (V)  | caret (NM) position (NM) center (N) 	++ :: [ int (N) - offset (N) ] :: jb (NM) editor (NM) extensions (N) 
BASE_VERB:CLAS:Runtime static void x10Exit(): x (PRE) 10 (D) exit (VI)  | runtime (N) 	++
SPECIAL:NAME:Style Rectangle2D getShapeBounds2D(Shape shape): get (V)  | shape (NM) bounds (NM) 2 (D) D (N) 	++ :: [ shape (N) - shape (N) ] :: rectangle (NM) 2 (NM) D (N)  :: style (N) 
SPECIAL:NAME:SystemUtility static byte runCommand(String command): run (VI)  | EQUIV[command (N) , [ string (NI) - command (N) ]]	++ :: byte (N)  :: system (NM) utility (N) 
CONSTRUCTOR:NAME:Env Env Env(String classpath):  | env (N) 	++ :: [ string (NI) - classpath (N) ]
SPECIAL:FORM:BaseDphrmPositionSubTwoDAO void delete(DphrmPositionSubTwo dphrmPositionSubTwo): delete (V)  | [ dphrm (NM) position (NM) sub (NM) two (N) - dphrm (NM) position (NM) sub (NM) two (N) ]	++ :: base (NM) dphrm (NM) position (NM) sub (NM) two (NM) DAO (N) 
BASE_VERB:CLAS:jEditBuffer void autosave(): autosave (V)  | j (NM) edit (NM) buffer (NI) 	++
ENDS_WITH_ED:NAME:void focusGained(FocusEvent fe): handle (V) | focus (NM) gained (N) 	++ :: [ focus (NM) event (NI) - fe (N) ] :: ANONYMOUS (N)  :: void (N) 
SPECIAL:NAME:DocumentNavigatorTest void testPrecedingSiblingAxisIterator2(): test (VI)  | preceding (NM) sibling (NM) axis (NM) iterator (N) 2 (D) 	++ :: document (NM) navigator (NM) test (N) 
BASE_VERB:NAME:X86BytecodeVisitor void visit_baload(): visit (V)  | baload (N) 	++ :: X (NM) 86 (NM) bytecode (NM) visitor (N) 
SPECIAL:NAME:MapGeneTest void testSetAllele_0(): test (VI) set (V)  | allele (N) 0 (D) 	++ :: map (NM) gene (NM) test (N) 
V_3PS:FORM:Polygon boolean contains(Point p): contains (V)  | [ point (N) - p (NI) ]	++ :: polygon (N)  :: boolean (N) 
V_3P_IRR:NAME:UJAXP static boolean isMatchDataComplexAttr(Element element, String attrName, String typeExpr): is (V)  | EQUIV[match (NM) data (NM) complex (NM) attr (N) , [ string (NI) - attr (NM) name (NI) ]]	++ :: [ element (NI) - element (NI) ] :: [ string (NI) - type (NM) expr (NI) ] :: boolean (N)  :: UJAXP (N) 
BASE_VERB:NAME:cEntity boolean inventoryItemUse_b(eFunctionality efunc, int iAmmount): inventory (V)  | item (NM) use (NM) b (N) 	++ :: [ e (NM) functionality (N) - efunc (N) ] :: [ int (N) - i (NM) ammount (N) ] :: boolean (N)  :: c (NM) entity (N) 
SPECIAL:NAME:Database String getConformanceLevel(): get (V)  | conformance (NM) level (N) 	++ :: string (NI)  :: database (N) 
SPECIAL:NAME:GuiInterfaceImpl void loadTeletextPageMatrix(): load (V)  | teletext (NM) page (NM) matrix (N) 	++ :: gui (NM) interface (NM) impl (NI) 
SPECIAL:CLAS:TreeNode int compareTo(TreeNode treeNode): compare (V)  | tree (NM) node (NI) -- to (P) [ tree (NM) node (NI) - tree (NM) node (NI) ]	++ :: [ tree (NM) node (NI) - tree (NM) node (NI) ] :: int (N) 
SPECIAL:FORM:GetRegisteredModelsAction void init(IWorkbenchWindow window): init (V)  | [ I (NM) workbench (NM) window (N) - window (N) ]	++ :: get (NM) registered (NM) models (NM) action (N) 
SPECIAL:NAME:EditorKernel void createNewWorkspace(File wsFile, boolean isExcelImport): create (V)  | new (NM) workspace (N) 	++ :: [ file (NI) - ws (NM) file (NI) ] :: [ boolean (N) - is (NM) excel (NM) import (N) ] :: editor (NM) kernel (N) 
CONSTRUCTOR:NAME:TimePeriodAnchor TimePeriodAnchor TimePeriodAnchor(String name):  | time (NM) period (NM) anchor (N) 	++ :: [ string (NI) - name (NI) ]
CONSTRUCTOR:NAME:FromfunctionFunction FromfunctionFunction FromfunctionFunction():  | fromfunction (NM) function (N) 	++
ENDS_WITH_ED:NAME:HtmlChart void mouseExited(MouseEvent e): handle (V) | mouse (NM) exited (N) 	++ :: [ mouse (NM) event (NI) - e (N) ] :: html (NM) chart (N)  :: void (N) 
SPECIAL:NAME:IcoBuilder Word createWord(String word): create (V)  | EQUIV[word (N) , [ string (NI) - word (N) ]]	++ :: word (N)  :: ico (NM) builder (N) 
SPECIAL:FORM:AlgorithmParameterGenerator void init(int size): init (V)  | [ int (N) - size (N) ]	++ :: algorithm (NM) parameter (NM) generator (N) 
SPECIAL:NAME:LogRecord long getSequenceNumber(): get (V)  | sequence (NM) number (NI) 	++ :: long (N)  :: log (NM) record (N) 
BASE_VERB:NAME:LispParser void indentateFunction(LispFunctionElement function, int offset, IndentationBuffer buffer): indentate (V)  | EQUIV[function (N) , [ lisp (NM) function (NM) element (NI) - function (N) ]]	++ :: [ int (N) - offset (N) ] :: [ indentation (NM) buffer (NI) - buffer (NI) ] :: lisp (NM) parser (N) 
BASE_VERB:FORM:Object register(ULocale loc, Object prototype): register (V)  | [ U (NM) locale (N) - loc (N) ]	++ :: [ object (NI) - prototype (N) ] :: ANONYMOUS (N)  :: object (NI) 
BASE_VERB:NAME:Items Item makeVoidItem(): make (V)  | void (NM) item (NI) 	++ :: item (NI)  :: items (N) 
SPECIAL:NAME:GetPersonByUserIdRequest String getRequestName(): get (V)  | request (NM) name (NI) 	++ :: string (NI)  :: get (NM) person (NM) by (NM) user (NM) id (NM) request (N) 
SPECIAL:NAME:TestRequest Locale getLocale(): get (V)  | locale (N) 	++ :: locale (N)  :: test (NM) request (N) 
SPECIAL:NAME:BeanManager void addDeleteParameter(String paramName, float param): add (V)  | delete (NM) parameter (N) 	++ :: [ string (NI) - param (NM) name (NI) ] :: [ float (N) - param (N) ] :: bean (NM) manager (N) 
SPECIAL:NAME:TypeTreeLabelProvider String getText(Object element): get (V)  | text (NI) 	++ :: [ object (NI) - element (NI) ] :: string (NI)  :: type (NM) tree (NM) label (NM) provider (N) 
SPECIAL:NAME:NetworkDisplayProducer void setHeight(int val): set (V)  | height (N) 	++ :: [ int (N) - val (NI) ] :: network (NM) display (NM) producer (N) 
ENDS_WITH_ED:NAME:AlignmentHelperPlugin void dataChanged(): handle (V) | data (NM) changed (N) 	++ :: alignment (NM) helper (NM) plugin (N)  :: void (N) 
BASE_VERB:NAME:FirstPassVisitor void visitLINVOKE(byte op, jq_Method f): visit (V)  | LINVOKE (N) 	++ :: [ byte (N) - op (N) ] :: [ jq (NM) method (N) - f (N) ] :: first (NM) pass (NM) visitor (N) 
SPECIAL:NAME:GpuProgramPtr long _getPointer_const(long _pointer_): get (V)  | pointer (NM) const (N) 	++ :: [ long (N) - pointer (N) ] :: long (N)  :: gpu (NM) program (NM) ptr (N) 
CONSTRUCTOR:NAME:DLDateTime DLDateTime DLDateTime():  | DL (NM) date (NM) time (N) 	++
SPECIAL:NAME:HTTPResponse int getTrailerAsInt(String trailer): get (V)  | EQUIV[trailer (N) , [ string (NI) - trailer (N) ]]-- as (P) int (N) 	++ :: int (N)  :: HTTP (NM) response (N) 
NOUN_PHRASE:NAME:LayoutContext LayoutArea nextArea(): get (V) | next (DT) area (N) 	++ :: layout (NM) context (N)  :: layout (NM) area (N) 
SPECIAL:NAME:FuncLib static SmithStruct GetFunctionList(): get (V)  | function (NM) list (N) 	++ :: smith (NM) struct (N)  :: func (NM) lib (N) 
CONSTRUCTOR:NAME:PIProcessor PIProcessor PIProcessor():  | PI (NM) processor (N) 	++
CONSTRUCTOR:NAME:DCompressFiles DCompressFiles DCompressFiles():  | D (NM) compress (NM) files (N) 	++
CONSTRUCTOR:NAME:StoplightTimeoutListener StoplightTimeoutListener StoplightTimeoutListener(Stoplight owner):  | stoplight (NM) timeout (NM) listener (N) 	++ :: [ stoplight (N) - owner (N) ]
CONSTRUCTOR:NAME:ChoiceGui ChoiceGui ChoiceGui(Object pos, Object sel, boolean filter):  | choice (NM) gui (N) 	++ :: [ object (NI) - pos (N) ] :: [ object (NI) - sel (N) ] :: [ boolean (N) - filter (N) ]
BASE_VERB:FORM:CompassFormat StringBuffer format(double number, StringBuffer toAppendTo, FieldPosition pos): format (V)  | [ double (N) - number (NI) ]	++ :: [ string (NM) buffer (NI) - to (NM) append (NM) to (N) ] :: [ field (NM) position (N) - pos (N) ] :: compass (NM) format (NI)  :: string (NM) buffer (NI) 
BASE_VERB:FORM:Simplification static Generic compute(Generic generic): compute (V)  | [ generic (N) - generic (N) ]	++ :: simplification (N)  :: generic (N) 
SPECIAL:NAME:SwingWorker void setValue(Object x): set (V)  | value (NI) 	++ :: [ object (NI) - x (N) ] :: swing (NM) worker (N) 
SPECIAL:NAME:MultipleHiLoPerTableGeneratorTest String getMappings(): get (V)  | mappings (N) 	++ :: string (NI)  :: multiple (NM) hi (NM) lo (NM) per (NM) table (NM) generator (NM) test (N) 
SPECIAL:NAME:ImportListXML String getIid(int i): get (V)  | iid (N) 	++ :: [ int (N) - i (N) ] :: string (NI)  :: import (NM) list (NM) XML (N) 
SPECIAL:NAME:HsqlDateTime static void resetToday(long millis): reset (V)  | today (N) 	++ :: [ long (N) - millis (N) ] :: hsql (NM) date (NM) time (N) 
SPECIAL:NAME:AbstractConnectionPool int getMaxActive(): get (V)  | max (NM) active (N) 	++ :: int (N)  :: abstract (NM) connection (NM) pool (N) 
SPECIAL:NAME:SummationFloatComputedDomain void setChoicePointStack(ChoicePointStack cps): set (V)  | choice (NM) point (NM) stack (N) 	++ :: [ choice (NM) point (NM) stack (N) - cps (N) ] :: summation (NM) float (NM) computed (NM) domain (N) 
SPECIAL:NAME:TimeSeriesCollection boolean getDomainIsPointsInTime(): get (V)  | domain (NM) is (NM) points (N) -- in (P) time (N) 	++ :: boolean (N)  :: time (NM) series (NM) collection (N) 
SPECIAL:NAME:VariableX String getVariableType(): get (V)  | variable (NM) type (N) 	++ :: string (NI)  :: variable (NM) X (N) 
CONSTRUCTOR:NAME:CardSpecTest CardSpecTest CardSpecTest():  | card (NM) spec (NM) test (N) 	++
CONSTRUCTOR:NAME:DefaultMutableTreeNode DefaultMutableTreeNode DefaultMutableTreeNode():  | default (NM) mutable (NM) tree (NM) node (NI) 	++
PREP:NAME:AckSenderWindow String toString(): convert (V) | to (P) string (NI) 	++ :: ack (NM) sender (NM) window (N)  :: string (NI) 
SPECIAL:NAME:Entry Object getKey(): get (V)  | key (NI) 	++ :: object (NI)  :: entry (NI) 
BASE_VERB:FORM:Factory static StemhAttribute parse(XMLInputStream xis): parse (V)  | [ XML (NM) input (NM) stream (NI) - xis (N) ]	++ :: factory (N)  :: stemh (NM) attribute (N) 
BASE_VERB:NAME:HWhiteComboBoxUI void paintCurrentValue(Graphics g, Rectangle bounds, boolean hasFocus): paint (V)  | current (NM) value (NI) 	++ :: [ graphics (N) - g (N) ] :: [ rectangle (N) - bounds (N) ] :: [ boolean (N) - has (NM) focus (N) ] :: H (NM) white (NM) combo (NM) box (NM) UI (N) 
CONSTRUCTOR:NAME:LabelDeClutteringFilter LabelDeClutteringFilter LabelDeClutteringFilter(Graphics2D g2, float fontSize, Color color):  | label (NM) de (NM) cluttering (NM) filter (N) 	++ :: [ graphics (NM) 2 (NM) D (N) - g (NM) 2 (N) ] :: [ float (N) - font (NM) size (N) ] :: [ color (N) - color (N) ]
SPECIAL:NAME:MyTheme ColorUIResource getSecondary1(): get (V)  | secondary (N) 1 (D) 	++ :: color (NM) UI (NM) resource (N)  :: my (PR) theme (N) 
SPECIAL:NAME:GroupNodeChecker boolean checkNodes(long nodes): check (VI)  | EQUIV[nodes (N) , [ long (N) - nodes (N) ]]	++ :: boolean (N)  :: group (NM) node (NM) checker (N) 
SPECIAL:NAME:LuceneDictionary void setFile(String fileBaseName): set (V)  | file (NI) 	++ :: [ string (NI) - file (NM) base (NM) name (NI) ] :: lucene (NM) dictionary (N) 
BASE_VERB:NAME:MpfcJNI static int WSCsheet_setTableName__SWIG_0(long jarg1, String jarg2): WS (PRE) csheet (V)  | set (NM) table (NM) name (NM) SWIG (N) 0 (D) 	++ :: [ long (N) - jarg (NM) 1 (N) ] :: [ string (NI) - jarg (NM) 2 (N) ] :: int (N)  :: mpfc (NM) JNI (N) 
NOUN_PHRASE:NAME:Spell_InsatiableThirst int classificationCode(): get (V) | classification (NM) code (NI) 	++ :: spell (NM) insatiable (NM) thirst (N)  :: int (N) 
BASE_VERB:FORM:IconSelector ImageIcon select(ExplorerNode node, boolean expanded): select (V)  | [ explorer (NM) node (NI) - node (NI) ]	++ :: icon (NM) selector (N)  :: [ boolean (N) - expanded (N) ] :: image (NM) icon (N) 
SPECIAL:NAME:ResultSet byte getByte(int columnIndex): get (V)  | byte (N) 	++ :: [ int (N) - column (NM) index (NI) ] :: byte (N)  :: result (NM) set (N) 
SPECIAL:NAME:Mark int getCol(): get (V)  | col (N) 	++ :: int (N)  :: mark (N) 
SPECIAL:CLAS:BDD BDD replaceWith(BDDPairing pair): replace (V)  | BDD (N) -- with (P) [ BDD (NM) pairing (N) - pair (N) ]	++ :: [ BDD (NM) pairing (N) - pair (N) ] :: BDD (N) 
SPECIAL:NAME:MockDestinationTest void testGetMatchingMessagesFromTopic(): test (VI) get (V)  | matching (NM) messages (N) -- from (P) topic (N) 	++ :: mock (NM) destination (NM) test (N) 
ENDS_WITH_ED:NAME:Mining boolean allowedWhileMounted(): handle (V) | allowed (NM) while (NM) mounted (N) 	++ :: mining (N)  :: boolean (N) 
BASE_VERB:NAME:Arrays static int med3(int a, int b, int c, float d): med (V)  | 3 (D) 	++ :: [ int (N) - a (N) ] :: [ int (N) - b (N) ] :: [ int (N) - c (N) ] :: [ float (N) - d (N) ] :: int (N)  :: arrays (N) 
SPECIAL:NAME:FsImageConfigForm Integer getCpuModel(): get (V)  | cpu (NM) model (NI) 	++ :: integer (N)  :: fs (NM) image (NM) config (NM) form (N) 
CONSTRUCTOR:NAME:InMemorySettings InMemorySettings InMemorySettings(String preset):  | in (NM) memory (NM) settings (N) 	++ :: [ string (NI) - preset (N) ]
SPECIAL:NAME:Tuple int getInt(int col): get (V)  | EQUIV[int (N) , [ int (N) - col (N) ]]	++ :: int (N)  :: tuple (N) 
SPECIAL:NAME:Vizster void setHighlightHops(int h): set (V)  | highlight (NM) hops (N) 	++ :: [ int (N) - h (N) ] :: vizster (N) 
SPECIAL:NAME:Queue String getQueueName(): get (V)  | queue (NM) name (NI) 	++ :: string (NI)  :: queue (N) 
UNKOWN: :UnsupportedErr static void make$(UnsupportedErr self, Str msg):
BASE_VERB:FORM:GenericRoom void announce(Container player, String args): announce (V)  | [ container (NI) - player (N) ]	++ :: [ string (NI) - args (N) ] :: generic (NM) room (N) 
SPECIAL:NAME:GraphicsEnvironment static GraphicsEnvironment getLocalGraphicsEnvironment(): get (V)  | local (NM) graphics (NM) environment (N) 	++ :: graphics (NM) environment (N)  :: graphics (NM) environment (N) 
ENDS_WITH_ED:NAME:void actionPerformed(ActionEvent evt): handle (V) | action (NM) performed (N) 	++ :: [ action (NM) event (NI) - evt (N) ] :: ANONYMOUS (N)  :: void (N) 
SPECIAL:NAME:PackageRefAst void setP_uri(UriAst value): set (V)  | P (NM) uri (NI) 	++ :: [ uri (NM) ast (N) - value (NI) ] :: package (NM) ref (NM) ast (N) 
BASE_VERB:NAME:UnicodeViqrConverter String cleanupVIQR(String str): cleanup (V)  | VIQR (N) 	++ :: [ string (NI) - str (NI) ] :: string (NI)  :: unicode (NM) viqr (NM) converter (N) 
EVENT_PARAM:NAME:void changedUpdate(DocumentEvent evt): handle (V) | changed (NM) update (N) 	++ :: [ document (NM) event (NI) - evt (N) ] :: ANONYMOUS (N)  :: void (N) 
EMPTY:NONE:PHPParser boolean jj_3_3():  | jj (PRE) 3 (D) 3 (D) 
SPECIAL:FORM:DomLSParser Document doParse(LSInput input): do (VI) parse (V)  | [ LS (NM) input (NI) - input (NI) ]	++ :: dom (NM) LS (NM) parser (N)  :: document (NI) 
CONSTRUCTOR:NAME:ProjectionParametersXML ProjectionParametersXML ProjectionParametersXML(ProjectionParameters este):  | projection (NM) parameters (NM) XML (N) 	++ :: [ projection (NM) parameters (N) - este (N) ]
ENDS_WITH_ED:NAME:RecordTableEntry void recordToBeCreated(LPRecord record, int index): handle (V) | record (NM) to (NM) be (NM) created (N) 	++ :: [ LP (NM) record (N) - record (N) ] :: [ int (N) - index (NI) ] :: record (NM) table (NM) entry (NI)  :: void (N) 
SPECIAL:NAME:UMaskTextFieldBeanInfo Image getIcon(int iconKind): get (V)  | icon (N) 	++ :: [ int (N) - icon (NM) kind (N) ] :: image (N)  :: U (NM) mask (NM) text (NM) field (NM) bean (NM) info (NI) 
SPECIAL:NAME:Data void write4_unused(): write (V)  | 4 (D) unused (N) 	++ :: data (NI) 
SPECIAL:NAME:CShaniDomParser boolean getFeature(String name): get (V)  | feature (N) 	++ :: [ string (NI) - name (NI) ] :: boolean (N)  :: C (NM) shani (NM) dom (NM) parser (N) 
SPECIAL:NAME:NdbIndexScanOperationImpl void setBound(String columnName, BoundType Type, double value): set (V)  | bound (N) 	++ :: [ string (NI) - column (NM) name (NI) ] :: [ bound (NM) type (N) - type (N) ] :: [ double (N) - value (NI) ] :: ndb (NM) index (NM) scan (NM) operation (NM) impl (NI) 
BASE_VERB:FORM:Factory static ListLevelStyleBulletDocument parse(URL u, XmlOptions options): parse (V)  | [ URL (NI) - u (N) ]	++ :: [ xml (NM) options (N) - options (N) ] :: factory (N)  :: list (NM) level (NM) style (NM) bullet (NM) document (NI) 
SPECIAL:FORM:SortMap int find(String key): find (V)  | [ string (NI) - key (NI) ]	++ :: sort (NM) map (N)  :: int (N) 
SPECIAL:NAME:JDBCMeasurementPlugin double getQueryValue(Metric jdsn): get (V)  | query (NM) value (NI) 	++ :: [ metric (N) - jdsn (N) ] :: double (N)  :: JDBC (NM) measurement (NM) plugin (N) 
SPECIAL:NAME:Predicate LocationPath getPath(): get (V)  | path (NI) 	++ :: location (NM) path (NI)  :: predicate (N) 
CONSTRUCTOR:NAME:DocumentListDataCollector DocumentListDataCollector DocumentListDataCollector():  | document (NM) list (NM) data (NM) collector (N) 	++
SPECIAL:NAME:SourceFileWizard Icon getIcon(): get (V)  | icon (N) 	++ :: icon (N)  :: source (NM) file (NM) wizard (N) 
VOID_NP:NAME:Bonus_Invincible void action(Graphics g, Joueur joueur): handle (V) | action (N) 	++ :: [ graphics (N) - g (N) ] :: [ joueur (N) - joueur (N) ] :: bonus (NM) invincible (N)  :: void (N) 
CONSTRUCTOR:NAME:OutputFormat OutputFormat OutputFormat(String indent):  | output (NM) format (NI) 	++ :: [ string (NI) - indent (N) ]
BASE_VERB:FORM:Trace static void insist(String s): insist (V)  | [ string (NI) - s (N) ]	++ :: trace (N) 
SPECIAL:NAME:TxE int getEnd(): get (V)  | end (N) 	++ :: int (N)  :: tx (NM) E (N) 
SPECIAL:NAME:Asset_blob_dataTYPE UnsignedInt getBlc_type_code(): get (V)  | blc (NM) type (NM) code (NI) 	++ :: unsigned (NM) int (N)  :: asset (NM) blob (NM) data (NM) TYPE (N) 
EVENT_PARAM:NAME:PaletteList void onResize(Event event): handle (V) | on (NM) resize (N) 	++ :: [ event (NI) - event (NI) ] :: palette (NM) list (N)  :: void (N) 
SPECIAL:NAME:EQLFunctionlNode Object readObjectFromResultSet(SelectStatement select, LoaderContext loadContext): read (V)  | object (NI) -- from (P) result (NM) set (N) 	++ :: [ select (NM) statement (NI) - select (N) ] :: [ loader (NM) context (N) - load (NM) context (N) ] :: object (NI)  :: EQL (NM) functionl (NM) node (NI) 
BASE_VERB:NAME:rlibJNI static int rlib_add_resultset_follower_n_to_1(long jarg1, String jarg2, String jarg3, String jarg4, String jarg5): rlib (V)  | add (NM) resultset (NM) follower (NM) n (N) -- to (P) EQUIV[1 (D) , [ long (N) - jarg (NM) 1 (N) ]]	++ :: [ string (NI) - jarg (NM) 2 (N) ] :: [ string (NI) - jarg (NM) 3 (N) ] :: [ string (NI) - jarg (NM) 4 (N) ] :: [ string (NI) - jarg (NM) 5 (N) ] :: int (N)  :: rlib (NM) JNI (N) 
SPECIAL:NAME:ACIDable I18nMessage getError(): get (V)  | error (N) 	++ :: I (NM) 18 (NM) n (NM) message (NI)  :: ACI (NM) dable (N) 
SPECIAL:FORM:TyDemoJiniT1 static void main(String args): main (V)  | [ string (NI) - args (N) ]	++ :: ty (NM) demo (NM) jini (NM) T (NM) 1 (N) 
SPECIAL:NAME:ResourceType void setMaxUnits(BigDecimal value): set (V)  | max (NM) units (N) 	++ :: [ big (NM) decimal (N) - value (NI) ] :: resource (NM) type (N) 
ENDS_WITH_ED:NAME:void actionPerformed(ActionEvent evt): handle (V) | action (NM) performed (N) 	++ :: [ action (NM) event (NI) - evt (N) ] :: ANONYMOUS (N)  :: void (N) 
SPECIAL:NAME:Action void setEnabled(boolean b): set (V)  | enabled (N) 	++ :: [ boolean (N) - b (N) ] :: action (N) 
SPECIAL:NAME:TestImageTag2 void testImagePageTitleKeyAlternateBundle_fr(): test (VI)  | image (NM) page (NM) title (NM) key (NM) alternate (NM) bundle (NM) fr (N) 	++ :: test (NM) image (NM) tag (NM) 2 (N) 
BASE_VERB:NAME:CommunicationImpl void postMessage(String message): post (V)  | EQUIV[message (NI) , [ string (NI) - message (NI) ]]	++ :: communication (NM) impl (NI) 
SPECIAL:NAME:PostgresAdapterGUI Object doOperation(Object values): do (VI)  | operation (N) 	++ :: [ object (NI) - values (N) ] :: object (NI)  :: postgres (NM) adapter (NM) GUI (N) 
SPECIAL:NAME:BaseFont void setName(String n): set (V)  | name (NI) 	++ :: [ string (NI) - n (N) ] :: base (NM) font (N) 
SPECIAL:CLAS:void execute(): execute (VI)  | ANONYMOUS (N) 	++
CONSTRUCTOR:NAME:ClientTransceiver ClientTransceiver ClientTransceiver(double sender):  | client (NM) transceiver (N) 	++ :: [ double (N) - sender (N) ]
SPECIAL:NAME:StyleSheetRenderState Font getFont(): get (V)  | font (N) 	++ :: font (N)  :: style (NM) sheet (NM) render (NM) state (N) 
SPECIAL:FORM:TestRunner void print(TestResult result): print (V)  | [ test (NM) result (N) - result (N) ]	++ :: test (NM) runner (N) 
SPECIAL:NAME:MockHttpServletRequest String getAuthType(): get (V)  | auth (NM) type (N) 	++ :: string (NI)  :: mock (NM) http (NM) servlet (NM) request (N) 
BASE_VERB:NAME:CallData boolean secureTransfer(): secure (V)  | transfer (N) 	++ :: boolean (N)  :: call (NM) data (NI) 
ENDS_WITH_ED:NAME:ReallyPrintActionListener void actionPerformed(ActionEvent arg0): handle (V) | action (NM) performed (N) 	++ :: [ action (NM) event (NI) - arg (NM) 0 (N) ] :: really (NM) print (NM) action (NM) listener (N)  :: void (N) 
SPECIAL:NAME:AbstractTabItem TabItemLoadHandler getTabItemLoadHandlerNewInstance(): get (V)  | tab (NM) item (NM) load (NM) handler (NM) new (NM) instance (NI) 	++ :: tab (NM) item (NM) load (NM) handler (N)  :: abstract (NM) tab (NM) item (NI) 
BASE_VERB:NAME:SpnegoTAI TAIResult negotiateValidateandEstablishTrust(HttpServletRequest req, HttpServletResponse resp): negotiate (V)  | validateand (NM) establish (NM) trust (N) 	++ :: [ http (NM) servlet (NM) request (N) - req (N) ] :: [ http (NM) servlet (NM) response (N) - resp (N) ] :: TAI (NM) result (N)  :: spnego (NM) TAI (N) 
CONSTRUCTOR:NAME:WatchFolder WatchFolder WatchFolder(String title, String description):  | watch (NM) folder (N) 	++ :: [ string (NI) - title (N) ] :: [ string (NI) - description (NI) ]
BASE_VERB:FORM:Console_Client void setup(String url_naming, String url_interface, String url_lookup, String url_factory, boolean exit_on_closing): setup (V)  | [ string (NI) - url (NM) naming (N) ]	++ :: [ string (NI) - url (NM) interface (NI) ] :: [ string (NI) - url (NM) lookup (N) ] :: [ string (NI) - url (NM) factory (N) ] :: console (NM) client (N)  :: [ boolean (N) - exit (NM) on (NM) closing (N) ]
SPECIAL:NAME:ZipArchive void writeLocalHeader(ZipMember zmember): write (V)  | local (NM) header (N) 	++ :: [ zip (NM) member (N) - zmember (N) ] :: zip (NM) archive (N) 
NOUN_PHRASE:NAME:Compute static int randomInt(int maxValue): get (V) | random (NM) int (N) 	++ :: [ int (N) - max (NM) value (NI) ] :: compute (N)  :: int (N) 
SPECIAL:FORM:VendorEJB String ejbCreate(VendorView vendor, AddressView shipToView, AddressView remitToView, AddressView mailToView, PhoneView phoneView, PhoneView faxView, WebSiteView websiteView): ejb (PRE) create (V)  | [ vendor (NM) view (NI) - vendor (N) ]	++ :: [ address (NM) view (NI) - ship (NM) to (NM) view (NI) ] :: [ address (NM) view (NI) - remit (NM) to (NM) view (NI) ] :: [ address (NM) view (NI) - mail (NM) to (NM) view (NI) ] :: [ phone (NM) view (NI) - phone (NM) view (NI) ] :: [ phone (NM) view (NI) - fax (NM) view (NI) ] :: [ web (NM) site (NM) view (NI) - website (NM) view (NI) ] :: vendor (NM) EJB (N)  :: string (NI) 
ENDS_WITH_ED:NAME:ObjManager static boolean dynamicallyGenerated(char c): handle (V) | dynamically (NM) generated (N) 	++ :: [ char (N) - c (N) ] :: obj (NM) manager (N)  :: boolean (N) 
SPECIAL:NAME:AbstractActivity String getActor(): get (V)  | actor (N) 	++ :: string (NI)  :: abstract (NM) activity (N) 
VOID_NP:NAME:CreateNodeWizardQuitListener void wizardHasQuit(Object obj): handle (V) | wizard (NM) has (NM) quit (N) 	++ :: [ object (NI) - obj (NI) ] :: create (NM) node (NM) wizard (NM) quit (NM) listener (N)  :: void (N) 
SPECIAL:NAME:DatabaseInitWizard void getParams(): get (V)  | params (N) 	++ :: database (NM) init (NM) wizard (N) 
SPECIAL:NAME:Argument ClientPortPropertiesArray getClientPortPropertiesArrayVal(): get (V)  | client (NM) port (NM) properties (NM) array (NM) val (NI) 	++ :: client (NM) port (NM) properties (NM) array (N)  :: argument (N) 
SPECIAL:NAME:cycle String getCONDITION_TYPE(): get (V)  | CONDITION (NM) TYPE (N) 	++ :: string (NI)  :: cycle (N) 
SPECIAL:NAME:X_C_Charge POInfo initPO(Properties ctx): init (V)  | PO (N) 	++ :: [ properties (N) - ctx (N) ] :: PO (NM) info (NI)  :: X (NM) C (NM) charge (N) 
BASE_VERB:NAME:MTOMFile static String generatePrefix(String namespace): generate (V)  | prefix (N) 	++ :: [ string (NI) - namespace (N) ] :: string (NI)  :: MTOM (NM) file (NI) 
SPECIAL:NAME:PackInfo File getFile(PackFile packFile): get (V)  | EQUIV[file (NI) , [ pack (NM) file (NI) - pack (NM) file (NI) ]]	++ :: file (NI)  :: pack (NM) info (NI) 
SPECIAL:NAME:LookupInterface String getDescription(): get (V)  | description (NI) 	++ :: string (NI)  :: lookup (NM) interface (NI) 
ENDS_WITH_ED:NAME:Frame3_jMenuBefore_menuAdapter void menuDeselected(MenuEvent e): handle (V) | menu (NM) deselected (N) 	++ :: [ menu (NM) event (NI) - e (N) ] :: frame (NM) 3 (NM) j (NM) menu (NM) before (NM) menu (NM) adapter (NI)  :: void (N) 
CONSTRUCTOR:NAME:DataSet DataSet DataSet(Datum list, Plugin creator):  | data (NM) set (N) 	++ :: [ datum (N) - list (N) ] :: [ plugin (N) - creator (N) ]
SPECIAL:NAME:PerformanceChartProcessor Log getLog(): get (V)  | log (N) 	++ :: log (N)  :: performance (NM) chart (NM) processor (N) 
VOID_NP:NAME:void messageQueued(Message message): handle (V) | message (NM) queued (N) 	++ :: [ message (NI) - message (NI) ] :: ANONYMOUS (N)  :: void (N) 
CONSTRUCTOR:NAME:ActionMenuItem ActionMenuItem ActionMenuItem(String text, int i):  | action (NM) menu (NM) item (NI) 	++ :: [ string (NI) - text (NI) ] :: [ int (N) - i (N) ]
CONSTRUCTOR:NAME:MemoryResultSet MemoryResultSet MemoryResultSet():  | memory (NM) result (NM) set (N) 	++
SPECIAL:NAME:BuildAssertionException Throwable getJUnitLink(): get (V)  | J (NM) unit (NM) link (N) 	++ :: throwable (N)  :: build (NM) assertion (NM) exception (N) 
SPECIAL:NAME:CheckBoxMenuItemDeselectedEvent String getTriggerSubject(): get (V)  | trigger (NM) subject (N) 	++ :: string (NI)  :: check (NM) box (NM) menu (NM) item (NM) deselected (NM) event (NI) 
BASE_VERB:NAME:Model byte unwrapByte(Object wrapper): unwrap (V)  | byte (N) 	++ :: [ object (NI) - wrapper (NI) ] :: byte (N)  :: model (NI) 
SPECIAL:NAME:ResourceMesssageFormatExpression void setNullString(String nullString): set (V)  | null (NM) string (NI) 	++ :: [ string (NI) - null (NM) string (NI) ] :: resource (NM) messsage (NM) format (NM) expression (N) 
SPECIAL:FORM:Hugo void run(String argv): run (VI)  | [ string (NI) - argv (N) ]	++ :: hugo (N) 
CONSTRUCTOR:NAME:ResultTypeKvpParser ResultTypeKvpParser ResultTypeKvpParser():  | result (NM) type (NM) kvp (NM) parser (N) 	++
BASE_VERB:NAME:MockRenderContext String encodeURL(String url): encode (V)  | EQUIV[URL (NI) , [ string (NI) - url (NI) ]]	++ :: string (NI)  :: mock (NM) render (NM) context (N) 
ENDS_WITH_ED:NAME:Website SiteFileFolder folderNamed(String aName): handle (V) | folder (NM) named (N) 	++ :: [ string (NI) - a (NM) name (NI) ] :: website (N)  :: site (NM) file (NM) folder (N) 
SPECIAL:NAME:AbstractFloatFormatManager String getFormattedWithTwoDecimals(float value): get (V)  | formatted (N) -- with (P) two (NM) decimals (N) 	++ :: [ float (N) - value (NI) ] :: string (NI)  :: abstract (NM) float (NM) format (NM) manager (N) 
PREP:NAME:ExceptionStatistics String toXML(String exception): convert (V) | to (P) XML (N) 	++ :: [ string (NI) - exception (N) ] :: exception (NM) statistics (N)  :: string (NI) 
CONSTRUCTOR:NAME:EditAction EditAction EditAction(String name):  | edit (NM) action (N) 	++ :: [ string (NI) - name (NI) ]
SPECIAL:NAME:MainFrame JRDesignBand getSelectedBand(): get (V)  | selected (NM) band (N) 	++ :: JR (NM) design (NM) band (N)  :: main (NM) frame (N) 
PREP:NAME:JoinTable String toString(): convert (V) | to (P) string (NI) 	++ :: join (NM) table (N)  :: string (NI) 
ENDS_WITH_ED:NAME:TreePanel void windowClosed(WindowEvent e): handle (V) | window (NM) closed (N) 	++ :: [ window (NM) event (NI) - e (N) ] :: tree (NM) panel (N)  :: void (N) 
CONSTRUCTOR:NAME:XMLAbstraction XMLAbstraction XMLAbstraction():  | XML (NM) abstraction (N) 	++
ENDS_WITH_ED:NAME:void widgetDisposed(DisposeEvent e): handle (V) | widget (NM) disposed (N) 	++ :: [ dispose (NM) event (NI) - e (N) ] :: ANONYMOUS (N)  :: void (N) 
ENDS_WITH_ED:NAME:propertyText void focusLost(FocusEvent fe): handle (V) | focus (NM) lost (N) 	++ :: [ focus (NM) event (NI) - fe (N) ] :: property (NM) text (NI)  :: void (N) 
SPECIAL:NAME:ComponentModel String getDisplayText(Object value): get (V)  | display (NM) text (NI) 	++ :: [ object (NI) - value (NI) ] :: string (NI)  :: component (NM) model (NI) 
SPECIAL:NAME:SimpleAgendaInstance void setCanAdmin(boolean b): set (V)  | can (NM) admin (N) 	++ :: [ boolean (N) - b (N) ] :: simple (NM) agenda (NM) instance (NI) 
SPECIAL:CLAS:ProcessExecutionTransitionFactory static ProcessExecutionTransition findByPrimaryKey(PrimaryKey processExecutionTransitionPk): find (V)  | process (NM) execution (NM) transition (NM) factory (N) -- by (P) EQUIV[primary (NM) key (NI) , [ primary (NM) key (NI) - process (NM) execution (NM) transition (NM) pk (NI) ]]	++ :: process (NM) execution (NM) transition (N) 
SPECIAL:NAME:TridemDatabase int createOrUpdateMedicalReferenceList(Vector v, ConsensusStudy cns): create (V)  | or (NM) update (NM) medical (NM) reference (NM) list (N) 	++ :: [ vector (N) - v (N) ] :: [ consensus (NM) study (N) - cns (N) ] :: int (N)  :: tridem (NM) database (N) 
SPECIAL:NAME:BufferedImage void setRGB(int x, int y, int argb): set (V)  | RGB (N) 	++ :: [ int (N) - x (N) ] :: [ int (N) - y (N) ] :: [ int (N) - argb (N) ] :: buffered (NM) image (N) 
SPECIAL:NAME:Rule void addAction(RuleAction act): add (V)  | EQUIV[action (N) , [ rule (NM) action (N) - act (N) ]]	++ :: rule (N) 
V_3P_IRR:NAME:ToggleGridCommand boolean isExecutable(DrawingView aView): is (V)  | executable (N) 	++ :: [ drawing (NM) view (NI) - a (NM) view (NI) ] :: boolean (N)  :: toggle (NM) grid (NM) command (N) 
SPECIAL:NAME:UserSCOSessionDataEntityCMP String getSessionTime(): get (V)  | session (NM) time (N) 	++ :: string (NI)  :: user (NM) SCO (NM) session (NM) data (NM) entity (NM) CMP (N) 
SPECIAL:NAME:SecurityDescriptorTestCase void testConstructor(): test (VI)  | constructor (N) 	++ :: security (NM) descriptor (NM) test (NM) case (N) 
ENDS_WITH_ED:NAME:DefaultListEditorHandler boolean buttonClicked(int button): handle (V) | button (NM) clicked (N) 	++ :: [ int (N) - button (N) ] :: default (NM) list (NM) editor (NM) handler (N)  :: boolean (N) 
SPECIAL:NAME:DbfProjectGeneralPropertyPage void createIsDbfProjectGroup(Composite parent): create (V)  | is (NM) dbf (NM) project (NM) group (N) 	++ :: [ composite (N) - parent (N) ] :: dbf (NM) project (NM) general (NM) property (NM) page (N) 
BASE_VERB:NAME:SchedulerEngine void buildExtraSchedules(List<Schedule> schedules, Schedule schedule, List<Map.Entry<CourseDescriptor,SortedSet<UniqueSection>>> extra, int index): build (V)  | EQUIV[extra (NM) schedules (N) , [ list (NM) schedule (N) - schedules (N) ]]	++ :: [ schedule (N) - schedule (N) ] :: [ sorted (NM) set (NM) unique (NM) section (N) - extra (N) ] :: [ int (N) - index (NI) ] :: scheduler (NM) engine (N) 
SPECIAL:NAME:FilePlatformContext Platform getPlatform(): get (V)  | platform (N) 	++ :: platform (N)  :: file (NM) platform (NM) context (N) 
SPECIAL:NAME:BashFormatter BashFormatter addObjectProperties(Object o, String properties): add (V)  | EQUIV[object (NM) properties (N) , [ string (NI) - properties (N) ]]	++ :: [ object (NI) - o (N) ] :: bash (NM) formatter (N)  :: bash (NM) formatter (N) 
BASE_VERB:NAME:GraphEltSet void clearAll(): clear (V)  | all (DT) 	++ :: graph (NM) elt (NM) set (N) 
ENDS_WITH_ED:NAME:T4PTreeComponent void mouseClicked(MouseEvent mouseEvent): handle (V) | mouse (NM) clicked (N) 	++ :: [ mouse (NM) event (NI) - mouse (NM) event (NI) ] :: T (NM) 4 (NM) P (NM) tree (NM) component (N)  :: void (N) 
BASE_VERB:FORM:CallbackHandler void handle(Callback callbacks): handle (VI)  | [ callback (N) - callbacks (N) ]	++ :: callback (NM) handler (N) 
SPECIAL:NAME:ZScoreTest void testStdev(): test (VI)  | stdev (N) 	++ :: Z (NM) score (NM) test (N) 
CONSTRUCTOR:NAME:FileNameMatcher FileNameMatcher FileNameMatcher(Collection<String> postfixes):  | file (NM) name (NM) matcher (N) 	++ :: [ collection (NM) string (NI) - postfixes (N) ]
SPECIAL:NAME:BacteroidetesChlorobiImpl void setFrameType(String value): set (V)  | frame (NM) type (N) 	++ :: [ string (NI) - value (NI) ] :: bacteroidetes (NM) chlorobi (NM) impl (NI) 
SPECIAL:FORM:KeyStore void load(InputStream stream, char password): load (V)  | [ input (NM) stream (NI) - stream (NI) ]	++ :: [ char (N) - password (N) ] :: key (NM) store (N) 
BASE_VERB:NAME:DocumentHandler void importStyle(String uri, SACMediaList media, String defaultNamespaceURI): import (V)  | style (N) 	++ :: [ string (NI) - uri (NI) ] :: [ SAC (NM) media (NM) list (N) - media (N) ] :: [ string (NI) - default (NM) namespace (NM) URI (NI) ] :: document (NM) handler (N) 
BASE_VERB:NAME:SatherCodeGenerator void mapTreeVariable(AlternativeElement e, String name): map (V)  | tree (NM) variable (N) 	++ :: [ alternative (NM) element (NI) - e (N) ] :: [ string (NI) - name (NI) ] :: sather (NM) code (NM) generator (N) 
SPECIAL:NAME:AXmodelElementMdrImpl String getTaggedValue(String tag, String dflt): get (V)  | tagged (NM) value (NI) 	++ :: [ string (NI) - tag (NI) ] :: [ string (NI) - dflt (N) ] :: string (NI)  :: A (NM) xmodel (NM) element (NM) mdr (NM) impl (NI) 
SPECIAL:NAME:JTree Object getLastSelectedPathComponent(): get (V)  | last (DT) selected (NM) path (NM) component (N) 	++ :: object (NI)  :: J (NM) tree (NI) 
SPECIAL:NAME:ObjectDownloadGa void setPictureResize(String value): set (V)  | picture (NM) resize (N) 	++ :: [ string (NI) - value (NI) ] :: object (NM) download (NM) ga (N) 
SPECIAL:NAME:BuPreferences Color getColorProperty(String _key): get (V)  | color (NM) property (N) 	++ :: [ string (NI) - key (NI) ] :: color (N)  :: bu (NM) preferences (N) 
SPECIAL:FORM:MiniShell void init(JFrame f, int w, int h, String title, ProcessIOPane pip, boolean floating): init (V)  | [ J (NM) frame (N) - f (N) ]	++ :: [ int (N) - w (N) ] :: [ int (N) - h (N) ] :: [ string (NI) - title (N) ] :: [ process (NM) IO (NM) pane (N) - pip (N) ] :: mini (NM) shell (N)  :: [ boolean (N) - floating (N) ]
BASE_VERB:NAME:PolygonBuilder List buildMaximalEdgeRings(Collection dirEdges): build (V)  | maximal (NM) edge (NM) rings (N) 	++ :: [ collection (N) - dir (NM) edges (N) ] :: list (N)  :: polygon (NM) builder (N) 
NOUN_PHRASE:NAME:RuleBodyBuilder Term newVariable(): get (V) | new (NM) variable (N) 	++ :: rule (NM) body (NM) builder (N)  :: term (N) 
BASE_VERB:NAME:BulkTestSuiteMaker static BulkTest makeFirstTestCase(Class c): make (V)  | first (NM) test (NM) case (N) 	++ :: [ class (NI) - c (N) ] :: bulk (NM) test (N)  :: bulk (NM) test (NM) suite (NM) maker (N) 
SPECIAL:NAME:BeanCreationException String getResourceDescription(): get (V)  | resource (NM) description (NI) 	++ :: string (NI)  :: bean (NM) creation (NM) exception (N) 
SPECIAL:CLAS:MapBinaryHeapTest void testUpdate(): test (VI) update (V)  | map (NM) binary (NM) heap (NM) test (N) 	++
BASE_VERB:FORM:EventDispatcher static void unsubscribe(EventSubscriber subscriber): unsubscribe (V)  | [ event (NM) subscriber (N) - subscriber (N) ]	++ :: event (NM) dispatcher (N) 
EVENT_PARAM:NAME:JInputMonitor void dispatchInputPressedEvent(SystemInputEvent event): handle (V) | dispatch (NM) input (NM) pressed (NM) event (NI) 	++ :: [ system (NM) input (NM) event (NI) - event (NI) ] :: J (NM) input (NM) monitor (N)  :: void (N) 
SPECIAL:CLAS:Generator void end(): end (V)  | generator (N) 	++
SPECIAL:NAME:Maps static Object addWeak(Map weakMap, Object key, Object value): add (V)  | weak (N) 	++ :: [ map (N) - weak (NM) map (N) ] :: [ object (NI) - key (NI) ] :: [ object (NI) - value (NI) ] :: object (NI)  :: maps (N) 
SPECIAL:NAME:Arbeitnehmer void setSzU2(String s): set (V)  | sz (NM) U (N) 2 (D) 	++ :: [ string (NI) - s (N) ] :: arbeitnehmer (N) 
BASE_VERB:NAME:Formatter void updateOrInsertOrDelete(): update (V)  | or (NM) insert (NM) or (NM) delete (N) 	++ :: formatter (N) 
BASE_VERB:NAME:Prayer_HolyWind int maxRange(): max (V)  | range (N) 	++ :: int (N)  :: prayer (NM) holy (NM) wind (N) 
SPECIAL:CLAS:AlgorithmIterator AlgorithmIterator clone(): clone (V)  | algorithm (NM) iterator (N) 	++ :: algorithm (NM) iterator (N) 
BASE_VERB:FORM:Factory static VisibilityAttribute parse(XMLStreamReader sr, XmlOptions options): parse (V)  | [ XML (NM) stream (NM) reader (N) - sr (N) ]	++ :: [ xml (NM) options (N) - options (N) ] :: factory (N)  :: visibility (NM) attribute (N) 
SPECIAL:NAME:ARBImaging static void glGetSeparableFilter(int target, int format, int type, DoubleBuffer row, IntBuffer column, ShortBuffer span): gl (PRE) get (V)  | separable (NM) filter (N) 	++ :: [ int (N) - target (N) ] :: [ int (N) - format (NI) ] :: [ int (N) - type (N) ] :: [ double (NM) buffer (NI) - row (N) ] :: [ int (NM) buffer (NI) - column (N) ] :: [ short (NM) buffer (NI) - span (N) ] :: ARB (NM) imaging (N) 
ENDS_WITH_ED:NAME:IvjEventHandler void actionPerformed(ActionEvent e): handle (V) | action (NM) performed (N) 	++ :: [ action (NM) event (NI) - e (N) ] :: ivj (NM) event (NM) handler (N)  :: void (N) 
SPECIAL:NAME:Requirement int getEnteredBy(): get (V)  | entered (N) by (NM) 	++ :: int (N)  :: requirement (N) 
SPECIAL:NAME:InReadObjectPastDefaultsRemoteDidNotUseWOState void readData(InputStreamHook stream): read (V)  | data (NI) 	++ :: [ input (NM) stream (NM) hook (N) - stream (NI) ] :: in (NM) read (NM) object (NM) past (NM) defaults (NM) remote (NM) did (NM) not (DT) use (NM) WO (NM) state (N) 
CONSTRUCTOR:NAME:AmbiguousTableNameException AmbiguousTableNameException AmbiguousTableNameException(String msg):  | ambiguous (NM) table (NM) name (NM) exception (N) 	++ :: [ string (NI) - msg (NI) ]
SPECIAL:NAME:ElementFactory void setBorderTopLeftRadiusWidth(Float borderTopLeftRadiusWidth): set (V)  | border (NM) top (NM) left (NM) radius (NM) width (N) 	++ :: [ float (N) - border (NM) top (NM) left (NM) radius (NM) width (N) ] :: element (NM) factory (N) 
SPECIAL:NAME:NetRexxC void setTrace(String trace): set (V)  | trace (N) 	++ :: [ string (NI) - trace (N) ] :: net (NM) rexx (NM) C (N) 
BASE_VERB:NAME:FileNodeShape boolean drawContentBorder(): draw (V)  | content (NM) border (N) 	++ :: boolean (N)  :: file (NM) node (NM) shape (N) 
CONSTRUCTOR:NAME:SVNCleanupCommand SVNCleanupCommand SVNCleanupCommand():  | SVN (NM) cleanup (NM) command (N) 	++
V_3P_IRR:NAME:TimeSlotAttributeTableModel boolean isCellEditable(int row, int columnNo): is (V)  | cell (NM) editable (N) 	++ :: [ int (N) - row (N) ] :: [ int (N) - column (NM) no (DT) ] :: boolean (N)  :: time (NM) slot (NM) attribute (NM) table (NM) model (NI) 
SPECIAL:NAME:DBFKRelation boolean getAutoRetrieve(): get (V)  | auto (NM) retrieve (N) 	++ :: boolean (N)  :: DBFK (NM) relation (N) 
SPECIAL:NAME:VirtFsRandomAccessStorage void writeChar(int v): write (V)  | char (N) 	++ :: [ int (N) - v (N) ] :: virt (NM) fs (NM) random (NM) access (NM) storage (N) 
SPECIAL:NAME:CachedMapAdapter int getMaxExpirationTime(): get (V)  | max (NM) expiration (NM) time (N) 	++ :: int (N)  :: cached (NM) map (NM) adapter (NI) 
ENDS_WITH_ED:NAME:LoaderDelegate void dbEntityAdded(DbEntity entity): handle (V) | db (PRE) entity (NM) added (N) 	++ :: [ db (NM) entity (N) - entity (N) ] :: loader (NM) delegate (N)  :: void (N) 
BASE_VERB:NAME:AESVectorFileTest TestResult performTestsFromZipFile(File zfile): perform (VI)  | tests (N) -- from (P) EQUIV[zip (NM) file (NI) , [ file (NI) - zfile (N) ]]	++ :: test (NM) result (N)  :: AES (NM) vector (NM) file (NM) test (N) 
SPECIAL:NAME:HwProduct void setManufacturerId(int v): set (V)  | manufacturer (NM) id (NI) 	++ :: [ int (N) - v (N) ] :: hw (NM) product (N) 
SPECIAL:NAME:Sinavi2TableauResultatTotal int getRowCount(): get (V)  | row (NM) count (N) 	++ :: int (N)  :: sinavi (NM) 2 (NM) tableau (NM) resultat (NM) total (N) 
NOUN_PHRASE:NAME:IMatrix4 float determinant(): get (V) | determinant (N) 	++ :: I (NM) matrix (NM) 4 (N)  :: float (N) 
SPECIAL:NAME:FlowLayout void setVgap(int vgap): set (V)  | vgap (N) 	++ :: [ int (N) - vgap (N) ] :: flow (NM) layout (N) 
BASE_VERB:NAME:FontTest void paintTextLayoutTest(Graphics g): paint (V)  | text (NM) layout (NM) test (N) 	++ :: [ graphics (N) - g (N) ] :: font (NM) test (N) 
SPECIAL:NAME:PropertySetterException String getMessage(): get (V)  | message (NI) 	++ :: string (NI)  :: property (NM) setter (NM) exception (N) 
BASE_VERB:NAME:_DelAccountCompHomeStub void complete_component_configuration(boolean _star_a0): complete (V)  | component (NM) configuration (NI) 	++ :: [ boolean (N) - star (NM) a (NM) 0 (N) ] :: [ boolean (N) - star (NM) a (NM) 0 (N) ] :: del (NM) account (NM) comp (NM) home (NM) stub (N) 
V_3P_IRR:NAME:Node boolean isTerminal(): is (V)  | terminal (N) 	++ :: boolean (N)  :: node (NI) 
SPECIAL:NAME:SAXUnmarshallerHandlerImpl String getNamespaceURI(String prefix): get (V)  | namespace (NM) URI (NI) 	++ :: [ string (NI) - prefix (N) ] :: string (NI)  :: SAX (NM) unmarshaller (NM) handler (NM) impl (NI) 
SPECIAL:NAME:SiteLoc void setOnkeypress(String _Onkeypress): set (V)  | onkeypress (N) 	++ :: [ string (NI) - onkeypress (N) ] :: site (NM) loc (N) 
SPECIAL:NAME:CartesianInequalityGraph void setDefaultGraphElements(): set (V)  | default (NM) graph (NM) elements (N) 	++ :: cartesian (NM) inequality (NM) graph (N) 
ING_VERB:NAME:XSBCReader void readingAttributes(PushbackInputStream pis, BlockDataInputStream dis): reading (V)  | attributes (N) 	++ :: [ pushback (NM) input (NM) stream (NI) - pis (N) ] :: [ block (NM) data (NM) input (NM) stream (NI) - dis (N) ] :: XSBC (NM) reader (N) 
V_3P_IRR:NAME:frmCollection boolean areEnteredValuesValid(): are (V)  | entered (NM) values (NM) valid (N) 	++ :: boolean (N)  :: frm (NM) collection (N) 
V_3PS:FORM:RuleNode boolean equals(Object obj): equals (V)  | [ object (NI) - obj (NI) ]	++ :: rule (NM) node (NI)  :: boolean (N) 
ENDS_WITH_ED:NAME:void widgetSelected(SelectionEvent e): handle (V) | widget (NM) selected (N) 	++ :: [ selection (NM) event (NI) - e (N) ] :: ANONYMOUS (N)  :: void (N) 
BASE_VERB:FORM:StrictMath static float abs(float f): abs (V)  | [ float (N) - f (N) ]	++ :: strict (NM) math (N)  :: float (N) 
SPECIAL:NAME:MenuItemChosen String getMenuItem(): get (V)  | menu (NM) item (NI) 	++ :: string (NI)  :: menu (NM) item (NM) chosen (N) 
ENDS_WITH_ED:NAME:void menuDeselected(MenuEvent evt): handle (V) | menu (NM) deselected (N) 	++ :: [ menu (NM) event (NI) - evt (N) ] :: ANONYMOUS (N)  :: void (N) 
SPECIAL:FORM:NewOrderSingle Account get(Account value): get (V)  | [ account (N) - value (NI) ]	++ :: new (NM) order (NM) single (N)  :: account (N) 
PREP:NAME:PRED_display_bracketed_tree2_2 String toString(): convert (V) | to (P) string (NI) 	++ :: PRED (NM) display (NM) bracketed (NM) tree (NM) 2 (NM) 2 (N)  :: string (NI) 
SPECIAL:NAME:DefaultTestSet FreeFallTestState getFallThroughValley2(): get (V)  | fall (NM) through (NM) valley (N) 2 (D) 	++ :: free (NM) fall (NM) test (NM) state (N)  :: default (NM) test (NM) set (N) 
SPECIAL:NAME:GradingScaleMapperService void doCronJob(): do (VI)  | cron (NM) job (N) 	++ :: grading (NM) scale (NM) mapper (NM) service (N) 
SPECIAL:NAME:OaiRepositoryCoreImpl String getBaseUrl(): get (V)  | base (NM) url (NI) 	++ :: string (NI)  :: oai (NM) repository (NM) core (NM) impl (NI) 
CONSTRUCTOR:NAME:PovClipseToken PovClipseToken PovClipseToken(Object data, int tokenType, int offset, int length):  | pov (NM) clipse (NM) token (N) 	++ :: [ object (NI) - data (NI) ] :: [ int (N) - token (NM) type (N) ] :: [ int (N) - offset (N) ] :: [ int (N) - length (N) ]
NOUN_PHRASE:NAME:Toadstool String racialCategory(): get (V) | racial (NM) category (N) 	++ :: toadstool (N)  :: string (NI) 
SPECIAL:NAME:URIMapper Document getDocument(): get (V)  | document (NI) 	++ :: document (NI)  :: URI (NM) mapper (N) 
SPECIAL:CLAS:ServletOutputStream void println(): println (V)  | servlet (NM) output (NM) stream (NI) 	++
ENDS_WITH_ED:NAME:CloseDialogListener boolean noneSelected(): handle (V) | none (DT) selected (N) 	++ :: close (NM) dialog (NM) listener (N)  :: boolean (N) 
SPECIAL:NAME:MemoriesPanel Dimension getPreferredSize(): get (V)  | preferred (NM) size (N) 	++ :: dimension (N)  :: memories (NM) panel (N) 
ENDS_WITH_ED:NAME:void actionPerformed(ActionEvent evt): handle (V) | action (NM) performed (N) 	++ :: [ action (NM) event (NI) - evt (N) ] :: ANONYMOUS (N)  :: void (N) 
SPECIAL:NAME:ConfigurationWriter void writeJarOptions(String inputEntryOptionName, String outputEntryOptionName, ClassPath classPath): write (V)  | jar (NM) options (N) 	++ :: [ string (NI) - input (NM) entry (NM) option (NM) name (NI) ] :: [ string (NI) - output (NM) entry (NM) option (NM) name (NI) ] :: [ class (NM) path (NI) - class (NM) path (NI) ] :: configuration (NM) writer (N) 
BASE_VERB:NAME:ID3v2Frame void parseData(byte data): parse (V)  | EQUIV[data (NI) , [ byte (N) - data (NI) ]]	++ :: ID (NM) 3 (NM) v (NM) 2 (NM) frame (N) 
SPECIAL:NAME:NVRegisterCombiners static void glGetCombinerOutputParameterNV(int stage, int portion, int pname, FloatBuffer params): gl (PRE) get (V)  | combiner (NM) output (NM) parameter (NM) NV (N) 	++ :: [ int (N) - stage (N) ] :: [ int (N) - portion (N) ] :: [ int (N) - pname (N) ] :: [ float (NM) buffer (NI) - params (N) ] :: NV (NM) register (NM) combiners (N) 
CONSTRUCTOR:NAME:ShoreParserException ShoreParserException ShoreParserException(String msg):  | shore (NM) parser (NM) exception (N) 	++ :: [ string (NI) - msg (NI) ]
SPECIAL:NAME:FilterMaster String constructTargetFilename(String sourceMask, String filename, String pattern): construct (V)  | EQUIV[target (NM) filename (N) , [ string (NI) - filename (N) ]]	++ :: [ string (NI) - source (NM) mask (N) ] :: [ string (NI) - pattern (N) ] :: string (NI)  :: filter (NM) master (N) 
BASE_VERB:NAME:TeXIOHandler ReadInput defaultRead(int num): default (V)  | read (N) 	++ :: [ int (N) - num (NI) ] :: read (NM) input (NI)  :: te (NM) XIO (NM) handler (N) 
BASE_VERB:NAME:VFSFileMonitor void stopMonitor(): stop (VI)  | monitor (N) 	++ :: VFS (NM) file (NM) monitor (N) 
ENDS_WITH_ED:NAME:void multiCallMetaMergeEnded(MetaEvent ce): handle (V) | multi (NM) call (NM) meta (NM) merge (NM) ended (N) 	++ :: [ meta (NM) event (NI) - ce (N) ] :: ANONYMOUS (N)  :: void (N) 
BASE_VERB:NAME:ParticleSystem void updateLife(float dt): update (V)  | life (N) 	++ :: [ float (N) - dt (N) ] :: particle (NM) system (N) 
SPECIAL:NAME:GreaterEqualPtg int getSize(): get (V)  | size (N) 	++ :: int (N)  :: greater (NM) equal (NM) ptg (N) 
SPECIAL:NAME:NodeEventsAction ActionForward doView(ActionForm form, ActionContext context): do (VI)  | view (NI) 	++ :: [ action (NM) form (N) - form (N) ] :: [ action (NM) context (N) - context (N) ] :: action (NM) forward (N)  :: node (NM) events (NM) action (N) 
SPECIAL:NAME:DateBase int getDayOfWeek(): get (V)  | day (N) -- of (P) week (N) 	++ :: int (N)  :: date (NM) base (N) 
SPECIAL:NAME:HttpServletRequestWrapper Cookie getCookies(): get (V)  | cookies (N) 	++ :: cookie (N)  :: http (NM) servlet (NM) request (NM) wrapper (NI) 
V_3P_IRR:NAME:NewOrderList boolean isSetFutSettDate(): is (V)  | set (NM) fut (NM) sett (NM) date (N) 	++ :: boolean (N)  :: new (NM) order (NM) list (N) 
SPECIAL:NAME:STArrIntegerWTON void testDefaultContainsTwo(): test (VI)  | default (NM) contains (NM) two (N) 	++ :: ST (NM) arr (NM) integer (NM) WTON (N) 
SPECIAL:NAME:PNGCodec void loadImageHeader(): load (V)  | image (NM) header (N) 	++ :: PNG (NM) codec (N) 
SPECIAL:NAME:XmlTestCase void setPage(String s): set (V)  | page (N) 	++ :: [ string (NI) - s (N) ] :: xml (NM) test (NM) case (N) 
SPECIAL:NAME:XULInput List getAnnotatedAttributes(): get (V)  | annotated (NM) attributes (N) 	++ :: list (N)  :: XUL (NM) input (NI) 
CONSTRUCTOR:NAME:QueryParser QueryParser QueryParser(CharStream stream):  | query (NM) parser (N) 	++ :: [ char (NM) stream (NI) - stream (NI) ]
SPECIAL:NAME:JMacroEditor void enableMacroMenuItemActionPerformed(ActionEvent evt): enable (VI)  | macro (NM) menu (NM) item (NM) action (NM) performed (N) 	++ :: [ action (NM) event (NI) - evt (N) ] :: J (NM) macro (NM) editor (N) 
NOUN_PHRASE:NAME:LocalDateTime int size(): get (V) | size (N) 	++ :: local (NM) date (NM) time (N)  :: int (N) 
BASE_VERB:NAME:SchemaBuilderImpl ParsedElementAnnotation makeElementAnnotation(): make (V)  | element (NM) annotation (N) 	++ :: parsed (NM) element (NM) annotation (N)  :: schema (NM) builder (NM) impl (NI) 
SPECIAL:NAME:IntegerType Type getCanonic(): get (V)  | canonic (N) 	++ :: type (N)  :: integer (NM) type (N) 
SPECIAL:NAME:Define String getType(): get (V)  | type (N) 	++ :: string (NI)  :: define (N) 
SPECIAL:NAME:SchemaAttributeTest void testGetNamespacePrefix2(): test (VI) get (V)  | namespace (NM) prefix (N) 2 (D) 	++ :: schema (NM) attribute (NM) test (N) 
V_3P_IRR:NAME:X_C_DocType boolean isSOTrx(): is (V)  | SO (NM) trx (N) 	++ :: boolean (N)  :: X (NM) C (NM) doc (NM) type (N) 
BASE_VERB:NAME:exprField void extractPrototypesRecurse(Vector list): extract (V)  | prototypes (NM) recurse (N) 	++ :: [ vector (N) - list (N) ] :: expr (NM) field (N) 
SPECIAL:NAME:LidoGrapheLignedeau void setYAjuste(boolean v): set (V)  | Y (NM) ajuste (N) 	++ :: [ boolean (N) - v (N) ] :: lido (NM) graphe (NM) lignedeau (N) 
PREP:NAME:void onFailure(Throwable caught): handle (V) | on (NM) failure (N) 	++ :: [ throwable (N) - caught (N) ] :: ANONYMOUS (N)  :: void (N) 
BASE_VERB:NAME:ImageCanvas void adjustSourceRect(double newMag, int x, int y): adjust (V)  | source (NM) rect (N) 	++ :: [ double (N) - new (NM) mag (N) ] :: [ int (N) - x (N) ] :: [ int (N) - y (N) ] :: image (NM) canvas (N) 
ENDS_WITH_ED:NAME:TableSorter void tableChanged(TableModelEvent e): handle (V) | table (NM) changed (N) 	++ :: [ table (NM) model (NM) event (NI) - e (N) ] :: table (NM) sorter (N)  :: void (N) 
BASE_VERB:NAME:SpotLiteScutilSpotter String askScutil(): ask (V)  | scutil (N) 	++ :: string (NI)  :: spot (NM) lite (NM) scutil (NM) spotter (N) 
BASE_VERB:CLAS:MinimalBindings boolean backtrack(): backtrack (V)  | minimal (NM) bindings (N) 	++ :: boolean (N) 
SPECIAL:NAME:SimpleLogger void setTimeOn(): set (V)  | time (N) on (NM) 	++ :: simple (NM) logger (N) 
BASE_VERB:CLAS:CompoundFileWriter void close(): close (V)  | compound (NM) file (NM) writer (N) 	++
BASE_VERB:NAME:ExportDisease String parseFile(String html, int depth, HashMap p): parse (V)  | file (NI) 	++ :: [ string (NI) - html (N) ] :: [ int (N) - depth (N) ] :: [ hash (NM) map (N) - p (NI) ] :: string (NI)  :: export (NM) disease (N) 
SPECIAL:NAME:EncoderOwner void setInitScriptLanguage(String isl): set (V)  | init (NM) script (NM) language (N) 	++ :: [ string (NI) - isl (N) ] :: encoder (NM) owner (N) 
CONSTRUCTOR:NAME:AttributeModificationException AttributeModificationException AttributeModificationException():  | attribute (NM) modification (NM) exception (N) 	++
CONSTRUCTOR:NAME:EquationGraphics EquationGraphics EquationGraphics(Graphics2D g):  | equation (NM) graphics (N) 	++ :: [ graphics (NM) 2 (NM) D (N) - g (N) ]
SPECIAL:NAME:ReverseAdapterFactoryContentProvider Object getParent(Object object): get (V)  | parent (N) 	++ :: [ object (NI) - object (NI) ] :: object (NI)  :: reverse (NM) adapter (NM) factory (NM) content (NM) provider (N) 
SPECIAL:NAME:QualificationTypeProxy String getQualificationType(): get (V)  | qualification (NM) type (N) 	++ :: string (NI)  :: qualification (NM) type (NM) proxy (NI) 
SPECIAL:NAME:SBIEConfiguration String getName(): get (V)  | name (NI) 	++ :: string (NI)  :: SBIE (NM) configuration (NI) 
SPECIAL:NAME:OracleStatement int getMaxRows(): get (V)  | max (NM) rows (N) 	++ :: int (N)  :: oracle (NM) statement (NI) 
ENDS_WITH_ED:NAME:ColorPanelNote void actionPerformed(ActionEvent e): handle (V) | action (NM) performed (N) 	++ :: [ action (NM) event (NI) - e (N) ] :: color (NM) panel (NM) note (N)  :: void (N) 
V_3P_IRR:NAME:DefaultSnmpRequestHandler boolean isHandler(int type): is (V)  | handler (N) 	++ :: [ int (N) - type (N) ] :: boolean (N)  :: default (NM) snmp (NM) request (NM) handler (N) 
SPECIAL:NAME:RxTx21SerialPort int getStopBits(StopBits stopBits): get (V)  | EQUIV[stop (NM) bits (N) , [ stop (NM) bits (N) - stop (NM) bits (N) ]]	++ :: int (N)  :: rx (NM) tx (NM) 21 (NM) serial (NM) port (N) 
BASE_VERB:NAME:ClassFilePrinter void visitLookUpSwitchInstruction(ClassFile classFile, MethodInfo methodInfo, CodeAttrInfo codeAttrInfo, int offset, LookUpSwitchInstruction lookUpSwitchInstruction): visit (V)  | EQUIV[look (NM) up (NM) switch (NM) instruction (N) , [ look (NM) up (NM) switch (NM) instruction (N) - look (NM) up (NM) switch (NM) instruction (N) ]]	++ :: [ class (NM) file (NI) - class (NM) file (NI) ] :: [ method (NM) info (NI) - method (NM) info (NI) ] :: [ code (NM) attr (NM) info (NI) - code (NM) attr (NM) info (NI) ] :: [ int (N) - offset (N) ] :: class (NM) file (NM) printer (N) 
SPECIAL:NAME:IGFolderLocalServiceUtil static void addFolderResources(IGFolder folder, String communityPermissions, String guestPermissions): add (V)  | folder (NM) resources (N) 	++ :: [ IG (NM) folder (N) - folder (N) ] :: [ string (NI) - community (NM) permissions (N) ] :: [ string (NI) - guest (NM) permissions (N) ] :: IG (NM) folder (NM) local (NM) service (NM) util (N) 
SPECIAL:NAME:CustomTheme void setWhite(ColorUIResource c): set (V)  | white (N) 	++ :: [ color (NM) UI (NM) resource (N) - c (N) ] :: custom (NM) theme (N) 
SPECIAL:NAME:ViewResolverTests void testInternalResourceViewResolverWithJstlAndContextParam(): test (VI)  | internal (NM) resource (NM) view (NM) resolver (N) -- with (P) jstl (NM) and (NM) context (NM) param (N) 	++ :: view (NM) resolver (NM) tests (N) 
PREP:NAME:AdminHandler void onEvent(Object pEventObject, ITracking pEventTracking): handle (V) | on (NM) event (NI) 	++ :: [ object (NI) - p (NM) event (NM) object (NI) ] :: [ I (NM) tracking (N) - p (NM) event (NM) tracking (N) ] :: admin (NM) handler (N)  :: void (N) 
ENDS_WITH_ED:NAME:ActivityListPanel void componentMoved(DataComponent component): handle (V) | component (NM) moved (N) 	++ :: [ data (NM) component (N) - component (N) ] :: activity (NM) list (NM) panel (N)  :: void (N) 
CONSTRUCTOR:NAME:MessageSentDialog MessageSentDialog MessageSentDialog(Shell parent):  | message (NM) sent (NM) dialog (N) 	++ :: [ shell (N) - parent (N) ]
SPECIAL:NAME:IPainterContext int getWidth(): get (V)  | width (N) 	++ :: int (N)  :: I (NM) painter (NM) context (N) 
BASE_VERB:FORM:PersistentMap Serializable disassemble(CollectionPersister persister): disassemble (V)  | [ collection (NM) persister (N) - persister (N) ]	++ :: persistent (NM) map (N)  :: serializable (N) 
SPECIAL:NAME:OscarEauParametres Double getCoteNappeEauCotePoussee(): get (V)  | cote (NM) nappe (NM) eau (NM) cote (NM) poussee (N) 	++ :: double (N)  :: oscar (NM) eau (NM) parametres (N) 
SPECIAL:NAME:monkeyLibrary int getSurvivalNumber(): get (V)  | survival (NM) number (NI) 	++ :: int (N)  :: monkey (NM) library (N) 
SPECIAL:NAME:FSProcessDescriptorManager Collection getAllProcesses(): get (V)  | all (DT) processes (N) 	++ :: collection (N)  :: FS (NM) process (NM) descriptor (NM) manager (N) 
SPECIAL:NAME:JSPWWindowExitPoint int doStartTag(): do (VI) start (V)  | tag (NI) 	++ :: int (N)  :: JSPW (NM) window (NM) exit (NM) point (N) 
SPECIAL:NAME:TableManager TableElement getElement(String pName): get (V)  | element (NI) 	++ :: [ string (NI) - p (NM) name (NI) ] :: table (NM) element (NI)  :: table (NM) manager (N) 
BASE_VERB:CLAS:SplashWindow void display(): display (V)  | splash (NM) window (N) 	++
SPECIAL:CLAS:NmrExpSeries int compareTo(NmrExpSeries value): compare (V)  | nmr (NM) exp (NM) series (N) -- to (P) [ nmr (NM) exp (NM) series (N) - value (NI) ]	++ :: [ nmr (NM) exp (NM) series (N) - value (NI) ] :: int (N) 
CONSTRUCTOR:NAME:WMLHandler WMLHandler WMLHandler(Location loc):  | WML (NM) handler (N) 	++ :: [ location (NI) - loc (N) ]
SPECIAL:NAME:MacroMolecule String getFieldList(): get (V)  | field (NM) list (N) 	++ :: string (NI)  :: macro (NM) molecule (N) 
V_3P_IRR:NAME:MidiPlayer boolean isMetronomeEnabled(): is (V)  | metronome (NM) enabled (N) 	++ :: boolean (N)  :: midi (NM) player (N) 
CONSTRUCTOR:NAME:SSCheckBox SSCheckBox SSCheckBox():  | SS (NM) check (NM) box (N) 	++
SPECIAL:NAME:FTLib static SimulatorFaultyDelayLE getConnectedGatesInFeedForwardOrder(SimulatorLogicElement inoutels, boolean latchSafe): get (V)  | connected (NM) gates (N) -- in (P) feed (NM) forward (NM) order (N) 	++ :: [ simulator (NM) logic (NM) element (NI) - inoutels (N) ] :: [ boolean (N) - latch (NM) safe (N) ] :: simulator (NM) faulty (NM) delay (NM) LE (N)  :: FT (NM) lib (N) 
SPECIAL:NAME:NoiseGenerator void setFrequency(int f): set (V)  | frequency (N) 	++ :: [ int (N) - f (N) ] :: noise (NM) generator (N) 
SPECIAL:NAME:DateTest void createTestTable(): create (V)  | test (NM) table (N) 	++ :: date (NM) test (N) 
BASE_VERB:FORM:FilterInputStream long skip(long num_bytes): skip (V)  | [ long (N) - num (NM) bytes (NI) ]	++ :: filter (NM) input (NM) stream (NI)  :: long (N) 
CONSTRUCTOR:NAME:PLIVerilogNets PLIVerilogNets PLIVerilogNets(PLIInterface pliIntf, PLIObjectType type, long handle):  | PLI (NM) verilog (NM) nets (N) 	++ :: [ PLI (NM) interface (NI) - pli (NM) intf (N) ] :: [ PLI (NM) object (NM) type (N) - type (N) ] :: [ long (N) - handle (NI) ]
SPECIAL:CLAS:EventTransactionCountsTest void setUp(): set (V) up (VP)  | event (NM) transaction (NM) counts (NM) test (N) 	++
SPECIAL:NAME:SampleGlassPane static SampleGlassPane getInstance(): get (V)  | instance (NI) 	++ :: sample (NM) glass (NM) pane (N)  :: sample (NM) glass (NM) pane (N) 
SPECIAL:NAME:ImmutableTransaction ImmutableSource getTo(): get (V)  | to (NM) 	++ :: immutable (NM) source (NI)  :: immutable (NM) transaction (N) 
SPECIAL:FORM:XConference void execute(Packet packet, Backend backend): execute (VI)  | [ packet (N) - packet (N) ]	++ :: [ backend (N) - backend (N) ] :: X (NM) conference (N) 
V_3P_IRR:NAME:JRStyle Boolean isOwnUnderline(): is (V)  | own (NM) underline (N) 	++ :: boolean (N)  :: JR (NM) style (N) 
V_3P_IRR:NAME:AbstractFilter static boolean isGeometryDistanceFilter(short filterType): is (V)  | geometry (NM) distance (NM) filter (N) 	++ :: [ short (N) - filter (NM) type (N) ] :: boolean (N)  :: abstract (NM) filter (N) 
SPECIAL:NAME:SQR_S25_RESOURCES int getLOCATION_RESOURCEReps(): get (V)  | LOCATION (NM) RESOURCE (NM) reps (N) 	++ :: int (N)  :: SQR (NM) S (NM) 25 (NM) RESOURCES (N) 
CONSTRUCTOR:NAME:AccessibleJMenuItem AccessibleJMenuItem AccessibleJMenuItem():  | accessible (NM) J (NM) menu (NM) item (NI) 	++
BASE_VERB:NAME:DummyGraphics2d void drawGlyphVector(GlyphVector g, float x, float y): draw (V)  | EQUIV[glyph (NM) vector (N) , [ glyph (NM) vector (N) - g (N) ]]	++ :: [ float (N) - x (N) ] :: [ float (N) - y (N) ] :: dummy (NM) graphics (NM) 2 (NM) d (N) 
BASE_VERB:NAME:Undead_WeakEnergyDrain void affectCharStats(MOB affected, CharStats affectableStats): affect (V)  | EQUIV[char (NM) stats (N) , [ char (NM) stats (N) - affectable (NM) stats (N) ]]	++ :: [ MOB (N) - affected (N) ] :: undead (NM) weak (NM) energy (NM) drain (N) 
SPECIAL:NAME:DestinationSelector JTabbedPane getTabDestinations(): get (V)  | tab (NM) destinations (N) 	++ :: J (NM) tabbed (NM) pane (N)  :: destination (NM) selector (N) 
CONSTRUCTOR:NAME:ImmutableCategoryImpl ImmutableCategoryImpl ImmutableCategoryImpl(Category category):  | immutable (NM) category (NM) impl (NI) 	++ :: [ category (N) - category (N) ]
SPECIAL:NAME:FileUpload int getParameterAsInt(String parameterName): get (V)  | EQUIV[parameter (N) , [ string (NI) - parameter (NM) name (NI) ]]-- as (P) int (N) 	++ :: int (N)  :: file (NM) upload (N) 
ENDS_WITH_ED:NAME:void actionPerformed(ActionEvent evt): handle (V) | action (NM) performed (N) 	++ :: [ action (NM) event (NI) - evt (N) ] :: ANONYMOUS (N)  :: void (N) 
SPECIAL:NAME:wxJWorker Object getValue(): get (V)  | value (NI) 	++ :: object (NI)  :: wx (NM) J (NM) worker (N) 
BASE_VERB:NAME:ServerConnectionDlg JPanel buildButtonsPanel(): build (V)  | buttons (NM) panel (N) 	++ :: J (NM) panel (N)  :: server (NM) connection (NM) dlg (N) 
SPECIAL:NAME:BNC static int getTotalNumberOfConnectedClients(): get (V)  | total (NM) number (NI) -- of (P) connected (NM) clients (N) 	++ :: int (N)  :: BNC (N) 
SPECIAL:FORM:BrowserLauncher static int ICStart(int instance, int signature): IC (PRE) start (V)  | [ int (N) - instance (NI) ]	++ :: [ int (N) - signature (N) ] :: browser (NM) launcher (N)  :: int (N) 
SPECIAL:NAME:User UserContext getUserContext(): get (V)  | user (NM) context (N) 	++ :: user (NM) context (N)  :: user (N) 
CONSTRUCTOR:NAME:LivenessPageChecker LivenessPageChecker LivenessPageChecker(String url):  | liveness (NM) page (NM) checker (N) 	++ :: [ string (NI) - url (NI) ]
SPECIAL:NAME:_DepositCompHomeStub void set_configuration_values(ConfigValue _star_a0): set (V)  | configuration (NM) values (N) 	++ :: [ config (NM) value (NI) - star (NM) a (NM) 0 (N) ] :: deposit (NM) comp (NM) home (NM) stub (N) 
BASE_VERB:NAME:ChemGraph List pickBFgraph(): pick (V)  | B (NM) fgraph (N) 	++ :: list (N)  :: chem (NM) graph (N) 
BASE_VERB:NAME:Command String xgetEnd(): xget (V)  | end (N) 	++ :: string (NI)  :: command (N) 
BASE_VERB:NAME:SummaryBreakHandler int computeBreakLevel(SafeReadableBulletin upcomingBulletin): compute (V)  | break (NM) level (N) 	++ :: [ safe (NM) readable (NM) bulletin (N) - upcoming (NM) bulletin (N) ] :: int (N)  :: summary (NM) break (NM) handler (N) 
NOUN_PHRASE:NAME:DimxParser Token funNewArray(Dict params): get (V) | fun (NM) new (NM) array (N) 	++ :: [ dict (N) - params (N) ] :: dimx (NM) parser (N)  :: token (N) 
V_3P_IRR:NAME:Explosion boolean isDiggable(): is (V)  | diggable (N) 	++ :: boolean (N)  :: explosion (N) 
CONSTRUCTOR:NAME:LabelAppearance LabelAppearance LabelAppearance(ILabel w):  | label (NM) appearance (N) 	++ :: [ I (NM) label (NI) - w (N) ]
SPECIAL:NAME:NamedMethodImpl Variant GetDocPointer(): get (V)  | doc (NM) pointer (N) 	++ :: variant (N)  :: named (NM) method (NM) impl (NI) 
SPECIAL:NAME:GFFParser void processDirective(String line): process (VI)  | directive (N) 	++ :: [ string (NI) - line (N) ] :: GFF (NM) parser (N) 
SPECIAL:NAME:SqlBool boolean getBoolean(): get (V)  | boolean (N) 	++ :: boolean (N)  :: sql (NM) bool (N) 
V_3PS:FORM:UserCollectionType boolean contains(Object collection, Object entity): contains (V)  | [ object (NI) - collection (N) ]	++ :: [ object (NI) - entity (N) ] :: user (NM) collection (NM) type (N)  :: boolean (N) 
SPECIAL:NAME:AbstractIntSet int addSelf(): add (V)  | self (N) 	++ :: int (N)  :: abstract (NM) int (NM) set (N) 
SPECIAL:NAME:ApplicationDataProvider String getXHTMLApplicationData(ServletContext context): get (V)  | XHTML (NM) application (NM) data (NI) 	++ :: [ servlet (NM) context (N) - context (N) ] :: string (NI)  :: application (NM) data (NM) provider (N) 
SPECIAL:NAME:Pocomz WijaApp getStation(): get (V)  | station (N) 	++ :: wija (NM) app (N)  :: pocomz (N) 
SPECIAL:NAME:SearchControl void setValueName(String valueName): set (V)  | value (NM) name (NI) 	++ :: [ string (NI) - value (NM) name (NI) ] :: search (NM) control (N) 
PREP:NAME:AExpressionArrayList String toString(): convert (V) | to (P) string (NI) 	++ :: A (NM) expression (NM) array (NM) list (N)  :: string (NI) 
SPECIAL:NAME:ConnectionPoolManager static ConnectionPoolManager getInstance(int iInitialCapacity, int iMaxCapacity, int iMinCapacity, int iCapacityIncrement, String sDriver, String sURL, String sUser, String sPassword): get (V)  | instance (NI) 	++ :: [ int (N) - i (NM) initial (NM) capacity (N) ] :: [ int (N) - i (NM) max (NM) capacity (N) ] :: [ int (N) - i (NM) min (NM) capacity (N) ] :: [ int (N) - i (NM) capacity (NM) increment (N) ] :: [ string (NI) - s (NM) driver (N) ] :: [ string (NI) - s (NM) URL (NI) ] :: [ string (NI) - s (NM) user (N) ] :: [ string (NI) - s (NM) password (N) ] :: connection (NM) pool (NM) manager (N)  :: connection (NM) pool (NM) manager (N) 
BASE_VERB:NAME:AbstractAnalyzer void updateProgress(double progress, String info): update (V)  | EQUIV[progress (N) , [ double (N) - progress (N) ]]	++ :: [ string (NI) - info (NI) ] :: abstract (NM) analyzer (N) 
SPECIAL:NAME:MyModel int getSize(): get (V)  | size (N) 	++ :: int (N)  :: my (PR) model (NI) 
BASE_VERB:NAME:MyActionBarAdvisor void makeActions(IWorkbenchWindow window): make (V)  | actions (N) 	++ :: [ I (NM) workbench (NM) window (N) - window (N) ] :: my (PR) action (NM) bar (NM) advisor (N) 
SPECIAL:NAME:RelatorioVisitaVO void setNumeroVisitas(Integer numeroVisitas): set (V)  | numero (NM) visitas (N) 	++ :: [ integer (N) - numero (NM) visitas (N) ] :: relatorio (NM) visita (NM) VO (NI) 
SPECIAL:NAME:AssignablePlan static AssignablePlan getShallowCopy(AssignablePlan proto): get (V)  | shallow (NM) copy (N) 	++ :: [ assignable (NM) plan (N) - proto (N) ] :: assignable (NM) plan (N)  :: assignable (NM) plan (N) 
SPECIAL:FORM:NoRelatedSym void set(DatedDate value): set (V)  | [ dated (NM) date (N) - value (NI) ]	++ :: no (DT) related (NM) sym (N) 
CONSTRUCTOR:NAME:CheckBox CheckBox CheckBox(String fldName, String label, boolean defValue, Preferences storeData):  | check (NM) box (N) 	++ :: [ string (NI) - fld (NM) name (NI) ] :: [ string (NI) - label (NI) ] :: [ boolean (N) - def (NM) value (NI) ] :: [ preferences (N) - store (NM) data (NI) ]
BASE_VERB:CLAS:VerilogSystfHandler void call(): call (V)  | verilog (NM) systf (NM) handler (N) 	++
PREP:NAME:FennelInsertRenameRule void onMatch(RelOptRuleCall call): handle (V) | on (NM) match (N) 	++ :: [ rel (NM) opt (NM) rule (NM) call (N) - call (N) ] :: fennel (NM) insert (NM) rename (NM) rule (N)  :: void (N) 
SPECIAL:NAME:TriggerEvent List<EquitySchedule> getSchedule(): get (V)  | schedule (N) 	++ :: list (NM) equity (NM) schedule (N)  :: trigger (NM) event (NI) 
BASE_VERB:CLAS:JobManager Iterator poll(): poll (V)  | job (NM) manager (N) 	++ :: iterator (N) 
CONSTRUCTOR:NAME:MandatoryAccessLockEntityData MandatoryAccessLockEntityData MandatoryAccessLockEntityData(Integer id):  | mandatory (NM) access (NM) lock (NM) entity (NM) data (NI) 	++ :: [ integer (N) - id (NI) ]
CONSTRUCTOR:NAME:threadListNode threadListNode threadListNode(Thread p):  | thread (NM) list (NM) node (NI) 	++ :: [ thread (N) - p (NI) ]
SPECIAL:NAME:BulkInsertSelection void setValidationEnCours(boolean validationEnCours): set (V)  | validation (NM) en (NM) cours (N) 	++ :: [ boolean (N) - validation (NM) en (NM) cours (N) ] :: bulk (NM) insert (NM) selection (N) 
ENDS_WITH_ED:NAME:MarcoPrincipal void submenuExportar_actionPerformed(): handle (V) | submenu (NM) exportar (NM) action (NM) performed (N) 	++ :: marco (NM) principal (N)  :: void (N) 
SPECIAL:NAME:FieldPanel JTextField getField(): get (V)  | field (N) 	++ :: J (NM) text (NM) field (N)  :: field (NM) panel (N) 
SPECIAL:NAME:DocInfoTag void writeTagBodyContent(JspWriter out, BodyContent _bodyContent): write (V)  | EQUIV[tag (NM) body (NM) content (N) , [ body (NM) content (N) - body (NM) content (N) ]]	++ :: [ jsp (NM) writer (N) - out (N) ] :: doc (NM) info (NM) tag (NI) 
SPECIAL:NAME:StringChooseComponent void setValue(String data): set (V)  | value (NI) 	++ :: [ string (NI) - data (NI) ] :: string (NM) choose (NM) component (N) 
CONSTRUCTOR:NAME:InheritNewTblNewTbl InheritNewTblNewTbl InheritNewTblNewTbl():  | inherit (NM) new (NM) tbl (NM) new (NM) tbl (N) 	++
SPECIAL:NAME:PricePublicationLoad void initializeProforma(): initialize (V)  | proforma (N) 	++ :: price (NM) publication (NM) load (N) 
BASE_VERB:FORM:FilterByAccount void visit(DatabaseKey key): visit (V)  | [ database (NM) key (NI) - key (NI) ]	++ :: filter (NM) by (NM) account (N) 
SPECIAL:NAME:NFContextGenerator String getContext(Object o): get (V)  | context (N) 	++ :: [ object (NI) - o (N) ] :: string (NI)  :: NF (NM) context (NM) generator (N) 
SPECIAL:NAME:GenCopyrightBean void setLocationACF(String location): set (V)  | location (NM) ACF (N) 	++ :: [ string (NI) - location (NI) ] :: gen (NM) copyright (NM) bean (NI) 
SPECIAL:NAME:Report String getFormattingElementsParentXPath(): get (V)  | formatting (NM) elements (NM) parent (NM) X (NM) path (NI) 	++ :: string (NI)  :: report (N) 
SPECIAL:NAME:GUIOptionsPanelController JComponent getComponent(Lookup masterLookup): get (V)  | component (N) 	++ :: [ lookup (N) - master (NM) lookup (N) ] :: J (NM) component (N)  :: GUI (NM) options (NM) panel (NM) controller (N) 
SPECIAL:NAME:WRun String getRoutingIdName(): get (V)  | routing (NM) id (NM) name (NI) 	++ :: string (NI)  :: W (NM) run (N) 
BASE_VERB:FORM:Bye void marshal(Writer out): marshal (V)  | [ writer (N) - out (N) ]	++ :: bye (N) 
EVENT_PARAM:NAME:PBLifeCycleListener void afterUpdate(PBLifeCycleEvent event): handle (V) | after (NM) update (N) 	++ :: [ PB (NM) life (NM) cycle (NM) event (NI) - event (NI) ] :: PB (NM) life (NM) cycle (NM) listener (N)  :: void (N) 
SPECIAL:NAME:Region void setEnd(Position pos): set (V)  | end (N) 	++ :: [ position (N) - pos (N) ] :: region (N) 
SPECIAL:NAME:r312$$desc void push_b_idx(CleanVM vm, Object data, int idx, int len): push (V)  | EQUIV[b (NM) idx (N) , [ int (N) - idx (N) ]]	++ :: [ clean (NM) VM (N) - vm (N) ] :: [ object (NI) - data (NI) ] :: [ int (N) - len (N) ] :: r (NM) 312 (NM) desc (NI) 
V_3P_IRR:NAME:ImageComboComponent boolean isHoverImageURLSetted(): is (V)  | hover (NM) image (NM) URL (NM) setted (N) 	++ :: boolean (N)  :: image (NM) combo (NM) component (N) 
SPECIAL:NAME:DataContext void setUserProperty(String key, Object value): set (V)  | user (NM) property (N) 	++ :: [ string (NI) - key (NI) ] :: [ object (NI) - value (NI) ] :: data (NM) context (N) 
CONSTRUCTOR:NAME:ComponentDrawContext ComponentDrawContext ComponentDrawContext(Component dest, Circuit circuit, CircuitState circuitState, Graphics base, Graphics g, boolean printView):  | component (NM) draw (NM) context (N) 	++ :: [ component (N) - dest (N) ] :: [ circuit (N) - circuit (N) ] :: [ circuit (NM) state (N) - circuit (NM) state (N) ] :: [ graphics (N) - base (N) ] :: [ graphics (N) - g (N) ] :: [ boolean (N) - print (NM) view (NI) ]
SPECIAL:NAME:VT100 String getName(): get (V)  | name (NI) 	++ :: string (NI)  :: VT (NM) 100 (N) 
BASE_VERB:NAME:ExemptionMechanism int genExemptionBlob(byte output, int outputOffset): gen (V)  | exemption (NM) blob (N) 	++ :: [ byte (N) - output (N) ] :: [ int (N) - output (NM) offset (N) ] :: int (N)  :: exemption (NM) mechanism (N) 
SPECIAL:NAME:FieldSelectionListener int getID(): get (V)  | ID (NI) 	++ :: int (N)  :: field (NM) selection (NM) listener (N) 
SPECIAL:NAME:ScriptActivity int doWork(InputContext oInput, OutputContext oOutput): do (VI)  | work (N) 	++ :: [ input (NM) context (N) - o (NM) input (NI) ] :: [ output (NM) context (N) - o (NM) output (N) ] :: int (N)  :: script (NM) activity (N) 
UNKOWN: :StdFile static boolean e_StdFile_nFileSystem$semicolon$dotsfopen(CleanVM vm):
BASE_VERB:FORM:MDStaticUtils static void put(String name, Class t, int code): put (V)  | [ string (NI) - name (NI) ]	++ :: [ class (NI) - t (N) ] :: [ int (N) - code (NI) ] :: MD (NM) static (NM) utils (N) 
CONSTRUCTOR:NAME:TestImageButtons TestImageButtons TestImageButtons():  | test (NM) image (NM) buttons (N) 	++
CONSTRUCTOR:NAME:UtcOffset UtcOffset UtcOffset(long offset):  | utc (NM) offset (N) 	++ :: [ long (N) - offset (N) ]
SPECIAL:FORM:CciOperations Object execute(InteractionSpec spec, Record inputRecord, RecordExtractor outputExtractor): execute (VI)  | [ interaction (NM) spec (NI) - spec (NI) ]	++ :: [ record (N) - input (NM) record (N) ] :: [ record (NM) extractor (N) - output (NM) extractor (N) ] :: cci (NM) operations (N)  :: object (NI) 
SPECIAL:CLAS:AcceptanceTestParserTest void setUp(): set (V) up (VP)  | acceptance (NM) test (NM) parser (NM) test (N) 	++
SPECIAL:NAME:TaxRulesDescriptor String getXMLName(): get (V)  | XML (NM) name (NI) 	++ :: string (NI)  :: tax (NM) rules (NM) descriptor (NI) 
SPECIAL:NAME:POPOSigningKeyInput SubjectPublicKeyInfo getPublicKey(): get (V)  | public (NM) key (NI) 	++ :: subject (NM) public (NM) key (NM) info (NI)  :: POPO (NM) signing (NM) key (NM) input (NI) 
SPECIAL:NAME:SubList int removeAll(int fromIndex, int toIndex, TCollection source): remove (V)  | all (DT) 	++ :: [ int (N) - from (NM) index (NI) ] :: [ int (N) - to (NM) index (NI) ] :: [ T (NM) collection (N) - source (NI) ] :: int (N)  :: sub (NM) list (N) 
SPECIAL:NAME:GeneratorResourceLoader InputStream getResourceStream(String name): get (V)  | resource (NM) stream (NI) 	++ :: [ string (NI) - name (NI) ] :: input (NM) stream (NI)  :: generator (NM) resource (NM) loader (N) 
SPECIAL:NAME:UDPPacket int getSequence(): get (V)  | sequence (N) 	++ :: int (N)  :: UDP (NM) packet (N) 
BASE_VERB:NAME:HTMLResultsFormatter void displayHeader(PrintWriter writer, String testClassName, String testCountText, String elapsedTimeString, String resultString): display (V)  | header (N) 	++ :: [ print (NM) writer (N) - writer (N) ] :: [ string (NI) - test (NM) class (NM) name (NI) ] :: [ string (NI) - test (NM) count (NM) text (NI) ] :: [ string (NI) - elapsed (NM) time (NM) string (NI) ] :: [ string (NI) - result (NM) string (NI) ] :: HTML (NM) results (NM) formatter (N) 
SPECIAL:FORM:PolicyFile void init(URL policy): init (V)  | [ URL (NI) - policy (N) ]	++ :: policy (NM) file (NI) 
SPECIAL:NAME:Item int getQuantity(): get (V)  | quantity (N) 	++ :: int (N)  :: item (NI) 
SPECIAL:NAME:CollectingErrorHandler List getWarnings(): get (V)  | warnings (N) 	++ :: list (N)  :: collecting (NM) error (NM) handler (N) 
SPECIAL:NAME:EqualityOperatorExistenceChecker String getEqualityOperator(): get (V)  | equality (NM) operator (N) 	++ :: string (NI)  :: equality (NM) operator (NM) existence (NM) checker (N) 
SPECIAL:NAME:EditOption int getViewAs(int index): get (V)  | view (NI) -- as (P) [ int (N) - index (NI) ]	++ :: [ int (N) - index (NI) ] :: int (N)  :: edit (NM) option (N) 
SPECIAL:NAME:SortableMessageTableModel void removeMessages(): remove (V)  | messages (N) 	++ :: sortable (NM) message (NM) table (NM) model (NI) 
CONSTRUCTOR:NAME:AttributeSet AttributeSet AttributeSet(Namespace namespace, String name, NamedTyped allowedNames):  | attribute (NM) set (N) 	++ :: [ namespace (N) - namespace (N) ] :: [ string (NI) - name (NI) ] :: [ named (NM) typed (N) - allowed (NM) names (N) ]
BASE_VERB:NAME:Permute static int gsl_permute_ushort(size_tPtr1 arg0, ShortPtr1 arg1, int arg2, int arg3): gsl (PRE) permute (V)  | ushort (N) 	++ :: [ size (NM) t (NM) ptr (NM) 1 (N) - arg (NM) 0 (N) ] :: [ short (NM) ptr (NM) 1 (N) - arg (NM) 1 (N) ] :: [ int (N) - arg (NM) 2 (N) ] :: [ int (N) - arg (NM) 3 (N) ] :: int (N)  :: permute (N) 
SPECIAL:NAME:PostfixXMLConstant void addAliasElement(Element e): add (V)  | EQUIV[alias (NM) element (NI) , [ element (NI) - e (N) ]]	++ :: postfix (NM) XML (NM) constant (N) 
BASE_VERB:NAME:RDFProtonDescriptor_GHR_topol double calculateDistanceBetweenTwoAtoms(IAtom atom1, IAtom atom2): calculate (V)  | distance (N) -- between (P) two (NM) atoms (N) 	++ :: [ I (NM) atom (N) - atom (NM) 1 (N) ] :: [ I (NM) atom (N) - atom (NM) 2 (N) ] :: double (N)  :: RDF (NM) proton (NM) descriptor (NM) GHR (NM) topol (N) 
BASE_VERB:NAME:WinJNI static int SingleChoiceDialog_getSingleChoiceIndex__SWIG_2(String jarg1, String jarg2, String jarg3, long jarg4, Window jarg4_, int jarg5, int jarg6, boolean jarg7): single (V)  | EQUIV[choice (NM) dialog (NM) get (NM) single (NM) choice (NM) index (NM) SWIG (N) 2 (D) , [ string (NI) - jarg (NM) 2 (N) ]]	++ :: [ string (NI) - jarg (NM) 1 (N) ] :: [ string (NI) - jarg (NM) 3 (N) ] :: [ long (N) - jarg (NM) 4 (N) ] :: [ window (N) - jarg (NM) 4 (N) ] :: [ int (N) - jarg (NM) 5 (N) ] :: [ int (N) - jarg (NM) 6 (N) ] :: [ boolean (N) - jarg (NM) 7 (N) ] :: int (N)  :: win (NM) JNI (N) 
SPECIAL:NAME:PackedByteArrayNode int getLBOUND(int dimension): get (V)  | LBOUND (N) 	++ :: [ int (N) - dimension (N) ] :: int (N)  :: packed (NM) byte (NM) array (NM) node (NI) 
CONSTRUCTOR:NAME:MultipleDefinitionsFactory MultipleDefinitionsFactory MultipleDefinitionsFactory():  | multiple (NM) definitions (NM) factory (N) 	++
SPECIAL:NAME:CIM_Processor void set_OtherFamilyDescription(String newValue): set (V)  | other (DT) family (NM) description (NI) 	++ :: [ string (NI) - new (NM) value (NI) ] :: CIM (NM) processor (N) 
SPECIAL:NAME:void setValue(Object object, Object value): set (V)  | value (NI) 	++ :: [ object (NI) - object (NI) ] :: [ object (NI) - value (NI) ] :: ANONYMOUS (N) 
ENDS_WITH_ED:NAME:CutAction void actionPerformed(ActionEvent event): handle (V) | action (NM) performed (N) 	++ :: [ action (NM) event (NI) - event (NI) ] :: cut (NM) action (N)  :: void (N) 
SPECIAL:NAME:ModelType void setConformanceKind(String value): set (V)  | conformance (NM) kind (N) 	++ :: [ string (NI) - value (NI) ] :: model (NM) type (N) 
SPECIAL:NAME:MD_legalConstraintsXML String getNamespace(): get (V)  | namespace (N) 	++ :: string (NI)  :: MD (NM) legal (NM) constraints (NM) XML (N) 
BASE_VERB:NAME:FarragoDatabase FarragoSessionExecutableStmt prepareStmtImpl(FarragoSessionPreparingStmt stmt, SqlNode sqlNode, FarragoAllocationOwner owner, FarragoSessionAnalyzedSql analyzedSql): prepare (V)  | stmt (NM) impl (NI) 	++ :: [ farrago (NM) session (NM) preparing (NM) stmt (N) - stmt (N) ] :: [ sql (NM) node (NI) - sql (NM) node (NI) ] :: [ farrago (NM) allocation (NM) owner (N) - owner (N) ] :: [ farrago (NM) session (NM) analyzed (NM) sql (N) - analyzed (NM) sql (N) ] :: farrago (NM) session (NM) executable (NM) stmt (N)  :: farrago (NM) database (N) 
SPECIAL:NAME:TupleModel String getColumnName(int column): get (V)  | column (NM) name (NI) 	++ :: [ int (N) - column (N) ] :: string (NI)  :: tuple (NM) model (NI) 
SPECIAL:NAME:DataFile void addRecord(Record record): add (V)  | EQUIV[record (N) , [ record (N) - record (N) ]]	++ :: data (NM) file (NI) 
CONSTRUCTOR:NAME:TimePeriod TimePeriod TimePeriod(Blog blog):  | time (NM) period (N) 	++ :: [ blog (N) - blog (N) ]
CONSTRUCTOR:NAME:Messages Messages Messages():  | messages (N) 	++
SPECIAL:FORM:CircularList Object get(int i): get (V)  | [ int (N) - i (N) ]	++ :: circular (NM) list (N)  :: object (NI) 
CONSTRUCTOR:NAME:XhlAnalyserThread XhlAnalyserThread XhlAnalyserThread(XPSConfiguration proxy_configuration, ProxyListener proxy_listener):  | xhl (NM) analyser (NM) thread (N) 	++ :: [ XPS (NM) configuration (NI) - proxy (NM) configuration (NI) ] :: [ proxy (NM) listener (N) - proxy (NM) listener (N) ]
SPECIAL:NAME:X_PA_Measure void setPA_Measure_ID(int PA_Measure_ID): set (V)  | PA (NM) measure (NM) ID (NI) 	++ :: [ int (N) - PA (NM) measure (NM) ID (NI) ] :: X (NM) PA (NM) measure (N) 
SPECIAL:NAME:X_AD_Org void setIsSummary(boolean IsSummary): set (V)  | is (NM) summary (N) 	++ :: [ boolean (N) - is (NM) summary (N) ] :: X (NM) AD (NM) org (N) 
V_3P_IRR:NAME:CodecType static Object isNotEmpty(Object object): is (V)  | not (DT) empty (N) 	++ :: [ object (NI) - object (NI) ] :: object (NI)  :: codec (NM) type (N) 
SPECIAL:NAME:EnumSyntax int getValue(): get (V)  | value (NI) 	++ :: int (N)  :: enum (NM) syntax (N) 
ENDS_WITH_ED:NAME:TvBrowserPictureSettingsUpdateDialog void actionPerformed(ActionEvent e): handle (V) | action (NM) performed (N) 	++ :: [ action (NM) event (NI) - e (N) ] :: tv (NM) browser (NM) picture (NM) settings (NM) update (NM) dialog (N)  :: void (N) 
ENDS_WITH_ED:NAME:JULinkedList void mouseClicked(MouseEvent e): handle (V) | mouse (NM) clicked (N) 	++ :: [ mouse (NM) event (NI) - e (N) ] :: JU (NM) linked (NM) list (N)  :: void (N) 
SPECIAL:NAME:ConfirmPanel void setOKVisible(boolean value): set (V)  | OK (NM) visible (N) 	++ :: [ boolean (N) - value (NI) ] :: confirm (NM) panel (N) 
SPECIAL:NAME:OSMessageAdapter void doMessage(SoftwareTerminal theElement): do (VI)  | message (NI) 	++ :: [ software (NM) terminal (N) - the (DT) element (NI) ] :: OS (NM) message (NM) adapter (NI) 
SPECIAL:FORM:sybase static void main(String args): main (V)  | [ string (NI) - args (N) ]	++ :: sybase (N) 
BASE_VERB:NAME:CBLAS static void cblas_dcopy(int arg0, DoublePtr1 arg1, int arg2, DoublePtr1 arg3, int arg4): cblas (V)  | dcopy (N) 	++ :: [ int (N) - arg (NM) 0 (N) ] :: [ double (NM) ptr (NM) 1 (N) - arg (NM) 1 (N) ] :: [ int (N) - arg (NM) 2 (N) ] :: [ double (NM) ptr (NM) 1 (N) - arg (NM) 3 (N) ] :: [ int (N) - arg (NM) 4 (N) ] :: CBLAS (N) 
EMPTY:NONE:Parser boolean jj_3R_188():  | jj (PRE) 3 (D) R (PRE) 188 (D) 
BASE_VERB:NAME:EntityVersionIdColumnDefImpl void serializeAttributes(XMLSerializer context): serialize (V)  | attributes (N) 	++ :: [ XML (NM) serializer (N) - context (N) ] :: entity (NM) version (NM) id (NM) column (NM) def (NM) impl (NI) 
PREP:NAME:MSVValidator void onID(Datatype dt, StringToken s): handle (V) | on (NM) ID (NI) 	++ :: [ datatype (N) - dt (N) ] :: [ string (NM) token (N) - s (N) ] :: MSV (NM) validator (N)  :: void (N) 
BASE_VERB:FORM:XMLSerializer Object unmarshall(InputStream input): unmarshall (V)  | [ input (NM) stream (NI) - input (NI) ]	++ :: XML (NM) serializer (N)  :: object (NI) 
SPECIAL:NAME:FileUtilities void doSearchFolder(JEANAPI api, long folder, String namePart, String type, String contentsPart, Vector v): do (VI)  | EQUIV[search (NM) folder (N) , [ long (N) - folder (N) ]]	++ :: [ JEANAPI (N) - api (N) ] :: [ string (NI) - name (NM) part (N) ] :: [ string (NI) - type (N) ] :: [ string (NI) - contents (NM) part (N) ] :: [ vector (N) - v (N) ] :: file (NM) utilities (N) 
SPECIAL:NAME:Object readResult(ResultSet rs, int index, Class destination): read (V)  | result (N) 	++ :: [ result (NM) set (N) - rs (N) ] :: [ int (N) - index (NI) ] :: [ class (NI) - destination (N) ] :: object (NI)  :: ANONYMOUS (N) 
BASE_VERB:NAME:MwtJNI static int WSCsheet_setCellLock__SWIG_0(long jarg1, short jarg2): WS (PRE) csheet (V)  | set (NM) cell (NM) lock (NM) SWIG (N) 0 (D) 	++ :: [ long (N) - jarg (NM) 1 (N) ] :: [ short (N) - jarg (NM) 2 (N) ] :: int (N)  :: mwt (NM) JNI (N) 
SPECIAL:NAME:DbStringBuffer int getSize(): get (V)  | size (N) 	++ :: int (N)  :: db (NM) string (NM) buffer (NI) 
CONSTRUCTOR:NAME:AktionFTFAufnehmenTS AktionFTFAufnehmenTS AktionFTFAufnehmenTS(int actor_id):  | aktion (NM) FTF (NM) aufnehmen (NM) TS (N) 	++ :: [ int (N) - actor (NM) id (NI) ]
SPECIAL:NAME:ThumbView void setNextColumn(): set (V)  | next (DT) column (N) 	++ :: thumb (NM) view (NI) 
SPECIAL:NAME:displayDashboardBB long getGinactive(): get (V)  | ginactive (N) 	++ :: long (N)  :: display (NM) dashboard (NM) BB (N) 
SPECIAL:NAME:SubstTypeFilterModel Object getValueAt(int rowIndex, int columnIndex): get (V)  | value (NI) -- at (P) [ int (N) - row (NM) index (NI) ]	++ :: [ int (N) - row (NM) index (NI) ] :: [ int (N) - column (NM) index (NI) ] :: object (NI)  :: subst (NM) type (NM) filter (NM) model (NI) 
EVENT_PARAM:NAME:ConnectionTool void mouseDown(DrawingView aView, MouseEvent e, int x, int y): handle (V) | mouse (NM) down (N) 	++ :: [ drawing (NM) view (NI) - a (NM) view (NI) ] :: [ mouse (NM) event (NI) - e (N) ] :: [ int (N) - x (N) ] :: [ int (N) - y (N) ] :: connection (NM) tool (N)  :: void (N) 
CONSTRUCTOR:NAME:MultiAnnotViewerFrame MultiAnnotViewerFrame MultiAnnotViewerFrame(String title, GraphicsConfiguration gc):  | multi (NM) annot (NM) viewer (NM) frame (N) 	++ :: [ string (NI) - title (N) ] :: [ graphics (NM) configuration (NI) - gc (N) ]
PREP:NAME:KeySetWrapper Object toArray(Object a): convert (V) | to (P) array (N) 	++ :: [ object (NI) - a (N) ] :: key (NM) set (NM) wrapper (NI)  :: object (NI) 
V_3P_IRR:NAME:NoLegs boolean isSetLegInstrRegistry(): is (V)  | set (NM) leg (NM) instr (NM) registry (N) 	++ :: boolean (N)  :: no (DT) legs (N) 
SPECIAL:NAME:Service String getConnectorAddress(int index): get (V)  | connector (NM) address (NI) 	++ :: [ int (N) - index (NI) ] :: string (NI)  :: service (N) 
SPECIAL:NAME:ScheduleListTestSuper void testBeginningRnd(): test (VI)  | beginning (NM) rnd (N) 	++ :: schedule (NM) list (NM) test (NM) super (N) 
SPECIAL:NAME:AbstractActionContributor void setXMLAccess(XMLAccess xmlAccess): set (V)  | XML (NM) access (N) 	++ :: [ XML (NM) access (N) - xml (NM) access (N) ] :: abstract (NM) action (NM) contributor (N) 
CONSTRUCTOR:NAME:IntBuffer IntBuffer IntBuffer(int capacity, int limit, int position, int mark):  | int (NM) buffer (NI) 	++ :: [ int (N) - capacity (N) ] :: [ int (N) - limit (N) ] :: [ int (N) - position (N) ] :: [ int (N) - mark (N) ]
CONSTRUCTOR:NAME:Controllability Controllability Controllability(float C0_, float C1_):  | controllability (N) 	++ :: [ float (N) - C (NM) 0 (N) ] :: [ float (N) - C (NM) 1 (N) ]
SPECIAL:NAME:ObjectStreamField int getOffset(): get (V)  | offset (N) 	++ :: int (N)  :: object (NM) stream (NM) field (N) 
SPECIAL:CLAS:ThreadSafeQueue Object dequeue(boolean block): dequeue (V)  | thread (NM) safe (NM) queue (N) 	++ :: [ boolean (N) - block (N) ] :: object (NI) 
SPECIAL:NAME:CASImpl int getFeatureValue(int addr, int feat): get (V)  | feature (NM) value (NI) 	++ :: [ int (N) - addr (N) ] :: [ int (N) - feat (N) ] :: int (N)  :: CAS (NM) impl (NI) 
CONSTRUCTOR:NAME:PhysData PhysData PhysData():  | phys (NM) data (NI) 	++
BASE_VERB:CLAS:IClockTextField void stop(): stop (VI)  | I (NM) clock (NM) text (NM) field (N) 	++
SPECIAL:NAME:Code128BarcodeTest void testOptimalEncodingSwapsBackToBForLetters(): test (VI)  | optimal (NM) encoding (NM) swaps (NM) back (N) -- to (P) B (NM) for (NM) letters (N) 	++ :: code (NM) 128 (NM) barcode (NM) test (N) 
CONSTRUCTOR:NAME:DisableableConfirm DisableableConfirm DisableableConfirm(Frame parent, String title, String message, String confirmButtonText, String doNotConfirmButtonText, String disableText):  | disableable (NM) confirm (N) 	++ :: [ frame (N) - parent (N) ] :: [ string (NI) - title (N) ] :: [ string (NI) - message (NI) ] :: [ string (NI) - confirm (NM) button (NM) text (NI) ] :: [ string (NI) - do (NM) not (DT) confirm (NM) button (NM) text (NI) ] :: [ string (NI) - disable (NM) text (NI) ]
BASE_VERB:NAME:JEANFileFilter static File showDialog(String name, JEANFileFilter filter, String okLabel, String title): show (V)  | dialog (N) 	++ :: [ string (NI) - name (NI) ] :: [ JEAN (NM) file (NM) filter (N) - filter (N) ] :: [ string (NI) - ok (NM) label (NI) ] :: [ string (NI) - title (N) ] :: file (NI)  :: JEAN (NM) file (NM) filter (N) 
SPECIAL:NAME:VPDMfApp void setApplication_for_selected_or_unselected_KB(): set (V)  | application (N) -- for (P) selected (NM) or (NM) unselected (NM) KB (N) 	++ :: VPD (NM) mf (NM) app (N) 
BASE_VERB:NAME:MultipartHandler void parseTextField(MultipartStream ms, RFC822Headers headers, ContentType ct): parse (V)  | text (NM) field (N) 	++ :: [ multipart (NM) stream (NI) - ms (N) ] :: [ RFC (NM) 822 (NM) headers (N) - headers (N) ] :: [ content (NM) type (N) - ct (N) ] :: multipart (NM) handler (N) 
SPECIAL:NAME:XdrCoding static byte getBytes(ByteBuffer in): get (V)  | bytes (NI) 	++ :: [ byte (NM) buffer (NI) - in (NI) ] :: byte (N)  :: xdr (NM) coding (N) 
SPECIAL:FORM:Meditate Message execute(Player p, Location loc, String target): execute (VI)  | [ player (N) - p (NI) ]	++ :: [ location (NI) - loc (N) ] :: [ string (NI) - target (N) ] :: meditate (N)  :: message (NI) 
PREP:NAME:CharArrayWriterUpperCase String toString(): convert (V) | to (P) string (NI) 	++ :: char (NM) array (NM) writer (NM) upper (NM) case (N)  :: string (NI) 
SPECIAL:NAME:RootTypeImpl ContentHandlerEx getUnmarshaller(UnmarshallingContext context): get (V)  | unmarshaller (N) 	++ :: [ unmarshalling (NM) context (N) - context (N) ] :: content (NM) handler (NM) ex (N)  :: root (NM) type (NM) impl (NI) 
SPECIAL:NAME:SuperParentOrFilterTest void testMatches(): test (VI)  | matches (N) 	++ :: super (NM) parent (NM) or (NM) filter (NM) test (N) 
ENDS_WITH_ED:NAME:PressAction void actionPerformed(ActionEvent e): handle (V) | action (NM) performed (N) 	++ :: [ action (NM) event (NI) - e (N) ] :: press (NM) action (N)  :: void (N) 
SPECIAL:NAME:TreeTableCellRenderer void setBounds(int x, int y, int w, int h): set (V)  | bounds (N) 	++ :: [ int (N) - x (N) ] :: [ int (N) - y (N) ] :: [ int (N) - w (N) ] :: [ int (N) - h (N) ] :: tree (NM) table (NM) cell (NM) renderer (N) 
SPECIAL:NAME:SimpleXMLParser static String getEncodingName(byte b4): get (V)  | encoding (NM) name (NI) 	++ :: [ byte (N) - b (NM) 4 (N) ] :: string (NI)  :: simple (NM) XML (NM) parser (N) 
CONSTRUCTOR:NAME:DOMFactory DOMFactory DOMFactory():  | DOM (NM) factory (N) 	++
NOUN_PHRASE:NAME:Factory static Iterate newInstance(): get (V) | new (NM) instance (NI) 	++ :: factory (N)  :: iterate (N) 
SPECIAL:NAME:TaskInfoComparator void setInverseOrder(boolean inverseOrder): set (V)  | inverse (NM) order (N) 	++ :: [ boolean (N) - inverse (NM) order (N) ] :: task (NM) info (NM) comparator (N) 
SPECIAL:NAME:SupportBeanPropertyNames String getIndexed(int i): get (V)  | indexed (N) 	++ :: [ int (N) - i (N) ] :: string (NI)  :: support (NM) bean (NM) property (NM) names (N) 
SPECIAL:NAME:IoUtility static String getClassName(Class clazz): get (V)  | class (NM) name (NI) 	++ :: [ class (NI) - clazz (N) ] :: string (NI)  :: io (NM) utility (N) 
SPECIAL:FORM:SlotArea void add(Equipment equip): add (V)  | [ equipment (N) - equip (N) ]	++ :: slot (NM) area (N) 
SPECIAL:NAME:ComputeResourceData void setResourceType(ResourceType value): set (V)  | resource (NM) type (N) 	++ :: [ resource (NM) type (N) - value (NI) ] :: compute (NM) resource (NM) data (NI) 
CONSTRUCTOR:NAME:Event Event Event(int x, int y, long movementTime, int id, LinkedList comments):  | event (NI) 	++ :: [ int (N) - x (N) ] :: [ int (N) - y (N) ] :: [ long (N) - movement (NM) time (N) ] :: [ int (N) - id (NI) ] :: [ linked (NM) list (N) - comments (N) ]
SPECIAL:NAME:AbstractResourceRequest PrimaryKey getRequestTypePrimaryKey(): get (V)  | request (NM) type (NM) primary (NM) key (NI) 	++ :: primary (NM) key (NI)  :: abstract (NM) resource (NM) request (N) 
SPECIAL:NAME:PartyUserGroupMgr List getAllGroupnames(UserTransaction trans): get (V)  | all (DT) groupnames (N) 	++ :: [ user (NM) transaction (N) - trans (N) ] :: list (N)  :: party (NM) user (NM) group (NM) mgr (N) 
SPECIAL:NAME:PropertyGroup void setProperty(int index, Object element): set (V)  | property (N) 	++ :: [ int (N) - index (NI) ] :: [ object (NI) - element (NI) ] :: property (NM) group (N) 
SPECIAL:NAME:Init void setPreloadPlugins(List plugins): set (V)  | preload (NM) plugins (N) 	++ :: [ list (N) - plugins (N) ] :: init (N) 
SPECIAL:NAME:ObjectExporter Map<String,String> getEnv(): get (V)  | env (N) 	++ :: map (NM) string (NM) string (NI)  :: object (NM) exporter (N) 
SPECIAL:NAME:VpnAttribute String getVpn(): get (V)  | vpn (N) 	++ :: string (NI)  :: vpn (NM) attribute (N) 
SPECIAL:NAME:CheckValueDescriptor Class getJavaClass(): get (V)  | java (NM) class (NI) 	++ :: class (NI)  :: check (NM) value (NM) descriptor (NI) 
SPECIAL:NAME:MessageQueueFacade QueueSession getQueueSession(): get (V)  | queue (NM) session (N) 	++ :: queue (NM) session (N)  :: message (NM) queue (NM) facade (NI) 
SPECIAL:NAME:JavadocNode int getStartColumn(): get (V)  | start (NM) column (N) 	++ :: int (N)  :: javadoc (NM) node (NI) 
EVENT_PARAM:NAME:SMImplementor void defaultExitAction(Event e): handle (V) | default (NM) exit (NM) action (N) 	++ :: [ event (NI) - e (N) ] :: SM (NM) implementor (N)  :: void (N) 
SPECIAL:NAME:PasswordField void setStringValue(String value): set (V)  | string (NM) value (NI) 	++ :: [ string (NI) - value (NI) ] :: password (NM) field (N) 
SPECIAL:FORM:SimpleNotificationLayout void remove(NotificationWindow notification): remove (V)  | [ notification (NM) window (N) - notification (N) ]	++ :: simple (NM) notification (NM) layout (N) 
NOUN_PHRASE:NAME:FoldingDriver OPT_CompilerPhase newExecution(OPT_IR ir): get (V) | new (NM) execution (N) 	++ :: [ OPT (NM) IR (N) - ir (N) ] :: folding (NM) driver (N)  :: OPT (NM) compiler (NM) phase (N) 
SPECIAL:NAME:SpeciesTable SpeciesTableFinder addSpeciesFinder(Window owner): add (V)  | species (NM) finder (N) 	++ :: [ window (N) - owner (N) ] :: species (NM) table (NM) finder (N)  :: species (NM) table (N) 
NOUN_PHRASE:NAME:TagTable int indexOf(Object o): get (V) | index (NM) of (N) 	++ :: [ object (NI) - o (N) ] :: tag (NM) table (N)  :: int (N) 
V_3P_IRR:NAME:BioShapeRenderer boolean isSheet(int i): is (V)  | sheet (N) 	++ :: [ int (N) - i (N) ] :: boolean (N)  :: bio (NM) shape (NM) renderer (N) 
SPECIAL:NAME:Datagram int getLength(): get (V)  | length (N) 	++ :: int (N)  :: datagram (N) 
SPECIAL:NAME:AI_OutConnectionImpl byte readUserMemory(int memAddr, int noBytes): read (V)  | user (NM) memory (N) 	++ :: [ int (N) - mem (NM) addr (N) ] :: [ int (N) - no (DT) bytes (NI) ] :: byte (N)  :: AI (NM) out (NM) connection (NM) impl (NI) 
SPECIAL:FORM:DataRetrievalCart DeliverableBean get(Integer id): get (V)  | [ integer (N) - id (NI) ]	++ :: data (NM) retrieval (NM) cart (N)  :: deliverable (NM) bean (NI) 
BASE_VERB:FORM:DefaultViewFactory static void configure(Properties preferences): configure (V)  | [ properties (N) - preferences (N) ]	++ :: default (NM) view (NM) factory (N) 
V_3PS:FORM:Id boolean equals(Object obj): equals (V)  | [ object (NI) - obj (NI) ]	++ :: id (NI)  :: boolean (N) 
SPECIAL:NAME:ASpacesLiteral TSpaces getSpaces(): get (V)  | spaces (N) 	++ :: T (NM) spaces (N)  :: A (NM) spaces (NM) literal (N) 
BASE_VERB:NAME:GraphManager void moveParticipants(Object cellsToMove, boolean direction): move (V)  | participants (N) 	++ :: [ object (NI) - cells (NM) to (NM) move (N) ] :: [ boolean (N) - direction (N) ] :: graph (NM) manager (N) 
BASE_VERB:NAME:Unmarshaller void eatText3(String value): eat (V)  | text (NI) 3 (D) 	++ :: [ string (NI) - value (NI) ] :: unmarshaller (N) 
SPECIAL:NAME:QueryPrepared long getLong(DBCSPrepared dbcs_prepared): get (V)  | long (N) 	++ :: [ DBCS (NM) prepared (N) - dbcs (NM) prepared (N) ] :: long (N)  :: query (NM) prepared (N) 
BASE_VERB:NAME:JniParamsVisitor void visitParamType(Class c, int nparam, Class paramType): visit (V)  | EQUIV[param (NM) type (N) , [ class (NI) - param (NM) type (N) ]]	++ :: [ class (NI) - c (N) ] :: [ int (N) - nparam (N) ] :: jni (NM) params (NM) visitor (N) 
NOUN_PHRASE:NAME:ShapesImpl int sizeOfPageThumbnailArray(): get (V) | size (NM) of (NM) page (NM) thumbnail (NM) array (N) 	++ :: shapes (NM) impl (NI)  :: int (N) 
SPECIAL:NAME:TargetCellAddressAttribute void setTargetCellAddress(String targetCellAddress): set (V)  | target (NM) cell (NM) address (NI) 	++ :: [ string (NI) - target (NM) cell (NM) address (NI) ] :: target (NM) cell (NM) address (NM) attribute (N) 
BASE_VERB:NAME:AbstractInterpreterManager void saveInterpretersInfoModulesManager(): save (V)  | interpreters (NM) info (NM) modules (NM) manager (N) 	++ :: abstract (NM) interpreter (NM) manager (N) 
SPECIAL:NAME:InstallWizard static ArrayList getLocations(): get (V)  | locations (N) 	++ :: array (NM) list (N)  :: install (NM) wizard (N) 
SPECIAL:NAME:BookOrder String getPhoneNumber(): get (V)  | phone (NM) number (NI) 	++ :: string (NI)  :: book (NM) order (N) 
SPECIAL:NAME:ObjectOutputStream boolean setBlockDataMode(boolean on): set (V)  | block (NM) data (NM) mode (N) 	++ :: [ boolean (N) - on (N) ] :: boolean (N)  :: object (NM) output (NM) stream (NI) 
CONSTRUCTOR:NAME:ExitAction ExitAction ExitAction(Doyen parent):  | exit (NM) action (N) 	++ :: [ doyen (N) - parent (N) ]
SPECIAL:NAME:DisplaySurface void addLegendLabel(String label, int iconType, Color color, boolean hollow): add (V)  | EQUIV[legend (NM) label (NI) , [ string (NI) - label (NI) ]]	++ :: [ int (N) - icon (NM) type (N) ] :: [ color (N) - color (N) ] :: [ boolean (N) - hollow (N) ] :: display (NM) surface (N) 
EVENT_PARAM:NAME:void propertyChange(PropertyChangeEvent e): handle (V) | property (NM) change (N) 	++ :: [ property (NM) change (NM) event (NI) - e (N) ] :: ANONYMOUS (N)  :: void (N) 
SPECIAL:NAME:CNPReceiverPlan Object executeTask(Object proposal, Object proposal_info): execute (VI)  | task (N) 	++ :: [ object (NI) - proposal (N) ] :: [ object (NI) - proposal (NM) info (NI) ] :: object (NI)  :: CNP (NM) receiver (NM) plan (N) 
NOUN_PHRASE:NAME:IXOLWriter IXOLElement newInvokeConstructor(): get (V) | new (NM) invoke (NM) constructor (N) 	++ :: IXOL (NM) writer (N)  :: IXOL (NM) element (NI) 
SPECIAL:NAME:Msg int getHeaderLength(): get (V)  | header (NM) length (N) 	++ :: int (N)  :: msg (NI) 
BASE_VERB:NAME:AbstractDatabase void requestLock(String lockStr, int transactionIsolationLevel): request (V)  | EQUIV[lock (N) , [ string (NI) - lock (NM) str (NI) ]]	++ :: [ int (N) - transaction (NM) isolation (NM) level (N) ] :: abstract (NM) database (N) 
BASE_VERB:CLAS:HelperProfile void save(): save (V)  | helper (NM) profile (NI) 	++
SPECIAL:NAME:AccessDeniedImpl Event905 addNewEvent905(): add (V)  | new (NM) event (NI) 905 (D) 	++ :: event (NM) 905 (N)  :: access (NM) denied (NM) impl (NI) 
EMPTY:NONE:MKParser boolean jj_3R_20():  | jj (PRE) 3 (D) R (PRE) 20 (D) 
SPECIAL:FORM:PercentageDemo static void main(String args): main (V)  | [ string (NI) - args (N) ]	++ :: percentage (NM) demo (N) 
SPECIAL:NAME:LiteratureForm String getEntityid(): get (V)  | entityid (N) 	++ :: string (NI)  :: literature (NM) form (N) 
BASE_VERB:NAME:SequenceAttributeImpl void mergeAttribute(Attribute other): merge (V)  | EQUIV[attribute (N) , [ attribute (N) - other (DT) ]]	++ :: sequence (NM) attribute (NM) impl (NI) 
SPECIAL:NAME:LimitType String getStyle(): get (V)  | style (N) 	++ :: string (NI)  :: limit (NM) type (N) 
NOUN_PHRASE:NAME:TransactionConnection String nativeSQL(String sql): get (V) | native (NM) SQL (N) 	++ :: [ string (NI) - sql (N) ] :: transaction (NM) connection (N)  :: string (NI) 
SPECIAL:FORM:Vector boolean remove(Object o): remove (V)  | [ object (NI) - o (N) ]	++ :: vector (N)  :: boolean (N) 
SPECIAL:NAME:MethodBindingTestCase void testExcludeList(): test (VI)  | exclude (NM) list (N) 	++ :: method (NM) binding (NM) test (NM) case (N) 
SPECIAL:NAME:InstantiatingTest void testNegation(): test (VI)  | negation (N) 	++ :: instantiating (NM) test (N) 
CONSTRUCTOR:NAME:ValidatorException ValidatorException ValidatorException(String msg, Throwable cause):  | validator (NM) exception (N) 	++ :: [ string (NI) - msg (NI) ] :: [ throwable (N) - cause (N) ]
CONSTRUCTOR:NAME:IndentationSettingsPage IndentationSettingsPage IndentationSettingsPage(SettingsContainer container):  | indentation (NM) settings (NM) page (N) 	++ :: [ settings (NM) container (NI) - container (NI) ]
SPECIAL:NAME:AbstractAtomSet CMLAttribute getDictRefAttribute(): get (V)  | dict (NM) ref (NM) attribute (N) 	++ :: CML (NM) attribute (N)  :: abstract (NM) atom (NM) set (N) 
SPECIAL:NAME:XFramePeer void setMaximizedBounds(Rectangle r): set (V)  | maximized (NM) bounds (N) 	++ :: [ rectangle (N) - r (N) ] :: X (NM) frame (NM) peer (N) 
SPECIAL:NAME:DefaultXPathHandler void startPredicate(): start (V)  | predicate (N) 	++ :: default (NM) X (NM) path (NM) handler (N) 
CONSTRUCTOR:NAME:SPBTimer SPBTimer SPBTimer():  | SPB (NM) timer (N) 	++
SPECIAL:NAME:GridFieldSpec String getDetailsXml(): get (V)  | details (NM) xml (N) 	++ :: string (NI)  :: grid (NM) field (NM) spec (NI) 
SPECIAL:NAME:OutputStream void write_Object(Object x): write (V)  | EQUIV[object (NI) , [ object (NI) - x (N) ]]	++ :: output (NM) stream (NI) 
SPECIAL:NAME:AbstractChartDataModel Class getColumnClass(): get (V)  | column (NM) class (NI) 	++ :: class (NI)  :: abstract (NM) chart (NM) data (NM) model (NI) 
SPECIAL:FORM:DateParser static boolean check(StringTokenizer st, String token): check (VI)  | [ string (NM) tokenizer (N) - st (N) ]	++ :: [ string (NI) - token (N) ] :: date (NM) parser (N)  :: boolean (N) 
ENDS_WITH_ED:NAME:PropertyBearerListener void propertyBearerDeregistered(PropertyBearerDeregistrationEvent pbde): handle (V) | property (NM) bearer (NM) deregistered (N) 	++ :: [ property (NM) bearer (NM) deregistration (NM) event (NI) - pbde (N) ] :: property (NM) bearer (NM) listener (N)  :: void (N) 
SPECIAL:NAME:TasksComingDueSummaryData void setCompletedTaskCount(int completedTaskCount): set (V)  | completed (NM) task (NM) count (N) 	++ :: [ int (N) - completed (NM) task (NM) count (N) ] :: tasks (NM) coming (NM) due (NM) summary (NM) data (NI) 
SPECIAL:NAME:Data void addChangeListener(DatasetChangeListener listener): add (V)  | EQUIV[change (NM) listener (N) , [ dataset (NM) change (NM) listener (N) - listener (N) ]]	++ :: data (NI) 
CONSTRUCTOR:NAME:DirectoryManager DirectoryManager DirectoryManager():  | directory (NM) manager (N) 	++
SPECIAL:NAME:GuitarEditPanel void constructGui(): construct (V)  | gui (N) 	++ :: guitar (NM) edit (NM) panel (N) 
SPECIAL:NAME:JDBCRelationshipRoleMetaData JDBCRelationshipRoleMetaData getRelatedRole(): get (V)  | related (NM) role (N) 	++ :: JDBC (NM) relationship (NM) role (NM) meta (NM) data (NI)  :: JDBC (NM) relationship (NM) role (NM) meta (NM) data (NI) 
SPECIAL:NAME:Versioned static DistributedVersionManager getLocalVersionManager(): get (V)  | local (NM) version (NM) manager (N) 	++ :: distributed (NM) version (NM) manager (N)  :: versioned (N) 
CONSTRUCTOR:NAME:FeapUI FeapUI FeapUI():  | feap (NM) UI (N) 	++
CONSTRUCTOR:NAME:AccessibleJSplitPane AccessibleJSplitPane AccessibleJSplitPane(JSplitPane component):  | accessible (NM) J (NM) split (NM) pane (N) 	++ :: [ J (NM) split (NM) pane (N) - component (N) ]
SPECIAL:CLAS:AbstractProxy void load(): load (V)  | abstract (NM) proxy (NI) 	++
SPECIAL:FORM:ExternalFunction create(LogicFactory logicFactory, SPARQLValueFactory valueFactory): create (V)  | [ logic (NM) factory (N) - logic (NM) factory (N) ]	++ :: [ SPARQL (NM) value (NM) factory (N) - value (NM) factory (N) ] :: ANONYMOUS (N)  :: external (NM) function (N) 
SPECIAL:NAME:Bill Vector addInstances(Vector v, int num_months): add (V)  | instances (N) 	++ :: [ vector (N) - v (N) ] :: [ int (N) - num (NM) months (N) ] :: vector (N)  :: bill (N) 
ENDS_WITH_ED:NAME:void actionPerformed(ActionEvent e): handle (V) | action (NM) performed (N) 	++ :: [ action (NM) event (NI) - e (N) ] :: ANONYMOUS (N)  :: void (N) 
SPECIAL:NAME:PluginsServlet void setConfiguredPlugins(PluginDetail plugins): set (V)  | configured (NM) plugins (N) 	++ :: [ plugin (NM) detail (NI) - plugins (N) ] :: plugins (NM) servlet (N) 
ED_VERB:NAME:FitnessFunction int requiredChromosomeSize(): required (V)  | chromosome (NM) size (N) 	++ :: int (N)  :: fitness (NM) function (N) 
V_3P_IRR:NAME:TableModificationRelBase boolean isDelete(): is (V)  | delete (N) 	++ :: boolean (N)  :: table (NM) modification (NM) rel (NM) base (N) 
SPECIAL:NAME:DiceSingle int getDiceValue(): get (V)  | dice (NM) value (NI) 	++ :: int (N)  :: dice (NM) single (N) 
SPECIAL:NAME:RenameParameterListener JDialog createDialog(): create (V)  | dialog (N) 	++ :: J (NM) dialog (N)  :: rename (NM) parameter (NM) listener (N) 
SPECIAL:NAME:Macro void setEscape(boolean flag): set (V)  | escape (N) 	++ :: [ boolean (N) - flag (N) ] :: macro (N) 
SPECIAL:NAME:ListFormDisplayBoxTag void setHeaderbgcolor(String backgroundColor): set (V)  | headerbgcolor (N) 	++ :: [ string (NI) - background (NM) color (N) ] :: list (NM) form (NM) display (NM) box (NM) tag (NI) 
SPECIAL:NAME:ProfiledCallableStatement ParameterMetaData getParameterMetaData(): get (V)  | parameter (NM) meta (NM) data (NI) 	++ :: parameter (NM) meta (NM) data (NI)  :: profiled (NM) callable (NM) statement (NI) 
NOUN_PHRASE:NAME:CompressionExternalFactoryTokenAggregate Queue<TokenAggregate<A>> newInstance(Object parameters): get (V) | new (NM) instance (NI) 	++ :: [ object (NI) - parameters (N) ] :: compression (NM) external (NM) factory (NM) token (NM) aggregate (N)  :: queue (NM) token (NM) aggregate (NM) A (N) 
BASE_VERB:NAME:GPFunctionSet static GPFunctionSet functionSetFor(String functionSetName, EvolutionState state): function (V)  | EQUIV[set (N) , [ string (NI) - function (NM) set (NM) name (NI) ]]-- for (P) [ string (NI) - function (NM) set (NM) name (NI) ]	++ :: [ evolution (NM) state (N) - state (N) ] :: GP (NM) function (NM) set (N)  :: GP (NM) function (NM) set (N) 
SPECIAL:CLAS:PartyClassificationGroupServices static PartyClassificationGroup findByPrimaryKeyGeneric(GenericDelegator delegator, String partyClassificationGroupId, boolean cache): find (V)  | party (NM) classification (NM) group (NM) services (N) -- by (P) primary (NM) key (NM) generic (N) 	++ :: [ generic (NM) delegator (N) - delegator (N) ] :: [ string (NI) - party (NM) classification (NM) group (NM) id (NI) ] :: [ boolean (N) - cache (N) ] :: party (NM) classification (NM) group (N) 
ENDS_WITH_ED:NAME:Iterators static Iterator<E> filtered(Iterator<E> delegate, Filter<? super E> filter): handle (V) | filtered (N) 	++ :: [ iterator (NM) E (N) - delegate (N) ] :: iterators (N)  :: iterator (NM) E (N) 
SPECIAL:NAME:ChangePasswordDialog static boolean checkEnforcement(char password): check (VI)  | enforcement (N) 	++ :: [ char (N) - password (N) ] :: boolean (N)  :: change (NM) password (NM) dialog (N) 
BASE_VERB:NAME:LineDrawer void XORErase(): XOR (V)  | erase (N) 	++ :: line (NM) drawer (N) 
ENDS_WITH_ED:NAME:ObjectEditor void internalFrameClosed(InternalFrameEvent internalFrameEvent): handle (V) | internal (NM) frame (NM) closed (N) 	++ :: [ internal (NM) frame (NM) event (NI) - internal (NM) frame (NM) event (NI) ] :: object (NM) editor (N)  :: void (N) 
SPECIAL:NAME:STAXVersion String getVersion(): get (V)  | version (N) 	++ :: string (NI)  :: STAX (NM) version (N) 
SPECIAL:NAME:LwWinLayer LwLayout getDefaultLayout(): get (V)  | default (NM) layout (N) 	++ :: lw (NM) layout (N)  :: lw (NM) win (NM) layer (N) 
SPECIAL:NAME:RdcConstraint void checkAllValid(): check (VI)  | all (DT) valid (N) 	++ :: rdc (NM) constraint (N) 
CONSTRUCTOR:NAME:PhetJComponent PhetJComponent PhetJComponent(Component ap, JComponent component):  | phet (NM) J (NM) component (N) 	++ :: [ component (N) - ap (N) ] :: [ J (NM) component (N) - component (N) ]
ENDS_WITH_ED:NAME:ItemListener void itemStateChanged(ItemEvent event): handle (V) | item (NM) state (NM) changed (N) 	++ :: [ item (NM) event (NI) - event (NI) ] :: item (NM) listener (N)  :: void (N) 
V_3P_IRR:NAME:Grant boolean isGrant(): is (V)  | grant (N) 	++ :: boolean (N)  :: grant (N) 
SPECIAL:NAME:TextToXMLDialog void setStatus(String s): set (V)  | status (N) 	++ :: [ string (NI) - s (N) ] :: text (NM) to (NM) XML (NM) dialog (N) 
SPECIAL:NAME:Node void setString(String path, Object o): set (V)  | string (NI) 	++ :: [ string (NI) - path (NI) ] :: [ object (NI) - o (N) ] :: node (NI) 
V_3P_IRR:NAME:LocaleEditor boolean isPaintable(): is (V)  | paintable (N) 	++ :: boolean (N)  :: locale (NM) editor (N) 
EMPTY:NONE:ManyMembers2 void d1137():  | d (PRE) 1137 (D) 
V_3P_IRR:NAME:SOTACentroidExpressionViewer boolean isLegalPosition(int row, int column): is (V)  | legal (NM) position (N) 	++ :: [ int (N) - row (N) ] :: [ int (N) - column (N) ] :: boolean (N)  :: SOTA (NM) centroid (NM) expression (NM) viewer (N) 
SPECIAL:NAME:Molecule boolean deleteAtom(Atom atom): delete (V)  | EQUIV[atom (N) , [ atom (N) - atom (N) ]]	++ :: boolean (N)  :: molecule (N) 
BASE_VERB:FORM:TIf Object apply(SwitchWithReturn sw, Object param): apply (V)  | [ switch (NM) with (NM) return (N) - sw (N) ]	++ :: [ object (NI) - param (N) ] :: T (NM) if (NI)  :: object (NI) 
SPECIAL:NAME:JToggleButtonComponent void setEditable(boolean editable): set (V)  | editable (N) 	++ :: [ boolean (N) - editable (N) ] :: J (NM) toggle (NM) button (NM) component (N) 
SPECIAL:NAME:HttpConfig void setSslProtocol(String sslProtocol): set (V)  | ssl (NM) protocol (N) 	++ :: [ string (NI) - ssl (NM) protocol (N) ] :: http (NM) config (NI) 
SPECIAL:NAME:VMEventRequestManager void addBreakpointRequest(String qName, int line): add (V)  | breakpoint (NM) request (N) 	++ :: [ string (NI) - q (NM) name (NI) ] :: [ int (N) - line (N) ] :: VM (NM) event (NM) request (NM) manager (N) 
SPECIAL:NAME:ActiveCustomer RecordDescriptor getDescriptor(): get (V)  | descriptor (NI) 	++ :: record (NM) descriptor (NI)  :: active (NM) customer (N) 
CONSTRUCTOR:NAME:MonitorTab MonitorTab MonitorTab(MonitorModel model, boolean mandatory, Icon icon):  | monitor (NM) tab (N) 	++ :: [ monitor (NM) model (NI) - model (NI) ] :: [ boolean (N) - mandatory (N) ] :: [ icon (N) - icon (N) ]
SPECIAL:NAME:StreamEmitter void endCDATA(): end (V)  | CDATA (N) 	++ :: stream (NM) emitter (N) 
SPECIAL:NAME:RMIMasterSocketFactory Socket checkConnector(AsyncConnector connector): check (VI)  | EQUIV[connector (N) , [ async (NM) connector (N) - connector (N) ]]	++ :: socket (N)  :: RMI (NM) master (NM) socket (NM) factory (N) 
SPECIAL:NAME:HttpRequestEvent void setHost(String host): set (V)  | host (N) 	++ :: [ string (NI) - host (N) ] :: http (NM) request (NM) event (NI) 
SPECIAL:NAME:Sg_as_event_typeTYPE_Helper static Serializer getSerializer(String mechType, Class _javaType, QName _xmlType): get (V)  | serializer (N) 	++ :: [ string (NI) - mech (NM) type (N) ] :: [ class (NI) - java (NM) type (N) ] :: [ Q (NM) name (NI) - xml (NM) type (N) ] :: serializer (N)  :: sg (NM) as (NM) event (NM) type (NM) TYPE (NM) helper (N) 
CONSTRUCTOR:NAME:MCRDirectoryXML MCRDirectoryXML MCRDirectoryXML():  | MCR (NM) directory (NM) XML (N) 	++
SPECIAL:NAME:SiteUINode AuthFilter getAuthFilter(): get (V)  | auth (NM) filter (N) 	++ :: auth (NM) filter (N)  :: site (NM) UI (NM) node (NI) 
BASE_VERB:NAME:WAPI void terminateProcessInstance(String procInstId): terminate (V)  | process (NM) instance (NI) 	++ :: [ string (NI) - proc (NM) inst (NM) id (NI) ] :: WAPI (N) 
SPECIAL:NAME:SaveImageAction void initNames(): init (V)  | names (N) 	++ :: save (NM) image (NM) action (N) 
SPECIAL:NAME:IURIResolver String getUnsubstitutedLocalizedReferenceText(String uri, String language): get (V)  | unsubstituted (NM) localized (NM) reference (NM) text (NI) 	++ :: [ string (NI) - uri (NI) ] :: [ string (NI) - language (N) ] :: string (NI)  :: IURI (NM) resolver (N) 
CONSTRUCTOR:NAME:br br br(String clear_type):  | br (N) 	++ :: [ string (NI) - clear (NM) type (N) ]
CONSTRUCTOR:NAME:IntegerPersistenceHandler IntegerPersistenceHandler IntegerPersistenceHandler(PersistenceManager pm):  | integer (NM) persistence (NM) handler (N) 	++ :: [ persistence (NM) manager (N) - pm (N) ]
SPECIAL:NAME:LdapUser String getHomepage(): get (V)  | homepage (N) 	++ :: string (NI)  :: ldap (NM) user (N) 
BASE_VERB:NAME:UseGameMouse void updateGame(long currentTime): update (V)  | game (N) 	++ :: [ long (N) - current (NM) time (N) ] :: use (NM) game (NM) mouse (N) 
CONSTRUCTOR:NAME:FileStreamDataStream FileStreamDataStream FileStreamDataStream(String name, Iifstream s, int size, boolean freeOnClose):  | file (NM) stream (NM) data (NM) stream (NI) 	++ :: [ string (NI) - name (NI) ] :: [ iifstream (N) - s (N) ] :: [ int (N) - size (N) ] :: [ boolean (N) - free (NM) on (NM) close (N) ]
CONSTRUCTOR:NAME:AbstractStandardProcessDefinitionEvent AbstractStandardProcessDefinitionEvent AbstractStandardProcessDefinitionEvent(AnyLogicContext alc):  | abstract (NM) standard (NM) process (NM) definition (NM) event (NI) 	++ :: [ any (DT) logic (NM) context (N) - alc (N) ]
BASE_VERB:FORM:CoyoteAdapter static boolean normalize(MessageBytes uriMB): normalize (V)  | [ message (NM) bytes (NI) - uri (NM) MB (N) ]	++ :: coyote (NM) adapter (NI)  :: boolean (N) 
BASE_VERB:FORM:Factory static CountType parse(InputStream is, XmlOptions options): parse (V)  | [ input (NM) stream (NI) - is (N) ]	++ :: [ xml (NM) options (N) - options (N) ] :: factory (N)  :: count (NM) type (N) 
CONSTRUCTOR:NAME:StartServer StartServer StartServer():  | start (NM) server (N) 	++
BASE_VERB:CLAS:Test3LevelGen void tearDown(): tear (V) down (VP)  | test (NM) 3 (NM) level (NM) gen (N) 	++
SPECIAL:NAME:AsnSequence AsnObject findTrapPduv1(): find (V)  | trap (NM) pduv (N) 1 (D) 	++ :: asn (NM) object (NI)  :: asn (NM) sequence (N) 
BASE_VERB:NAME:DepthFirstAdapter void outAOccursClauseClause(AOccursClauseClause node): out (V)  | EQUIV[A (NM) occurs (NM) clause (NM) clause (N) , [ A (NM) occurs (NM) clause (NM) clause (N) - node (NI) ]]	++ :: depth (NM) first (NM) adapter (NI) 
SPECIAL:NAME:FormTag void setName(String name): set (V)  | name (NI) 	++ :: [ string (NI) - name (NI) ] :: form (NM) tag (NI) 
V_3P_IRR:CLAS:AbstractRowsResultSet boolean isAfterLast(): is (V)  | abstract (NM) rows (NM) result (NM) set (N) -- after (P) last (DT) 	++ :: boolean (N) 
SPECIAL:FORM:Parser void process(char text, int off, int len): process (VI)  | [ char (N) - text (NI) ]	++ :: [ int (N) - off (N) ] :: [ int (N) - len (N) ] :: parser (N) 
SPECIAL:NAME:TimeInput void addListener(TimeInputListener l): add (V)  | EQUIV[listener (N) , [ time (NM) input (NM) listener (N) - l (N) ]]	++ :: time (NM) input (NI) 
NOUN_PHRASE:NAME:JavaRecognizer static long mk_tokenSet_1(): get (V) | mk (PRE) token (NM) set (N) 1 (D) 	++ :: java (NM) recognizer (N)  :: long (N) 
NOUN_PHRASE:NAME:Spooler Job_chain job_chain(String name): get (V) | job (NM) chain (N) 	++ :: [ string (NI) - name (NI) ] :: spooler (N)  :: job (NM) chain (N) 
BASE_VERB:NAME:XMLMenuBarConfigurator void storeObjects(): store (V)  | objects (N) 	++ :: XML (NM) menu (NM) bar (NM) configurator (N) 
V_3P_IRR:NAME:CollectionType boolean isLessThan(CollectionType collType): is (V)  | less (DT) than (N) 	++ :: [ collection (NM) type (N) - coll (NM) type (N) ] :: boolean (N)  :: collection (NM) type (N) 
SPECIAL:NAME:SampleGui void addFocusListener(FocusListener l): add (V)  | EQUIV[focus (NM) listener (N) , [ focus (NM) listener (N) - l (N) ]]	++ :: sample (NM) gui (N) 
SPECIAL:NAME:ComposedConditonTest void testIncludeOneFalseNotRequired(): test (VI)  | include (NM) one (NM) false (NM) not (DT) required (N) 	++ :: composed (NM) conditon (NM) test (N) 
SPECIAL:NAME:ComputeResourceFilterData void setMemoryUsage(Pair range): set (V)  | memory (NM) usage (N) 	++ :: [ pair (N) - range (N) ] :: compute (NM) resource (NM) filter (NM) data (NI) 
SPECIAL:NAME:CacheResults void executeQuery(): execute (VI)  | query (N) 	++ :: cache (NM) results (N) 
SPECIAL:NAME:ImporList String getLocation(String line): get (V)  | location (NI) 	++ :: [ string (NI) - line (N) ] :: string (NI)  :: impor (NM) list (N) 
CONSTRUCTOR:NAME:UTF8PrintStream UTF8PrintStream UTF8PrintStream(OutputStream out, boolean autoFlush):  | UTF (NM) 8 (NM) print (NM) stream (NI) 	++ :: [ output (NM) stream (NI) - out (N) ] :: [ boolean (N) - auto (NM) flush (N) ]
SPECIAL:NAME:jcanalciJNI static long get_devItem_filter(long jarg1): get (V)  | dev (NM) item (NM) filter (N) 	++ :: [ long (N) - jarg (NM) 1 (N) ] :: long (N)  :: jcanalci (NM) JNI (N) 
SPECIAL:CLAS:HighLowRenderer Object clone(): clone (V)  | high (NM) low (NM) renderer (N) 	++ :: object (NI) 
SPECIAL:NAME:CycConstant void readObject(ObjectInputStream stream): read (V)  | object (NI) 	++ :: [ object (NM) input (NM) stream (NI) - stream (NI) ] :: cyc (NM) constant (N) 
SPECIAL:NAME:ObstaclePanelUI JLabel getDirectionYLabel(): get (V)  | direction (NM) Y (NM) label (NI) 	++ :: J (NM) label (NI)  :: obstacle (NM) panel (NM) UI (N) 
SPECIAL:NAME:void setValue(Object object, Object value): set (V)  | value (NI) 	++ :: [ object (NI) - object (NI) ] :: [ object (NI) - value (NI) ] :: ANONYMOUS (N) 
SPECIAL:NAME:ImportFilter File getSaveDirectory(): get (V)  | save (NM) directory (N) 	++ :: file (NI)  :: import (NM) filter (N) 
SPECIAL:NAME:ObfuscatorPass1Exporter void getNextToken(): get (V)  | next (DT) token (N) 	++ :: obfuscator (NM) pass (NM) 1 (NM) exporter (N) 
PREP:NAME:DateUtil static String toGeneralizedTime(Date date): convert (V) | to (P) generalized (NM) time (N) 	++ :: [ date (N) - date (N) ] :: date (NM) util (N)  :: string (NI) 
NOUN_PHRASE:NAME:OrderAcMth Variant Name(Variant Detailed, Variant Full): get (V) | name (NI) 	++ :: [ variant (N) - detailed (N) ] :: [ variant (N) - full (N) ] :: order (NM) ac (NM) mth (N)  :: variant (N) 
SPECIAL:NAME:IndexBodyImpl void setListArray(List listArray): set (V)  | list (NM) array (N) 	++ :: [ list (N) - list (NM) array (N) ] :: index (NM) body (NM) impl (NI) 
SPECIAL:CLAS:DigestInputStream int read(): read (V)  | digest (NM) input (NM) stream (NI) 	++ :: int (N) 
CONSTRUCTOR:NAME:JarClassLoader JarClassLoader JarClassLoader(URL urls, ClassLoader parent):  | jar (NM) class (NM) loader (N) 	++ :: [ URL (NI) - urls (N) ] :: [ class (NM) loader (N) - parent (N) ]
NOUN_PHRASE:NAME:LineSegment double projectionFactor(Coordinate p): get (V) | projection (NM) factor (N) 	++ :: [ coordinate (N) - p (NI) ] :: line (NM) segment (N)  :: double (N) 
CONSTRUCTOR:NAME:ionstream_command_ionstreamchannel002 ionstream_command_ionstreamchannel002 ionstream_command_ionstreamchannel002(ionstream_user ionstream_user_id):  | ionstream (NM) command (NM) ionstreamchannel (NM) 002 (N) 	++ :: [ ionstream (NM) user (N) - ionstream (NM) user (NM) id (NI) ]
PREP:NAME:GFXColor Phong toGraph(): convert (V) | to (P) graph (N) 	++ :: GFX (NM) color (N)  :: phong (N) 
SPECIAL:NAME:JavapPrinter void printMethodAttributes(MethodData method): print (V)  | method (NM) attributes (N) 	++ :: [ method (NM) data (NI) - method (N) ] :: javap (NM) printer (N) 
SPECIAL:NAME:JobData int getDay(): get (V)  | day (N) 	++ :: int (N)  :: job (NM) data (NI) 
BASE_VERB:NAME:MimeService void attemptRetry(): attempt (VI)  | retry (N) 	++ :: mime (NM) service (N) 
BASE_VERB:FORM:BaseDirContext void bind(String name, Object obj): bind (V)  | [ string (NI) - name (NI) ]	++ :: [ object (NI) - obj (NI) ] :: base (NM) dir (NM) context (N) 
SPECIAL:NAME:UMLActivity ActivityModel getActivityModel(): get (V)  | activity (NM) model (NI) 	++ :: activity (NM) model (NI)  :: UML (NM) activity (N) 
BASE_VERB:NAME:TextTableCellReferencesService void applyModifications(): apply (V)  | modifications (N) 	++ :: text (NM) table (NM) cell (NM) references (NM) service (N) 
V_3P_IRR:NAME:UserMap String isState(): is (V)  | state (N) 	++ :: string (NI)  :: user (NM) map (N) 
BASE_VERB:NAME:Msgs String msgBpelStateStoreFactoryInstantiationErr(String stateStoreFactory): msg (V)  | bpel (NM) state (NM) store (NM) factory (NM) instantiation (NM) err (N) 	++ :: [ string (NI) - state (NM) store (NM) factory (N) ] :: string (NI)  :: msgs (N) 
SPECIAL:NAME:Main POA getPOA(): get (V)  | POA (N) 	++ :: POA (N)  :: main (N) 
SPECIAL:NAME:jQuake3Eye void setServerListChanged(boolean bool): set (V)  | server (NM) list (NM) changed (N) 	++ :: [ boolean (N) - bool (N) ] :: j (NM) quake (NM) 3 (NM) eye (N) 
SPECIAL:NAME:DefaultFolderConfigTest void testDefaultFolderConfig(): test (VI)  | default (NM) folder (NM) config (NI) 	++ :: default (NM) folder (NM) config (NM) test (N) 
BASE_VERB:FORM:BugSeverityAction ActionForward edit(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response): edit (V)  | [ action (NM) mapping (N) - mapping (N) ]	++ :: [ action (NM) form (N) - form (N) ] :: [ http (NM) servlet (NM) request (N) - request (N) ] :: [ http (NM) servlet (NM) response (N) - response (N) ] :: bug (NM) severity (NM) action (N)  :: action (NM) forward (N) 
CONSTRUCTOR:NAME:MinMaxTypeEnum MinMaxTypeEnum MinMaxTypeEnum(String expressionText):  | min (NM) max (NM) type (NM) enum (NI) 	++ :: [ string (NI) - expression (NM) text (NI) ]
CONSTRUCTOR:NAME:EditPanel_this_focusAdapter EditPanel_this_focusAdapter EditPanel_this_focusAdapter(EditPanel adaptee):  | edit (NM) panel (NM) this (PR) focus (NM) adapter (NI) 	++ :: [ edit (NM) panel (N) - adaptee (N) ]
BASE_VERB:FORM:H2SQLBuilder Object visit(Literal literal, Object data): visit (V)  | [ literal (N) - literal (N) ]	++ :: [ object (NI) - data (NI) ] :: H (NM) 2 (NM) SQL (NM) builder (N)  :: object (NI) 
SPECIAL:NAME:PermissionDescriptor RestrictionDescriptor getRestriction(): get (V)  | restriction (N) 	++ :: restriction (NM) descriptor (NI)  :: permission (NM) descriptor (NI) 
SPECIAL:NAME:PlainDocument Element getParagraphElement(int pos): get (V)  | paragraph (NM) element (NI) 	++ :: [ int (N) - pos (N) ] :: element (NI)  :: plain (NM) document (NI) 
SPECIAL:NAME:RDescriptionListView static BasicController getRightController(RemoteSession s): get (V)  | right (NM) controller (N) 	++ :: [ remote (NM) session (N) - s (N) ] :: basic (NM) controller (N)  :: R (NM) description (NM) list (NM) view (NI) 
SPECIAL:NAME:LinkTag void setTitle(String title): set (V)  | title (N) 	++ :: [ string (NI) - title (N) ] :: link (NM) tag (NI) 
SPECIAL:NAME:ResultSetStub byte getBytes(int columnIndex): get (V)  | bytes (NI) 	++ :: [ int (N) - column (NM) index (NI) ] :: byte (N)  :: result (NM) set (NM) stub (N) 
BASE_VERB:NAME:Unmarshaller void leaveAttribute(String ___uri, String ___local, String ___qname): leave (V)  | attribute (N) 	++ :: [ string (NI) - uri (NI) ] :: [ string (NI) - local (N) ] :: [ string (NI) - qname (N) ] :: unmarshaller (N) 
BASE_VERB:NAME:DefineGrammarSymbols void refExceptionHandler(Token exTypeAndName, Token action): ref (V)  | exception (NM) handler (N) 	++ :: [ token (N) - ex (NM) type (NM) and (NM) name (NI) ] :: [ token (N) - action (N) ] :: define (NM) grammar (NM) symbols (N) 
SPECIAL:FORM:ParticleSystemRendererFactoryMap void __delete(long _pointer_): delete (V)  | [ long (N) - pointer (N) ]	++ :: particle (NM) system (NM) renderer (NM) factory (NM) map (N) 
SPECIAL:NAME:SimplePageBean void setSession(GenieSession session): set (V)  | session (N) 	++ :: [ genie (NM) session (N) - session (N) ] :: simple (NM) page (NM) bean (NI) 
SPECIAL:NAME:ApplicationHttpResponse void setContentType(String type): set (V)  | content (NM) type (N) 	++ :: [ string (NI) - type (N) ] :: application (NM) http (NM) response (N) 
CONSTRUCTOR:NAME:Enum Enum Enum(String s, int i):  | enum (NI) 	++ :: [ string (NI) - s (N) ] :: [ int (N) - i (N) ]
SPECIAL:NAME:AdminAction void createDocIndexedSQL(String sectionName, String doc, int sort_type): create (V)  | doc (NM) indexed (NM) SQL (N) 	++ :: [ string (NI) - section (NM) name (NI) ] :: [ string (NI) - doc (NI) ] :: [ int (N) - sort (NM) type (N) ] :: admin (NM) action (N) 
SPECIAL:CLAS:MockCallableStatement int executeUpdate(): execute (VI) update (V)  | mock (NM) callable (NM) statement (NI) 	++ :: int (N) 
SPECIAL:NAME:Scan void endScan(): end (V)  | scan (N) 	++ :: scan (N) 
SPECIAL:NAME:DrawApplication JMenu createFontSizeMenu(): create (V)  | font (NM) size (NM) menu (N) 	++ :: J (NM) menu (N)  :: draw (NM) application (N) 
SPECIAL:NAME:ItemProxy int getValueSize(List values): get (V)  | value (NM) size (N) 	++ :: [ list (N) - values (N) ] :: int (N)  :: item (NM) proxy (NI) 
SPECIAL:NAME:StereotypeProfileData void setHasWealthSet(WealthSet hasWealthSet): set (V)  | has (NM) wealth (NM) set (N) 	++ :: [ wealth (NM) set (N) - has (NM) wealth (NM) set (N) ] :: stereotype (NM) profile (NM) data (NI) 
SPECIAL:NAME:EclipseElement void setClassPath(ClassPathElement element): set (V)  | class (NM) path (NI) 	++ :: [ class (NM) path (NM) element (NI) - element (NI) ] :: eclipse (NM) element (NI) 
SPECIAL:NAME:Converter void addObject(String name, Object theObject): add (V)  | EQUIV[object (NI) , [ object (NI) - the (DT) object (NI) ]]	++ :: [ string (NI) - name (NI) ] :: converter (N) 
BASE_VERB:FORM:MinOperation Object evaluate(ExpressionTuple expr, ExpressionContext ctx): evaluate (V)  | [ expression (NM) tuple (N) - expr (NI) ]	++ :: [ expression (NM) context (N) - ctx (N) ] :: min (NM) operation (N)  :: object (NI) 
BASE_VERB:NAME:Image void scaleAbsoluteWidth(float newWidth): scale (V)  | EQUIV[absolute (NM) width (N) , [ float (N) - new (NM) width (N) ]]	++ :: image (N) 
SPECIAL:NAME:AssociationTreeObject IMetaObject getMetaObject(): get (V)  | meta (NM) object (NI) 	++ :: I (NM) meta (NM) object (NI)  :: association (NM) tree (NM) object (NI) 
BASE_VERB:NAME:MersenneTwister static boolean e_MersenneTwister_ngenRandInt(CleanVM vm): e (PRE) mersenne (V)  | twister (NM) ngen (NM) rand (NM) int (N) 	++ :: [ clean (NM) VM (N) - vm (N) ] :: boolean (N)  :: mersenne (NM) twister (N) 
SPECIAL:NAME:RepositoryFileManager void addDirectory(String relativePath): add (V)  | directory (N) 	++ :: [ string (NI) - relative (NM) path (NI) ] :: repository (NM) file (NM) manager (N) 
SPECIAL:NAME:NewTimeSheetHandler void setLinks(DisplayList DL): set (V)  | links (N) 	++ :: [ display (NM) list (N) - DL (N) ] :: new (NM) time (NM) sheet (NM) handler (N) 
SPECIAL:NAME:ForumTypeImpl String getForumLastPostMemberName(): get (V)  | forum (NM) last (DT) post (NM) member (NM) name (NI) 	++ :: string (NI)  :: forum (NM) type (NM) impl (NI) 
SPECIAL:NAME:CategoryPlot LegendItemCollection getFixedLegendItems(): get (V)  | fixed (NM) legend (NM) items (N) 	++ :: legend (NM) item (NM) collection (N)  :: category (NM) plot (N) 
ENDS_WITH_ED:NAME:AnswerCanvas void keyPressed(int keyCode): handle (V) | key (NM) pressed (N) 	++ :: [ int (N) - key (NM) code (NI) ] :: answer (NM) canvas (N)  :: void (N) 
SPECIAL:NAME:DelegatingImageSource Object createKey(Image image): create (V)  | key (NI) 	++ :: [ image (N) - image (N) ] :: object (NI)  :: delegating (NM) image (NM) source (NI) 
SPECIAL:NAME:TransformerException void printStackTrace(PrintStream s): print (V)  | stack (NM) trace (N) 	++ :: [ print (NM) stream (NI) - s (N) ] :: transformer (NM) exception (N) 
PREP:NAME:CciTemplate void afterPropertiesSet(): handle (V) | after (NM) properties (NM) set (N) 	++ :: cci (NM) template (N)  :: void (N) 
SPECIAL:NAME:DeltaOutdoorDataMap void setMapResetCount(int unknown1): set (V)  | map (NM) reset (NM) count (N) 	++ :: [ int (N) - unknown (NM) 1 (N) ] :: delta (NM) outdoor (NM) data (NM) map (N) 
SPECIAL:NAME:ReceivedApplicationForm String getPlaceOfBirth(): get (V)  | place (N) -- of (P) birth (N) 	++ :: string (NI)  :: received (NM) application (NM) form (N) 
SPECIAL:NAME:Metric String getObjectName(): get (V)  | object (NM) name (NI) 	++ :: string (NI)  :: metric (N) 
BASE_VERB:FORM:RealGrayImage RealGrayImage diff(RealGrayImage im): diff (V)  | [ real (NM) gray (NM) image (N) - im (N) ]	++ :: real (NM) gray (NM) image (N)  :: real (NM) gray (NM) image (N) 
BASE_VERB:CLAS:WindowsTrayIcon static void cleanUp(): clean (V) up (VP)  | windows (NM) tray (NM) icon (N) 	++
SPECIAL:NAME:XmlDocumentBuilder void setExpandEntityReferences(boolean value): set (V)  | expand (NM) entity (NM) references (N) 	++ :: [ boolean (N) - value (NI) ] :: xml (NM) document (NM) builder (N) 
SPECIAL:NAME:ConnectionImpl KerberosEndpoint getEndpoint(): get (V)  | endpoint (N) 	++ :: kerberos (NM) endpoint (N)  :: connection (NM) impl (NI) 
SPECIAL:NAME:BeanFormButtonsTest void testHasCancel_False(): test (VI)  | has (NM) cancel (NM) false (N) 	++ :: bean (NM) form (NM) buttons (NM) test (N) 
SPECIAL:NAME:ReportContentVO void setSortSeq(Byte sortSeq): set (V)  | sort (NM) seq (N) 	++ :: [ byte (N) - sort (NM) seq (N) ] :: report (NM) content (NM) VO (NI) 
V_3P_IRR:NAME:ResultSetExecutorManagerImpl boolean isRefCursorCall(PreparedStatement statement): is (V)  | ref (NM) cursor (NM) call (N) 	++ :: [ prepared (NM) statement (NI) - statement (NI) ] :: boolean (N)  :: result (NM) set (NM) executor (NM) manager (NM) impl (NI) 
SPECIAL:NAME:SlopeOneRecommender void removePreference(Object userID, Object itemID): remove (V)  | preference (N) 	++ :: [ object (NI) - user (NM) ID (NI) ] :: [ object (NI) - item (NM) ID (NI) ] :: slope (NM) one (NM) recommender (N) 
SPECIAL:NAME:CompositeTagScannerTest void testCompositeTagCorrectionWithSplitLines(): test (VI)  | composite (NM) tag (NM) correction (N) -- with (P) split (NM) lines (N) 	++ :: composite (NM) tag (NM) scanner (NM) test (N) 
SPECIAL:NAME:ILauncherSource OutputStream getOutput(String name): get (V)  | output (N) 	++ :: [ string (NI) - name (NI) ] :: output (NM) stream (NI)  :: I (NM) launcher (NM) source (NI) 
SPECIAL:NAME:DiskRequestData String getFileName(): get (V)  | file (NM) name (NI) 	++ :: string (NI)  :: disk (NM) request (NM) data (NI) 
CONSTRUCTOR:NAME:Artefact Artefact Artefact(String id_art, String n, String ver, String d, long a, String pm, String u, long id_act, String at, String atd, Date date, float effort, float completion, boolean is_global, float estimatedEffort, Date effortEstimationDate, float estimatedFp, Date fpEstimationDate, boolean isSoftware):  | artefact (N) 	++ :: [ string (NI) - id (NM) art (N) ] :: [ string (NI) - n (N) ] :: [ string (NI) - ver (N) ] :: [ string (NI) - d (N) ] :: [ long (N) - a (N) ] :: [ string (NI) - pm (N) ] :: [ string (NI) - u (N) ] :: [ long (N) - id (NM) act (N) ] :: [ string (NI) - at (N) ] :: [ string (NI) - atd (N) ] :: [ date (N) - date (N) ] :: [ float (N) - effort (N) ] :: [ float (N) - completion (N) ] :: [ boolean (N) - is (NM) global (N) ] :: [ float (N) - estimated (NM) effort (N) ] :: [ date (N) - effort (NM) estimation (NM) date (N) ] :: [ float (N) - estimated (NM) fp (N) ] :: [ date (N) - fp (NM) estimation (NM) date (N) ] :: [ boolean (N) - is (NM) software (N) ]
SPECIAL:NAME:VisualCalInterpreter void setAnimationAdapter(AnimationAdapter anad): set (V)  | animation (NM) adapter (NI) 	++ :: [ animation (NM) adapter (NI) - anad (N) ] :: visual (NM) cal (NM) interpreter (N) 
BASE_VERB:FORM:ZipRr void unpack(InputStream is): unpack (V)  | [ input (NM) stream (NI) - is (N) ]	++ :: zip (NM) rr (N) 
SPECIAL:NAME:ThreadGroup String getName(): get (V)  | name (NI) 	++ :: string (NI)  :: thread (NM) group (N) 
SPECIAL:NAME:MProductPricing int getM_PriceList_ID(): get (V)  | M (NM) price (NM) list (NM) ID (NI) 	++ :: int (N)  :: M (NM) product (NM) pricing (N) 
SPECIAL:CLAS:TransferSeedsCommand void setFromPermissionOid(Long fromPermission): set (V)  | transfer (NM) seeds (NM) command (N) -- from (P) permission (NM) oid (N) 	++ :: [ long (N) - from (NM) permission (N) ]
CONSTRUCTOR:NAME:ScrollableDesktopPane ScrollableDesktopPane ScrollableDesktopPane():  | scrollable (NM) desktop (NM) pane (N) 	++
SPECIAL:NAME:ISColumn Class getColumnClass(): get (V)  | column (NM) class (NI) 	++ :: class (NI)  :: IS (NM) column (N) 
SPECIAL:NAME:UltraDevWorkAround void setBigDecimal(int p1, BigDecimal p2): set (V)  | big (NM) decimal (N) 	++ :: [ int (N) - p (NM) 1 (N) ] :: [ big (NM) decimal (N) - p (NM) 2 (N) ] :: ultra (NM) dev (NM) work (NM) around (N) 
SPECIAL:NAME:Marshaller void endElement(ContentHandler handler, String element): end (V)  | EQUIV[element (NI) , [ string (NI) - element (NI) ]]	++ :: [ content (NM) handler (N) - handler (N) ] :: marshaller (N) 
SPECIAL:NAME:PartTypeUseImpl PartTypeUseDocument getXml(): get (V)  | xml (N) 	++ :: part (NM) type (NM) use (NM) document (NI)  :: part (NM) type (NM) use (NM) impl (NI) 
SPECIAL:NAME:MethodGenerator Instruction endDocument(): end (V)  | document (NI) 	++ :: instruction (N)  :: method (NM) generator (N) 
SPECIAL:NAME:NTSharedResBean Enumeration getIndices(): get (V)  | indices (N) 	++ :: enumeration (N)  :: NT (NM) shared (NM) res (NM) bean (NI) 
ENDS_WITH_ED:NAME:void actionPerformed(ActionEvent evt): handle (V) | action (NM) performed (N) 	++ :: [ action (NM) event (NI) - evt (N) ] :: ANONYMOUS (N)  :: void (N) 
SPECIAL:NAME:ConstMFInt32 int get1Value(int index): get (V)  | 1 (D) value (NI) 	++ :: [ int (N) - index (NI) ] :: int (N)  :: const (NM) MF (NM) int (NM) 32 (N) 
CONSTRUCTOR:NAME:CipherInputStream CipherInputStream CipherInputStream(InputStream in):  | cipher (NM) input (NM) stream (NI) 	++ :: [ input (NM) stream (NI) - in (NI) ]
SPECIAL:NAME:Item Part getPartObject(): get (V)  | part (NM) object (NI) 	++ :: part (N)  :: item (NI) 
SPECIAL:NAME:MassQuote String getDefBidSize(): get (V)  | def (NM) bid (NM) size (N) 	++ :: string (NI)  :: mass (NM) quote (N) 
SPECIAL:NAME:MultipleArrayData Experiment createExperiment(int columns, int rows): create (V)  | experiment (N) 	++ :: [ int (N) - columns (N) ] :: [ int (N) - rows (N) ] :: experiment (N)  :: multiple (NM) array (NM) data (NI) 
SPECIAL:NAME:StandardPBEStringEncryptor void setConfig(PBEConfig config): set (V)  | config (NI) 	++ :: [ PBE (NM) config (NI) - config (NI) ] :: standard (NM) PBE (NM) string (NM) encryptor (N) 
BASE_VERB:FORM:AttributeSetId_codec Object serialize(SerializationManager sm, Object type_instance, boolean is_optional, String type_name): serialize (V)  | [ serialization (NM) manager (N) - sm (N) ]	++ :: [ object (NI) - type (NM) instance (NI) ] :: [ string (NI) - type (NM) name (NI) ] :: attribute (NM) set (NM) id (NM) codec (N)  :: [ boolean (N) - is (NM) optional (N) ] :: object (NI) 
CONSTRUCTOR:NAME:CustomChildFilterPropertyConfigurator CustomChildFilterPropertyConfigurator CustomChildFilterPropertyConfigurator(PropertyConfigurator owner):  | custom (NM) child (NM) filter (NM) property (NM) configurator (N) 	++ :: [ property (NM) configurator (N) - owner (N) ]
SPECIAL:FORM:NullWriter int write(CharBuffer source): write (V)  | [ char (NM) buffer (NI) - source (NI) ]	++ :: null (NM) writer (N)  :: int (N) 
SPECIAL:NAME:AntBuildParser ArrayList getTargetList(): get (V)  | target (NM) list (N) 	++ :: array (NM) list (N)  :: ant (NM) build (NM) parser (N) 
SPECIAL:NAME:Event903Document Event903 getEvent903(): get (V)  | event (NI) 903 (D) 	++ :: event (NM) 903 (N)  :: event (NM) 903 (NM) document (NI) 
SPECIAL:NAME:ServletParameterConstraints void setClipAll(boolean clipAll): set (V)  | clip (NM) all (DT) 	++ :: [ boolean (N) - clip (NM) all (DT) ] :: servlet (NM) parameter (NM) constraints (N) 
SPECIAL:NAME:Statement void setFetchDirection(int direction): set (V)  | fetch (NM) direction (N) 	++ :: [ int (N) - direction (N) ] :: statement (NI) 
CONSTRUCTOR:NAME:CommandBuilder CommandBuilder CommandBuilder(MatchDatabaseModel top, int direction):  | command (NM) builder (N) 	++ :: [ match (NM) database (NM) model (NI) - top (N) ] :: [ int (N) - direction (N) ]
VOID_NP:NAME:DtdContext void notationDecl(String name, String publicId, String systemId): handle (V) | notation (NM) decl (NI) 	++ :: [ string (NI) - name (NI) ] :: [ string (NI) - public (NM) id (NI) ] :: [ string (NI) - system (NM) id (NI) ] :: dtd (NM) context (N)  :: void (N) 
SPECIAL:NAME:Job TaskInstance getTaskInstance(): get (V)  | task (NM) instance (NI) 	++ :: task (NM) instance (NI)  :: job (N) 
SPECIAL:NAME:Viewer void CreateLightIntensitySliderAndLabel(): create (V)  | light (NM) intensity (NM) slider (NM) and (NM) label (NI) 	++ :: viewer (N) 
CONSTRUCTOR:NAME:FilterFunction_cos FilterFunction_cos FilterFunction_cos():  | filter (NM) function (NM) cos (N) 	++
EMPTY:NONE:VRML97Parser boolean jj_3_28():  | jj (PRE) 3 (D) 28 (D) 
BASE_VERB:NAME:SnmpTransactionTransportMediatorImplTest void fillRemainingPropertyElements(String transactionLengthInterval, String updateLengthInterval, boolean isBlockedEventTrap): fill (V)  | remaining (NM) property (NM) elements (N) 	++ :: [ string (NI) - transaction (NM) length (NM) interval (N) ] :: [ string (NI) - update (NM) length (NM) interval (N) ] :: [ boolean (N) - is (NM) blocked (NM) event (NM) trap (N) ] :: snmp (NM) transaction (NM) transport (NM) mediator (NM) impl (NM) test (N) 
VOID_NP:NAME:BeanDefinitionParserDelegate void error(String message, Element source, Throwable cause): handle (V) | error (N) 	++ :: [ string (NI) - message (NI) ] :: [ element (NI) - source (NI) ] :: [ throwable (N) - cause (N) ] :: bean (NM) definition (NM) parser (NM) delegate (N)  :: void (N) 
SPECIAL:NAME:SandPersistDef void setMappedStructPrefix(String val): set (V)  | mapped (NM) struct (NM) prefix (N) 	++ :: [ string (NI) - val (NI) ] :: sand (NM) persist (NM) def (NI) 
SPECIAL:NAME:EventSetDescriptor MethodDescriptor getListenerMethodDescriptors(): get (V)  | listener (NM) method (NM) descriptors (N) 	++ :: method (NM) descriptor (NI)  :: event (NM) set (NM) descriptor (NI) 
CONSTRUCTOR:NAME:TextArea TextArea TextArea(int rows, int columns):  | text (NM) area (N) 	++ :: [ int (N) - rows (N) ] :: [ int (N) - columns (N) ]
CONSTRUCTOR:NAME:EventType EventType EventType(String type):  | event (NM) type (N) 	++ :: [ string (NI) - type (N) ]
BASE_VERB:NAME:Core RetCode cdlSeperatingLines(int startIdx, int endIdx, float inOpen, float inHigh, float inLow, float inClose, MInteger outBegIdx, MInteger outNBElement, int outInteger): cdl (PRE) seperating (V)  | lines (N) 	++ :: [ int (N) - start (NM) idx (N) ] :: [ int (N) - end (NM) idx (N) ] :: [ float (N) - in (NM) open (N) ] :: [ float (N) - in (NM) high (N) ] :: [ float (N) - in (NM) low (N) ] :: [ float (N) - in (NM) close (N) ] :: [ M (NM) integer (N) - out (NM) beg (NM) idx (N) ] :: [ M (NM) integer (N) - out (NM) NB (NM) element (NI) ] :: [ int (N) - out (NM) integer (N) ] :: ret (NM) code (NI)  :: core (N) 
BASE_VERB:NAME:FakeEBSchedulerFacade void ignoreCalls(): ignore (V)  | calls (N) 	++ :: fake (NM) EB (NM) scheduler (NM) facade (NI) 
SPECIAL:NAME:DrScenario void resetScenariosPicked(): reset (V)  | scenarios (NM) picked (N) 	++ :: dr (NM) scenario (N) 
V_3P_IRR:NAME:QWidget boolean isVisibleToTLW(): is (V)  | visible (N) -- to (P) TLW (N) 	++ :: boolean (N)  :: Q (NM) widget (N) 
SPECIAL:NAME:AbstractLotusNotesAccount static List<PrimaryKey> findEnabledByMainCountry(String country): find (V)  | enabled (N) -- by (P) EQUIV[main (NM) country (N) , [ string (NI) - country (N) ]]	++ :: list (NM) primary (NM) key (NI)  :: abstract (NM) lotus (NM) notes (NM) account (N) 
CONSTRUCTOR:NAME:FunctionChain FunctionChain FunctionChain(Filter<E> condition, boolean iF, Function<? super E,? extends E> function):  | function (NM) chain (N) 	++ :: [ filter (NM) E (N) - condition (N) ] :: [ boolean (N) - i (NM) F (N) ]
SPECIAL:NAME:TranslateManager static TranslateManager getInstance(): get (V)  | instance (NI) 	++ :: translate (NM) manager (N)  :: translate (NM) manager (N) 
VOID_NP:NAME:void optionChoosed(int option): handle (V) | option (NM) choosed (N) 	++ :: [ int (N) - option (N) ] :: ANONYMOUS (N)  :: void (N) 
SPECIAL:NAME:TypeWriter void createImports(): create (V)  | imports (N) 	++ :: type (NM) writer (N) 
BASE_VERB:CLAS:UndoManager boolean redo(): redo (V)  | undo (NM) manager (N) 	++ :: boolean (N) 
NOUN_PHRASE:NAME:MatchingPairType static MatchingPairType unmarshal(Reader reader): get (V) | unmarshal (N) 	++ :: [ reader (N) - reader (N) ] :: matching (NM) pair (NM) type (N)  :: matching (NM) pair (NM) type (N) 
V_3P_IRR:NAME:Header boolean isInclude_non_active_rows(): is (V)  | include (NM) non (NM) active (NM) rows (N) 	++ :: boolean (N)  :: header (N) 
CONSTRUCTOR:NAME:JizTableModel JizTableModel JizTableModel():  | jiz (NM) table (NM) model (NI) 	++
SPECIAL:NAME:PalmBitSetIntDomain boolean removeVal(int value, int idx, Explanation e): remove (V)  | val (NI) 	++ :: [ int (N) - value (NI) ] :: [ int (N) - idx (N) ] :: [ explanation (N) - e (N) ] :: boolean (N)  :: palm (NM) bit (NM) set (NM) int (NM) domain (N) 
SPECIAL:FORM:Jpeg static void main(String args): main (V)  | [ string (NI) - args (N) ]	++ :: jpeg (N) 
SPECIAL:NAME:ObjectOleImpl Enum getActuate(): get (V)  | actuate (N) 	++ :: enum (NI)  :: object (NM) ole (NM) impl (NI) 
CONSTRUCTOR:NAME:PostgreSQLIndexable PostgreSQLIndexable PostgreSQLIndexable(String id):  | postgre (NM) SQL (NM) indexable (N) 	++ :: [ string (NI) - id (NI) ]
BASE_VERB:CLAS:GuiFirstStart void build(): build (V)  | gui (NM) first (NM) start (N) 	++
BASE_VERB:CLAS:N3AntlrLexer void mRBRACK(boolean _createToken): m (PRE) RBRACK (V)  | N (NM) 3 (NM) antlr (NM) lexer (N) 	++ :: [ boolean (N) - create (NM) token (N) ]
NOUN_PHRASE:NAME:libsbmlJNI static long new_SBMLReader(): get (V) | new (NM) SBML (NM) reader (N) 	++ :: libsbml (NM) JNI (N)  :: long (N) 
SPECIAL:NAME:HtmlInputText String getOndblclick(): get (V)  | ondblclick (N) 	++ :: string (NI)  :: html (NM) input (NM) text (NI) 
BASE_VERB:NAME:InterceptFieldTransformer void begin_class(int version, int access, String className, Type superType, Type interfaces, String sourceFile): begin (V)  | EQUIV[class (NI) , [ string (NI) - class (NM) name (NI) ]]	++ :: [ int (N) - version (N) ] :: [ int (N) - access (N) ] :: [ type (N) - super (NM) type (N) ] :: [ type (N) - interfaces (N) ] :: [ string (NI) - source (NM) file (NI) ] :: intercept (NM) field (NM) transformer (N) 
SPECIAL:NAME:SsTemplateContext Object setPageVariable(String key, Object value): set (V)  | page (NM) variable (N) 	++ :: [ string (NI) - key (NI) ] :: [ object (NI) - value (NI) ] :: object (NI)  :: ss (NM) template (NM) context (N) 
SPECIAL:CLAS:void run(): run (VI)  | ANONYMOUS (N) 	++
BASE_VERB:NAME:XWikiHibernateStore void saveAttachment(XWikiAttachment attachment, boolean parentUpdate, XWikiContext context, boolean bTransaction): save (V)  | EQUIV[attachment (N) , [ X (NM) wiki (NM) attachment (N) - attachment (N) ]]	++ :: [ X (NM) wiki (NM) context (N) - context (N) ] :: [ boolean (N) - parent (NM) update (N) ] :: [ boolean (N) - b (NM) transaction (N) ] :: X (NM) wiki (NM) hibernate (NM) store (N) 
SPECIAL:NAME:SpeedAdjustment short getSinShort(double f, int n): get (V)  | sin (NM) short (N) 	++ :: [ double (N) - f (N) ] :: [ int (N) - n (N) ] :: short (N)  :: speed (NM) adjustment (N) 
V_3P_IRR:NAME:ABSimOCL2JavaMapper boolean isOr(DefaultMutableTreeNode node): is (V)  | or (N) 	++ :: [ default (NM) mutable (NM) tree (NM) node (NI) - node (NI) ] :: boolean (N)  :: AB (NM) sim (NM) OCL (NM) 2 (NM) java (NM) mapper (N) 
BASE_VERB:NAME:NORMAL boolean adjustProperties(): adjust (V)  | properties (N) 	++ :: boolean (N)  :: NORMAL (N) 
SPECIAL:NAME:HiddenTag2Test void testHiddenPropertyValue(): test (VI)  | hidden (NM) property (NM) value (NI) 	++ :: hidden (NM) tag (NM) 2 (NM) test (N) 
SPECIAL:NAME:Node MaterialNode getMaterialNodes(): get (V)  | material (NM) nodes (N) 	++ :: material (NM) node (NI)  :: node (NI) 
SPECIAL:NAME:QueryString QueryString addOrder(String order): add (V)  | EQUIV[order (N) , [ string (NI) - order (N) ]]	++ :: query (NM) string (NI)  :: query (NM) string (NI) 
BASE_VERB:NAME:GameManager void drawPause(Graphics2D g2d): draw (V)  | pause (N) 	++ :: [ graphics (NM) 2 (NM) D (N) - g (NM) 2 (NM) d (N) ] :: game (NM) manager (N) 
PREP:NAME:FtpletContainer FtpletEnum onUploadEnd(FtpRequest request, FtpResponse response): handle (V) | on (NM) upload (NM) end (N) 	++ :: [ ftp (NM) request (N) - request (N) ] :: [ ftp (NM) response (N) - response (N) ] :: ftplet (NM) container (NI)  :: ftplet (NM) enum (NI) 
SPECIAL:NAME:ObjectPermissionServiceTest void setUpRoles(): set (V) up (VP)  | roles (N) 	++ :: object (NM) permission (NM) service (NM) test (N) 
SPECIAL:NAME:AbstractLinkVersionEntryBlock void initStandardBlock(): init (V)  | standard (NM) block (N) 	++ :: abstract (NM) link (NM) version (NM) entry (NM) block (N) 
SPECIAL:NAME:LwLabel LwTextRender getTextRender(): get (V)  | text (NM) render (N) 	++ :: lw (NM) text (NM) render (N)  :: lw (NM) label (NI) 
SPECIAL:NAME:PermissionManager String getValue(Document document, String nodeName): get (V)  | value (NI) 	++ :: [ document (NI) - document (NI) ] :: [ string (NI) - node (NM) name (NI) ] :: string (NI)  :: permission (NM) manager (N) 
BASE_VERB:NAME:RE String substituteImpl(CharIndexed input, String replace, int index, int eflags): substitute (V)  | impl (NI) 	++ :: [ char (NM) indexed (N) - input (NI) ] :: [ string (NI) - replace (N) ] :: [ int (N) - index (NI) ] :: [ int (N) - eflags (N) ] :: string (NI)  :: RE (N) 
SPECIAL:NAME:CompositeCurve List getGenerators(): get (V)  | generators (N) 	++ :: list (N)  :: composite (NM) curve (N) 
SPECIAL:NAME:I_JoFileTransferCompression void addExtension(String anExtension): add (V)  | EQUIV[extension (N) , [ string (NI) - an (DT) extension (N) ]]	++ :: I (NM) jo (NM) file (NM) transfer (NM) compression (N) 
BASE_VERB:NAME:GUITest void closeSignature(): close (V)  | signature (N) 	++ :: GUI (NM) test (N) 
SPECIAL:NAME:NameSet void addSet(Name name, int type, TypedObject set): add (V)  | EQUIV[set (N) , [ typed (NM) object (NI) - set (N) ]]	++ :: [ name (NI) - name (NI) ] :: [ int (N) - type (N) ] :: name (NM) set (N) 
BASE_VERB:NAME:Stock void activateFirstProducer(): activate (VI)  | first (NM) producer (N) 	++ :: stock (N) 
SPECIAL:NAME:TableLayout void setTableListType(boolean value): set (V)  | table (NM) list (NM) type (N) 	++ :: [ boolean (N) - value (NI) ] :: table (NM) layout (N) 
BASE_VERB:NAME:ShoppingCart void updateItemQty(String itemNo, int newQty): update (V)  | EQUIV[item (NM) qty (N) , [ int (N) - new (NM) qty (N) ]]	++ :: [ string (NI) - item (NM) no (DT) ] :: shopping (NM) cart (N) 
PREP:NAME:Param String toString(): convert (V) | to (P) string (NI) 	++ :: param (N)  :: string (NI) 
SPECIAL:NAME:State void setMark(int index_p, int value_p, int mark_p): set (V)  | mark (N) 	++ :: [ int (N) - index (NM) p (NI) ] :: [ int (N) - value (NM) p (NI) ] :: [ int (N) - mark (NM) p (NI) ] :: state (N) 
SPECIAL:NAME:SwitchContainer boolean getSensedActivity(int channel, byte state): get (V)  | sensed (NM) activity (N) 	++ :: [ int (N) - channel (N) ] :: [ byte (N) - state (N) ] :: boolean (N)  :: switch (NM) container (NI) 
SPECIAL:NAME:TableLayout double getRow(int i): get (V)  | row (N) 	++ :: [ int (N) - i (N) ] :: double (N)  :: table (NM) layout (N) 
SPECIAL:NAME:NumberAxis static TickUnitSource createIntegerTickUnits(): create (V)  | integer (NM) tick (NM) units (N) 	++ :: tick (NM) unit (NM) source (NI)  :: number (NM) axis (N) 
SPECIAL:NAME:termLists_inline88_codec static termLists_inline88_codec getCodec(): get (V)  | codec (N) 	++ :: term (NM) lists (NM) inline (NM) 88 (NM) codec (N)  :: term (NM) lists (NM) inline (NM) 88 (NM) codec (N) 
SPECIAL:NAME:DiagramFrameToolBar void setDiagramFrame(DiagramFrame diagramFrame): set (V)  | diagram (NM) frame (N) 	++ :: [ diagram (NM) frame (N) - diagram (NM) frame (N) ] :: diagram (NM) frame (NM) tool (NM) bar (N) 
SPECIAL:NAME:Waehrungskurs String getLoeKz(long vishandle): get (V)  | loe (NM) kz (N) 	++ :: [ long (N) - vishandle (N) ] :: string (NI)  :: waehrungskurs (N) 
SPECIAL:NAME:OaiRepository Iterator getAllInstances(): get (V)  | all (DT) instances (N) 	++ :: iterator (N)  :: oai (NM) repository (N) 
CONSTRUCTOR:NAME:CustomRenderer CustomRenderer CustomRenderer():  | custom (NM) renderer (N) 	++
SPECIAL:NAME:Util static Throwable getNested(Throwable t): get (V)  | nested (N) 	++ :: [ throwable (N) - t (N) ] :: throwable (N)  :: util (N) 
SPECIAL:NAME:LineSplitter String readString(): read (V)  | string (NI) 	++ :: string (NI)  :: line (NM) splitter (N) 
BASE_VERB:FORM:BorderBottomColorMaker Property make(PropertyList propertyList): make (V)  | [ property (NM) list (N) - property (NM) list (N) ]	++ :: border (NM) bottom (NM) color (NM) maker (N)  :: property (N) 
SPECIAL:NAME:Databasess String getFrameId(): get (V)  | frame (NM) id (NI) 	++ :: string (NI)  :: databasess (N) 
VOID_NP:NAME:KMushApp void slotEditPasteFile(): handle (V) | slot (NM) edit (NM) paste (NM) file (NI) 	++ :: K (NM) mush (NM) app (N)  :: void (N) 
SPECIAL:NAME:Technical String getOtherPlatformRequirements(String language): get (V)  | other (DT) platform (NM) requirements (N) 	++ :: [ string (NI) - language (N) ] :: string (NI)  :: technical (N) 
NOUN_PHRASE:NAME:CDBeeTree boolean nextMatchKey(CDBObject cdbo): get (V) | next (DT) match (NM) key (NI) 	++ :: [ CDB (NM) object (NI) - cdbo (N) ] :: CD (NM) bee (NM) tree (NI)  :: boolean (N) 
SPECIAL:NAME:MMIO int _mm_read_I_ULONG(RandomAccessFile fp): mm (PRE) read (V)  | I (NM) ULONG (N) 	++ :: [ random (NM) access (NM) file (NI) - fp (N) ] :: int (N)  :: MMIO (N) 
UNKOWN: :StdOverloadedList static boolean case$dot1568(CleanVM vm):
SPECIAL:NAME:StructureJNI static int get_FSOUND_REVERB_CHANNELPROPERTIES_Room(long jarg1): get (V)  | FSOUND (NM) REVERB (NM) CHANNELPROPERTIES (NM) room (N) 	++ :: [ long (N) - jarg (NM) 1 (N) ] :: int (N)  :: structure (NM) JNI (N) 
SPECIAL:NAME:ChainedException String getMessage(): get (V)  | message (NI) 	++ :: string (NI)  :: chained (NM) exception (N) 
ENDS_WITH_ED:NAME:MyMouseMotionListener void mouseDragged(MouseEvent e): handle (V) | mouse (NM) dragged (N) 	++ :: [ mouse (NM) event (NI) - e (N) ] :: my (PR) mouse (NM) motion (NM) listener (N)  :: void (N) 
SPECIAL:NAME:QueryPreparer ArrayList getParameters(): get (V)  | parameters (N) 	++ :: array (NM) list (N)  :: query (NM) preparer (N) 
SPECIAL:NAME:FailoverConnectionDescriptor SocketAddress getAddress(): get (V)  | address (NI) 	++ :: socket (NM) address (NI)  :: failover (NM) connection (NM) descriptor (NI) 
SPECIAL:NAME:AstPackage EClass getLessOrEqualOp(): get (V)  | less (DT) or (NM) equal (NM) op (N) 	++ :: E (NM) class (NI)  :: ast (NM) package (N) 
SPECIAL:NAME:JMSSource SourceBrowser getSourceBrowser(): get (V)  | source (NM) browser (N) 	++ :: source (NM) browser (N)  :: JMS (NM) source (NI) 
SPECIAL:NAME:MyExcCompare static boolean compareExc(Object actExc, E expExc): compare (V)  | EQUIV[exc (N) , [ object (NI) - act (NM) exc (N) ], [ E (N) - exp (NM) exc (N) ]]	++ :: boolean (N)  :: my (PR) exc (NM) compare (N) 
SPECIAL:NAME:AbstractNativeAccount static List<PrimaryKey> findEnabledByLastName(String name): find (V)  | enabled (N) -- by (P) EQUIV[last (DT) name (NI) , [ string (NI) - name (NI) ]]	++ :: list (NM) primary (NM) key (NI)  :: abstract (NM) native (NM) account (N) 
BASE_VERB:NAME:LocalPhoneBook void unregisterAssistant(Assistant assistant): unregister (V)  | EQUIV[assistant (N) , [ assistant (N) - assistant (N) ]]	++ :: local (NM) phone (NM) book (N) 
SPECIAL:NAME:TicketStatusDAOTest void testRemoveTicketStatus(): test (VI) remove (V)  | ticket (NM) status (N) 	++ :: ticket (NM) status (NM) DAO (NM) test (N) 
SPECIAL:FORM:GtkArgList void add(String name, Object value): add (V)  | [ string (NI) - name (NI) ]	++ :: [ object (NI) - value (NI) ] :: gtk (NM) arg (NM) list (N) 
BASE_VERB:NAME:Alignment boolean scanRecord(PreambleScanning scan): scan (V)  | record (N) 	++ :: [ preamble (NM) scanning (N) - scan (N) ] :: boolean (N)  :: alignment (N) 
BASE_VERB:CLAS:Message Message cloneself(): cloneself (V)  | message (NI) 	++ :: message (NI) 
EVENT_PARAM:NAME:void keyTyped(KeyEvent evt): handle (V) | key (NM) typed (N) 	++ :: [ key (NM) event (NI) - evt (N) ] :: ANONYMOUS (N)  :: void (N) 
SPECIAL:NAME:AbstractUser void setMaxSimDown(int maxSimDown): set (V)  | max (NM) sim (NM) down (N) 	++ :: [ int (N) - max (NM) sim (NM) down (N) ] :: abstract (NM) user (N) 
SPECIAL:NAME:DbEngineBrowser void setCursorFoward(): set (V)  | cursor (NM) foward (N) 	++ :: db (NM) engine (NM) browser (N) 
SPECIAL:NAME:EnhancedDownloadManager String getName(): get (V)  | name (NI) 	++ :: string (NI)  :: enhanced (NM) download (NM) manager (N) 
SPECIAL:NAME:DefaultBoxAndWhiskerXYDataset String getSeriesName(int i): get (V)  | series (NM) name (NI) 	++ :: [ int (N) - i (N) ] :: string (NI)  :: default (NM) box (NM) and (NM) whisker (NM) XY (NM) dataset (N) 
SPECIAL:NAME:NodeWrapperFactory GroupNodeWrapper createGroupNodeWrapper(Group group): create (V)  | group (NM) node (NM) wrapper (NI) 	++ :: [ group (N) - group (N) ] :: group (NM) node (NM) wrapper (NI)  :: node (NM) wrapper (NM) factory (N) 
SPECIAL:FORM:IndentPrintWriter void println(long x): println (V)  | [ long (N) - x (N) ]	++ :: indent (NM) print (NM) writer (N) 
SPECIAL:NAME:TextAreaCopy void setText(String s): set (V)  | text (NI) 	++ :: [ string (NI) - s (N) ] :: text (NM) area (NM) copy (N) 
ENDS_WITH_ED:NAME:void actionPerformed(ActionEvent e): handle (V) | action (NM) performed (N) 	++ :: [ action (NM) event (NI) - e (N) ] :: ANONYMOUS (N)  :: void (N) 
SPECIAL:NAME:SMTPclient SMTPClient getClient(String hostid, int port): get (V)  | client (N) 	++ :: [ string (NI) - hostid (N) ] :: [ int (N) - port (N) ] :: SMTP (NM) client (N)  :: SMT (NM) pclient (N) 
SPECIAL:NAME:LegendTitle void setItemPaint(Paint paint): set (V)  | item (NM) paint (N) 	++ :: [ paint (N) - paint (N) ] :: legend (NM) title (N) 
ENDS_WITH_ED:NAME:PathDialog3 void actionPerformed(ActionEvent event): handle (V) | action (NM) performed (N) 	++ :: [ action (NM) event (NI) - event (NI) ] :: path (NM) dialog (NM) 3 (N)  :: void (N) 
SPECIAL:NAME:ObjectOutputStream void writeFloat(float data): write (V)  | EQUIV[float (N) , [ float (N) - data (NI) ]]	++ :: object (NM) output (NM) stream (NI) 
EVENT_PARAM:NAME:void handlePrintFile(ApplicationEvent event): handle (V) | handle (NM) print (NM) file (NI) 	++ :: [ application (NM) event (NI) - event (NI) ] :: ANONYMOUS (N)  :: void (N) 
BASE_VERB:CLAS:Red Node blacken(): blacken (V)  | red (N) 	++ :: node (NI) 
VOID_NP:NAME:LayoutDirector void newPage(): handle (V) | new (NM) page (N) 	++ :: layout (NM) director (N)  :: void (N) 
CONSTRUCTOR:NAME:IParty IParty IParty():  | I (NM) party (N) 	++
SPECIAL:NAME:ObjectEntity Object executeMethod(String methodName, Object arguments): execute (VI)  | EQUIV[method (N) , [ string (NI) - method (NM) name (NI) ]]	++ :: [ object (NI) - arguments (N) ] :: object (NI)  :: object (NM) entity (N) 
BASE_VERB:NAME:Real void log10(): log (V)  | 10 (D) 	++ :: real (N) 
SPECIAL:NAME:HDIVModels AutocompleterModel getAutocompleter(): get (V)  | autocompleter (N) 	++ :: autocompleter (NM) model (NI)  :: HDIV (NM) models (N) 
CONSTRUCTOR:NAME:Expression Expression Expression(JBasic jb, Tokenizer tokens, SymbolTable symbols):  | expression (N) 	++ :: [ J (NM) basic (N) - jb (N) ] :: [ tokenizer (N) - tokens (N) ] :: [ symbol (NM) table (N) - symbols (N) ]
CONSTRUCTOR:NAME:SwingCapPanel SwingCapPanel SwingCapPanel():  | swing (NM) cap (NM) panel (N) 	++
SPECIAL:FORM:concrete String get(String v): get (V)  | [ string (NI) - v (N) ]	++ :: concrete (N)  :: string (NI) 
SPECIAL:NAME:JsfLayouter HtmlPanelGrid createTable(int columns, String cellpadding, String cellspacing): create (V)  | table (N) 	++ :: [ int (N) - columns (N) ] :: [ string (NI) - cellpadding (N) ] :: [ string (NI) - cellspacing (N) ] :: html (NM) panel (NM) grid (N)  :: jsf (NM) layouter (N) 
SPECIAL:NAME:Player void setDepth(int n): set (V)  | depth (N) 	++ :: [ int (N) - n (N) ] :: player (N) 
SPECIAL:NAME:AbstractStandardFormMessage void setStandardStyle(StandardStyle ss): set (V)  | standard (NM) style (N) 	++ :: [ standard (NM) style (N) - ss (N) ] :: abstract (NM) standard (NM) form (NM) message (NI) 
CONSTRUCTOR:NAME:Attachment Attachment Attachment():  | attachment (N) 	++
V_3P_IRR:NAME:JmsTemplate boolean isExplicitQosEnabled(): is (V)  | explicit (NM) qos (NM) enabled (N) 	++ :: boolean (N)  :: jms (NM) template (N) 
CONSTRUCTOR:NAME:ComandoRiceviMessaggi ComandoRiceviMessaggi ComandoRiceviMessaggi():  | comando (NM) ricevi (NM) messaggi (N) 	++
SPECIAL:NAME:SessionInfo void setDatabaseID(String ak): set (V)  | database (NM) ID (NI) 	++ :: [ string (NI) - ak (N) ] :: session (NM) info (NI) 
SPECIAL:NAME:LuaScriptManager void doOpJoin(String aHubId, String aNick): do (VI)  | op (NM) join (N) 	++ :: [ string (NI) - a (NM) hub (NM) id (NI) ] :: [ string (NI) - a (NM) nick (N) ] :: lua (NM) script (NM) manager (N) 
BASE_VERB:NAME:Unmarshaller void leaveAttribute(String ___uri, String ___local, String ___qname): leave (V)  | attribute (N) 	++ :: [ string (NI) - uri (NI) ] :: [ string (NI) - local (N) ] :: [ string (NI) - qname (N) ] :: unmarshaller (N) 
SPECIAL:NAME:AbstractActiveDirectoryContactMapping String getState(): get (V)  | state (N) 	++ :: string (NI)  :: abstract (NM) active (NM) directory (NM) contact (NM) mapping (N) 
ENDS_WITH_ED:NAME:YesNoCancelDialog boolean yesPressed(): handle (V) | yes (NM) pressed (N) 	++ :: yes (NM) no (DT) cancel (NM) dialog (N)  :: boolean (N) 
NOUN_PHRASE:NAME:LineArea int traitLastLineEndIndent(): get (V) | trait (NM) last (DT) line (NM) end (NM) indent (N) 	++ :: line (NM) area (N)  :: int (N) 
CONSTRUCTOR:NAME:TokenMgrError TokenMgrError TokenMgrError(String message, int reason):  | token (NM) mgr (NM) error (N) 	++ :: [ string (NI) - message (NI) ] :: [ int (N) - reason (N) ]
SPECIAL:NAME:ADT_A27 int getOBXReps(): get (V)  | OBX (NM) reps (N) 	++ :: int (N)  :: ADT (NM) A (NM) 27 (N) 
SPECIAL:NAME:PortletTypeImpl List getSupportedLocale(): get (V)  | supported (NM) locale (N) 	++ :: list (N)  :: portlet (NM) type (NM) impl (NI) 
SPECIAL:NAME:ProductsAttributes String getPricePrefix(): get (V)  | price (NM) prefix (N) 	++ :: string (NI)  :: products (NM) attributes (N) 
SPECIAL:NAME:SerializableServletRequest RequestDispatcher getRequestDispatcher(String p0): get (V)  | request (NM) dispatcher (N) 	++ :: [ string (NI) - p (NM) 0 (N) ] :: request (NM) dispatcher (N)  :: serializable (NM) servlet (NM) request (N) 
VOID_NP:NAME:Blah void Inner(): handle (V) | inner (N) 	++ :: blah (N)  :: void (N) 
SPECIAL:NAME:DeckTable int find_globalid(int globalid): find (V)  | EQUIV[globalid (N) , [ int (N) - globalid (N) ]]	++ :: int (N)  :: deck (NM) table (N) 
BASE_VERB:NAME:ClubOfThorns void step_2(): step (V)  | 2 (D) 	++ :: club (NM) of (NM) thorns (N) 
SPECIAL:NAME:LoginRemoteTest String getModuleName(): get (V)  | module (NM) name (NI) 	++ :: string (NI)  :: login (NM) remote (NM) test (N) 
ENDS_WITH_ED:NAME:PShrimpLabel void displayObjectPositionChanged(Vector currentFocusedOnObjects): handle (V) | display (NM) object (NM) position (NM) changed (N) 	++ :: [ vector (N) - current (NM) focused (NM) on (NM) objects (N) ] :: P (NM) shrimp (NM) label (NI)  :: void (N) 
BASE_VERB:NAME:ClassLibrary Variant RenameClass(Variant Export, Variant Id): rename (V)  | class (NI) 	++ :: [ variant (N) - export (N) ] :: [ variant (N) - id (NI) ] :: variant (N)  :: class (NM) library (N) 
SPECIAL:NAME:Barcode Rectangle getBarcodeSize(): get (V)  | barcode (NM) size (N) 	++ :: rectangle (N)  :: barcode (N) 
BASE_VERB:NAME:Vehicle void leanRight(): lean (V)  | right (N) 	++ :: vehicle (N) 
V_3PS:NAME:StringKeysMap boolean containsKey(Object key): contains (V)  | EQUIV[key (NI) , [ object (NI) - key (NI) ]]	++ :: boolean (N)  :: string (NM) keys (NM) map (N) 
SPECIAL:NAME:GraphObject String getTypeName(): get (V)  | type (NM) name (NI) 	++ :: string (NI)  :: graph (NM) object (NI) 
SPECIAL:CLAS:LicenseEJB void ejbCreate(): ejb (PRE) create (V)  | license (NM) EJB (N) 	++
CONSTRUCTOR:NAME:Rtept Rtept Rtept():  | rtept (N) 	++
EMPTY:NONE:JavaParser boolean jj_3R_240():  | jj (PRE) 3 (D) R (PRE) 240 (D) 
SPECIAL:NAME:JRTemplatePrintText String getPdfEncoding(): get (V)  | pdf (NM) encoding (N) 	++ :: string (NI)  :: JR (NM) template (NM) print (NM) text (NI) 
SPECIAL:NAME:MP3File int getMode(): get (V)  | mode (N) 	++ :: int (N)  :: MP (NM) 3 (NM) file (NI) 
SPECIAL:NAME:TypeImpl Method getDeclaredMethod(int index): get (V)  | declared (NM) method (N) 	++ :: [ int (N) - index (NI) ] :: method (N)  :: type (NM) impl (NI) 
SPECIAL:NAME:SimpleResponse void setContent(String value): set (V)  | content (N) 	++ :: [ string (NI) - value (NI) ] :: simple (NM) response (N) 
SPECIAL:NAME:TraceI void replaceBaseCalls(BaseCall theCalls): replace (V)  | EQUIV[base (NM) calls (N) , [ base (NM) call (N) - the (DT) calls (N) ]]	++ :: trace (NM) I (N) 
SPECIAL:NAME:AmazonRankings double getOurPrice(): get (V)  | our (PR) price (N) 	++ :: double (N)  :: amazon (NM) rankings (N) 
SPECIAL:FORM:int compare(Tuple o1, Tuple o2): compare (V)  | [ tuple (N) - o (NM) 1 (N) ]	++ :: [ tuple (N) - o (NM) 2 (N) ] :: ANONYMOUS (N)  :: int (N) 
SPECIAL:NAME:ReportModelAdapter int getRowCount(): get (V)  | row (NM) count (N) 	++ :: int (N)  :: report (NM) model (NM) adapter (NI) 
SPECIAL:NAME:TextField Dimension getMinimumSize(): get (V)  | minimum (NM) size (N) 	++ :: dimension (N)  :: text (NM) field (N) 
CONSTRUCTOR:NAME:DbSeparateArrayList DbSeparateArrayList DbSeparateArrayList(PainDB db):  | db (NM) separate (NM) array (NM) list (N) 	++ :: [ pain (NM) DB (N) - db (N) ]
SPECIAL:FORM:NewOrderSingle SettlDate get(SettlDate value): get (V)  | [ settl (NM) date (N) - value (NI) ]	++ :: new (NM) order (NM) single (N)  :: settl (NM) date (N) 
SPECIAL:NAME:JellyFishPersistenceManagerFactory void setMaxPool(int arg0): set (V)  | max (NM) pool (N) 	++ :: [ int (N) - arg (NM) 0 (N) ] :: jelly (NM) fish (NM) persistence (NM) manager (NM) factory (N) 
BASE_VERB:FORM:BasicProjectValidatorImpl Errors validate(Object object): validate (VI)  | [ object (NI) - object (NI) ]	++ :: basic (NM) project (NM) validator (NM) impl (NI)  :: errors (N) 
SPECIAL:NAME:Img static String endImg(): end (V)  | img (N) 	++ :: string (NI)  :: img (N) 
BASE_VERB:FORM:FFTEngine static double cos(int index, int n, double table): cos (V)  | [ int (N) - index (NI) ]	++ :: [ int (N) - n (N) ] :: [ double (N) - table (N) ] :: FFT (NM) engine (N)  :: double (N) 
BASE_VERB:CLAS:TitleFilter void deactivate(): deactivate (V)  | title (NM) filter (N) 	++
BASE_VERB:CLAS:CoordinateNode void uninitialize(): uninitialize (V)  | coordinate (NM) node (NI) 	++
SPECIAL:NAME:ComponentSampleModel void setSample(int x, int y, int b, int s, DataBuffer data): set (V)  | sample (N) 	++ :: [ int (N) - x (N) ] :: [ int (N) - y (N) ] :: [ int (N) - b (N) ] :: [ int (N) - s (N) ] :: [ data (NM) buffer (NI) - data (NI) ] :: component (NM) sample (NM) model (NI) 
SPECIAL:NAME:JDocComment Map<String,String> addXdoclet(String name, Map<String,String> attributes): add (V)  | xdoclet (N) 	++ :: [ string (NI) - name (NI) ] :: [ string (NI) - attributes (N) ] :: map (NM) string (NM) string (NI)  :: J (NM) doc (NM) comment (N) 
SPECIAL:NAME:DefaultCssHandler void createOutputFiles(): create (V)  | output (NM) files (N) 	++ :: default (NM) css (NM) handler (N) 
CONSTRUCTOR:NAME:VPAttributeDialog_mouseAdapter VPAttributeDialog_mouseAdapter VPAttributeDialog_mouseAdapter(VPAttributeDialog adaptee):  | VP (NM) attribute (NM) dialog (NM) mouse (NM) adapter (NI) 	++ :: [ VP (NM) attribute (NM) dialog (N) - adaptee (N) ]
SPECIAL:NAME:ListModelAdaptee void removeAdapter(ListModelChangeListener adapter): remove (V)  | EQUIV[adapter (NI) , [ list (NM) model (NM) change (NM) listener (N) - adapter (NI) ]]	++ :: list (NM) model (NM) adaptee (N) 
SPECIAL:NAME:FlexHashtable Integer getInteger(String sKey): get (V)  | integer (N) 	++ :: [ string (NI) - s (NM) key (NI) ] :: integer (N)  :: flex (NM) hashtable (N) 
ENDS_WITH_ED:NAME:ModificaObjetivoAction void actionPerformed(ActionEvent e): handle (V) | action (NM) performed (N) 	++ :: [ action (NM) event (NI) - e (N) ] :: modifica (NM) objetivo (NM) action (N)  :: void (N) 
SPECIAL:NAME:PreventExitSecurityManager void setBlockExit(boolean b): set (V)  | block (NM) exit (N) 	++ :: [ boolean (N) - b (N) ] :: prevent (NM) exit (NM) security (NM) manager (N) 
SPECIAL:NAME:JavaLangAccess AnnotationType getAnnotationType(Class klass): get (V)  | annotation (NM) type (N) 	++ :: [ class (NI) - klass (N) ] :: annotation (NM) type (N)  :: java (NM) lang (NM) access (N) 
SPECIAL:CLAS:ScannerWorker void process(): process (VI)  | scanner (NM) worker (N) 	++
PREP:NAME:String toString(): convert (V) | to (P) string (NI) 	++ :: ANONYMOUS (N)  :: string (NI) 
CONSTRUCTOR:NAME:ForPrinter ForPrinter ForPrinter():  | for (NM) printer (N) 	++
BASE_VERB:CLAS:JEditTextArea int _offsetToX(int line, int offset): offset (V)  | J (NM) edit (NM) text (NM) area (N) -- to (P) X (N) 	++ :: [ int (N) - line (N) ] :: [ int (N) - offset (N) ] :: int (N) 
SPECIAL:CLAS:AnnotationDeletePR void reInit(): re (PRE) init (V)  | annotation (NM) delete (NM) PR (N) 	++
CONSTRUCTOR:NAME:MappedHLMEntity MappedHLMEntity MappedHLMEntity(String name, int mapLineNumber):  | mapped (NM) HLM (NM) entity (N) 	++ :: [ string (NI) - name (NI) ] :: [ int (N) - map (NM) line (NM) number (NI) ]
SPECIAL:NAME:HelpItem void setClassItem(String classname): set (V)  | class (NM) item (NI) 	++ :: [ string (NI) - classname (N) ] :: help (NM) item (NI) 
BASE_VERB:NAME:AWT1UpFrame RenderableLayer buildShapesLayer(): build (V)  | shapes (NM) layer (N) 	++ :: renderable (NM) layer (N)  :: AWT (NM) 1 (NM) up (NM) frame (N) 
V_3P_IRR:NAME:X_A_Asset boolean isProcessing(): is (V)  | processing (N) 	++ :: boolean (N)  :: X (NM) A (NM) asset (N) 
BASE_VERB:NAME:MemoryResultSet void updateBinaryStream(String columnName, InputStream x, int length): update (V)  | EQUIV[binary (NM) stream (NI) , [ input (NM) stream (NI) - x (N) ]]	++ :: [ string (NI) - column (NM) name (NI) ] :: [ int (N) - length (N) ] :: memory (NM) result (NM) set (N) 
BASE_VERB:NAME:Visitor3D Object visitEnter(Object object, boolean asNode, Path path): visit (V)  | enter (N) 	++ :: [ object (NI) - object (NI) ] :: [ path (NI) - path (NI) ] :: [ boolean (N) - as (NM) node (NI) ] :: object (NI)  :: visitor (NM) 3 (NM) D (N) 
PREP:NAME:BasicConstraints String toString(): convert (V) | to (P) string (NI) 	++ :: basic (NM) constraints (N)  :: string (NI) 
BASE_VERB:FORM:MimeMarshaller void marshal(Object graph, Result result, MimeContainer mimeContainer): marshal (V)  | [ object (NI) - graph (N) ]	++ :: [ result (N) - result (N) ] :: [ mime (NM) container (NI) - mime (NM) container (NI) ] :: mime (NM) marshaller (N) 
SPECIAL:NAME:AbstractCompilerWrapper String getDestinationDirectoryParameter(): get (V)  | destination (NM) directory (NM) parameter (N) 	++ :: string (NI)  :: abstract (NM) compiler (NM) wrapper (NI) 
EMPTY:NONE:HtmlBuilder HtmlBuilder h4():  | h (PRE) 4 (D) 
CONSTRUCTOR:NAME:IpSubnetList IpSubnetList IpSubnetList(Vector subnets):  | ip (NM) subnet (NM) list (N) 	++ :: [ vector (N) - subnets (N) ]
SPECIAL:NAME:Help void processMenuItem(MMenuItem item): process (VI)  | EQUIV[menu (NM) item (NI) , [ M (NM) menu (NM) item (NI) - item (NI) ]]	++ :: help (N) 
SPECIAL:NAME:CMSynergyBaselinePublisherPanel void addComponents(): add (V)  | components (N) 	++ :: CM (NM) synergy (NM) baseline (NM) publisher (NM) panel (N) 
SPECIAL:NAME:SOSDate static void setDateTimeFormat(String dateTimeFormat): set (V)  | date (NM) time (NM) format (NI) 	++ :: [ string (NI) - date (NM) time (NM) format (NI) ] :: SOS (NM) date (N) 
SPECIAL:NAME:JarCreator String getRelativePath(File dirF, File baseDirF): get (V)  | relative (NM) path (NI) 	++ :: [ file (NI) - dir (NM) F (N) ] :: [ file (NI) - base (NM) dir (NM) F (N) ] :: string (NI)  :: jar (NM) creator (N) 
BASE_VERB:FORM:EnvelopeImpl void output(OutputStream out, boolean isFastInfoset): output (V)  | [ output (NM) stream (NI) - out (N) ]	++ :: envelope (NM) impl (NI)  :: [ boolean (N) - is (NM) fast (NM) infoset (N) ]
CONSTRUCTOR:NAME:LurqlPathSpec LurqlPathSpec LurqlPathSpec(List<LurqlQueryNode> branches, LurqlPathSpec gatherThen, boolean gatherParent):  | lurql (NM) path (NM) spec (NI) 	++ :: [ list (NM) lurql (NM) query (NM) node (NI) - branches (N) ] :: [ lurql (NM) path (NM) spec (NI) - gather (NM) then (N) ] :: [ boolean (N) - gather (NM) parent (N) ]
SPECIAL:NAME:SAXReader void startPrefixMapping(String prefix, String uri): start (V)  | prefix (NM) mapping (N) 	++ :: [ string (NI) - prefix (N) ] :: [ string (NI) - uri (NI) ] :: SAX (NM) reader (N) 
SPECIAL:NAME:Coordinates Print getPrintObject(): get (V)  | print (NM) object (NI) 	++ :: print (N)  :: coordinates (N) 
SPECIAL:FORM:NodeBean Integer ejbCreate(Integer id, String title, NodeLocal parent, UserLocal owner): ejb (PRE) create (V)  | [ integer (N) - id (NI) ]	++ :: [ string (NI) - title (N) ] :: [ node (NM) local (N) - parent (N) ] :: [ user (NM) local (N) - owner (N) ] :: node (NM) bean (NI)  :: integer (N) 
ENDS_WITH_ED:NAME:void mouseClicked(MouseEvent evt): handle (V) | mouse (NM) clicked (N) 	++ :: [ mouse (NM) event (NI) - evt (N) ] :: ANONYMOUS (N)  :: void (N) 
VOID_NP:NAME:DiffStatusListener void statusUpdate(String message): handle (V) | status (NM) update (N) 	++ :: [ string (NI) - message (NI) ] :: diff (NM) status (NM) listener (N)  :: void (N) 
ENDS_WITH_ED:NAME:MouseHandler void mouseClicked(MouseEvent e): handle (V) | mouse (NM) clicked (N) 	++ :: [ mouse (NM) event (NI) - e (N) ] :: mouse (NM) handler (N)  :: void (N) 
SPECIAL:NAME:AccountUtil static String getShortDescriptionText(StandardAccount sa): get (V)  | short (NM) description (NM) text (NI) 	++ :: [ standard (NM) account (N) - sa (N) ] :: string (NI)  :: account (NM) util (N) 
V_3P_IRR:NAME:ImageGraph boolean hasManyOriginImages(): has (V)  | many (DT) origin (NM) images (N) 	++ :: boolean (N)  :: image (NM) graph (N) 
BASE_VERB:NAME:RadioButtonIcon void paintIcon(Component c, Graphics g, int x, int y): paint (V)  | icon (N) 	++ :: [ component (N) - c (N) ] :: [ graphics (N) - g (N) ] :: [ int (N) - x (N) ] :: [ int (N) - y (N) ] :: radio (NM) button (NM) icon (N) 
BASE_VERB:NAME:Instance Looper featureIterator(): feature (V)  | iterator (N) 	++ :: looper (N)  :: instance (NI) 
PREP:NAME:Status static Status toEnum(int retval): convert (V) | to (P) enum (NI) 	++ :: [ int (N) - retval (N) ] :: status (N)  :: status (N) 
SPECIAL:NAME:Interface Constructor createNewConstructor(jq_Initializer f): create (V)  | new (NM) constructor (N) 	++ :: [ jq (NM) initializer (N) - f (N) ] :: constructor (N)  :: interface (NI) 
CONSTRUCTOR:NAME:MBeanProxyCreationException MBeanProxyCreationException MBeanProxyCreationException(String msg):  | M (NM) bean (NM) proxy (NM) creation (NM) exception (N) 	++ :: [ string (NI) - msg (NI) ]
SPECIAL:NAME:ActionManagerImpl List<Action> getActions(String name): get (V)  | actions (N) 	++ :: [ string (NI) - name (NI) ] :: list (NM) action (N)  :: action (NM) manager (NM) impl (NI) 
SPECIAL:NAME:BarRenderer3D double getYOffset(): get (V)  | Y (NM) offset (N) 	++ :: double (N)  :: bar (NM) renderer (NM) 3 (NM) D (N) 
SPECIAL:NAME:FocusTraversalPolicy Component getComponentBefore(Container root, Component current): get (V)  | EQUIV[component (N) , [ component (N) - current (N) ]]-- before (P) [ container (NI) - root (N) ]	++ :: [ container (NI) - root (N) ] :: component (N)  :: focus (NM) traversal (NM) policy (N) 
BASE_VERB:NAME:MLang static long parseLong_NonNegative(String value, String valueName, int cat): parse (V)  | long (NM) non (NM) negative (N) 	++ :: [ string (NI) - value (NI) ] :: [ string (NI) - value (NM) name (NI) ] :: [ int (N) - cat (N) ] :: long (N)  :: M (NM) lang (N) 
SPECIAL:NAME:Synthesizer Instrument getLoadedInstruments(): get (V)  | loaded (NM) instruments (N) 	++ :: instrument (N)  :: synthesizer (N) 
SPECIAL:NAME:SunClockApplet double getLocationParam(String paramName, String tagString, double defaultValue): get (V)  | EQUIV[location (NM) param (N) , [ string (NI) - param (NM) name (NI) ]]	++ :: [ string (NI) - tag (NM) string (NI) ] :: [ double (N) - default (NM) value (NI) ] :: double (N)  :: sun (NM) clock (NM) applet (N) 
SPECIAL:NAME:DataBaseMenu static void addDataBaseMenu(): add (V)  | data (NM) base (NM) menu (N) 	++ :: data (NM) base (NM) menu (N) 
BASE_VERB:CLAS:OSMMedia void clean(): clean (V)  | OSM (NM) media (N) 	++
BASE_VERB:FORM:OSMTreeEditorBgPanel void paint(Graphics g): paint (V)  | [ graphics (N) - g (N) ]	++ :: OSM (NM) tree (NM) editor (NM) bg (NM) panel (N) 
BASE_VERB:NAME:RuleAnalyzer void outASingleTermUpdate(ASingleTermUpdate node): out (V)  | EQUIV[A (NM) single (NM) term (NM) update (N) , [ A (NM) single (NM) term (NM) update (N) - node (NI) ]]	++ :: rule (NM) analyzer (N) 
BASE_VERB:NAME:XMLTreeParser void parseNode(Node node): parse (V)  | EQUIV[node (NI) , [ node (NI) - node (NI) ]]	++ :: XML (NM) tree (NM) parser (N) 
ENDS_WITH_ED:NAME:ImageCanvas void mouseClicked(MouseEvent e): handle (V) | mouse (NM) clicked (N) 	++ :: [ mouse (NM) event (NI) - e (N) ] :: image (NM) canvas (N)  :: void (N) 
SPECIAL:NAME:PathParser String getRelative(char text, int off, int len): get (V)  | relative (N) 	++ :: [ char (N) - text (NI) ] :: [ int (N) - off (N) ] :: [ int (N) - len (N) ] :: string (NI)  :: path (NM) parser (N) 
SPECIAL:NAME:ELFrameTagHDIV String getNoresizeExpr(): get (V)  | noresize (NM) expr (NI) 	++ :: string (NI)  :: EL (NM) frame (NM) tag (NM) HDIV (N) 
SPECIAL:FORM:T6265400 static void main(String args): main (V)  | [ string (NI) - args (N) ]	++ :: T (NM) 6265400 (N) 
ENDS_WITH_ED:NAME:void actionPerformed(ActionEvent e): handle (V) | action (NM) performed (N) 	++ :: [ action (NM) event (NI) - e (N) ] :: ANONYMOUS (N)  :: void (N) 
SPECIAL:NAME:TTFTable int getChecksum(RandomAccessFile ttf, int offset, int length): get (V)  | checksum (N) 	++ :: [ random (NM) access (NM) file (NI) - ttf (N) ] :: [ int (N) - offset (N) ] :: [ int (N) - length (N) ] :: int (N)  :: TTF (NM) table (N) 
SPECIAL:NAME:OrderCriteria Double getSumLessThan(): get (V)  | sum (NM) less (DT) than (N) 	++ :: double (N)  :: order (NM) criteria (N) 
SPECIAL:CLAS:SeasonalityServices static Seasonality findByPrimaryKey(GenericDelegator delegator, String idName, boolean cache): find (V)  | seasonality (NM) services (N) -- by (P) primary (NM) key (NI) 	++ :: [ generic (NM) delegator (N) - delegator (N) ] :: [ string (NI) - id (NM) name (NI) ] :: [ boolean (N) - cache (N) ] :: seasonality (N) 
SPECIAL:NAME:BasicFactoryInfo String getName(): get (V)  | name (NI) 	++ :: string (NI)  :: basic (NM) factory (NM) info (NI) 
SPECIAL:NAME:Options void setOption(String key, String value): set (V)  | option (N) 	++ :: [ string (NI) - key (NI) ] :: [ string (NI) - value (NI) ] :: options (N) 
SPECIAL:NAME:BSPParser Vector3f getObstacleLocation(Vector3f start, Vector3f dir, float maxDist): get (V)  | obstacle (NM) location (NI) 	++ :: [ vector (NM) 3 (NM) f (N) - start (N) ] :: [ vector (NM) 3 (NM) f (N) - dir (NI) ] :: [ float (N) - max (NM) dist (N) ] :: vector (NM) 3 (NM) f (N)  :: BSP (NM) parser (N) 
SPECIAL:CLAS:BooleanSampleMapContentHandler BooleanSampleMap get(): get (V)  | boolean (NM) sample (NM) map (NM) content (NM) handler (N) 	++ :: boolean (NM) sample (NM) map (N) 
SPECIAL:NAME:BaseFeaturePeer static MapBuilder getMapBuilder(): get (V)  | map (NM) builder (N) 	++ :: map (NM) builder (N)  :: base (NM) feature (NM) peer (N) 
CONSTRUCTOR:NAME:PRCPDBExtManager PRCPDBExtManager PRCPDBExtManager():  | PRCPDB (NM) ext (NM) manager (N) 	++
SPECIAL:NAME:AIScheduleManagerEJBImpl String getHistoryPagerClass(): get (V)  | history (NM) pager (NM) class (NI) 	++ :: string (NI)  :: AI (NM) schedule (NM) manager (NM) EJB (NM) impl (NI) 
SPECIAL:FORM:NoLegs LegCreditRating get(LegCreditRating value): get (V)  | [ leg (NM) credit (NM) rating (N) - value (NI) ]	++ :: no (DT) legs (N)  :: leg (NM) credit (NM) rating (N) 
CONSTRUCTOR:NAME:SubscriptAction SubscriptAction SubscriptAction():  | subscript (NM) action (N) 	++
SPECIAL:NAME:VFlowLayout int getVgap(): get (V)  | vgap (N) 	++ :: int (N)  :: V (NM) flow (NM) layout (N) 
CONSTRUCTOR:NAME:Messages Messages Messages():  | messages (N) 	++
SPECIAL:NAME:ClientDatabaseMetaData String getIdentifierQuoteString(): get (V)  | identifier (NM) quote (NM) string (NI) 	++ :: string (NI)  :: client (NM) database (NM) meta (NM) data (NI) 
SPECIAL:NAME:BSCombinedChartNode Rectangle2D getBottomPlotBounds(): get (V)  | bottom (NM) plot (NM) bounds (N) 	++ :: rectangle (NM) 2 (NM) D (N)  :: BS (NM) combined (NM) chart (NM) node (NI) 
SPECIAL:NAME:NaiveBayesModel void setParameters(Object newX): set (V)  | parameters (N) 	++ :: [ object (NI) - new (NM) X (N) ] :: naive (NM) bayes (NM) model (NI) 
SPECIAL:NAME:EnumAsRadioButtonEditor JComponent getJComponent(): get (V)  | J (NM) component (N) 	++ :: J (NM) component (N)  :: enum (NM) as (NM) radio (NM) button (NM) editor (N) 
SPECIAL:NAME:FieldInstantiatorTest void testStructuredElement(): test (VI)  | structured (NM) element (NI) 	++ :: field (NM) instantiator (NM) test (N) 
CONSTRUCTOR:NAME:HY3dInterfaceCalcul HY3dInterfaceCalcul HY3dInterfaceCalcul():  | HY (NM) 3 (NM) d (NM) interface (NM) calcul (N) 	++
SPECIAL:NAME:SigFactory Sig createSig(MSG msg, MsgGen gen, HBCIPassportList passports): create (V)  | sig (N) 	++ :: [ MSG (NI) - msg (NI) ] :: [ msg (NM) gen (N) - gen (N) ] :: [ HBCI (NM) passport (NM) list (N) - passports (N) ] :: sig (N)  :: sig (NM) factory (N) 
BASE_VERB:NAME:Skill_Track String displayText(): display (V)  | text (NI) 	++ :: string (NI)  :: skill (NM) track (N) 
BASE_VERB:CLAS:PropsRmsManagedConnection void destroy(): destroy (V)  | props (NM) rms (NM) managed (NM) connection (N) 	++
SPECIAL:NAME:MetaInfo char getGroupChar(): get (V)  | group (NM) char (N) 	++ :: char (N)  :: meta (NM) info (NI) 
SPECIAL:NAME:BrowserMainWindow void addStartApplicationMenuItem(String title, CoppeerApplication application): add (V)  | start (NM) application (NM) menu (NM) item (NI) 	++ :: [ string (NI) - title (N) ] :: [ coppeer (NM) application (N) - application (N) ] :: browser (NM) main (NM) window (N) 
SPECIAL:CLAS:ConstantParameterValue ParameterValue duplicate(): duplicate (V)  | constant (NM) parameter (NM) value (NI) 	++ :: parameter (NM) value (NI) 
BASE_VERB:CLAS:ISectionList boolean empty(): empty (V)  | I (NM) section (NM) list (N) 	++ :: boolean (N) 
SPECIAL:NAME:IssueAttachmentBean String getOriginalFileName(): get (V)  | original (NM) file (NM) name (NI) 	++ :: string (NI)  :: issue (NM) attachment (NM) bean (NI) 
SPECIAL:NAME:TitledPanelTag void setTitleLabel(String titleLabel): set (V)  | title (NM) label (NI) 	++ :: [ string (NI) - title (NM) label (NI) ] :: titled (NM) panel (NM) tag (NI) 
SPECIAL:NAME:LightweightLogSummary InfoItem getProcesses(): get (V)  | processes (N) 	++ :: info (NM) item (NI)  :: lightweight (NM) log (NM) summary (N) 
SPECIAL:NAME:ChatMessage Integer getPlayerID(): get (V)  | player (NM) ID (NI) 	++ :: integer (N)  :: chat (NM) message (NI) 
SPECIAL:NAME:RPCHandler void removeUserFromGroup(String userName, String groupName): remove (V)  | EQUIV[user (N) , [ string (NI) - user (NM) name (NI) ]]-- from (P) EQUIV[group (N) , [ string (NI) - group (NM) name (NI) ]]	++ :: [ string (NI) - user (NM) name (NI) ] :: RPC (NM) handler (N) 
SPECIAL:NAME:CompanyVO Access getAccessGlobal(): get (V)  | access (NM) global (N) 	++ :: access (N)  :: company (NM) VO (NI) 
SPECIAL:NAME:REF_I12_PROVIDER CTD getCTD(): get (V)  | CTD (N) 	++ :: CTD (N)  :: REF (NM) I (NM) 12 (NM) PROVIDER (N) 
PREP:NAME:DependencyRelationBuilder String toString(): convert (V) | to (P) string (NI) 	++ :: dependency (NM) relation (NM) builder (N)  :: string (NI) 
ENDS_WITH_ED:NAME:void widgetSelected(SelectionEvent e): handle (V) | widget (NM) selected (N) 	++ :: [ selection (NM) event (NI) - e (N) ] :: ANONYMOUS (N)  :: void (N) 
SPECIAL:NAME:DataAccessPoint void endDataTransfer(): end (V)  | data (NM) transfer (N) 	++ :: data (NM) access (NM) point (N) 
ED_VERB:NAME:XSLTUtil String leftJustify(String justString, String numChars): left (V)  | justify (N) 	++ :: [ string (NI) - just (NM) string (NI) ] :: [ string (NI) - num (NM) chars (N) ] :: string (NI)  :: XSLT (NM) util (N) 
EMPTY:NONE:JavaParser boolean jj_3R_176():  | jj (PRE) 3 (D) R (PRE) 176 (D) 
CONSTRUCTOR:NAME:MemUnit MemUnit MemUnit(Address head, int byteLength):  | mem (NM) unit (N) 	++ :: [ address (NI) - head (N) ] :: [ int (N) - byte (NM) length (N) ]
SPECIAL:NAME:PMPicPolygonalArea Shape getAreaShape(): get (V)  | area (NM) shape (N) 	++ :: shape (N)  :: PM (NM) pic (NM) polygonal (NM) area (N) 
SPECIAL:NAME:ResourcesListener Element getMemoryElement(): get (V)  | memory (NM) element (NI) 	++ :: element (NI)  :: resources (NM) listener (N) 
EVENT_PARAM:NAME:SubreportWizardExistingReport void jRadioButton2jRadioButton1ItemStateChanged1(ItemEvent evt): handle (V) | j (PRE) radio (NM) button (NM) 2 (D) j (NM) radio (NM) button (NM) 1 (D) item (NM) state (NM) changed (N) 1 (D) 	++ :: [ item (NM) event (NI) - evt (N) ] :: subreport (NM) wizard (NM) existing (NM) report (N)  :: void (N) 
SPECIAL:NAME:MetaModel Collection<MetaInclude> getIncludes(): get (V)  | includes (N) 	++ :: collection (NM) meta (NM) include (N)  :: meta (NM) model (NI) 
SPECIAL:NAME:MobileAgentSystem String getMajorVersion(): get (V)  | major (NM) version (N) 	++ :: string (NI)  :: mobile (NM) agent (NM) system (N) 
BASE_VERB:NAME:Unmarshaller void eatText45(String value): eat (V)  | text (NI) 45 (D) 	++ :: [ string (NI) - value (NI) ] :: unmarshaller (N) 
SPECIAL:NAME:AreaSpell void startMove(): start (V)  | move (N) 	++ :: area (NM) spell (N) 
NOUN_PHRASE:NAME:Segment3d Point3d nearest(double x, double y, double z, Point3d nearest): get (V) | nearest (N) 	++ :: [ double (N) - x (N) ] :: [ double (N) - y (N) ] :: [ double (N) - z (N) ] :: [ point (NM) 3 (NM) d (N) - nearest (N) ] :: segment (NM) 3 (NM) d (N)  :: point (NM) 3 (NM) d (N) 
SPECIAL:NAME:DicoSubief3dv5p5 String createNoms(): create (V)  | noms (N) 	++ :: string (NI)  :: dico (NM) subief (NM) 3 (NM) dv (NM) 5 (NM) p (NM) 5 (N) 
SPECIAL:NAME:SQLSelect Vector getWhereClause(): get (V)  | where (NM) clause (N) 	++ :: vector (N)  :: SQL (NM) select (N) 
CONSTRUCTOR:NAME:CompiereColor CompiereColor CompiereColor(Color upperColor, Color lowerColor, int startPoint, int repeatDistance):  | compiere (NM) color (N) 	++ :: [ color (N) - upper (NM) color (N) ] :: [ color (N) - lower (NM) color (N) ] :: [ int (N) - start (NM) point (N) ] :: [ int (N) - repeat (NM) distance (N) ]
BASE_VERB:CLAS:DisplayModeBox void refresh(boolean first): refresh (V)  | display (NM) mode (NM) box (N) 	++ :: [ boolean (N) - first (N) ]
BASE_VERB:NAME:IDictionaryEntryOperations int nSubElements(): n (PRE) sub (V)  | elements (N) 	++ :: int (N)  :: I (NM) dictionary (NM) entry (NM) operations (N) 
ENDS_WITH_ED:NAME:Manager void machine_lastActionPerformed(ActionEvent evt): handle (V) | machine (NM) last (DT) action (NM) performed (N) 	++ :: [ action (NM) event (NI) - evt (N) ] :: manager (N)  :: void (N) 
SPECIAL:NAME:Package String getQualifiedName(): get (V)  | qualified (NM) name (NI) 	++ :: string (NI)  :: package (N) 
ING_VERB:NAME:SongSheet int containingSeq(String seq, int start, String chars, String innerChars): containing (V)  | EQUIV[seq (N) , [ string (NI) - seq (N) ]]	++ :: [ int (N) - start (N) ] :: [ string (NI) - chars (N) ] :: [ string (NI) - inner (NM) chars (N) ] :: int (N)  :: song (NM) sheet (N) 
BASE_VERB:NAME:AHDInterpolator void borderInterpolate(int border): border (V)  | interpolate (N) 	++ :: [ int (N) - border (N) ] :: AHD (NM) interpolator (N) 
SPECIAL:NAME:InetCidr static void checkNoOverlap(List<InetCidr> list): check (VI)  | no (DT) overlap (N) 	++ :: [ list (NM) inet (NM) cidr (N) - list (N) ] :: inet (NM) cidr (N) 
SPECIAL:NAME:List String getSelectedItems(): get (V)  | selected (NM) items (N) 	++ :: string (NI)  :: list (N) 
SPECIAL:NAME:EntryPanel void jCopyActionPerformed(ActionEvent evt): j (PRE) copy (V)  | action (NM) performed (N) 	++ :: [ action (NM) event (NI) - evt (N) ] :: entry (NM) panel (N) 
SPECIAL:NAME:PluginDisplay void initFocus(): init (V)  | focus (N) 	++ :: plugin (NM) display (N) 
VOID_NP:NAME:MetamodBuilder void unionClasses(): handle (V) | union (NM) classes (N) 	++ :: metamod (NM) builder (N)  :: void (N) 
SPECIAL:NAME:StyleDialog void setLibraryStyle(boolean libraryStyle): set (V)  | library (NM) style (N) 	++ :: [ boolean (N) - library (NM) style (N) ] :: style (NM) dialog (N) 
BASE_VERB:NAME:PaupSeqFormat String formatSuffix(): format (V)  | suffix (N) 	++ :: string (NI)  :: paup (NM) seq (NM) format (NI) 
ENDS_WITH_ED:NAME:AfniOrientPanel void actionPerformed(ActionEvent e): handle (V) | action (NM) performed (N) 	++ :: [ action (NM) event (NI) - e (N) ] :: afni (NM) orient (NM) panel (N)  :: void (N) 
SPECIAL:NAME:ComponentImpl Object getObjectFromPath(String path): get (V)  | object (NI) -- from (P) EQUIV[path (NI) , [ string (NI) - path (NI) ]]	++ :: object (NI)  :: component (NM) impl (NI) 
BASE_VERB:NAME:Lookup int identifyLookup(JComboBox cb): identify (V)  | lookup (N) 	++ :: [ J (NM) combo (NM) box (N) - cb (N) ] :: int (N)  :: lookup (N) 
SPECIAL:NAME:RequirementTO Boolean getIsAcceptance(): get (V)  | is (NM) acceptance (N) 	++ :: boolean (N)  :: requirement (NM) TO (N) 
PREP:NAME:OPASplash void onDestroy(): handle (V) | on (NM) destroy (N) 	++ :: OPA (NM) splash (N)  :: void (N) 
SPECIAL:NAME:TestXMLFeatures void testRDFDefaultNamespace(): test (VI)  | RDF (NM) default (NM) namespace (N) 	++ :: test (NM) XML (NM) features (N) 
NOUN_PHRASE:NAME:PDFAction int mode(): get (V) | mode (N) 	++ :: PDF (NM) action (N)  :: int (N) 
SPECIAL:NAME:SliderThumb void setPosX(int position): set (V)  | pos (NM) X (N) 	++ :: [ int (N) - position (N) ] :: slider (NM) thumb (N) 
SPECIAL:NAME:ExprAvedevNode String getAggregationFunctionName(): get (V)  | aggregation (NM) function (NM) name (NI) 	++ :: string (NI)  :: expr (NM) avedev (NM) node (NI) 
SPECIAL:NAME:PacksModel Class getColumnClass(int columnIndex): get (V)  | column (NM) class (NI) 	++ :: [ int (N) - column (NM) index (NI) ] :: class (NI)  :: packs (NM) model (NI) 
SPECIAL:NAME:UserGroup void setCode(String code): set (V)  | code (NI) 	++ :: [ string (NI) - code (NI) ] :: user (NM) group (N) 
SPECIAL:NAME:ResolveTestLive Store getXRIAdministration(): get (V)  | XRI (NM) administration (N) 	++ :: store (N)  :: resolve (NM) test (NM) live (N) 
BASE_VERB:NAME:DBConnector void retryQueuedErrors(): retry (V)  | queued (NM) errors (N) 	++ :: DB (NM) connector (N) 
CONSTRUCTOR:NAME:MidletSuiteProject MidletSuiteProject MidletSuiteProject(IJavaProject javaProject):  | midlet (NM) suite (NM) project (N) 	++ :: [ I (NM) java (NM) project (N) - java (NM) project (N) ]
SPECIAL:NAME:IGMiscTest void testIsURL(): test (VI)  | is (NM) URL (NI) 	++ :: IG (NM) misc (NM) test (N) 
ENDS_WITH_ED:NAME:PostOffice int maxMudMonthsHeld(): handle (V) | max (NM) mud (NM) months (NM) held (N) 	++ :: post (NM) office (N)  :: int (N) 
BASE_VERB:NAME:XMLA_SOAP List discoverDim(String cat, String cube): discover (V)  | dim (N) 	++ :: [ string (NI) - cat (N) ] :: [ string (NI) - cube (N) ] :: list (N)  :: XMLA (NM) SOAP (N) 
SPECIAL:FORM:SynchronizedCollection boolean add(T o): add (V)  | [ T (N) - o (N) ]	++ :: synchronized (NM) collection (N)  :: boolean (N) 
CONSTRUCTOR:NAME:ProgrammeFilterModel ProgrammeFilterModel ProgrammeFilterModel(TvTableModel model, TvList list):  | programme (NM) filter (NM) model (NI) 	++ :: [ tv (NM) table (NM) model (NI) - model (NI) ] :: [ tv (NM) list (N) - list (N) ]
CONSTRUCTOR:NAME:PackageValidatorTest PackageValidatorTest PackageValidatorTest(String name):  | package (NM) validator (NM) test (N) 	++ :: [ string (NI) - name (NI) ]
SPECIAL:NAME:ViewElement String getTitle(): get (V)  | title (N) 	++ :: string (NI)  :: view (NM) element (NI) 
SPECIAL:NAME:Chant_AntTrain void executeMsg(Environmental host, CMMsg msg): execute (VI)  | EQUIV[msg (NI) , [ CM (NM) msg (NI) - msg (NI) ]]	++ :: [ environmental (N) - host (N) ] :: chant (NM) ant (NM) train (N) 
SPECIAL:NAME:CompositionTargetPass void removePass(int idx): remove (V)  | pass (N) 	++ :: [ int (N) - idx (N) ] :: composition (NM) target (NM) pass (N) 
V_3P_IRR:NAME:PropertyGetter boolean isHandledType(Class type): is (V)  | EQUIV[handled (NM) type (N) , [ class (NI) - type (N) ]]	++ :: boolean (N)  :: property (NM) getter (N) 
BASE_VERB:NAME:DefinedVisitor Instruction visitTrueNode(TrueNode iVisited): visit (V)  | EQUIV[true (NM) node (NI) , [ true (NM) node (NI) - i (NM) visited (N) ]]	++ :: instruction (N)  :: defined (NM) visitor (N) 
SPECIAL:FORM:AssignmentReport void set(LegPool value): set (V)  | [ leg (NM) pool (N) - value (NI) ]	++ :: assignment (NM) report (N) 
BASE_VERB:NAME:NoteEvent long rightTickForMove(): right (V)  | tick (N) -- for (P) move (N) 	++ :: long (N)  :: note (NM) event (NI) 
BASE_VERB:NAME:SqlWorker void applyConstraint(Field field, String constraint): apply (V)  | EQUIV[constraint (N) , [ string (NI) - constraint (N) ]]	++ :: [ field (N) - field (N) ] :: sql (NM) worker (N) 
CONSTRUCTOR:NAME:MyFileFilter MyFileFilter MyFileFilter(String extension):  | my (PR) file (NM) filter (N) 	++ :: [ string (NI) - extension (N) ]
BASE_VERB:NAME:md5_hash void round2(int blk): round (V)  | 2 (D) 	++ :: [ int (N) - blk (N) ] :: md (NM) 5 (NM) hash (N) 
SPECIAL:NAME:DataAdapter String getVersion(): get (V)  | version (N) 	++ :: string (NI)  :: data (NM) adapter (NI) 
SPECIAL:NAME:X10WalloutletObject void setName(String name): set (V)  | name (NI) 	++ :: [ string (NI) - name (NI) ] :: X (NM) 10 (NM) walloutlet (NM) object (NI) 
SPECIAL:NAME:ObjectUtil static Object getObjectUsingfindByBoundCreatedDate(String className, Date createdDateFrom, Date createdDateTo): get (V)  | object (NM) usingfind (N) -- by (P) EQUIV[bound (NM) created (NM) date (N) , [ date (N) - created (NM) date (NM) from (N) ], [ date (N) - created (NM) date (NM) to (N) ]]	++ :: [ string (NI) - class (NM) name (NI) ] :: object (NI)  :: object (NM) util (N) 
SPECIAL:NAME:UserProfile void setFullname(String arg): set (V)  | fullname (N) 	++ :: [ string (NI) - arg (N) ] :: user (NM) profile (NI) 
SPECIAL:NAME:BinaryArrayBean void setDataEndian(String aDataEndian): set (V)  | data (NM) endian (N) 	++ :: [ string (NI) - a (NM) data (NM) endian (N) ] :: binary (NM) array (NM) bean (NI) 
SPECIAL:NAME:DasLoader static void doNotDeferNodeExpansion(DOMParser parser): do (VI)  | not (DT) defer (NM) node (NM) expansion (N) 	++ :: [ DOM (NM) parser (N) - parser (N) ] :: das (NM) loader (N) 
BASE_VERB:NAME:Component void firePropertyChange(String propertyName, int oldValue, int newValue): fire (V)  | property (NM) change (N) 	++ :: [ string (NI) - property (NM) name (NI) ] :: [ int (N) - old (NM) value (NI) ] :: [ int (N) - new (NM) value (NI) ] :: component (N) 
ENDS_WITH_ED:NAME:void mouseClicked(MouseEvent e): handle (V) | mouse (NM) clicked (N) 	++ :: [ mouse (NM) event (NI) - e (N) ] :: ANONYMOUS (N)  :: void (N) 
CONSTRUCTOR:NAME:jDBDisconnectGoal jDBDisconnectGoal jDBDisconnectGoal():  | j (NM) DB (NM) disconnect (NM) goal (N) 	++
BASE_VERB:NAME:TestTransposableNode String failMessage(JMLAssertionError e$): fail (V)  | message (NI) 	++ :: [ JML (NM) assertion (NM) error (N) - e (N) ] :: string (NI)  :: test (NM) transposable (NM) node (NI) 
BASE_VERB:CLAS:AttendeeBean void store(): store (V)  | attendee (NM) bean (NI) 	++
CONSTRUCTOR:NAME:RepositoryException RepositoryException RepositoryException(Throwable cause):  | repository (NM) exception (N) 	++ :: [ throwable (N) - cause (N) ]
BASE_VERB:FORM:EvaluatorVisitor Object visit(SimpleNode node, Object data): visit (V)  | [ simple (NM) node (NI) - node (NI) ]	++ :: [ object (NI) - data (NI) ] :: evaluator (NM) visitor (N)  :: object (NI) 
EMPTY:NONE:Skipjack int g4(int w):  | g (PRE) 4 (D) 
SPECIAL:NAME:Kontensatz String getUntBeleg(long vishandle): get (V)  | unt (NM) beleg (N) 	++ :: [ long (N) - vishandle (N) ] :: string (NI)  :: kontensatz (N) 
SPECIAL:NAME:FilePair String getStreamName(): get (V)  | stream (NM) name (NI) 	++ :: string (NI)  :: file (NM) pair (N) 
SPECIAL:NAME:User Double getPosY(): get (V)  | pos (NM) Y (N) 	++ :: double (N)  :: user (N) 
PREP:NAME:ConstraintTicket String toString(): convert (V) | to (P) string (NI) 	++ :: constraint (NM) ticket (N)  :: string (NI) 
CONSTRUCTOR:NAME:address address address():  | address (NI) 	++
CONSTRUCTOR:NAME:ByteBuffer ByteBuffer ByteBuffer():  | byte (NM) buffer (NI) 	++
BASE_VERB:NAME:UnitTestParam void validateValue(String value): validate (VI)  | EQUIV[value (NI) , [ string (NI) - value (NI) ]]	++ :: unit (NM) test (NM) param (N) 
SPECIAL:CLAS:Object execute(): execute (VI)  | ANONYMOUS (N) 	++ :: object (NI) 
BASE_VERB:NAME:FindNodeTreeVisitorProcessor boolean continueProcessing(): continue (V)  | processing (N) 	++ :: boolean (N)  :: find (NM) node (NM) tree (NM) visitor (NM) processor (N) 
CONSTRUCTOR:NAME:ModelViewTransform2D ModelViewTransform2D ModelViewTransform2D(Rectangle2D modelBounds, Rectangle2D viewBounds, boolean invertY):  | model (NM) view (NM) transform (NM) 2 (NM) D (N) 	++ :: [ rectangle (NM) 2 (NM) D (N) - model (NM) bounds (N) ] :: [ rectangle (NM) 2 (NM) D (N) - view (NM) bounds (N) ] :: [ boolean (N) - invert (NM) Y (N) ]
ENDS_WITH_ED:NAME:void actionPerformed(ActionEvent e): handle (V) | action (NM) performed (N) 	++ :: [ action (NM) event (NI) - e (N) ] :: ANONYMOUS (N)  :: void (N) 
SPECIAL:NAME:SIPChartModel void addChartModelListener(ChartModelListener listener): add (V)  | EQUIV[chart (NM) model (NM) listener (N) , [ chart (NM) model (NM) listener (N) - listener (N) ]]	++ :: SIP (NM) chart (NM) model (NI) 
SPECIAL:NAME:TestsOfClosedEvent void testClosedEvent(): test (VI)  | closed (NM) event (NI) 	++ :: tests (NM) of (NM) closed (NM) event (NI) 
CONSTRUCTOR:NAME:WSCvssocket WSCvssocket WSCvssocket(long cPtr, boolean cMemoryOwn):  | WS (NM) cvssocket (N) 	++ :: [ long (N) - c (NM) ptr (N) ] :: [ boolean (N) - c (NM) memory (NM) own (N) ]
SPECIAL:NAME:GroupedStackedBarRenderer void setSeriesToGroupMap(KeyToGroupMap map): set (V)  | series (N) -- to (P) group (NM) map (N) 	++ :: [ key (NM) to (NM) group (NM) map (N) - map (N) ] :: grouped (NM) stacked (NM) bar (NM) renderer (N) 
SPECIAL:NAME:TalkingAboutResponseImpl void setTalkingRefr2Type(String talkingRefr2Type): set (V)  | talking (NM) refr (NM) 2 (D) type (N) 	++ :: [ string (NI) - talking (NM) refr (NM) 2 (NM) type (N) ] :: talking (NM) about (NM) response (NM) impl (NI) 
BASE_VERB:NAME:GenerateTool void compileFiles(): compile (V)  | files (N) 	++ :: generate (NM) tool (N) 
SPECIAL:NAME:XMLFileReaderAM void setDataSourceFileName(String newFileName): set (V)  | data (NM) source (NM) file (NM) name (NI) 	++ :: [ string (NI) - new (NM) file (NM) name (NI) ] :: XML (NM) file (NM) reader (NM) AM (N) 
SPECIAL:NAME:ELPasswordTag String getOndblclickExpr(): get (V)  | ondblclick (NM) expr (NI) 	++ :: string (NI)  :: EL (NM) password (NM) tag (NI) 
CONSTRUCTOR:NAME:ClassPathBuilderTest ClassPathBuilderTest ClassPathBuilderTest(String testName):  | class (NM) path (NM) builder (NM) test (N) 	++ :: [ string (NI) - test (NM) name (NI) ]
BASE_VERB:FORM:UserRoleListDAO void store(Properties props, UserData user): store (V)  | [ properties (N) - props (N) ]	++ :: [ user (NM) data (NI) - user (N) ] :: user (NM) role (NM) list (NM) DAO (N) 
SPECIAL:NAME:CallableStatementProxy void setShort(String p0, short p1): set (V)  | short (N) 	++ :: [ string (NI) - p (NM) 0 (N) ] :: [ short (N) - p (NM) 1 (N) ] :: callable (NM) statement (NM) proxy (NI) 
SPECIAL:NAME:XulButton int getTabIndex(): get (V)  | tab (NM) index (NI) 	++ :: int (N)  :: xul (NM) button (N) 
SPECIAL:NAME:DefaultTrackable void addTracker(Tracker tracker): add (V)  | EQUIV[tracker (N) , [ tracker (N) - tracker (N) ]]	++ :: default (NM) trackable (N) 
SPECIAL:NAME:OptionDialogBorder Insets getBorderInsets(Component c, Insets newInsets): get (V)  | EQUIV[border (NM) insets (N) , [ insets (N) - new (NM) insets (N) ]]	++ :: [ component (N) - c (N) ] :: insets (N)  :: option (NM) dialog (NM) border (N) 
SPECIAL:NAME:RPEvent String getName(): get (V)  | name (NI) 	++ :: string (NI)  :: RP (NM) event (NI) 
NOUN_PHRASE:NAME:DocumentFixedCharSequence int length(): get (V) | length (N) 	++ :: document (NM) fixed (NM) char (NM) sequence (N)  :: int (N) 
SPECIAL:NAME:FixedHeightLayoutCache Rectangle getBounds(TreePath value0, Rectangle value1): get (V)  | bounds (N) 	++ :: [ tree (NM) path (NI) - value (NM) 0 (N) ] :: [ rectangle (N) - value (NM) 1 (N) ] :: rectangle (N)  :: fixed (NM) height (NM) layout (NM) cache (N) 
SPECIAL:NAME:MessageMetaData InternetAddress getSender(): get (V)  | sender (N) 	++ :: internet (NM) address (NI)  :: message (NM) meta (NM) data (NI) 
BASE_VERB:CLAS:StringListModel void clear(): clear (V)  | string (NM) list (NM) model (NI) 	++
SPECIAL:FORM:HC static HC load(Element elem): load (V)  | [ element (NI) - elem (NI) ]	++ :: HC (N)  :: HC (N) 
SPECIAL:NAME:VRML97Saver TextNode createVRML97TextNode(Text3D j3dNode): create (V)  | EQUIV[VRML (NM) 97 (D) text (NM) node (NI) , [ text (NM) 3 (NM) D (N) - j (NM) 3 (NM) d (NM) node (NI) ]]	++ :: text (NM) node (NI)  :: VRML (NM) 97 (NM) saver (N) 
SPECIAL:NAME:TextProperty int getWordIndex(String s): get (V)  | word (NM) index (NI) 	++ :: [ string (NI) - s (N) ] :: int (N)  :: text (NM) property (N) 
BASE_VERB:NAME:SshIO void sendPacket2(SshPacket2 packet): send (V)  | EQUIV[packet (N) 2 (D) , [ ssh (NM) packet (NM) 2 (N) - packet (N) ]]	++ :: ssh (NM) IO (N) 
CONSTRUCTOR:NAME:GuiTestException GuiTestException GuiTestException(String msg):  | gui (NM) test (NM) exception (N) 	++ :: [ string (NI) - msg (NI) ]
BASE_VERB:FORM:ProxyManager void pack(LMU lmu): pack (V)  | [ LMU (N) - lmu (N) ]	++ :: proxy (NM) manager (N) 
BASE_VERB:NAME:Action void attachErrors(HttpServletRequest request, boolean state): attach (V)  | errors (N) 	++ :: [ http (NM) servlet (NM) request (N) - request (N) ] :: [ boolean (N) - state (N) ] :: action (N) 
ENDS_WITH_ED:NAME:JFilterDialog void windowOpened(WindowEvent evt): handle (V) | window (NM) opened (N) 	++ :: [ window (NM) event (NI) - evt (N) ] :: J (NM) filter (NM) dialog (N)  :: void (N) 
UNKOWN: :GenParse static boolean case$dot314(CleanVM vm):
BASE_VERB:CLAS:XANodePoolImpl void clear(): clear (V)  | XA (NM) node (NM) pool (NM) impl (NI) 	++
ED_VERB:NAME:JxBits void bitIterator(BitProcessor handler): bit (V)  | iterator (N) 	++ :: [ bit (NM) processor (N) - handler (N) ] :: jx (NM) bits (N) 
SPECIAL:NAME:wlFrame Vector getSkiplist(): get (V)  | skiplist (N) 	++ :: vector (N)  :: wl (NM) frame (N) 
V_MODAL:CLAS:UserBL boolean canInvoice(): can (VI) invoice (V)  | user (NM) BL (N) 	++ :: boolean (N) 
SPECIAL:NAME:AbstractEntryList int removeFirst(int fromIndex, int toIndex, Object e): remove (V)  | first (N) 	++ :: [ int (N) - from (NM) index (NI) ] :: [ int (N) - to (NM) index (NI) ] :: [ object (NI) - e (N) ] :: int (N)  :: abstract (NM) entry (NM) list (N) 
SPECIAL:NAME:PeriodAxis void setFirst(RegularTimePeriod first): set (V)  | first (N) 	++ :: [ regular (NM) time (NM) period (N) - first (N) ] :: period (NM) axis (N) 
SPECIAL:CLAS:SLLContextMonitor void run(): run (VI)  | SLL (NM) context (NM) monitor (N) 	++
V_3P_IRR:NAME:ImapMessage boolean isExpunged(): is (V)  | expunged (N) 	++ :: boolean (N)  :: imap (NM) message (NI) 
V_3P_IRR:NAME:MethodType static boolean isSetter(String name): is (V)  | setter (N) 	++ :: [ string (NI) - name (NI) ] :: boolean (N)  :: method (NM) type (N) 
BASE_VERB:FORM:Factory static ValueDocument parse(Reader r, XmlOptions options): parse (V)  | [ reader (N) - r (N) ]	++ :: [ xml (NM) options (N) - options (N) ] :: factory (N)  :: value (NM) document (NI) 
SPECIAL:NAME:FillControlDouble int getTargetStartIndex(): get (V)  | target (NM) start (NM) index (NI) 	++ :: int (N)  :: fill (NM) control (NM) double (N) 
SPECIAL:NAME:MixedContentQuery ResultSet getResultSet(Statement statement): get (V)  | result (NM) set (N) 	++ :: [ statement (NI) - statement (NI) ] :: result (NM) set (N)  :: mixed (NM) content (NM) query (N) 
SPECIAL:NAME:ExtensionOption OptionsAuthenticationPanel getOptionsAuthenticationPanel(): get (V)  | options (NM) authentication (NM) panel (N) 	++ :: options (NM) authentication (NM) panel (N)  :: extension (NM) option (N) 
V_MODAL:NAME:ActionMenu void willBecomeVisible(): will (VI) become (V)  | visible (N) 	++ :: action (NM) menu (N) 
SPECIAL:NAME:CategorySheetPanel void setPropertiesValues(Properties prop): set (V)  | properties (NM) values (N) 	++ :: [ properties (N) - prop (N) ] :: category (NM) sheet (NM) panel (N) 
SPECIAL:NAME:TagWriter void startShape(int tagType, int id, Rect outline): start (V)  | shape (N) 	++ :: [ int (N) - tag (NM) type (N) ] :: [ int (N) - id (NI) ] :: [ rect (N) - outline (N) ] :: tag (NM) writer (N) 
SPECIAL:NAME:ConfigurationEditor void setTitle(): set (V)  | title (N) 	++ :: configuration (NM) editor (N) 
ENDS_WITH_ED:NAME:ButtonListener void actionPerformed(ActionEvent ae): handle (V) | action (NM) performed (N) 	++ :: [ action (NM) event (NI) - ae (N) ] :: button (NM) listener (N)  :: void (N) 
SPECIAL:NAME:Network void setFirstInitialization(boolean firstInitialization): set (V)  | first (NM) initialization (N) 	++ :: [ boolean (N) - first (NM) initialization (N) ] :: network (N) 
SPECIAL:NAME:Resonance ChainState findFirstChainState(): find (V)  | first (NM) chain (NM) state (N) 	++ :: chain (NM) state (N)  :: resonance (N) 
CONSTRUCTOR:NAME:Cache Cache Cache():  | cache (N) 	++
SPECIAL:CLAS:SynchronizationManager void execute(): execute (VI)  | synchronization (NM) manager (N) 	++
SPECIAL:NAME:CodeSlingerView void removeFile(): remove (V)  | file (NI) 	++ :: code (NM) slinger (NM) view (NI) 
CONSTRUCTOR:NAME:ScpTest ScpTest ScpTest(String testname):  | scp (NM) test (N) 	++ :: [ string (NI) - testname (N) ]
SPECIAL:NAME:XMLElement Object getAttribute(String name, Object defaultValue): get (V)  | attribute (N) 	++ :: [ string (NI) - name (NI) ] :: [ object (NI) - default (NM) value (NI) ] :: object (NI)  :: XML (NM) element (NI) 
SPECIAL:NAME:EditorData static VisualRange getLastVisualRange(Editor editor): get (V)  | last (DT) visual (NM) range (N) 	++ :: [ editor (N) - editor (N) ] :: visual (NM) range (N)  :: editor (NM) data (NI) 
NOUN_PHRASE:NAME:AssignPermissions IPermission pHolder2AddArray(IUpdatingPermissionManager upm, ArrayList holders): get (V) | p (PRE) holder (NM) 2 (D) add (NM) array (N) 	++ :: [ I (NM) updating (NM) permission (NM) manager (N) - upm (N) ] :: [ array (NM) list (N) - holders (N) ] :: assign (NM) permissions (N)  :: I (NM) permission (N) 
BASE_VERB:NAME:AWTSurfaceLock static boolean lockAndInitHandle(ByteBuffer lock_buffer, Canvas canvas): lock (V)  | and (NM) init (NM) handle (NI) 	++ :: [ byte (NM) buffer (NI) - lock (NM) buffer (NI) ] :: [ canvas (N) - canvas (N) ] :: boolean (N)  :: AWT (NM) surface (NM) lock (N) 
SPECIAL:NAME:SViewFrustrum Vector3df getFarLeftUp(): get (V)  | far (NM) left (NM) up (N) 	++ :: vector (NM) 3 (NM) df (N)  :: S (NM) view (NM) frustrum (N) 
SPECIAL:NAME:ExtendedPanelBeanInfo MethodDescriptor setExtension_chehiuml1_4foundationcoreGeneralizableElementMethodDescriptor(): set (V)  | extension (NM) chehiuml (NM) 1 (D) 4 (D) foundationcore (NM) generalizable (NM) element (NM) method (NM) descriptor (NI) 	++ :: method (NM) descriptor (NI)  :: extended (NM) panel (NM) bean (NM) info (NI) 
SPECIAL:NAME:ConnectToCommunityCommand String getRelativeUrl(): get (V)  | relative (NM) url (NI) 	++ :: string (NI)  :: connect (NM) to (NM) community (NM) command (N) 
SPECIAL:NAME:Span void setRubyArray(Ruby rubyArray): set (V)  | ruby (NM) array (N) 	++ :: [ ruby (N) - ruby (NM) array (N) ] :: span (N) 
BASE_VERB:FORM:UILServerIL SpyMessage receive(ConnectionToken dc, int subscriberId, long wait): receive (V)  | [ connection (NM) token (N) - dc (N) ]	++ :: [ int (N) - subscriber (NM) id (NI) ] :: [ long (N) - wait (N) ] :: UIL (NM) server (NM) IL (N)  :: spy (NM) message (NI) 
SPECIAL:NAME:YTableButtonGroup Object getSelectedId(): get (V)  | selected (NM) id (NI) 	++ :: object (NI)  :: Y (NM) table (NM) button (NM) group (N) 
SPECIAL:NAME:IGpuProgramUsage void getParameters(IGpuProgramParametersSharedPtr returnValue): get (V)  | parameters (N) 	++ :: [ I (NM) gpu (NM) program (NM) parameters (NM) shared (NM) ptr (N) - return (NM) value (NI) ] :: I (NM) gpu (NM) program (NM) usage (N) 
SPECIAL:NAME:X_K_Index void setR_RequestType_ID(int R_RequestType_ID): set (V)  | R (NM) request (NM) type (NM) ID (NI) 	++ :: [ int (N) - R (NM) request (NM) type (NM) ID (NI) ] :: X (NM) K (NM) index (NI) 
SPECIAL:NAME:ConsoleSession void setRootTagHolder(RootTagHolder inRth): set (V)  | root (NM) tag (NM) holder (NI) 	++ :: [ root (NM) tag (NM) holder (NI) - in (NM) rth (N) ] :: console (NM) session (N) 
SPECIAL:NAME:ListLevelLoader Level getNextLevel(): get (V)  | next (DT) level (N) 	++ :: level (N)  :: list (NM) level (NM) loader (N) 
SPECIAL:NAME:GraphPanel Box createBox(): create (V)  | box (N) 	++ :: box (N)  :: graph (NM) panel (N) 
CONSTRUCTOR:NAME:PredictorGShare PredictorGShare PredictorGShare(ResultDetector resultDetector):  | predictor (NM) G (NM) share (N) 	++ :: [ result (NM) detector (N) - result (NM) detector (N) ]
SPECIAL:NAME:InvoiceItemTypeMapBase InvoiceItemType getInvoiceItemTypeCache(): get (V)  | invoice (NM) item (NM) type (NM) cache (N) 	++ :: invoice (NM) item (NM) type (N)  :: invoice (NM) item (NM) type (NM) map (NM) base (N) 
CONSTRUCTOR:NAME:SimpleMixinAspect SimpleMixinAspect SimpleMixinAspect():  | simple (NM) mixin (NM) aspect (N) 	++
SPECIAL:NAME:DynamicTimeSeriesCollection void appendData(float newData): append (V)  | EQUIV[data (NI) , [ float (N) - new (NM) data (NI) ]]	++ :: dynamic (NM) time (NM) series (NM) collection (N) 
SPECIAL:NAME:MPenaltylistPlugin void setController(IPluginManager plugincontroller, String pluginuid): set (V)  | controller (N) 	++ :: [ I (NM) plugin (NM) manager (N) - plugincontroller (N) ] :: [ string (NI) - pluginuid (N) ] :: M (NM) penaltylist (NM) plugin (N) 
CONSTRUCTOR:NAME:PlainsThinGrid PlainsThinGrid PlainsThinGrid():  | plains (NM) thin (NM) grid (N) 	++
BASE_VERB:NAME:JbApplicationAdapter void alterPageSize(Dimension in): alter (V)  | page (NM) size (N) 	++ :: [ dimension (N) - in (NI) ] :: jb (NM) application (NM) adapter (NI) 
SPECIAL:NAME:TableMetadata String getSchema(): get (V)  | schema (N) 	++ :: string (NI)  :: table (NM) metadata (N) 
SPECIAL:CLAS:TaskScheduler void loadFromDb(): load (V)  | task (NM) scheduler (N) -- from (P) db (N) 	++
SPECIAL:NAME:SWFActions void endDrag(): end (V)  | drag (N) 	++ :: SWF (NM) actions (N) 
BASE_VERB:NAME:CliUsageBuilder StringBuilder generateUsage(StringBuilder buffer, List options): generate (V)  | usage (N) 	++ :: [ string (NM) builder (N) - buffer (NI) ] :: [ list (N) - options (N) ] :: string (NM) builder (N)  :: cli (NM) usage (NM) builder (N) 
SPECIAL:NAME:FileModel FileModel createFile(String name): create (V)  | file (NI) 	++ :: [ string (NI) - name (NI) ] :: file (NM) model (NI)  :: file (NM) model (NI) 
V_3PS:FORM:QuadCurve2D boolean contains(Point2D p): contains (V)  | [ point (NM) 2 (NM) D (N) - p (NI) ]	++ :: quad (NM) curve (NM) 2 (NM) D (N)  :: boolean (N) 
SPECIAL:CLAS:SWTRunner void run(): run (VI)  | SWT (NM) runner (N) 	++
NOUN_PHRASE:NAME:Tokenizer Token next(): get (V) | next (DT) 	++ :: tokenizer (N)  :: token (N) 
BASE_VERB:CLAS:BuildNotifier void aboutToCompile(SourceFile unit): about (V)  | build (NM) notifier (N) -- to (P) compile (N) 	++ :: [ source (NM) file (NI) - unit (N) ]
BASE_VERB:FORM:ArooaFactory Object build(File file): build (V)  | [ file (NI) - file (NI) ]	++ :: arooa (NM) factory (N)  :: object (NI) 
ENDS_WITH_ED:NAME:void stateChanged(ChangeEvent e): handle (V) | state (NM) changed (N) 	++ :: [ change (NM) event (NI) - e (N) ] :: ANONYMOUS (N)  :: void (N) 
SPECIAL:NAME:Game int getSudden(): get (V)  | sudden (N) 	++ :: int (N)  :: game (N) 
BASE_VERB:CLAS:PhysicalDisplay void dodge(): dodge (V)  | physical (NM) display (N) 	++
V_3P_IRR:NAME:GuiCheck boolean isSelected(): is (V)  | selected (N) 	++ :: boolean (N)  :: gui (NM) check (N) 
CONSTRUCTOR:NAME:VmapApplet VmapApplet VmapApplet():  | vmap (NM) applet (N) 	++
V_3PS:FORM:OntologyJRDFModel boolean contains(URI key): contains (V)  | [ URI (NI) - key (NI) ]	++ :: ontology (NM) JRDF (NM) model (NI)  :: boolean (N) 
SPECIAL:NAME:HQKey String getLabel(): get (V)  | label (NI) 	++ :: string (NI)  :: HQ (NM) key (NI) 
CONSTRUCTOR:NAME:Repository Repository Repository(String descriptorPath, String workingDirectory):  | repository (N) 	++ :: [ string (NI) - descriptor (NM) path (NI) ] :: [ string (NI) - working (NM) directory (N) ]
NOUN_PHRASE:NAME:PreSetDefinition boolean sameDefinition(AntTypeDefinition other, Project project): get (V) | same (NM) definition (NI) 	++ :: [ ant (NM) type (NM) definition (NI) - other (DT) ] :: [ project (N) - project (N) ] :: pre (NM) set (NM) definition (NI)  :: boolean (N) 
BASE_VERB:FORM:TCPReceiver void connect(int port): connect (V)  | [ int (N) - port (N) ]	++ :: TCP (NM) receiver (N) 
SPECIAL:NAME:TestLockssApp void testInitManagerNotManager(): test (VI) init (V)  | manager (NM) not (DT) manager (N) 	++ :: test (NM) lockss (NM) app (N) 
BASE_VERB:FORM:CANDataAdapter CANTreeNode split(CANTreeNode node): split (V)  | [ CAN (NM) tree (NM) node (NI) - node (NI) ]	++ :: CAN (NM) data (NM) adapter (NI)  :: CAN (NM) tree (NM) node (NI) 
CONSTRUCTOR:NAME:MultipartRequest MultipartRequest MultipartRequest(HttpServletRequest request, String saveDirectory, int maxPostSize, String encoding):  | multipart (NM) request (N) 	++ :: [ http (NM) servlet (NM) request (N) - request (N) ] :: [ string (NI) - save (NM) directory (N) ] :: [ int (N) - max (NM) post (NM) size (N) ] :: [ string (NI) - encoding (N) ]
ENDS_WITH_ED:NAME:IconInternalFrame void mousePressed(MouseEvent e): handle (V) | mouse (NM) pressed (N) 	++ :: [ mouse (NM) event (NI) - e (N) ] :: icon (NM) internal (NM) frame (N)  :: void (N) 
SPECIAL:NAME:JTree int getToggleClickCount(): get (V)  | toggle (NM) click (NM) count (N) 	++ :: int (N)  :: J (NM) tree (NI) 
SPECIAL:CLAS:PEH static void init(): init (V)  | PEH (N) 	++
SPECIAL:NAME:CodeGeneratorController void doAddField(): do (VI) add (V)  | field (N) 	++ :: code (NM) generator (NM) controller (N) 
SPECIAL:NAME:Halos String getShapeState(): get (V)  | shape (NM) state (N) 	++ :: string (NI)  :: halos (N) 
SPECIAL:NAME:XSnapshotUtils static Object createSnapshot(Object model, String snapshotName, TransformContext context): create (V)  | EQUIV[snapshot (N) , [ string (NI) - snapshot (NM) name (NI) ]]	++ :: [ object (NI) - model (NI) ] :: [ transform (NM) context (N) - context (N) ] :: object (NI)  :: X (NM) snapshot (NM) utils (N) 
SPECIAL:NAME:PropertyLoader static Properties loadProperties(String name): load (V)  | properties (N) 	++ :: [ string (NI) - name (NI) ] :: properties (N)  :: property (NM) loader (N) 
SPECIAL:NAME:JaxbXmlWriterReaderTest XmlWriter createXmlWriter(): create (V)  | xml (NM) writer (N) 	++ :: xml (NM) writer (N)  :: jaxb (NM) xml (NM) writer (NM) reader (NM) test (N) 
BASE_VERB:NAME:PagePanel void makeThumbnail(): make (V)  | thumbnail (N) 	++ :: page (NM) panel (N) 
SPECIAL:NAME:SWTTable void removeAllFrom(int i): remove (V)  | all (DT) -- from (P) [ int (N) - i (N) ]	++ :: [ int (N) - i (N) ] :: SWT (NM) table (N) 
BASE_VERB:NAME:LinuxDisplay void updateKeyboardGrab(): update (V)  | keyboard (NM) grab (N) 	++ :: linux (NM) display (N) 
SPECIAL:NAME:Score Integer getTotalScore(): get (V)  | total (NM) score (N) 	++ :: integer (N)  :: score (N) 
BASE_VERB:NAME:DeletingVisitor void visitFeatureNode(FeatureNode node): visit (V)  | EQUIV[feature (NM) node (NI) , [ feature (NM) node (NI) - node (NI) ]]	++ :: deleting (NM) visitor (N) 
SPECIAL:NAME:WaitAbstraction IFilter getDynamicFilter(): get (V)  | dynamic (NM) filter (N) 	++ :: I (NM) filter (N)  :: wait (NM) abstraction (N) 
PREP:NAME:Hallway String toString(): convert (V) | to (P) string (NI) 	++ :: hallway (N)  :: string (NI) 
CONSTRUCTOR:NAME:Item Item Item(Int location, byte type, Integer ID, byte condition):  | item (NI) 	++ :: [ int (N) - location (NI) ] :: [ byte (N) - type (N) ] :: [ integer (N) - ID (NI) ] :: [ byte (N) - condition (N) ]
SPECIAL:NAME:CheckboxListInputControlUI void setHistory(List values): set (V)  | history (N) 	++ :: [ list (N) - values (N) ] :: checkbox (NM) list (NM) input (NM) control (NM) UI (N) 
SPECIAL:NAME:Controller String getStatus(): get (V)  | status (N) 	++ :: string (NI)  :: controller (N) 
BASE_VERB:FORM:Factory static DisplacedBySDTValue parse(URL u): parse (V)  | [ URL (NI) - u (N) ]	++ :: factory (N)  :: displaced (NM) by (NM) SDT (NM) value (NI) 
SPECIAL:NAME:FontManager float _getLoadingOrder_const(long _pointer_): get (V)  | loading (NM) order (NM) const (N) 	++ :: [ long (N) - pointer (N) ] :: float (N)  :: font (NM) manager (N) 
SPECIAL:NAME:MenuAction static JextTextArea getTextArea(EventObject evt): get (V)  | text (NM) area (N) 	++ :: [ event (NM) object (NI) - evt (N) ] :: jext (NM) text (NM) area (N)  :: menu (NM) action (N) 
SPECIAL:NAME:ADT_A13 PV2 getPV2(): get (V)  | PV (N) 2 (D) 	++ :: PV (NM) 2 (N)  :: ADT (NM) A (NM) 13 (N) 
SPECIAL:NAME:CompierePLAF static Color getTextColor_Label(): get (V)  | text (NM) color (NM) label (NI) 	++ :: color (N)  :: compiere (NM) PLAF (N) 
SPECIAL:NAME:FilterPOA OutputStream _OB_op_get_constraints(InputStream in, ResponseHandler handler): OB (PRE) op (PRE) get (V)  | constraints (N) 	++ :: [ input (NM) stream (NI) - in (NI) ] :: [ response (NM) handler (N) - handler (N) ] :: output (NM) stream (NI)  :: filter (NM) POA (N) 
SPECIAL:NAME:EventHandlerProxy EventHandler getHandler(): get (V)  | handler (N) 	++ :: event (NM) handler (N)  :: event (NM) handler (NM) proxy (NI) 
SPECIAL:NAME:BeanClassWriter void writeEntityDeclaration(ContentHandler pHandler): write (V)  | entity (NM) declaration (NI) 	++ :: [ content (NM) handler (N) - p (NM) handler (N) ] :: bean (NM) class (NM) writer (N) 
CONSTRUCTOR:NAME:ClickStreamDisplayer ClickStreamDisplayer ClickStreamDisplayer():  | click (NM) stream (NM) displayer (N) 	++
BASE_VERB:NAME:ScannerState void arraySet(String indexAsString): array (V)  | set (N) 	++ :: [ string (NI) - index (NM) as (NM) string (NI) ] :: scanner (NM) state (N) 
SPECIAL:CLAS:WishFactory Wish create(): create (V)  | wish (NM) factory (N) 	++ :: wish (N) 
NOUN_PHRASE:NAME:GenCageRideable boolean sameAs(Environmental E): get (V) | same (NM) as (N) 	++ :: [ environmental (N) - E (N) ] :: gen (NM) cage (NM) rideable (N)  :: boolean (N) 
CONSTRUCTOR:NAME:ReflectConceptPropertyStateTask ReflectConceptPropertyStateTask ReflectConceptPropertyStateTask():  | reflect (NM) concept (NM) property (NM) state (NM) task (N) 	++
BASE_VERB:NAME:Util static boolean sendMail(String eMailAdress, String subject, String message): send (V)  | mail (N) 	++ :: [ string (NI) - e (NM) mail (NM) adress (N) ] :: [ string (NI) - subject (N) ] :: [ string (NI) - message (NI) ] :: boolean (N)  :: util (N) 
SPECIAL:NAME:SLPAgent void setSFLog(LogSF log): set (V)  | SF (NM) log (N) 	++ :: [ log (NM) SF (N) - log (N) ] :: SLP (NM) agent (N) 
ENDS_WITH_ED:NAME:BoundDiagram void mousePressed(MouseEvent arg0): handle (V) | mouse (NM) pressed (N) 	++ :: [ mouse (NM) event (NI) - arg (NM) 0 (N) ] :: bound (NM) diagram (N)  :: void (N) 
CONSTRUCTOR:NAME:PlatformException PlatformException PlatformException(Throwable e):  | platform (NM) exception (N) 	++ :: [ throwable (N) - e (N) ]
SPECIAL:NAME:Plugins void setTextTableShow(int index): set (V)  | text (NM) table (NM) show (N) 	++ :: [ int (N) - index (NI) ] :: plugins (N) 
BASE_VERB:CLAS:Spell_FlamingEnsnarement void unInvoke(): un (PRE) invoke (VI)  | spell (NM) flaming (NM) ensnarement (N) 	++
SPECIAL:NAME:AnyTestCase URL getExpected(): get (V)  | expected (N) 	++ :: URL (NI)  :: any (DT) test (NM) case (N) 
SPECIAL:NAME:BaseResponseGenerator IKeyRecoverySessionLocal getKeyRecoverySession(): get (V)  | key (NM) recovery (NM) session (N) 	++ :: I (NM) key (NM) recovery (NM) session (NM) local (N)  :: base (NM) response (NM) generator (N) 
ENDS_WITH_ED:NAME:SearchResults void jButton1ActionPerformed(ActionEvent evt): handle (V) | j (PRE) button (NM) 1 (D) action (NM) performed (N) 	++ :: [ action (NM) event (NI) - evt (N) ] :: search (NM) results (N)  :: void (N) 
SPECIAL:NAME:JadOptions void appendSingleWordOption(List list, String name, boolean on): append (V)  | single (NM) word (NM) option (N) 	++ :: [ list (N) - list (N) ] :: [ string (NI) - name (NI) ] :: [ boolean (N) - on (N) ] :: jad (NM) options (N) 
SPECIAL:NAME:NewCallerIdEvent String getCidCallingPresTxt(): get (V)  | cid (NM) calling (NM) pres (NM) txt (N) 	++ :: string (NI)  :: new (NM) caller (NM) id (NM) event (NI) 
SPECIAL:FORM:LEDataOutputStream void write(byte b, int off, int len): write (V)  | [ byte (N) - b (N) ]	++ :: [ int (N) - off (N) ] :: [ int (N) - len (N) ] :: LE (NM) data (NM) output (NM) stream (NI) 
SPECIAL:NAME:ListCtrl ListItem getItem(int itemId, int col): get (V)  | EQUIV[item (NI) , [ int (N) - item (NM) id (NI) ]]	++ :: [ int (N) - col (N) ] :: list (NM) item (NI)  :: list (NM) ctrl (N) 
VOID_NP:NAME:SAXUnmarshallerHandlerImpl void characters(char buf, int start, int len): handle (V) | characters (N) 	++ :: [ char (N) - buf (N) ] :: [ int (N) - start (N) ] :: [ int (N) - len (N) ] :: SAX (NM) unmarshaller (NM) handler (NM) impl (NI)  :: void (N) 
V_3P_IRR:NAME:ThrowableReturn boolean isError(): is (V)  | error (N) 	++ :: boolean (N)  :: throwable (NM) return (N) 
CONSTRUCTOR:NAME:WizardComboBoxPanel WizardComboBoxPanel WizardComboBoxPanel(List entries, String selectedValue):  | wizard (NM) combo (NM) box (NM) panel (N) 	++ :: [ list (N) - entries (N) ] :: [ string (NI) - selected (NM) value (NI) ]
CONSTRUCTOR:NAME:MFVec2f MFVec2f MFVec2f():  | MF (NM) vec (NM) 2 (NM) f (N) 	++
SPECIAL:CLAS:UsersTestCase void testUpdate(): test (VI) update (V)  | users (NM) test (NM) case (N) 	++
SPECIAL:NAME:NodeHierarchy int getLevel(Node node): get (V)  | level (N) 	++ :: [ node (NI) - node (NI) ] :: int (N)  :: node (NM) hierarchy (N) 
V_3P_IRR:NAME:MotMotClassFacadeLogic boolean hasExactStereotype(String stereotypeName): has (V)  | EQUIV[exact (NM) stereotype (N) , [ string (NI) - stereotype (NM) name (NI) ]]	++ :: boolean (N)  :: mot (NM) mot (NM) class (NM) facade (NM) logic (N) 
BASE_VERB:NAME:ChemicalSpaceDisplay float computeValueOnPCAAxisXY(float mw, float logP, String fp): compute (V)  | value (NI) -- on (P) PCA (NM) axis (NM) XY (N) 	++ :: [ float (N) - mw (N) ] :: [ float (N) - log (NM) P (NI) ] :: [ string (NI) - fp (N) ] :: float (N)  :: chemical (NM) space (NM) display (N) 
BASE_VERB:CLAS:PSSTest void performTest(): perform (VI) test (VI)  | PSS (NM) test (N) 	++
SPECIAL:NAME:RhinoException void initColumnNumber(int columnNumber): init (V)  | EQUIV[column (NM) number (NI) , [ int (N) - column (NM) number (NI) ]]	++ :: rhino (NM) exception (N) 
ENDS_WITH_ED:NAME:void mouseDragged(PInputEvent event): handle (V) | mouse (NM) dragged (N) 	++ :: [ P (NM) input (NM) event (NI) - event (NI) ] :: ANONYMOUS (N)  :: void (N) 
CONSTRUCTOR:NAME:ComponentSampleModel ComponentSampleModel ComponentSampleModel(int dataType, int w, int h, int pixelStride, int scanlineStride, int bandOffsets):  | component (NM) sample (NM) model (NI) 	++ :: [ int (N) - data (NM) type (N) ] :: [ int (N) - w (N) ] :: [ int (N) - h (N) ] :: [ int (N) - pixel (NM) stride (N) ] :: [ int (N) - scanline (NM) stride (N) ] :: [ int (N) - band (NM) offsets (N) ]
SPECIAL:NAME:PovFinishGene PovReflectionGene getReflection(): get (V)  | reflection (N) 	++ :: pov (NM) reflection (NM) gene (N)  :: pov (NM) finish (NM) gene (N) 
PREP:NAME:ItemName String toString(): convert (V) | to (P) string (NI) 	++ :: item (NM) name (NI)  :: string (NI) 
SPECIAL:NAME:Parser long getBufferFromQueue(): get (V)  | buffer (NI) -- from (P) queue (N) 	++ :: long (N)  :: parser (N) 
SPECIAL:CLAS:void run(): run (VI)  | ANONYMOUS (N) 	++
SPECIAL:NAME:StringDataTypeTest void testIsDateTime(): test (VI)  | is (NM) date (NM) time (N) 	++ :: string (NM) data (NM) type (NM) test (N) 
V_3P_IRR:NAME:Bitset boolean isLarge(): is (V)  | large (N) 	++ :: boolean (N)  :: bitset (N) 
CONSTRUCTOR:NAME:DebugAction DebugAction DebugAction(String actionName, String ai):  | debug (NM) action (N) 	++ :: [ string (NI) - action (NM) name (NI) ] :: [ string (NI) - ai (N) ]
SPECIAL:NAME:Paper double getImageableY(): get (V)  | imageable (NM) Y (N) 	++ :: double (N)  :: paper (N) 
BASE_VERB:FORM:AttributeAccessor void put(HttpSession session, Object value): put (V)  | [ http (NM) session (N) - session (N) ]	++ :: [ object (NI) - value (NI) ] :: attribute (NM) accessor (N) 
BASE_VERB:NAME:DMSPMetadata static Vector obtainStationDescription(Connection con): obtain (V)  | station (NM) description (NI) 	++ :: [ connection (N) - con (N) ] :: vector (N)  :: DMSP (NM) metadata (N) 
SPECIAL:NAME:DbCaps void loadDbCaps(): load (V)  | db (NM) caps (N) 	++ :: db (NM) caps (N) 
NOUN_PHRASE:NAME:DefaultListIteratorImpl double nextDouble(): get (V) | next (DT) double (N) 	++ :: default (NM) list (NM) iterator (NM) impl (NI)  :: double (N) 
SPECIAL:NAME:ImageTag void setOpenImage(String openImage): set (V)  | open (NM) image (N) 	++ :: [ string (NI) - open (NM) image (N) ] :: image (NM) tag (NI) 
BASE_VERB:FORM:Blink void paint(Graphics g): paint (V)  | [ graphics (N) - g (N) ]	++ :: blink (N) 
CONSTRUCTOR:NAME:JXEJMenuFile JXEJMenuFile JXEJMenuFile(JXMLEditor jXMLEditor):  | JXEJ (NM) menu (NM) file (NI) 	++ :: [ JXML (NM) editor (N) - j (NM) XML (NM) editor (N) ]
EVENT_PARAM:NAME:StructureElement void fireStructureElementEvent(StructureElementEvent event): handle (V) | fire (NM) structure (NM) element (NM) event (NI) 	++ :: [ structure (NM) element (NM) event (NI) - event (NI) ] :: structure (NM) element (NI)  :: void (N) 
SPECIAL:CLAS:GenericCommandAutoService void enable(): enable (VI)  | generic (NM) command (NM) auto (NM) service (N) 	++
CONSTRUCTOR:NAME:PluginManager PluginManager PluginManager():  | plugin (NM) manager (N) 	++
SPECIAL:NAME:JdbcStorageManagerFactory void returnStorageManager(StorageManager sm): return (V)  | EQUIV[storage (NM) manager (N) , [ storage (NM) manager (N) - sm (N) ]]	++ :: jdbc (NM) storage (NM) manager (NM) factory (N) 
BASE_VERB:FORM:Macro void bind(Declaration decl): bind (V)  | [ declaration (NI) - decl (NI) ]	++ :: macro (N) 
BASE_VERB:NAME:QualityRequest void putSupplier(GenericDelegator delegator, Map formsData): put (V)  | supplier (N) 	++ :: [ generic (NM) delegator (N) - delegator (N) ] :: [ map (N) - forms (NM) data (NI) ] :: quality (NM) request (N) 
SPECIAL:FORM:DoubleArray static void main(String args): main (V)  | [ string (NI) - args (N) ]	++ :: double (NM) array (N) 
SPECIAL:NAME:SimpleBlog Date getLastModified(): get (V)  | last (DT) modified (N) 	++ :: date (N)  :: simple (NM) blog (N) 
SPECIAL:NAME:CheckboxMenuItem void processItemEvent(ItemEvent event): process (VI)  | EQUIV[item (NM) event (NI) , [ item (NM) event (NI) - event (NI) ]]	++ :: checkbox (NM) menu (NM) item (NI) 
SPECIAL:NAME:PanelTableModel String getColumnName(int _column): get (V)  | column (NM) name (NI) 	++ :: [ int (N) - column (N) ] :: string (NI)  :: panel (NM) table (NM) model (NI) 
SPECIAL:NAME:SerialPort void setSerialPortParams(int baudRate, DataBits dataBits, Parity parity, StopBits stopBits): set (V)  | serial (NM) port (NM) params (N) 	++ :: [ int (N) - baud (NM) rate (N) ] :: [ data (NM) bits (N) - data (NM) bits (N) ] :: [ parity (N) - parity (N) ] :: [ stop (NM) bits (N) - stop (NM) bits (N) ] :: serial (NM) port (N) 
SPECIAL:NAME:FileSystemPage void removeChildPage(String name): remove (V)  | child (NM) page (N) 	++ :: [ string (NI) - name (NI) ] :: file (NM) system (NM) page (N) 
BASE_VERB:FORM:ATVgraphic void demote(Node node): demote (V)  | [ node (NI) - node (NI) ]	++ :: AT (NM) vgraphic (N) 
SPECIAL:NAME:SecureConnection SecurityInfo getSecurityInfo(): get (V)  | security (NM) info (NI) 	++ :: security (NM) info (NI)  :: secure (NM) connection (N) 
BASE_VERB:NAME:MiscMath static double calculateStudentsT(double tObserved, double dof): calculate (V)  | students (NM) T (N) 	++ :: [ double (N) - t (NM) observed (N) ] :: [ double (N) - dof (N) ] :: double (N)  :: misc (NM) math (N) 
CONSTRUCTOR:NAME:MainMenu_windowAdapter MainMenu_windowAdapter MainMenu_windowAdapter(MainMenu adaptee):  | main (NM) menu (NM) window (NM) adapter (NI) 	++ :: [ main (NM) menu (N) - adaptee (N) ]
EMPTY:NONE:SQLParser boolean jj_3R_102():  | jj (PRE) 3 (D) R (PRE) 102 (D) 
SPECIAL:NAME:Tutorial02 void setArtist(String arg): set (V)  | artist (N) 	++ :: [ string (NI) - arg (N) ] :: tutorial (NM) 02 (N) 
SPECIAL:NAME:MainJFrame static void setDialogCenterLocation(JDialog dialog): set (V)  | dialog (NM) center (NM) location (NI) 	++ :: [ J (NM) dialog (N) - dialog (N) ] :: main (NM) J (NM) frame (N) 
SPECIAL:CLAS:TreeMap void load(): load (V)  | tree (NM) map (N) 	++
SPECIAL:NAME:HttpURLConnection URL getURL(): get (V)  | URL (NI) 	++ :: URL (NI)  :: http (NM) URL (NM) connection (N) 
SPECIAL:NAME:MyComponent BaseServiceUnitManager createServiceUnitManager(): create (V)  | service (NM) unit (NM) manager (N) 	++ :: base (NM) service (NM) unit (NM) manager (N)  :: my (PR) component (N) 
BASE_VERB:NAME:XMLElement int scanAttributes(byte input, int offset, int end, int lineNr): scan (V)  | attributes (N) 	++ :: [ byte (N) - input (NI) ] :: [ int (N) - offset (N) ] :: [ int (N) - end (N) ] :: [ int (N) - line (NM) nr (N) ] :: int (N)  :: XML (NM) element (NI) 
SPECIAL:CLAS:void run(): run (VI)  | ANONYMOUS (N) 	++
SPECIAL:NAME:GlobalManagerStatsImpl int getDataSendRateAtClose(): get (V)  | data (NM) send (NM) rate (N) -- at (P) close (N) 	++ :: int (N)  :: global (NM) manager (NM) stats (NM) impl (NI) 
BASE_VERB:CLAS:PresentTag boolean condition(boolean desired): condition (V)  | present (NM) tag (NI) 	++ :: [ boolean (N) - desired (N) ] :: boolean (N) 
SPECIAL:NAME:LogonModule ModuleParameters createParameters(): create (V)  | parameters (N) 	++ :: module (NM) parameters (N)  :: logon (NM) module (N) 
SPECIAL:NAME:MemberList Object getRow(int index): get (V)  | row (N) 	++ :: [ int (N) - index (NI) ] :: object (NI)  :: member (NM) list (N) 
BASE_VERB:FORM:IfcDevice void poke(int address, int aByteValue): poke (V)  | [ int (N) - address (NI) ]	++ :: [ int (N) - a (NM) byte (NM) value (NI) ] :: ifc (NM) device (N) 
SPECIAL:NAME:NoiseLevel static NoiseLevel getDefault(Project P): get (V)  | default (N) 	++ :: [ project (N) - P (NI) ] :: noise (NM) level (N)  :: noise (NM) level (N) 
SPECIAL:NAME:ObjectKeyBooleanChainedHashMap void readObject(ObjectInputStream s): read (V)  | object (NI) 	++ :: [ object (NM) input (NM) stream (NI) - s (N) ] :: object (NM) key (NM) boolean (NM) chained (NM) hash (NM) map (N) 
BASE_VERB:CLAS:ComponentServiceMBean void resume(): resume (VI)  | component (NM) service (NM) M (NM) bean (NI) 	++
V_3P_IRR:NAME:RQueryGoal boolean isSucceeded(): is (V)  | succeeded (N) 	++ :: boolean (N)  :: R (NM) query (NM) goal (N) 
BASE_VERB:NAME:Util static boolean TestaImpressora(String impr): testa (V)  | impressora (N) 	++ :: [ string (NI) - impr (N) ] :: boolean (N)  :: util (N) 
BASE_VERB:NAME:TreeFrame JMenu buildMainMenu(): build (V)  | main (NM) menu (N) 	++ :: J (NM) menu (N)  :: tree (NM) frame (N) 
SPECIAL:NAME:SearchResultImpl String getUrl(): get (V)  | url (NI) 	++ :: string (NI)  :: search (NM) result (NM) impl (NI) 
SPECIAL:NAME:SwingMultiLineToolTipUI Dimension getPreferredSize(JComponent c): get (V)  | preferred (NM) size (N) 	++ :: [ J (NM) component (N) - c (N) ] :: dimension (N)  :: swing (NM) multi (NM) line (NM) tool (NM) tip (NM) UI (N) 
BASE_VERB:NAME:ProjectEditor static void saveWindows(): save (V)  | windows (N) 	++ :: project (NM) editor (N) 
SPECIAL:NAME:UnibrowPrefsUtil static String getAppDataDirectory(): get (V)  | app (NM) data (NM) directory (N) 	++ :: string (NI)  :: unibrow (NM) prefs (NM) util (N) 
SPECIAL:NAME:JdbcJDOQLCompiler static void doFinalSql(SqlBuffer sqlBuffer, SelectExp root, SqlDriver driver): do (VI)  | EQUIV[final (NM) sql (N) , [ sql (NM) buffer (NI) - sql (NM) buffer (NI) ]]	++ :: [ select (NM) exp (N) - root (N) ] :: [ sql (NM) driver (N) - driver (N) ] :: jdbc (NM) JDOQL (NM) compiler (N) 
BASE_VERB:CLAS:UnmodifiableCharList CharList list(): list (V)  | unmodifiable (NM) char (NM) list (N) 	++ :: char (NM) list (N) 
SPECIAL:NAME:Color int getGreen(): get (V)  | green (N) 	++ :: int (N)  :: color (N) 
SPECIAL:NAME:GnomeDocumentBuilder void setErrorHandler(ErrorHandler handler): set (V)  | error (NM) handler (N) 	++ :: [ error (NM) handler (N) - handler (N) ] :: gnome (NM) document (NM) builder (N) 
SPECIAL:NAME:AbstractItem void setCusInt07(Integer cusInt07): set (V)  | cus (NM) int (N) 07 (D) 	++ :: [ integer (N) - cus (NM) int (NM) 07 (N) ] :: abstract (NM) item (NI) 
SPECIAL:NAME:BuildPanel void initComponents(): init (V)  | components (N) 	++ :: build (NM) panel (N) 
SPECIAL:NAME:Baz NestingComponent getCollectionComponent(): get (V)  | collection (NM) component (N) 	++ :: nesting (NM) component (N)  :: baz (N) 
SPECIAL:NAME:JumbleAction ICompilationUnit getCompilationUnit(): get (V)  | compilation (NM) unit (N) 	++ :: I (NM) compilation (NM) unit (N)  :: jumble (NM) action (N) 
BASE_VERB:NAME:ConsList ListIterator listIterator(int index): list (V)  | iterator (N) 	++ :: [ int (N) - index (NI) ] :: list (NM) iterator (N)  :: cons (NM) list (N) 
SPECIAL:NAME:NamespacesTest void testXMLNSNamespace(): test (VI)  | XMLNS (NM) namespace (N) 	++ :: namespaces (NM) test (N) 
BASE_VERB:FORM:Factory static TopicExpressionDialectsDocument parse(Node node): parse (V)  | [ node (NI) - node (NI) ]	++ :: factory (N)  :: topic (NM) expression (NM) dialects (NM) document (NI) 
CONSTRUCTOR:NAME:Transaction Transaction Transaction(Transaction copy_trans):  | transaction (N) 	++ :: [ transaction (N) - copy (NM) trans (N) ]
SPECIAL:NAME:GUI_Main int getSelectedRow(int reqSet, MouseEvent e): get (V)  | selected (NM) row (N) 	++ :: [ int (N) - req (NM) set (N) ] :: [ mouse (NM) event (NI) - e (N) ] :: int (N)  :: GUI (NM) main (N) 
SPECIAL:NAME:DB2Dialect ResultSet getResultSet(CallableStatement ps): get (V)  | result (NM) set (N) 	++ :: [ callable (NM) statement (NI) - ps (N) ] :: result (NM) set (N)  :: DB (NM) 2 (NM) dialect (N) 
SPECIAL:NAME:FagusSilvaticaTest void testVolumeCalc(): test (VI)  | volume (NM) calc (N) 	++ :: fagus (NM) silvatica (NM) test (N) 
SPECIAL:NAME:SharedItem long getSize(): get (V)  | size (N) 	++ :: long (N)  :: shared (NM) item (NI) 
CONSTRUCTOR:NAME:TimerLabel TimerLabel TimerLabel():  | timer (NM) label (NI) 	++
BASE_VERB:NAME:ServiceBase void parameterizeService(Parameters params): parameterize (V)  | service (N) 	++ :: [ parameters (N) - params (N) ] :: service (NM) base (N) 
SPECIAL:NAME:AbstractActiveDirectoryContactMapping void setDelivery(String delivery): set (V)  | delivery (N) 	++ :: [ string (NI) - delivery (N) ] :: abstract (NM) active (NM) directory (NM) contact (NM) mapping (N) 
BASE_VERB:FORM:Utility static String hex(byte b): hex (V)  | [ byte (N) - b (N) ]	++ :: utility (N)  :: string (NI) 
SPECIAL:NAME:Cell void setRef(int ref): set (V)  | ref (NI) 	++ :: [ int (N) - ref (NI) ] :: cell (N) 
CONSTRUCTOR:NAME:SingleValuedRoleMetaInfo SingleValuedRoleMetaInfo SingleValuedRoleMetaInfo(String aName, Class aType, String aDescription, PropertyConstraint aConstraints, int aAssociationSemantics, boolean aIsNavigable):  | single (NM) valued (NM) role (NM) meta (NM) info (NI) 	++ :: [ string (NI) - a (NM) name (NI) ] :: [ class (NI) - a (NM) type (N) ] :: [ string (NI) - a (NM) description (NI) ] :: [ property (NM) constraint (N) - a (NM) constraints (N) ] :: [ int (N) - a (NM) association (NM) semantics (N) ] :: [ boolean (N) - a (NM) is (NM) navigable (N) ]
SPECIAL:NAME:MySqlForumQueries String getSql_GET_THREADS(): get (V)  | sql (NM) GET (NM) THREADS (N) 	++ :: string (NI)  :: my (PR) sql (NM) forum (NM) queries (N) 
NOUN_PHRASE:NAME:AbstractQueryResult ResultObjectFactory newResultObjectFactory(QueryExpression stmt, boolean ignoreCache, Class resultClass, boolean useFetchPlan): get (V) | new (NM) result (NM) object (NM) factory (N) 	++ :: [ query (NM) expression (N) - stmt (N) ] :: [ boolean (N) - ignore (NM) cache (N) ] :: [ class (NI) - result (NM) class (NI) ] :: [ boolean (N) - use (NM) fetch (NM) plan (N) ] :: abstract (NM) query (NM) result (N)  :: result (NM) object (NM) factory (N) 
BASE_VERB:FORM:Factory static TabIndexAttribute parse(Reader r): parse (V)  | [ reader (N) - r (N) ]	++ :: factory (N)  :: tab (NM) index (NM) attribute (N) 
SPECIAL:NAME:NavigationController void loadInferenceDataFromFile(): load (V)  | inference (NM) data (NI) -- from (P) file (NI) 	++ :: navigation (NM) controller (N) 
BASE_VERB:FORM:MomentRememberer void remember(MediaElement me, Instant when): remember (V)  | [ media (NM) element (NI) - me (PR) ]	++ :: [ instant (N) - when (N) ] :: moment (NM) rememberer (N) 
CONSTRUCTOR:NAME:GO_Meter GO_Meter GO_Meter(Narrative n, int processID, Representation r):  | GO (NM) meter (N) 	++ :: [ narrative (N) - n (N) ] :: [ int (N) - process (NM) ID (NI) ] :: [ representation (N) - r (N) ]
SPECIAL:NAME:Bit8Encoder String getContextName(): get (V)  | context (NM) name (NI) 	++ :: string (NI)  :: bit (NM) 8 (NM) encoder (N) 
SPECIAL:NAME:Header void addField(String name, String value): add (V)  | field (N) 	++ :: [ string (NI) - name (NI) ] :: [ string (NI) - value (NI) ] :: header (N) 
CONSTRUCTOR:NAME:JEANInvalidHandleException JEANInvalidHandleException JEANInvalidHandleException(String msg):  | JEAN (NM) invalid (NM) handle (NM) exception (N) 	++ :: [ string (NI) - msg (NI) ]
SPECIAL:NAME:bConDoc Object executeCommand(XContent xContent, String aCommandName, Object aArgument): execute (VI)  | EQUIV[command (N) , [ string (NI) - a (NM) command (NM) name (NI) ]]	++ :: [ X (NM) content (N) - x (NM) content (N) ] :: [ object (NI) - a (NM) argument (N) ] :: object (NI)  :: b (NM) con (NM) doc (NI) 
NOUN_PHRASE:NAME:BDDBitVector int size(): get (V) | size (N) 	++ :: BDD (NM) bit (NM) vector (N)  :: int (N) 
BASE_VERB:NAME:FastQueueThread void decQueuedNrOfBytes(long size): dec (V)  | queued (NM) nr (N) -- of (P) bytes (NI) 	++ :: [ long (N) - size (N) ] :: fast (NM) queue (NM) thread (N) 
SPECIAL:NAME:XMLInputFactory XMLEventReader createXMLEventReader(String systemId, Reader reader): create (V)  | EQUIV[XML (NM) event (NM) reader (N) , [ reader (N) - reader (N) ]]	++ :: [ string (NI) - system (NM) id (NI) ] :: XML (NM) event (NM) reader (N)  :: XML (NM) input (NM) factory (N) 
SPECIAL:NAME:MixerDialog void setMixer(Mixer mixer): set (V)  | mixer (N) 	++ :: [ mixer (N) - mixer (N) ] :: mixer (NM) dialog (N) 
CONSTRUCTOR:NAME:IllegalThreadStateException IllegalThreadStateException IllegalThreadStateException():  | illegal (NM) thread (NM) state (NM) exception (N) 	++
SPECIAL:NAME:SimpleVertex ElementType getElement(): get (V)  | element (NI) 	++ :: element (NM) type (N)  :: simple (NM) vertex (N) 
ENDS_WITH_ED:NAME:Analysis void caseAQuantified(AQuantified node): handle (V) | case (NM) A (NM) quantified (N) 	++ :: [ A (NM) quantified (N) - node (NI) ] :: analysis (N)  :: void (N) 
SPECIAL:NAME:FeatureCollectionTest void testBounds(): test (VI)  | bounds (N) 	++ :: feature (NM) collection (NM) test (N) 
SPECIAL:NAME:ID3v2Footer void readFooter(RandomAccessFile raf, int location): read (V)  | footer (N) 	++ :: [ random (NM) access (NM) file (NI) - raf (N) ] :: [ int (N) - location (NI) ] :: ID (NM) 3 (NM) v (NM) 2 (NM) footer (N) 
BASE_VERB:NAME:UncompressInputStream void parse_header(): parse (V)  | header (N) 	++ :: uncompress (NM) input (NM) stream (NI) 
SPECIAL:NAME:Sp_stream_blockTYPE byte getLast_upd_db_site(): get (V)  | last (DT) upd (NM) db (NM) site (N) 	++ :: byte (N)  :: sp (NM) stream (NM) block (NM) TYPE (N) 
ENDS_WITH_ED:NAME:void actionPerformed(ActionEvent evt): handle (V) | action (NM) performed (N) 	++ :: [ action (NM) event (NI) - evt (N) ] :: ANONYMOUS (N)  :: void (N) 
SPECIAL:NAME:ItemDoseFormReference int getRefId(): get (V)  | ref (NM) id (NI) 	++ :: int (N)  :: item (NM) dose (NM) form (NM) reference (NI) 
SPECIAL:NAME:Targetable boolean doCommand(Object command, Object value): do (VI)  | EQUIV[command (N) , [ object (NI) - command (N) ]]	++ :: [ object (NI) - value (NI) ] :: boolean (N)  :: targetable (N) 
SPECIAL:NAME:AdminCategoriesPage void setNumberOfCategories(int numberOfCategories): set (V)  | number (NI) -- of (P) categories (N) 	++ :: [ int (N) - number (NM) of (NM) categories (N) ] :: admin (NM) categories (NM) page (N) 
SPECIAL:CLAS:BaseDphrmPelibFactor int compareTo(Object obj): compare (V)  | base (NM) dphrm (NM) pelib (NM) factor (N) -- to (P) [ object (NI) - obj (NI) ]	++ :: [ object (NI) - obj (NI) ] :: int (N) 
EVENT_PARAM:NAME:SQLView void insertUpdate(DocumentEvent e, Shape a, ViewFactory f): handle (V) | insert (NM) update (N) 	++ :: [ document (NM) event (NI) - e (N) ] :: [ shape (N) - a (N) ] :: [ view (NM) factory (N) - f (N) ] :: SQL (NM) view (NI)  :: void (N) 
SPECIAL:NAME:ForwardOnlyDataSetTest void testGetTable(): test (VI) get (V)  | table (N) 	++ :: forward (NM) only (NM) data (NM) set (NM) test (N) 
SPECIAL:NAME:ModuleDescriptor void setModulePath(Path modulePath): set (V)  | module (NM) path (NI) 	++ :: [ path (NI) - module (NM) path (NI) ] :: module (NM) descriptor (NI) 
SPECIAL:NAME:BaseTfLevel void setQuesId(NumberKey v): set (V)  | ques (NM) id (NI) 	++ :: [ number (NM) key (NI) - v (N) ] :: base (NM) tf (NM) level (N) 
BASE_VERB:FORM:Ftp void cmd(String cmd): cmd (V)  | [ string (NI) - cmd (N) ]	++ :: ftp (N) 
SPECIAL:NAME:TokenData String getFileName(): get (V)  | file (NM) name (NI) 	++ :: string (NI)  :: token (NM) data (NI) 
SPECIAL:NAME:SectionForm void setSection(Section section): set (V)  | section (N) 	++ :: [ section (N) - section (N) ] :: section (NM) form (N) 
SPECIAL:NAME:TestDurationSum void testHasNotDuration(): test (VI)  | has (NM) not (DT) duration (N) 	++ :: test (NM) duration (NM) sum (N) 
SPECIAL:NAME:EndEntityHistoryDataBean String getEetype(): get (V)  | eetype (N) 	++ :: string (NI)  :: end (NM) entity (NM) history (NM) data (NM) bean (NI) 
ENDS_WITH_ED:NAME:InvitaListener void mouseExited(MouseEvent e): handle (V) | mouse (NM) exited (N) 	++ :: [ mouse (NM) event (NI) - e (N) ] :: invita (NM) listener (N)  :: void (N) 
CONSTRUCTOR:NAME:SymTabSection SymTabSection SymTabSection(String name, int flags, int addr, StrTabSection stringTable):  | sym (NM) tab (NM) section (N) 	++ :: [ string (NI) - name (NI) ] :: [ int (N) - flags (N) ] :: [ int (N) - addr (N) ] :: [ str (NM) tab (NM) section (N) - string (NM) table (N) ]
SPECIAL:NAME:DocType void setInternalSubset(String newData): set (V)  | internal (NM) subset (N) 	++ :: [ string (NI) - new (NM) data (NI) ] :: doc (NM) type (N) 
SPECIAL:NAME:SHA256HMACForByteArrays2 void setDebug(boolean d): set (V)  | debug (N) 	++ :: [ boolean (N) - d (N) ] :: SHA (NM) 256 (NM) HMAC (NM) for (NM) byte (NM) arrays (NM) 2 (N) 
V_3P_IRR:NAME:EjbUtils boolean isLocalEjbRef(String viewType, JavaClass refClass): is (V)  | EQUIV[local (NM) ejb (NM) ref (NI) , [ java (NM) class (NI) - ref (NM) class (NI) ]]	++ :: [ string (NI) - view (NM) type (N) ] :: boolean (N)  :: ejb (NM) utils (N) 
BASE_VERB:NAME:MetaDataEditor boolean betterThan(MetaDataEditor other): better (V)  | than (N) 	++ :: [ meta (NM) data (NM) editor (N) - other (DT) ] :: boolean (N)  :: meta (NM) data (NM) editor (N) 
BASE_VERB:NAME:TavEngine void closeAll(): close (V)  | all (DT) 	++ :: tav (NM) engine (N) 
SPECIAL:NAME:SessionManager static Date getSessionStartTime(): get (V)  | session (NM) start (NM) time (N) 	++ :: date (N)  :: session (NM) manager (N) 
SPECIAL:NAME:IRSignal String getFlags(): get (V)  | flags (N) 	++ :: string (NI)  :: IR (NM) signal (N) 
SPECIAL:NAME:Record Number getNumber(int index): get (V)  | number (NI) 	++ :: [ int (N) - index (NI) ] :: number (NI)  :: record (N) 
SPECIAL:NAME:JSPTreeComponent void setSkin(String p_className): set (V)  | skin (N) 	++ :: [ string (NI) - p (NM) class (NM) name (NI) ] :: JSP (NM) tree (NM) component (N) 
SPECIAL:NAME:UserLucenePlugin Object getIdForObject(Object object): get (V)  | id (NI) -- for (P) EQUIV[object (NI) , [ object (NI) - object (NI) ]]	++ :: object (NI)  :: user (NM) lucene (NM) plugin (N) 
BASE_VERB:NAME:Dirhandler String topDir(): top (V)  | dir (NI) 	++ :: string (NI)  :: dirhandler (N) 
SPECIAL:NAME:postfieldNode String getExtra(): get (V)  | extra (N) 	++ :: string (NI)  :: postfield (NM) node (NI) 
BASE_VERB:NAME:RootNode int countChildrenWithTerms(): count (V)  | children (N) -- with (P) terms (N) 	++ :: int (N)  :: root (NM) node (NI) 
SPECIAL:NAME:StatisticsTableModel String getChartTitles(): get (V)  | chart (NM) titles (N) 	++ :: string (NI)  :: statistics (NM) table (NM) model (NI) 
SPECIAL:NAME:BuildConsoleViewer void setDocument(IDocument doc): set (V)  | document (NI) 	++ :: [ I (NM) document (NI) - doc (NI) ] :: build (NM) console (NM) viewer (N) 
BASE_VERB:NAME:HTMLParserTokenManager int jjStopStringLiteralDfa_6(int pos, long active0): jj (PRE) stop (VI)  | string (NM) literal (NM) dfa (N) 6 (D) 	++ :: [ int (N) - pos (N) ] :: [ long (N) - active (NM) 0 (N) ] :: int (N)  :: HTML (NM) parser (NM) token (NM) manager (N) 
SPECIAL:NAME:ActivityRelation GenericActivityProperty getRelToTitle(): get (V)  | rel (N) -- to (P) title (N) 	++ :: generic (NM) activity (NM) property (N)  :: activity (NM) relation (N) 
SPECIAL:NAME:EfFrontier int getIdxGlobalPrinc(int _idxOnFirstFrontier): get (V)  | idx (NM) global (NM) princ (N) 	++ :: [ int (N) - idx (NM) on (NM) first (NM) frontier (N) ] :: int (N)  :: ef (NM) frontier (N) 
SPECIAL:NAME:TAlbumImageThumbnailBean void setImageName(String imageName): set (V)  | image (NM) name (NI) 	++ :: [ string (NI) - image (NM) name (NI) ] :: T (NM) album (NM) image (NM) thumbnail (NM) bean (NI) 
SPECIAL:NAME:Page void setClientEnv(ClientEnv clientEnv): set (V)  | client (NM) env (N) 	++ :: [ client (NM) env (N) - client (NM) env (N) ] :: page (N) 
BASE_VERB:NAME:Point computeSize(int wHint, int hHint, boolean changed): compute (V)  | size (N) 	++ :: [ int (N) - w (NM) hint (N) ] :: [ int (N) - h (NM) hint (N) ] :: [ boolean (N) - changed (N) ] :: point (N)  :: ANONYMOUS (N) 
BASE_VERB:NAME:AbstractWriteDataBean static void purgeIntermediateEntryLogs(Date start, Date end, String dataSessionType): purge (V)  | intermediate (NM) entry (NM) logs (N) 	++ :: [ date (N) - start (N) ] :: [ date (N) - end (N) ] :: [ string (NI) - data (NM) session (NM) type (N) ] :: abstract (NM) write (NM) data (NM) bean (NI) 
SPECIAL:NAME:Match void setSource(String str): set (V)  | source (NI) 	++ :: [ string (NI) - str (NI) ] :: match (N) 
SPECIAL:NAME:XULSelectOne String getOncommand(): get (V)  | oncommand (N) 	++ :: string (NI)  :: XUL (NM) select (NM) one (N) 
SPECIAL:NAME:SRR_S01_SERVICE AIS getAIS(): get (V)  | AIS (N) 	++ :: AIS (N)  :: SRR (NM) S (NM) 01 (NM) SERVICE (N) 
SPECIAL:NAME:BasicsSearch ArrayList getVariable(ClassifierAnalyser analyser, String name, int is_static, int is_final): get (V)  | variable (N) 	++ :: [ classifier (NM) analyser (N) - analyser (N) ] :: [ string (NI) - name (NI) ] :: [ int (N) - is (NM) static (N) ] :: [ int (N) - is (NM) final (N) ] :: array (NM) list (N)  :: basics (NM) search (N) 
BASE_VERB:FORM:OWLOntologyImpl void visit(SetDeprecated event): visit (V)  | [ set (NM) deprecated (N) - event (NI) ]	++ :: OWL (NM) ontology (NM) impl (NI) 
SPECIAL:NAME:Bug List<Attachment> getAttachments(): get (V)  | attachments (N) 	++ :: list (NM) attachment (N)  :: bug (N) 
PREP:NAME:NonNullSpecification String toString(): convert (V) | to (P) string (NI) 	++ :: non (NM) null (NM) specification (N)  :: string (NI) 
BASE_VERB:NAME:RequestParser static int intParam(HttpServletRequest request, String name): int (V)  | param (N) 	++ :: [ http (NM) servlet (NM) request (N) - request (N) ] :: [ string (NI) - name (NI) ] :: int (N)  :: request (NM) parser (N) 
SPECIAL:NAME:TaskDetailsDialog JSpinner getDaysBefore(): get (V)  | days (N) before (NM) 	++ :: J (NM) spinner (N)  :: task (NM) details (NM) dialog (N) 
SPECIAL:NAME:DataLibrary void writeCache(): write (V)  | cache (N) 	++ :: data (NM) library (N) 
SPECIAL:NAME:InternalDestination static String getValueNoInstance(): get (V)  | value (NM) no (DT) instance (NI) 	++ :: string (NI)  :: internal (NM) destination (N) 
SPECIAL:NAME:QueryMethods DataSource getDataSource(Document doc, String id): get (V)  | data (NM) source (NI) 	++ :: [ document (NI) - doc (NI) ] :: [ string (NI) - id (NI) ] :: data (NM) source (NI)  :: query (NM) methods (N) 
SPECIAL:NAME:ForceDirectedLayout void setIterations(int iter): set (V)  | iterations (N) 	++ :: [ int (N) - iter (N) ] :: force (NM) directed (NM) layout (N) 
SPECIAL:NAME:JIFSDirectory FSEntry addDirectory(String name): add (V)  | directory (N) 	++ :: [ string (NI) - name (NI) ] :: FS (NM) entry (NI)  :: JIFS (NM) directory (N) 
BASE_VERB:NAME:PXPageWrapper MCContext _promoteCrumbContext(MCContext context): promote (V)  | EQUIV[crumb (NM) context (N) , [ MC (NM) context (N) - context (N) ]]	++ :: MC (NM) context (N)  :: PX (NM) page (NM) wrapper (NI) 
SPECIAL:NAME:AL int getSize(): get (V)  | size (N) 	++ :: int (N)  :: AL (N) 
ENDS_WITH_ED:NAME:CancelActionListener void actionPerformed(ActionEvent ex): handle (V) | action (NM) performed (N) 	++ :: [ action (NM) event (NI) - ex (N) ] :: cancel (NM) action (NM) listener (N)  :: void (N) 
ENDS_WITH_ED:NAME:UploadFile void okActionPerformed(ActionEvent evt): handle (V) | ok (PRE) action (NM) performed (N) 	++ :: [ action (NM) event (NI) - evt (N) ] :: upload (NM) file (NI)  :: void (N) 
BASE_VERB:FORM:SSLSocketChannel int unwrap(int ops): unwrap (V)  | [ int (N) - ops (N) ]	++ :: SSL (NM) socket (NM) channel (N)  :: int (N) 
SPECIAL:NAME:IAction void setTaskname(String name, JWatchDog jwd): set (V)  | taskname (N) 	++ :: [ string (NI) - name (NI) ] :: [ J (NM) watch (NM) dog (N) - jwd (N) ] :: I (NM) action (N) 
CONSTRUCTOR:NAME:PeriodicContinuedFraction PeriodicContinuedFraction PeriodicContinuedFraction(ContinuedFraction period):  | periodic (NM) continued (NM) fraction (N) 	++ :: [ continued (NM) fraction (N) - period (N) ]
SPECIAL:NAME:JpegReaderTest void testExtract_Width(): test (VI) extract (V)  | width (N) 	++ :: jpeg (NM) reader (NM) test (N) 
PREP:NAME:SeqReset String toFIXMessage(): convert (V) | to (P) FIX (NM) message (NI) 	++ :: seq (NM) reset (N)  :: string (NI) 
SPECIAL:NAME:InitPlugIn boolean checkExsit(String config_file): check (VI)  | exsit (N) 	++ :: [ string (NI) - config (NM) file (NI) ] :: boolean (N)  :: init (NM) plug (NM) in (NI) 
SPECIAL:NAME:TestTestSuiteImpl void testGetSuiteClass(): test (VI) get (V)  | suite (NM) class (NI) 	++ :: test (NM) test (NM) suite (NM) impl (NI) 
VOID_NP:NAME:PhysicalArchive void rollbackStore(): handle (V) | rollback (NM) store (N) 	++ :: physical (NM) archive (N)  :: void (N) 
CONSTRUCTOR:NAME:TailThread TailThread TailThread(Status state, int sleepDelay, ConfigFileSection filesToTail, Method forwardMethodName):  | tail (NM) thread (N) 	++ :: [ status (N) - state (N) ] :: [ int (N) - sleep (NM) delay (N) ] :: [ config (NM) file (NM) section (N) - files (NM) to (NM) tail (N) ] :: [ method (N) - forward (NM) method (NM) name (NI) ]
SPECIAL:NAME:Interaction Collection<ExperimentRef> getExperimentRefs(): get (V)  | experiment (NM) refs (N) 	++ :: collection (NM) experiment (NM) ref (NI)  :: interaction (N) 
BASE_VERB:NAME:Main void pauseApp(): pause (VI)  | app (N) 	++ :: main (N) 
BASE_VERB:NAME:AbstractFileSystemBuilder T disableEvents(): disable (V)  | events (N) 	++ :: T (N)  :: abstract (NM) file (NM) system (NM) builder (N) 
CONSTRUCTOR:NAME:PyTemplatePreferencesPage PyTemplatePreferencesPage PyTemplatePreferencesPage():  | py (NM) template (NM) preferences (NM) page (N) 	++
SPECIAL:CLAS:void run(): run (VI)  | ANONYMOUS (N) 	++
SPECIAL:NAME:ElementListManager SearchtoolSettings getSearchtoolSettings(): get (V)  | searchtool (NM) settings (N) 	++ :: searchtool (NM) settings (N)  :: element (NM) list (NM) manager (N) 
SPECIAL:NAME:X_R_Request int getC_BPartner_ID(): get (V)  | C (NM) B (NM) partner (NM) ID (NI) 	++ :: int (N)  :: X (NM) R (NM) request (N) 
CONSTRUCTOR:NAME:Writer Writer Writer():  | writer (N) 	++
SPECIAL:NAME:X_C_Order String getFreightCostRule(): get (V)  | freight (NM) cost (NM) rule (N) 	++ :: string (NI)  :: X (NM) C (NM) order (N) 
NOUN_PHRASE:NAME:MagickImage MagickImage unsharpMaskImage(double raduis, double sigma, double amount, double threshold): get (V) | unsharp (NM) mask (NM) image (N) 	++ :: [ double (N) - raduis (N) ] :: [ double (N) - sigma (N) ] :: [ double (N) - amount (N) ] :: [ double (N) - threshold (N) ] :: magick (NM) image (N)  :: magick (NM) image (N) 
SPECIAL:NAME:JFreeChart void setPadding(RectangleInsets padding): set (V)  | padding (N) 	++ :: [ rectangle (NM) insets (N) - padding (N) ] :: J (NM) free (NM) chart (N) 
SPECIAL:NAME:PreferenceModelImpl void setPreferenceStorageClass(String preferenceStorageClass): set (V)  | preference (NM) storage (NM) class (NI) 	++ :: [ string (NI) - preference (NM) storage (NM) class (NI) ] :: preference (NM) model (NM) impl (NI) 
SPECIAL:NAME:SimpleObservable void setObserverList(ArrayList observers): set (V)  | observer (NM) list (N) 	++ :: [ array (NM) list (N) - observers (N) ] :: simple (NM) observable (N) 
SPECIAL:NAME:Songs int getListing(): get (V)  | listing (N) 	++ :: int (N)  :: songs (N) 
SPECIAL:NAME:BaseSongPerformedByArtistPeer static Class getOMClass(): get (V)  | OM (NM) class (NI) 	++ :: class (NI)  :: base (NM) song (NM) performed (NM) by (NM) artist (NM) peer (N) 
SPECIAL:NAME:MiniEXIF boolean loadExifFile(String fileName): load (V)  | EQUIV[exif (NM) file (NI) , [ string (NI) - file (NM) name (NI) ]]	++ :: boolean (N)  :: mini (NM) EXIF (N) 
SPECIAL:NAME:FlowStep String getAbsolutePath(): get (V)  | absolute (NM) path (NI) 	++ :: string (NI)  :: flow (NM) step (N) 
SPECIAL:NAME:Table void setName(String name): set (V)  | name (NI) 	++ :: [ string (NI) - name (NI) ] :: table (N) 
BASE_VERB:NAME:ExpansionApplier TypeName evaluateUp(TypeName p): evaluate (V)  | up (N) 	++ :: [ type (NM) name (NI) - p (NI) ] :: type (NM) name (NI)  :: expansion (NM) applier (N) 
SPECIAL:NAME:ISearchManager void addResultListener(IResultListener listener): add (V)  | EQUIV[result (NM) listener (N) , [ I (NM) result (NM) listener (N) - listener (N) ]]	++ :: I (NM) search (NM) manager (N) 
SPECIAL:NAME:Step void setText(String text): set (V)  | text (NI) 	++ :: [ string (NI) - text (NI) ] :: step (N) 
BASE_VERB:NAME:ScriptMath double jsFunction_sqrt(double value): js (PRE) function (V)  | sqrt (N) 	++ :: [ double (N) - value (NI) ] :: double (N)  :: script (NM) math (N) 
SPECIAL:NAME:MetaSchedulerHelper static ArrayList getResourceManagerInfoArray(Hashtable t): get (V)  | resource (NM) manager (NM) info (NM) array (N) 	++ :: [ hashtable (N) - t (N) ] :: array (NM) list (N)  :: meta (NM) scheduler (NM) helper (N) 
BASE_VERB:FORM:OutputStack OutputNode purge(int index): purge (V)  | [ int (N) - index (NI) ]	++ :: output (NM) stack (N)  :: output (NM) node (NI) 
BASE_VERB:NAME:SubMap V putIfAbsent(K key, V value): put (V)  | if (NM) absent (N) 	++ :: [ K (N) - key (NI) ] :: [ V (N) - value (NI) ] :: V (N)  :: sub (NM) map (N) 
CONSTRUCTOR:NAME:DoubleArrayDeque DoubleArrayDeque DoubleArrayDeque(int capacity, int growthPolicy, double growthFactor, int growthChunk):  | double (NM) array (NM) deque (N) 	++ :: [ int (N) - capacity (N) ] :: [ int (N) - growth (NM) policy (N) ] :: [ double (N) - growth (NM) factor (N) ] :: [ int (N) - growth (NM) chunk (N) ]
CONSTRUCTOR:NAME:LoadIO LoadIO LoadIO(String chooserPath):  | load (NM) IO (N) 	++ :: [ string (NI) - chooser (NM) path (NI) ]
VOID_NP:NAME:TrainClassifierParams void LearnerOp(String s): handle (V) | learner (NM) op (N) 	++ :: [ string (NI) - s (N) ] :: train (NM) classifier (NM) params (N)  :: void (N) 
VOID_NP:NAME:Lexer void unread(Token token): handle (V) | unread (N) 	++ :: [ token (N) - token (N) ] :: lexer (N)  :: void (N) 
ENDS_WITH_ED:NAME:DHTTransportStatsImpl void statsSent(DHTUDPPacketRequest request): handle (V) | stats (NM) sent (N) 	++ :: [ DHTUDP (NM) packet (NM) request (N) - request (N) ] :: DHT (NM) transport (NM) stats (NM) impl (NI)  :: void (N) 
BASE_VERB:CLAS:DefaultMessageListenerContainer void recoverAfterListenerSetupFailure(): recover (V)  | default (NM) message (NM) listener (NM) container (NI) -- after (P) listener (NM) setup (NM) failure (N) 	++
SPECIAL:NAME:TaxonGroupNode void setName(String v): set (V)  | name (NI) 	++ :: [ string (NI) - v (N) ] :: taxon (NM) group (NM) node (NI) 
SPECIAL:NAME:Timeouts String getTimeoutFrag(): get (V)  | timeout (NM) frag (N) 	++ :: string (NI)  :: timeouts (N) 
V_3PS:FORM:BasicPermission boolean implies(Permission perm): implies (V)  | [ permission (N) - perm (N) ]	++ :: basic (NM) permission (N)  :: boolean (N) 
BASE_VERB:NAME:OpenWikiLinkEditorAction void openWikiLinkOnSelection(): open (V)  | wiki (NM) link (N) -- on (P) selection (N) 	++ :: open (NM) wiki (NM) link (NM) editor (NM) action (N) 
BASE_VERB:FORM:DbIfServiceEntry void insert(Connection c): insert (V)  | [ connection (N) - c (N) ]	++ :: db (NM) if (NM) service (NM) entry (NI) 
BASE_VERB:NAME:SequencerResourceGenerator static void handleServiceList(AbstractComponent component, Vector serviceList): handle (VI)  | EQUIV[service (NM) list (N) , [ vector (N) - service (NM) list (N) ]]	++ :: [ abstract (NM) component (N) - component (N) ] :: sequencer (NM) resource (NM) generator (N) 
CONSTRUCTOR:NAME:SinglePhaseTransducer SinglePhaseTransducer SinglePhaseTransducer(String name):  | single (NM) phase (NM) transducer (N) 	++ :: [ string (NI) - name (NI) ]
EMPTY:NONE:VMEGeometry String pX2():  | p (PRE) X (PRE) 2 (D) 
ENDS_WITH_ED:NAME:void actionPerformed(ActionEvent evt): handle (V) | action (NM) performed (N) 	++ :: [ action (NM) event (NI) - evt (N) ] :: ANONYMOUS (N)  :: void (N) 
CONSTRUCTOR:NAME:TypeCheckingListIterator TypeCheckingListIterator TypeCheckingListIterator(ListIterator itr):  | type (NM) checking (NM) list (NM) iterator (N) 	++ :: [ list (NM) iterator (N) - itr (N) ]
SPECIAL:NAME:BatchSignalCommand void setProcessVersion(long processVersion): set (V)  | process (NM) version (N) 	++ :: [ long (N) - process (NM) version (N) ] :: batch (NM) signal (NM) command (N) 
SPECIAL:NAME:PalmTypeObjHandle String getRetJava(): get (V)  | ret (NM) java (N) 	++ :: string (NI)  :: palm (NM) type (NM) obj (NM) handle (NI) 
BASE_VERB:CLAS:NativeMethods4JDK static void bdTranslateToDb2e(Db2eBoundDate bd): bd (PRE) translate (V)  | native (NM) methods (NM) 4 (NM) JDK (N) -- to (P) db (NM) 2 (D) e (N) 	++ :: [ db (NM) 2 (NM) e (NM) bound (NM) date (N) - bd (N) ]
CONSTRUCTOR:NAME:ControlTreeReference ControlTreeReference ControlTreeReference(int id):  | control (NM) tree (NM) reference (NI) 	++ :: [ int (N) - id (NI) ]
SPECIAL:NAME:ElementDescriptor void setTagsOfType(String tagType, Tag newTagsOfType): set (V)  | tags (N) -- of (P) type (N) 	++ :: [ string (NI) - tag (NM) type (N) ] :: [ tag (NI) - new (NM) tags (NM) of (NM) type (N) ] :: element (NM) descriptor (NI) 
SPECIAL:NAME:IsProtonInAromaticSystemDescriptor DescriptorSpecification getSpecification(): get (V)  | specification (N) 	++ :: descriptor (NM) specification (N)  :: is (NM) proton (NM) in (NM) aromatic (NM) system (NM) descriptor (NI) 
BASE_VERB:CLAS:AbstractJPPFClientConnection List<ClientExecution> close(): close (V)  | abstract (NM) JPPF (NM) client (NM) connection (N) 	++ :: list (NM) client (NM) execution (N) 
SPECIAL:NAME:mfnode void render3dForeground(GL gl, nodeBean n, mfint32 instance, mfint32 max): render (V)  | 3 (D) d (NM) foreground (N) 	++ :: [ GL (N) - gl (N) ] :: [ node (NM) bean (NI) - n (N) ] :: [ mfint (NM) 32 (N) - instance (NI) ] :: [ mfint (NM) 32 (N) - max (N) ] :: mfnode (N) 
VOID_NP:NAME:ToTextSAXHandler void characters(String characters): handle (V) | characters (N) 	++ :: [ string (NI) - characters (N) ] :: to (NM) text (NM) SAX (NM) handler (N)  :: void (N) 
SPECIAL:NAME:OogSearchState float getInsertionProbability(): get (V)  | insertion (NM) probability (N) 	++ :: float (N)  :: oog (NM) search (NM) state (N) 
BASE_VERB:NAME:VisualizationViewer Point2D layoutTransform(Point2D p): layout (V)  | transform (N) 	++ :: [ point (NM) 2 (NM) D (N) - p (NI) ] :: point (NM) 2 (NM) D (N)  :: visualization (NM) viewer (N) 
SPECIAL:NAME:LocalsCompiler Object assert_stmt(SimpleNode node): assert (VI)  | stmt (N) 	++ :: [ simple (NM) node (NI) - node (NI) ] :: object (NI)  :: locals (NM) compiler (N) 
SPECIAL:NAME:ParamState State createChildState(String localName): create (V)  | child (NM) state (N) 	++ :: [ string (NI) - local (NM) name (NI) ] :: state (N)  :: param (NM) state (N) 
SPECIAL:NAME:ServletRequestImpl String getCharacterEncoding(): get (V)  | character (NM) encoding (N) 	++ :: string (NI)  :: servlet (NM) request (NM) impl (NI) 
V_3PS:FORM:BitSet boolean equals(Object obj): equals (V)  | [ object (NI) - obj (NI) ]	++ :: bit (NM) set (N)  :: boolean (N) 
ENDS_WITH_ED:NAME:TreeGeneratorListener void generationStarted(TreeGeneratorProgressEvent event): handle (V) | generation (NM) started (N) 	++ :: [ tree (NM) generator (NM) progress (NM) event (NI) - event (NI) ] :: tree (NM) generator (NM) listener (N)  :: void (N) 
SPECIAL:FORM:BooleanGrid void set(int i, boolean in): set (V)  | [ int (N) - i (N) ]	++ :: [ boolean (N) - in (NI) ] :: boolean (NM) grid (N) 
PREP:NAME:DataType String toString(): convert (V) | to (P) string (NI) 	++ :: data (NM) type (N)  :: string (NI) 
BASE_VERB:NAME:ImportModel void attachObserver(Object object): attach (V)  | observer (N) 	++ :: [ object (NI) - object (NI) ] :: import (NM) model (NI) 
BASE_VERB:NAME:DefaultDirectoryEntry boolean moveEntry(DefaultRepositoryEntry sourceEntry): move (V)  | EQUIV[entry (NI) , [ default (NM) repository (NM) entry (NI) - source (NM) entry (NI) ]]	++ :: boolean (N)  :: default (NM) directory (NM) entry (NI) 
SPECIAL:NAME:ExtraCtrl Media getMedia(String pathInfo): get (V)  | media (N) 	++ :: [ string (NI) - path (NM) info (NI) ] :: media (N)  :: extra (NM) ctrl (N) 
ED_VERB:NAME:TransactionImpl void timedOut(): timed (V)  | out (N) 	++ :: transaction (NM) impl (NI) 
SPECIAL:NAME:Person String getFirstName(): get (V)  | first (NM) name (NI) 	++ :: string (NI)  :: person (N) 
SPECIAL:NAME:StepTransition String getEndName(): get (V)  | end (NM) name (NI) 	++ :: string (NI)  :: step (NM) transition (N) 
SPECIAL:CLAS:IndexUpdate void start(): start (V)  | index (NM) update (N) 	++
CONSTRUCTOR:NAME:NTACaretListener NTACaretListener NTACaretListener(NTextArea t):  | NTA (NM) caret (NM) listener (N) 	++ :: [ N (NM) text (NM) area (N) - t (N) ]
CONSTRUCTOR:NAME:VLookup VLookup VLookup(String columnName, boolean mandatory, boolean isReadOnly, boolean isUpdateable, Lookup lookup):  | V (NM) lookup (N) 	++ :: [ string (NI) - column (NM) name (NI) ] :: [ boolean (N) - mandatory (N) ] :: [ boolean (N) - is (NM) read (NM) only (N) ] :: [ boolean (N) - is (NM) updateable (N) ] :: [ lookup (N) - lookup (N) ]
BASE_VERB:NAME:Opener ImagePlus openImage(String path): open (V)  | image (N) 	++ :: [ string (NI) - path (NI) ] :: image (NM) plus (N)  :: opener (N) 
PREP:NAME:Year String toString(): convert (V) | to (P) string (NI) 	++ :: year (N)  :: string (NI) 
SPECIAL:NAME:JTree TreePath getAnchorSelectionPath(): get (V)  | anchor (NM) selection (NM) path (NI) 	++ :: tree (NM) path (NI)  :: J (NM) tree (NI) 
CONSTRUCTOR:NAME:WordNGram WordNGram WordNGram(int n):  | word (NM) N (NM) gram (N) 	++ :: [ int (N) - n (N) ]
V_3P_IRR:NAME:DefaultQueueSystemEndPointProxy boolean isRemoteInQueueBlocked(): is (V)  | remote (N) -- in (P) queue (NM) blocked (N) 	++ :: boolean (N)  :: default (NM) queue (NM) system (NM) end (NM) point (NM) proxy (NI) 
NOUN_PHRASE:NAME:PerlSubstitution String value(MatchResult mr): get (V) | value (NI) 	++ :: [ match (NM) result (N) - mr (N) ] :: perl (NM) substitution (N)  :: string (NI) 
CONSTRUCTOR:NAME:KeyArrayListener KeyArrayListener KeyArrayListener():  | key (NM) array (NM) listener (N) 	++
BASE_VERB:NAME:ContainerCheckedTreeViewer void updateChildrenItems(TreeItem parent): update (V)  | children (NM) items (N) 	++ :: [ tree (NM) item (NI) - parent (N) ] :: container (NM) checked (NM) tree (NM) viewer (N) 
SPECIAL:NAME:MedDoseCheckDataModel void setNotActive(): set (V)  | not (DT) active (N) 	++ :: med (NM) dose (NM) check (NM) data (NM) model (NI) 
SPECIAL:NAME:ResultSetDecorator BigDecimal getBigDecimal(int columnIndex): get (V)  | big (NM) decimal (N) 	++ :: [ int (N) - column (NM) index (NI) ] :: big (NM) decimal (N)  :: result (NM) set (NM) decorator (N) 
SPECIAL:FORM:Sampler void init(float minX, float minY): init (V)  | [ float (N) - min (NM) X (N) ]	++ :: [ float (N) - min (NM) Y (N) ] :: sampler (N) 
CONSTRUCTOR:NAME:JSlider JSlider JSlider(int minimum, int maximum, int value):  | J (NM) slider (N) 	++ :: [ int (N) - minimum (N) ] :: [ int (N) - maximum (N) ] :: [ int (N) - value (NI) ]
SPECIAL:NAME:PreparedStatementWrapper void setString(int parameterIndex, String x): set (V)  | string (NI) 	++ :: [ int (N) - parameter (NM) index (NI) ] :: [ string (NI) - x (N) ] :: prepared (NM) statement (NM) wrapper (NI) 
BASE_VERB:NAME:ClassImpl Variant ExportRequest(): export (V)  | request (N) 	++ :: variant (N)  :: class (NM) impl (NI) 
SPECIAL:NAME:OrdinalVisualVariable Object getMinVisVarValue(): get (V)  | min (NM) vis (NM) var (NM) value (NI) 	++ :: object (NI)  :: ordinal (NM) visual (NM) variable (N) 
SPECIAL:NAME:TriMeshEditorWindow int findSelectedBoundaries(): find (V)  | selected (NM) boundaries (N) 	++ :: int (N)  :: tri (NM) mesh (NM) editor (NM) window (N) 
SPECIAL:NAME:GFF String getHref(): get (V)  | href (N) 	++ :: string (NI)  :: GFF (N) 
SPECIAL:NAME:ManageTreeNode static Vector getAllChildren(TreeNode tn): get (V)  | all (DT) children (N) 	++ :: [ tree (NM) node (NI) - tn (N) ] :: vector (N)  :: manage (NM) tree (NM) node (NI) 
SPECIAL:FORM:ModelCom Model add(Statement s): add (V)  | [ statement (NI) - s (N) ]	++ :: model (NM) com (N)  :: model (NI) 
CONSTRUCTOR:NAME:AutoSave AutoSave AutoSave(MainFrame parent, long delay):  | auto (NM) save (N) 	++ :: [ main (NM) frame (N) - parent (N) ] :: [ long (N) - delay (N) ]
SPECIAL:FORM:Encrypt static void main(String args): main (V)  | [ string (NI) - args (N) ]	++ :: encrypt (N) 
SPECIAL:NAME:UnitResultFormatter OutputStream getOutput(): get (V)  | output (N) 	++ :: output (NM) stream (NI)  :: unit (NM) result (NM) formatter (N) 
SPECIAL:NAME:FRMixer void setMute(int arg0, boolean arg1): set (V)  | mute (N) 	++ :: [ int (N) - arg (NM) 0 (N) ] :: [ boolean (N) - arg (NM) 1 (N) ] :: FR (NM) mixer (N) 
SPECIAL:NAME:SPyConsole void replaceInput(String text): replace (V)  | input (NI) 	++ :: [ string (NI) - text (NI) ] :: S (NM) py (NM) console (N) 
SPECIAL:NAME:SkinSimpleButtonIndexModel AbstractButton getButton(): get (V)  | button (N) 	++ :: abstract (NM) button (N)  :: skin (NM) simple (NM) button (NM) index (NM) model (NI) 
SPECIAL:NAME:StubMethodGenerator void addStubMethodReturn(AttributeCode code, Label endLabel): add (V)  | stub (NM) method (NM) return (N) 	++ :: [ attribute (NM) code (NI) - code (NI) ] :: [ label (NI) - end (NM) label (NI) ] :: stub (NM) method (NM) generator (N) 
SPECIAL:FORM:XMLDatabase Document load(XMLDatabaseKey key): load (V)  | [ XML (NM) database (NM) key (NI) - key (NI) ]	++ :: XML (NM) database (N)  :: document (NI) 
SPECIAL:NAME:TestContentNegotiation void testQualNeg3(): test (VI)  | qual (NM) neg (N) 3 (D) 	++ :: test (NM) content (NM) negotiation (N) 
SPECIAL:NAME:WriteRasterImagePlugin String getImageFormat(): get (V)  | image (NM) format (NI) 	++ :: string (NI)  :: write (NM) raster (NM) image (NM) plugin (N) 
SPECIAL:NAME:MgnlMailServlet void doPost(HttpServletRequest httpServletRequest, HttpServletResponse httpServletResponse): do (VI)  | post (N) 	++ :: [ http (NM) servlet (NM) request (N) - http (NM) servlet (NM) request (N) ] :: [ http (NM) servlet (NM) response (N) - http (NM) servlet (NM) response (N) ] :: mgnl (NM) mail (NM) servlet (N) 
SPECIAL:NAME:SessionNode CoreObject getEoObject(): get (V)  | eo (NM) object (NI) 	++ :: core (NM) object (NI)  :: session (NM) node (NI) 
ED_VERB:NAME:ScaledRAFileNIO boolean wasNio(): was (V)  | nio (N) 	++ :: boolean (N)  :: scaled (NM) RA (NM) file (NM) NIO (N) 
CONSTRUCTOR:NAME:StopFilter StopFilter StopFilter(TokenStream input, String stopWords):  | stop (NM) filter (N) 	++ :: [ token (NM) stream (NI) - input (NI) ] :: [ string (NI) - stop (NM) words (N) ]
SPECIAL:NAME:CMLTable CMLElements<CMLArray> getArrayElements(): get (V)  | array (NM) elements (N) 	++ :: CML (NM) elements (NM) CML (NM) array (N)  :: CML (NM) table (N) 
BASE_VERB:NAME:DAOBuilder static AbstractDAO configureDAO(AbstractDAO dao, DatabaseServer dbs): configure (V)  | EQUIV[DAO (N) , [ abstract (NM) DAO (N) - dao (N) ]]	++ :: [ database (NM) server (N) - dbs (N) ] :: abstract (NM) DAO (N)  :: DAO (NM) builder (N) 
BASE_VERB:NAME:PrimitiveArrayFreezeDryer FreezeDryedObject freezeDry(String id, Object o): freeze (V)  | dry (N) 	++ :: [ string (NI) - id (NI) ] :: [ object (NI) - o (N) ] :: freeze (NM) dryed (NM) object (NI)  :: primitive (NM) array (NM) freeze (NM) dryer (N) 
SPECIAL:NAME:Object getValue(Object object): get (V)  | value (NI) 	++ :: [ object (NI) - object (NI) ] :: object (NI)  :: ANONYMOUS (N) 
CONSTRUCTOR:NAME:JiBCardTerminal JiBCardTerminal JiBCardTerminal(String name, String type, String address):  | ji (NM) B (NM) card (NM) terminal (N) 	++ :: [ string (NI) - name (NI) ] :: [ string (NI) - type (N) ] :: [ string (NI) - address (NI) ]
BASE_VERB:NAME:MessageEventManager void sendDeliveredNotification(String to, String packetID): send (V)  | delivered (NM) notification (N) 	++ :: [ string (NI) - to (N) ] :: [ string (NI) - packet (NM) ID (NI) ] :: message (NM) event (NM) manager (N) 
EMPTY:NONE:as2j boolean jj_3R_68():  | jj (PRE) 3 (D) R (PRE) 68 (D) 
BASE_VERB:NAME:Parameters void parseSpecialNetlet(Args args): parse (V)  | special (NM) netlet (N) 	++ :: [ args (N) - args (N) ] :: parameters (N) 
CONSTRUCTOR:NAME:PermissionInfo PermissionInfo PermissionInfo(Element altPermissionElement):  | permission (NM) info (NI) 	++ :: [ element (NI) - alt (NM) permission (NM) element (NI) ]
SPECIAL:NAME:SQLPanel Action getUndoAction(): get (V)  | undo (NM) action (N) 	++ :: action (N)  :: SQL (NM) panel (N) 
SPECIAL:NAME:ControlPanel long getUnixEndTimeExtent(): get (V)  | unix (NM) end (NM) time (NM) extent (N) 	++ :: long (N)  :: control (NM) panel (N) 
CONSTRUCTOR:NAME:DBLinkReference DBLinkReference DBLinkReference(String pName, Class pSourceTable, String pSourceColumn, Class pDestTable, String pDestColumn):  | DB (NM) link (NM) reference (NI) 	++ :: [ string (NI) - p (NM) name (NI) ] :: [ class (NI) - p (NM) source (NM) table (N) ] :: [ string (NI) - p (NM) source (NM) column (N) ] :: [ class (NI) - p (NM) dest (NM) table (N) ] :: [ string (NI) - p (NM) dest (NM) column (N) ]
EVENT_PARAM:NAME:void dragOver(DropTargetEvent event): handle (V) | drag (NM) over (N) 	++ :: [ drop (NM) target (NM) event (NI) - event (NI) ] :: ANONYMOUS (N)  :: void (N) 
SPECIAL:FORM:Module short get(int address): get (V)  | [ int (N) - address (NI) ]	++ :: module (N)  :: short (N) 
CONSTRUCTOR:NAME:Settings Settings Settings(Properties defaults):  | settings (N) 	++ :: [ properties (N) - defaults (N) ]
SPECIAL:CLAS:Checker void run(): run (VI)  | checker (N) 	++
BASE_VERB:NAME:MyCompositionView void initialiseMethodReturn(): initialise (V)  | method (NM) return (N) 	++ :: my (PR) composition (NM) view (NI) 
SPECIAL:NAME:Settings void setDBColour(Color newValue): set (V)  | DB (NM) colour (N) 	++ :: [ color (N) - new (NM) value (NI) ] :: settings (N) 
CONSTRUCTOR:NAME:PrimaryKeyWrapper PrimaryKeyWrapper PrimaryKeyWrapper(AspectComponent ac):  | primary (NM) key (NM) wrapper (NI) 	++ :: [ aspect (NM) component (N) - ac (N) ]
BASE_VERB:NAME:RouteTester_55 void testgetRhumbLineRoute(): testget (V)  | rhumb (NM) line (NM) route (N) 	++ :: route (NM) tester (NM) 55 (N) 
SPECIAL:NAME:SQLParserTokenManager void jjAddStates(int i, int j): jj (PRE) add (V)  | states (N) 	++ :: [ int (N) - i (N) ] :: [ int (N) - j (N) ] :: SQL (NM) parser (NM) token (NM) manager (N) 
CONSTRUCTOR:NAME:CompilerException CompilerException CompilerException(Throwable arg0):  | compiler (NM) exception (N) 	++ :: [ throwable (N) - arg (NM) 0 (N) ]
CONSTRUCTOR:NAME:DBSubsetCacheReaper DBSubsetCacheReaper DBSubsetCacheReaper(DBSubsetCache objDBCache):  | DB (NM) subset (NM) cache (NM) reaper (N) 	++ :: [ DB (NM) subset (NM) cache (N) - obj (NM) DB (NM) cache (N) ]
SPECIAL:NAME:IDOMInitializer String getName(): get (V)  | name (NI) 	++ :: string (NI)  :: IDOM (NM) initializer (N) 
BASE_VERB:FORM:SshPublicKeyFile static SshPublicKeyFile parse(File keyfile): parse (V)  | [ file (NI) - keyfile (N) ]	++ :: ssh (NM) public (NM) key (NM) file (NI)  :: ssh (NM) public (NM) key (NM) file (NI) 
SPECIAL:NAME:FTPListItem String getName(): get (V)  | name (NI) 	++ :: string (NI)  :: FTP (NM) list (NM) item (NI) 
SPECIAL:NAME:RTextTabbedPaneView int getNumDocuments(): get (V)  | num (NM) documents (N) 	++ :: int (N)  :: R (NM) text (NM) tabbed (NM) pane (NM) view (NI) 
BASE_VERB:NAME:Utilities static void saveImageFile(Image img, File f): save (V)  | EQUIV[image (NM) file (NI) , [ file (NI) - f (N) ]]	++ :: [ image (N) - img (N) ] :: utilities (N) 
NOUN_PHRASE:NAME:Trap_SpikePit String ID(): get (V) | ID (NI) 	++ :: trap (NM) spike (NM) pit (N)  :: string (NI) 
SPECIAL:NAME:OS static void GetRegionBounds(int rgnHandle, Rect bounds): get (V)  | EQUIV[region (NM) bounds (N) , [ rect (N) - bounds (N) ]]	++ :: [ int (N) - rgn (NM) handle (NI) ] :: OS (N) 
EVENT_PARAM:NAME:void titleChange(WebBrowserEvent event): handle (V) | title (NM) change (N) 	++ :: [ web (NM) browser (NM) event (NI) - event (NI) ] :: ANONYMOUS (N)  :: void (N) 
SPECIAL:NAME:DateDelta int getYearDelta(Date d1, Date d2): get (V)  | year (NM) delta (N) 	++ :: [ date (N) - d (NM) 1 (N) ] :: [ date (N) - d (NM) 2 (N) ] :: int (N)  :: date (NM) delta (N) 
SPECIAL:NAME:GoodsStockChangesWizard boolean initChartPanel(WizardController controller): init (V)  | chart (NM) panel (N) 	++ :: [ wizard (NM) controller (N) - controller (N) ] :: boolean (N)  :: goods (NM) stock (NM) changes (NM) wizard (N) 
BASE_VERB:NAME:FSUtil static String decodeURLString(String sURL): decode (V)  | EQUIV[URL (NM) string (NI) , [ string (NI) - s (NM) URL (NI) ]]	++ :: string (NI)  :: FS (NM) util (N) 
SPECIAL:CLAS:ExtMapper void setFrom(String s): set (V)  | ext (NM) mapper (N) -- from (P) [ string (NI) - s (N) ]	++ :: [ string (NI) - s (N) ]
CONSTRUCTOR:NAME:UnknownCodeException UnknownCodeException UnknownCodeException(String message):  | unknown (NM) code (NM) exception (N) 	++ :: [ string (NI) - message (NI) ]
SPECIAL:NAME:AbstractResultSet InputStream getBinaryStream(String columnName): get (V)  | binary (NM) stream (NI) 	++ :: [ string (NI) - column (NM) name (NI) ] :: input (NM) stream (NI)  :: abstract (NM) result (NM) set (N) 
SPECIAL:NAME:X_T_Report String getName(): get (V)  | name (NI) 	++ :: string (NI)  :: X (NM) T (NM) report (N) 
NOUN_PHRASE:NAME:Dyn_Any_Manager static Any serializable_to_any(Serializable data): get (V) | serializable (NM) to (NM) any (DT) 	++ :: [ serializable (N) - data (NI) ] :: dyn (NM) any (DT) manager (N)  :: any (DT) 
SPECIAL:NAME:DestinationManagerMBean boolean getTemporaryInMemory(): get (V)  | temporary (N) -- in (P) memory (N) 	++ :: boolean (N)  :: destination (NM) manager (NM) M (NM) bean (NI) 
EVENT_PARAM:NAME:GroupListener void afterGroupDeletion(GroupEvent event): handle (V) | after (NM) group (NM) deletion (N) 	++ :: [ group (NM) event (NI) - event (NI) ] :: group (NM) listener (N)  :: void (N) 
EVENT_PARAM:NAME:PropertyChangeHandler void propertyChange(PropertyChangeEvent e): handle (V) | property (NM) change (N) 	++ :: [ property (NM) change (NM) event (NI) - e (N) ] :: property (NM) change (NM) handler (N)  :: void (N) 
SPECIAL:NAME:ElementImpl SOAPElement addChildElement(SOAPElement element): add (V)  | EQUIV[child (NM) element (NI) , [ SOAP (NM) element (NI) - element (NI) ]]	++ :: SOAP (NM) element (NI)  :: element (NM) impl (NI) 
SPECIAL:NAME:AccessXmlFile String getProperty(String section1, String key1, String defaultKey1): get (V)  | property (N) 	++ :: [ string (NI) - section (NM) 1 (N) ] :: [ string (NI) - key (NM) 1 (N) ] :: [ string (NI) - default (NM) key (NM) 1 (N) ] :: string (NI)  :: access (NM) xml (NM) file (NI) 
BASE_VERB:FORM:Factory static InlineStringDocument parse(String xmlAsString, XmlOptions options): parse (V)  | [ string (NI) - xml (NM) as (NM) string (NI) ]	++ :: [ xml (NM) options (N) - options (N) ] :: factory (N)  :: inline (NM) string (NM) document (NI) 
NOUN_PHRASE:NAME:Frame Incrementable previous(): get (V) | previous (N) 	++ :: frame (N)  :: incrementable (N) 
BASE_VERB:FORM:PHPSerializer static byte serialize(Object obj): serialize (V)  | [ object (NI) - obj (NI) ]	++ :: PHP (NM) serializer (N)  :: byte (N) 
NOUN_PHRASE:NAME:StdReflectImpl FunctionN constructor(Class p_class, Class p_types): get (V) | constructor (N) 	++ :: [ class (NI) - p (NM) class (NI) ] :: [ class (NI) - p (NM) types (N) ] :: std (NM) reflect (NM) impl (NI)  :: function (NM) N (N) 
SPECIAL:NAME:CodeAttr Variable addLocal(Type type): add (V)  | local (N) 	++ :: [ type (N) - type (N) ] :: variable (N)  :: code (NM) attr (N) 
BASE_VERB:FORM:FVector static FVector divide(FVector a, float b): divide (V)  | [ F (NM) vector (N) - a (N) ]	++ :: [ float (N) - b (N) ] :: F (NM) vector (N)  :: F (NM) vector (N) 
ED_VERB:NAME:PooledConnection boolean hadErrors(): had (V)  | errors (N) 	++ :: boolean (N)  :: pooled (NM) connection (N) 
CONSTRUCTOR:NAME:JDataSet JDataSet JDataSet(Document doc):  | J (NM) data (NM) set (N) 	++ :: [ document (NI) - doc (NI) ]
CONSTRUCTOR:NAME:RemoveContext RemoveContext RemoveContext(Shell window, Selection selection, Bundle bundle):  | remove (NM) context (N) 	++ :: [ shell (N) - window (N) ] :: [ selection (N) - selection (N) ] :: [ bundle (N) - bundle (N) ]
V_3P_IRR:NAME:Content boolean isDirty(): is (V)  | dirty (N) 	++ :: boolean (N)  :: content (N) 
SPECIAL:NAME:PageInfo List getIncludeCoda(): get (V)  | include (NM) coda (N) 	++ :: list (N)  :: page (NM) info (NI) 
NOUN_PHRASE:NAME:UnmarshallerImpl JAXBElement<T> unmarshal(Node node, Class<T> expectedType): get (V) | unmarshal (N) 	++ :: [ node (NI) - node (NI) ] :: [ class (NM) T (N) - expected (NM) type (N) ] :: unmarshaller (NM) impl (NI)  :: JAXB (NM) element (NM) T (N) 
V_3P_IRR:NAME:ProductInfo boolean isService(): is (V)  | service (N) 	++ :: boolean (N)  :: product (NM) info (NI) 
SPECIAL:NAME:Sequencer SyncMode getSlaveSyncModes(): get (V)  | slave (NM) sync (NM) modes (N) 	++ :: sync (NM) mode (N)  :: sequencer (N) 
BASE_VERB:NAME:PepsynAnalogTypeEJB void ejbPostCreate(PepsynAnalogTypeInfo param): ejb (PRE) post (V)  | create (N) 	++ :: [ pepsyn (NM) analog (NM) type (NM) info (NI) - param (N) ] :: pepsyn (NM) analog (NM) type (NM) EJB (N) 
ENDS_WITH_ED:NAME:void componentResized(ComponentEvent e): handle (V) | component (NM) resized (N) 	++ :: [ component (NM) event (NI) - e (N) ] :: ANONYMOUS (N)  :: void (N) 
CONSTRUCTOR:NAME:PartitionerTest PartitionerTest PartitionerTest(JChannel channel):  | partitioner (NM) test (N) 	++ :: [ J (NM) channel (N) - channel (N) ]
SPECIAL:NAME:BasicStorageTest void testBinaryWidgets(): test (VI)  | binary (NM) widgets (N) 	++ :: basic (NM) storage (NM) test (N) 
EVENT_PARAM:NAME:Panel void componentDetachedFromContainer(ComponentDetachEvent event): handle (V) | component (NM) detached (NM) from (NM) container (NI) 	++ :: [ component (NM) detach (NM) event (NI) - event (NI) ] :: panel (N)  :: void (N) 
BASE_VERB:FORM:exposed_pop PyObject __call__(PyObject arg0): call (V)  | [ py (NM) object (NI) - arg (NM) 0 (N) ]	++ :: exposed (NM) pop (N)  :: py (NM) object (NI) 
SPECIAL:NAME:Status void setWarning(String warningMessage): set (V)  | warning (N) 	++ :: [ string (NI) - warning (NM) message (NI) ] :: status (N) 
BASE_VERB:NAME:FolderExplorerImplementation void outFolderColumn(StringBuffer sb, AlbumFolderBean afb, FolderExplorerClientBean fecb, HttpServletRequest request): out (V)  | folder (NM) column (N) 	++ :: [ string (NM) buffer (NI) - sb (N) ] :: [ album (NM) folder (NM) bean (NI) - afb (N) ] :: [ folder (NM) explorer (NM) client (NM) bean (NI) - fecb (N) ] :: [ http (NM) servlet (NM) request (N) - request (N) ] :: folder (NM) explorer (NM) implementation (N) 
V_3P_IRR:NAME:JRParameterDecorator boolean isSystemDefined(): is (V)  | system (NM) defined (N) 	++ :: boolean (N)  :: JR (NM) parameter (NM) decorator (N) 
SPECIAL:NAME:AdjustableJSlider int getUnitIncrement(): get (V)  | unit (NM) increment (N) 	++ :: int (N)  :: adjustable (NM) J (NM) slider (N) 
V_3P_IRR:NAME:CustomResourceLoader boolean isSourceModified(Resource res): is (V)  | source (NM) modified (N) 	++ :: [ resource (N) - res (N) ] :: boolean (N)  :: custom (NM) resource (NM) loader (N) 
SPECIAL:CLAS:void run(): run (VI)  | ANONYMOUS (N) 	++
SPECIAL:NAME:LoginAccount void setCcid(String value): set (V)  | ccid (N) 	++ :: [ string (NI) - value (NI) ] :: login (NM) account (N) 
SPECIAL:NAME:CSVTimesheetTableReport Collection getExtraFilters(): get (V)  | extra (NM) filters (N) 	++ :: collection (N)  :: CSV (NM) timesheet (NM) table (NM) report (N) 
SPECIAL:NAME:DatasetImpl long getItemOffset(): get (V)  | item (NM) offset (N) 	++ :: long (N)  :: dataset (NM) impl (NI) 
SPECIAL:NAME:MapMessage float getFloat(String name): get (V)  | float (N) 	++ :: [ string (NI) - name (NI) ] :: float (N)  :: map (NM) message (NI) 
CONSTRUCTOR:NAME:STRUH3 STRUH3 STRUH3():  | STRUH (NM) 3 (N) 	++
BASE_VERB:NAME:ECB void decryptBlock(byte in, int i, byte out, int o): decrypt (V)  | block (N) 	++ :: [ byte (N) - in (NI) ] :: [ int (N) - i (N) ] :: [ byte (N) - out (N) ] :: [ int (N) - o (N) ] :: ECB (N) 
V_3PS:CLAS:GroupByView String attachesTo(Viewable parentView): attaches (V)  | group (NM) by (NM) view (NI) -- to (P) [ viewable (N) - parent (NM) view (NI) ]	++ :: [ viewable (N) - parent (NM) view (NI) ] :: string (NI) 
SPECIAL:NAME:formConvertContentHandler void startDocument(): start (V)  | document (NI) 	++ :: form (NM) convert (NM) content (NM) handler (N) 
SPECIAL:NAME:MockHistoryRepository void startService(): start (V)  | service (N) 	++ :: mock (NM) history (NM) repository (N) 
CONSTRUCTOR:NAME:IntSectionNumber IntSectionNumber IntSectionNumber(int number):  | int (NM) section (NM) number (NI) 	++ :: [ int (N) - number (NI) ]
SPECIAL:NAME:AbstractNativeAccountEditBlock StandardAccount getViewedAccount(): get (V)  | viewed (NM) account (N) 	++ :: standard (NM) account (N)  :: abstract (NM) native (NM) account (NM) edit (NM) block (N) 
SPECIAL:NAME:ArgoWriter static void writeEntry(File file, File input): write (V)  | entry (NI) 	++ :: [ file (NI) - file (NI) ] :: [ file (NI) - input (NI) ] :: argo (NM) writer (N) 
SPECIAL:NAME:PollQuestionAnswerDAO PollQuestionAnswer getPollQuestionAnswer(long id): get (V)  | poll (NM) question (NM) answer (N) 	++ :: [ long (N) - id (NI) ] :: poll (NM) question (NM) answer (N)  :: poll (NM) question (NM) answer (NM) DAO (N) 
SPECIAL:NAME:ConditionalTaskSet void setUnlessAntLike(String version): set (V)  | unless (NM) ant (NM) like (N) 	++ :: [ string (NI) - version (N) ] :: conditional (NM) task (NM) set (N) 
SPECIAL:CLAS:table void setOnMouseUp(String script): set (V)  | table (N) -- on (P) mouse (NM) up (N) 	++ :: [ string (NI) - script (N) ]
SPECIAL:NAME:TemporalDublinCore void setTemporal(): set (V)  | temporal (N) 	++ :: temporal (NM) dublin (NM) core (N) 
EVENT_PARAM:NAME:FoldingText void paintIcons(PaintEvent e): handle (V) | paint (NM) icons (N) 	++ :: [ paint (NM) event (NI) - e (N) ] :: folding (NM) text (NI)  :: void (N) 
SPECIAL:NAME:ActionGroupTypeDescriptor ClassDescriptor getExtends(): get (V)  | extends (N) 	++ :: class (NM) descriptor (NI)  :: action (NM) group (NM) type (NM) descriptor (NI) 
SPECIAL:NAME:LifeCycleManager Slot createSlot(String name, Collection values, String slotType): create (V)  | slot (N) 	++ :: [ string (NI) - name (NI) ] :: [ collection (N) - values (N) ] :: [ string (NI) - slot (NM) type (N) ] :: slot (N)  :: life (NM) cycle (NM) manager (N) 
SPECIAL:NAME:UtilTest void testString2Timpstamp(): test (VI)  | string (NM) 2 (D) timpstamp (N) 	++ :: util (NM) test (N) 
SPECIAL:NAME:Widget void setNoDragSource(): set (V)  | no (DT) drag (NM) source (NI) 	++ :: widget (N) 
SPECIAL:FORM:ManyToManyTest static void main(String args): main (V)  | [ string (NI) - args (N) ]	++ :: many (DT) to (NM) many (DT) test (N) 
SPECIAL:NAME:ReceivedApplicationFormMgmtAction String getMiddleName(): get (V)  | middle (NM) name (NI) 	++ :: string (NI)  :: received (NM) application (NM) form (NM) mgmt (NM) action (N) 
SPECIAL:CLAS:void run(): run (VI)  | ANONYMOUS (N) 	++
SPECIAL:NAME:TripleAFrame StatPanel getStatPanel(): get (V)  | stat (NM) panel (N) 	++ :: stat (NM) panel (N)  :: triple (NM) A (NM) frame (N) 
V_3P_IRR:NAME:Mapping boolean isConceptBridge(String strURI): is (V)  | concept (NM) bridge (N) 	++ :: [ string (NI) - str (NM) URI (NI) ] :: boolean (N)  :: mapping (N) 
SPECIAL:NAME:PortSignalWrapper int getSize(): get (V)  | size (N) 	++ :: int (N)  :: port (NM) signal (NM) wrapper (NI) 
BASE_VERB:NAME:SwingCanvas void drawOval(int x, int y, int width, int height): draw (V)  | oval (N) 	++ :: [ int (N) - x (N) ] :: [ int (N) - y (N) ] :: [ int (N) - width (N) ] :: [ int (N) - height (N) ] :: swing (NM) canvas (N) 
BASE_VERB:FORM:Layout void calculate(Container target): calculate (V)  | [ container (NI) - target (N) ]	++ :: layout (N) 
EMPTY:NONE:TermParser boolean jj_3_1():  | jj (PRE) 3 (D) 1 (D) 
CONSTRUCTOR:NAME:BookUtil BookUtil BookUtil():  | book (NM) util (N) 	++
SPECIAL:NAME:ExtensionClassLoader byte loadClassFromDirectory(File dir, String name, ClassCacheEntry cache): load (V)  | class (NI) -- from (P) directory (N) 	++ :: [ file (NI) - dir (NI) ] :: [ string (NI) - name (NI) ] :: [ class (NM) cache (NM) entry (NI) - cache (N) ] :: byte (N)  :: extension (NM) class (NM) loader (N) 
SPECIAL:NAME:PasswordMapping String getEnabledFlag(): get (V)  | enabled (NM) flag (N) 	++ :: string (NI)  :: password (NM) mapping (N) 
BASE_VERB:FORM:int evaluate(EvalArgument ea): evaluate (V)  | [ eval (NM) argument (N) - ea (N) ]	++ :: ANONYMOUS (N)  :: int (N) 
SPECIAL:NAME:ScormCourseRegisteredByUsersEntityData void setSequence(Integer sequence): set (V)  | sequence (N) 	++ :: [ integer (N) - sequence (N) ] :: scorm (NM) course (NM) registered (NM) by (NM) users (NM) entity (NM) data (NI) 
BASE_VERB:NAME:DefaultKeyRelayingContainer KeyRelayingContainer registerAdapter(Selector selector, KeyAwareAdapter adapter): register (V)  | EQUIV[adapter (NI) , [ key (NM) aware (NM) adapter (NI) - adapter (NI) ]]	++ :: [ selector (N) - selector (N) ] :: key (NM) relaying (NM) container (NI)  :: default (NM) key (NM) relaying (NM) container (NI) 
SPECIAL:NAME:TabList List getTablist(): get (V)  | tablist (N) 	++ :: list (N)  :: tab (NM) list (N) 
SPECIAL:NAME:ClassType boolean initParents(ContextStack stack): init (V)  | parents (N) 	++ :: [ context (NM) stack (N) - stack (N) ] :: boolean (N)  :: class (NM) type (N) 
BASE_VERB:NAME:ResInfoExtension String calcDigest(String alg, InputStream ins): calc (V)  | digest (N) 	++ :: [ string (NI) - alg (N) ] :: [ input (NM) stream (NI) - ins (N) ] :: string (NI)  :: res (NM) info (NM) extension (N) 
ENDS_WITH_ED:NAME:void componentResized(ComponentEvent e): handle (V) | component (NM) resized (N) 	++ :: [ component (NM) event (NI) - e (N) ] :: ANONYMOUS (N)  :: void (N) 
SPECIAL:NAME:SshToolsConnectionProfile Map getAuthenticationMethods(): get (V)  | authentication (NM) methods (N) 	++ :: map (N)  :: ssh (NM) tools (NM) connection (NM) profile (NI) 
BASE_VERB:NAME:Tar void extractAllFromZipArchive(): extract (V)  | all (DT) -- from (P) zip (NM) archive (N) 	++ :: tar (N) 
SPECIAL:NAME:FreeMarkerMacroTests void testAllMacros(): test (VI)  | all (DT) macros (N) 	++ :: free (NM) marker (NM) macro (NM) tests (N) 
SPECIAL:NAME:IConsole String getRoomList(): get (V)  | room (NM) list (N) 	++ :: string (NI)  :: I (NM) console (N) 
SPECIAL:CLAS:ExtendedBufferedCanvas void copyToClipboardJNLP(): copy (V)  | extended (NM) buffered (NM) canvas (N) -- to (P) clipboard (NM) JNLP (N) 	++
BASE_VERB:NAME:SF static int gsl_sf_legendre_sphPlm_deriv_array(int arg0, int arg1, double arg2, long arg3, long arg4): gsl (PRE) sf (PRE) legendre (V)  | sph (NM) plm (NM) deriv (NM) array (N) 	++ :: [ int (N) - arg (NM) 0 (N) ] :: [ int (N) - arg (NM) 1 (N) ] :: [ double (N) - arg (NM) 2 (N) ] :: [ long (N) - arg (NM) 3 (N) ] :: [ long (N) - arg (NM) 4 (N) ] :: int (N)  :: SF (N) 
SPECIAL:NAME:XMLUpdater Node findExistingNode(Element original, Element update): find (V)  | existing (NM) node (NI) 	++ :: [ element (NI) - original (N) ] :: [ element (NI) - update (N) ] :: node (NI)  :: XML (NM) updater (N) 
BASE_VERB:NAME:iIrLAPListener void connectIndication(IrLAPContext context, ConnectionInformation connectionInfo): connect (V)  | indication (N) 	++ :: [ ir (NM) LAP (NM) context (N) - context (N) ] :: [ connection (NM) information (N) - connection (NM) info (NI) ] :: i (NM) ir (NM) LAP (NM) listener (N) 
V_3P_IRR:NAME:CharactersEvent boolean isCData(): is (V)  | C (NM) data (NI) 	++ :: boolean (N)  :: characters (NM) event (NI) 
ENDS_WITH_ED:NAME:CellHandle void mousePressed(MouseEvent event): handle (V) | mouse (NM) pressed (N) 	++ :: [ mouse (NM) event (NI) - event (NI) ] :: cell (NM) handle (NI)  :: void (N) 
CONSTRUCTOR:NAME:Level3B Level3B Level3B(JFrame frame, UniverseModel model, CockpitModule cockpitModule, StarMapModule starMapModule):  | level (NM) 3 (NM) B (N) 	++ :: [ J (NM) frame (N) - frame (N) ] :: [ universe (NM) model (NI) - model (NI) ] :: [ cockpit (NM) module (N) - cockpit (NM) module (N) ] :: [ star (NM) map (NM) module (N) - star (NM) map (NM) module (N) ]
V_3P_IRR:NAME:Message boolean isTarget(StateObject obj): is (V)  | target (N) 	++ :: [ state (NM) object (NI) - obj (NI) ] :: boolean (N)  :: message (NI) 
BASE_VERB:NAME:CalendarReactor void changeLines(): change (V)  | lines (N) 	++ :: calendar (NM) reactor (N) 
SPECIAL:NAME:HostStatus void setIsEventHandlersEnabled(Byte isEventHandlersEnabled): set (V)  | is (NM) event (NM) handlers (NM) enabled (N) 	++ :: [ byte (N) - is (NM) event (NM) handlers (NM) enabled (N) ] :: host (NM) status (N) 
BASE_VERB:NAME:ContainerEntrySort static String makeSortedDBQuery(String qstr, String sortBy, String sortOrder): make (V)  | sorted (NM) DB (NM) query (N) 	++ :: [ string (NI) - qstr (N) ] :: [ string (NI) - sort (NM) by (N) ] :: [ string (NI) - sort (NM) order (N) ] :: string (NI)  :: container (NM) entry (NM) sort (N) 
SPECIAL:CLAS:BaseAgClassificationPeer static AgClassification retrieveByPK(ObjectKey pk): retrieve (V)  | base (NM) ag (NM) classification (NM) peer (N) -- by (P) EQUIV[PK (NI) , [ object (NM) key (NI) - pk (NI) ]]	++ :: ag (NM) classification (N) 
VOID_NP:NAME:ParserImpl void Name(): handle (V) | name (NI) 	++ :: parser (NM) impl (NI)  :: void (N) 
SPECIAL:NAME:CIMGetClassOp String getPropertyLis(): get (V)  | property (NM) lis (N) 	++ :: string (NI)  :: CIM (NM) get (NM) class (NM) op (N) 
SPECIAL:FORM:Filter String process(String to_process): process (VI)  | [ string (NI) - to (NM) process (N) ]	++ :: filter (N)  :: string (NI) 
BASE_VERB:NAME:QuestionTypeManagerImpl void saveQuestionType(QuestionType questionType): save (V)  | EQUIV[question (NM) type (N) , [ question (NM) type (N) - question (NM) type (N) ]]	++ :: question (NM) type (NM) manager (NM) impl (NI) 
VOID_NP:NAME:GtkLabelPeer void gtkWidgetModifyFont(String name, int style, int size): handle (V) | gtk (PRE) widget (NM) modify (NM) font (N) 	++ :: [ string (NI) - name (NI) ] :: [ int (N) - style (N) ] :: [ int (N) - size (N) ] :: gtk (NM) label (NM) peer (N)  :: void (N) 
SPECIAL:NAME:KeyField String getSaveInt(): get (V)  | save (NM) int (N) 	++ :: string (NI)  :: key (NM) field (N) 
BASE_VERB:NAME:ColumnHandler boolean allowView(Column column, String view): allow (VI)  | EQUIV[view (NI) , [ string (NI) - view (NI) ]]	++ :: [ column (N) - column (N) ] :: boolean (N)  :: column (NM) handler (N) 
CONSTRUCTOR:NAME:BillingInfo BillingInfo BillingInfo():  | billing (NM) info (NI) 	++
BASE_VERB:NAME:Chant_SoaringEagle void affectEnvStats(Environmental affected, EnvStats affectableStats): affect (V)  | EQUIV[env (NM) stats (N) , [ env (NM) stats (N) - affectable (NM) stats (N) ]]	++ :: [ environmental (N) - affected (N) ] :: chant (NM) soaring (NM) eagle (N) 
BASE_VERB:FORM:MBeanServerAccessController ObjectInputStream deserialize(String className, byte data): deserialize (V)  | [ string (NI) - class (NM) name (NI) ]	++ :: [ byte (N) - data (NI) ] :: M (NM) bean (NM) server (NM) access (NM) controller (N)  :: object (NM) input (NM) stream (NI) 
SPECIAL:FORM:GrammarPrinter void write(Expression ex): write (V)  | [ expression (N) - ex (N) ]	++ :: grammar (NM) printer (N) 
SPECIAL:NAME:StyleGraphicPropertiesContentStrict void setHeight(String height): set (V)  | height (N) 	++ :: [ string (NI) - height (N) ] :: style (NM) graphic (NM) properties (NM) content (NM) strict (N) 
BASE_VERB:CLAS:FacadeLocal void generate(): generate (V)  | facade (NM) local (N) 	++
BASE_VERB:NAME:QueryStatusResponse static byte derivePayload(int numResults): derive (V)  | payload (N) 	++ :: [ int (N) - num (NM) results (N) ] :: byte (N)  :: query (NM) status (NM) response (N) 
SPECIAL:NAME:ContextFactory HttpContext createApplicationContext(WebApp app): create (V)  | application (NM) context (N) 	++ :: [ web (NM) app (N) - app (N) ] :: http (NM) context (N)  :: context (NM) factory (N) 
SPECIAL:NAME:MockPageContext void setExpectedGetAttributeStringIntCalls(int calls): set (V)  | expected (NM) get (NM) attribute (NM) string (NM) int (NM) calls (N) 	++ :: [ int (N) - calls (N) ] :: mock (NM) page (NM) context (N) 
BASE_VERB:NAME:SegregatedListHeap boolean build_list(BlockControl the_block, SizeControl the_size): build (V)  | list (N) 	++ :: [ block (NM) control (N) - the (DT) block (N) ] :: [ size (NM) control (N) - the (DT) size (N) ] :: boolean (N)  :: segregated (NM) list (NM) heap (N) 
BASE_VERB:NAME:ShapeElt XmlString xgetChromakey(): xget (V)  | chromakey (N) 	++ :: xml (NM) string (NI)  :: shape (NM) elt (NI) 
BASE_VERB:FORM:nzbFilter boolean accept(File file): accept (VI)  | [ file (NI) - file (NI) ]	++ :: nzb (NM) filter (N)  :: boolean (N) 
BASE_VERB:CLAS:UMLPackage void clear(): clear (V)  | UML (NM) package (N) 	++
SPECIAL:NAME:Find String getFeatReplies(): get (V)  | feat (NM) replies (N) 	++ :: string (NI)  :: find (N) 
BASE_VERB:NAME:TorChannel void close_impl(): close (V)  | impl (NI) 	++ :: tor (NM) channel (N) 
SPECIAL:NAME:PrefWebresDlg static String getDefaultContactRepository(): get (V)  | default (NM) contact (NM) repository (N) 	++ :: string (NI)  :: pref (NM) webres (NM) dlg (N) 
SPECIAL:NAME:GetItTogether void createActions(): create (V)  | actions (N) 	++ :: get (NM) it (PR) together (N) 
SPECIAL:NAME:ModuleSelectedData int getParts(): get (V)  | parts (N) 	++ :: int (N)  :: module (NM) selected (NM) data (NI) 
SPECIAL:NAME:MBeliefbase IMBelief getBelief(String name): get (V)  | belief (N) 	++ :: [ string (NI) - name (NI) ] :: IM (NM) belief (N)  :: M (NM) beliefbase (N) 
SPECIAL:NAME:VCardReader static String readVCard(String vcardFilePath, String version): read (V)  | V (NM) card (N) 	++ :: [ string (NI) - vcard (NM) file (NM) path (NI) ] :: [ string (NI) - version (N) ] :: string (NI)  :: V (NM) card (NM) reader (N) 
EVENT_PARAM:NAME:void dragEnter(DropTargetEvent event): handle (V) | drag (NM) enter (N) 	++ :: [ drop (NM) target (NM) event (NI) - event (NI) ] :: ANONYMOUS (N)  :: void (N) 
SPECIAL:NAME:Relation int getRowOrderMap(int orderColumnIdx): get (V)  | row (NM) order (NM) map (N) 	++ :: [ int (N) - order (NM) column (NM) idx (N) ] :: int (N)  :: relation (N) 
SPECIAL:NAME:Part int getCount(): get (V)  | count (N) 	++ :: int (N)  :: part (N) 
SPECIAL:NAME:ContactListLocal ValueListVO getAddressValueList(int individualId, ValueListParameters parameters): get (V)  | address (NM) value (NM) list (N) 	++ :: [ int (N) - individual (NM) id (NI) ] :: [ value (NM) list (NM) parameters (N) - parameters (N) ] :: value (NM) list (NM) VO (NI)  :: contact (NM) list (NM) local (N) 
SPECIAL:NAME:ColumnTest void testConstrainBy(): test (VI) constrain (V)  | by (NM) 	++ :: column (NM) test (N) 
BASE_VERB:NAME:AutoIncrementHandler static String regulariseTag(String tag): regularise (V)  | EQUIV[tag (NI) , [ string (NI) - tag (NI) ]]	++ :: string (NI)  :: auto (NM) increment (NM) handler (N) 
BASE_VERB:NAME:Account boolean validatePassword(String pass): validate (VI)  | password (N) 	++ :: [ string (NI) - pass (N) ] :: boolean (N)  :: account (N) 
SPECIAL:NAME:ProgramThreadGroup Method getMainMethod(String pcName): get (V)  | main (NM) method (N) 	++ :: [ string (NI) - pc (NM) name (NI) ] :: method (N)  :: program (NM) thread (NM) group (N) 
SPECIAL:FORM:NoDates void set(TransactTime value): set (V)  | [ transact (NM) time (N) - value (NI) ]	++ :: no (DT) dates (N) 
CONSTRUCTOR:NAME:MailUtil MailUtil MailUtil():  | mail (NM) util (N) 	++
SPECIAL:NAME:MiscTools static String getClassName(Class cl): get (V)  | class (NM) name (NI) 	++ :: [ class (NI) - cl (N) ] :: string (NI)  :: misc (NM) tools (N) 
BASE_VERB:NAME:AsyncPbKernel void handleJGCSOnUniform(JGCSChannelBuffer context): handle (VI)  | JGCS (N) -- on (P) uniform (N) 	++ :: [ JGCS (NM) channel (NM) buffer (NI) - context (N) ] :: async (NM) pb (NM) kernel (N) 
CONSTRUCTOR:NAME:JToggleButton JToggleButton JToggleButton():  | J (NM) toggle (NM) button (N) 	++
BASE_VERB:NAME:Jatha LispBignum makeBignum(BigInteger value): make (V)  | bignum (N) 	++ :: [ big (NM) integer (N) - value (NI) ] :: lisp (NM) bignum (N)  :: jatha (N) 
CONSTRUCTOR:NAME:DefaultJAXBContextImpl DefaultJAXBContextImpl DefaultJAXBContextImpl(GrammarInfo gi):  | default (NM) JAXB (NM) context (NM) impl (NI) 	++ :: [ grammar (NM) info (NI) - gi (N) ]
SPECIAL:NAME:ReportConfiguration Map getRasProps(): get (V)  | ras (NM) props (N) 	++ :: map (N)  :: report (NM) configuration (NI) 
SPECIAL:CLAS:MicroTvBrowserPlugin void execute(): execute (VI)  | micro (NM) tv (NM) browser (NM) plugin (N) 	++
BASE_VERB:FORM:TMidiDevice void receive(MidiMessage message, long lTimeStamp): receive (V)  | [ midi (NM) message (NI) - message (NI) ]	++ :: [ long (N) - l (NM) time (NM) stamp (N) ] :: T (NM) midi (NM) device (N) 
EVENT_PARAM:NAME:BControleRepereTexte void fireRepereEvent(RepereEvent _evt): handle (V) | fire (NM) repere (NM) event (NI) 	++ :: [ repere (NM) event (NI) - evt (N) ] :: B (NM) controle (NM) repere (NM) texte (N)  :: void (N) 
SPECIAL:NAME:DmzPaneEntity void setDmzMain(DmzMain dmzMain): set (V)  | dmz (NM) main (N) 	++ :: [ dmz (NM) main (N) - dmz (NM) main (N) ] :: dmz (NM) pane (NM) entity (N) 
SPECIAL:NAME:X_I_Order void setDateAcct(Timestamp DateAcct): set (V)  | date (NM) acct (N) 	++ :: [ timestamp (N) - date (NM) acct (N) ] :: X (NM) I (NM) order (N) 
SPECIAL:NAME:CtClassType CtField getField2(String name): get (V)  | field (N) 2 (D) 	++ :: [ string (NI) - name (NI) ] :: ct (NM) field (N)  :: ct (NM) class (NM) type (N) 
ENDS_WITH_ED:NAME:Getter void mouseDragged(MouseEvent e): handle (V) | mouse (NM) dragged (N) 	++ :: [ mouse (NM) event (NI) - e (N) ] :: getter (N)  :: void (N) 
PREP:NAME:Quick String toString(): convert (V) | to (P) string (NI) 	++ :: quick (N)  :: string (NI) 
SPECIAL:CLAS:ANumberCharacterSubstring Object clone(): clone (V)  | A (NM) number (NM) character (NM) substring (N) 	++ :: object (NI) 
SPECIAL:NAME:System String getUserid(): get (V)  | userid (N) 	++ :: string (NI)  :: system (N) 
SPECIAL:NAME:NeogiaModelTest void testMakeValueProductPrice(): test (VI) make (V)  | value (NM) product (NM) price (N) 	++ :: neogia (NM) model (NM) test (N) 
SPECIAL:NAME:Inventory int getQuantity(): get (V)  | quantity (N) 	++ :: int (N)  :: inventory (N) 
ING_VERB:NAME:VeConfigAction void provisioningUpdate(VeConfigForm configForm, ActionContext context): provisioning (V)  | update (N) 	++ :: [ ve (NM) config (NM) form (N) - config (NM) form (N) ] :: [ action (NM) context (N) - context (N) ] :: ve (NM) config (NM) action (N) 
BASE_VERB:CLAS:DropItem short y(): y (V)  | drop (NM) item (NI) 	++ :: short (N) 
SPECIAL:NAME:SoundTest static void printUsage(): print (V)  | usage (N) 	++ :: sound (NM) test (N) 
SPECIAL:NAME:Message byte getJMSCorrelationIDAsBytes(): get (V)  | JMS (NM) correlation (NM) ID (NI) -- as (P) bytes (NI) 	++ :: byte (N)  :: message (NI) 
VOID_NP:NAME:NGCCcall void text(String $value): handle (V) | text (NI) 	++ :: [ string (NI) - value (NI) ] :: NGC (NM) ccall (N)  :: void (N) 
BASE_VERB:FORM:PropertyFunctors static UnaryFunctor<T,R> cast(Class<R> r): cast (V)  | [ class (NM) R (N) - r (N) ]	++ :: property (NM) functors (N)  :: unary (NM) functor (NM) T (NM) R (N) 
SPECIAL:NAME:GenAccesslistHeaderBean void setStatusACF(String status): set (V)  | status (NM) ACF (N) 	++ :: [ string (NI) - status (N) ] :: gen (NM) accesslist (NM) header (NM) bean (NI) 
SPECIAL:NAME:LibraryItem String getItemAuthor(): get (V)  | item (NM) author (N) 	++ :: string (NI)  :: library (NM) item (NI) 
CONSTRUCTOR:NAME:SemOutput SemOutput SemOutput():  | sem (NM) output (N) 	++
SPECIAL:NAME:Principal String getName(): get (V)  | name (NI) 	++ :: string (NI)  :: principal (N) 
SPECIAL:NAME:ScalePainterInfo PropertyDescriptor getPropertyDescriptors(): get (V)  | property (NM) descriptors (N) 	++ :: property (NM) descriptor (NI)  :: scale (NM) painter (NM) info (NI) 
ENDS_WITH_ED:NAME:void treeCollapsed(TreeExpansionEvent event): handle (V) | tree (NM) collapsed (N) 	++ :: [ tree (NM) expansion (NM) event (NI) - event (NI) ] :: ANONYMOUS (N)  :: void (N) 
SPECIAL:NAME:FacadeImpl Period getPeriods(): get (V)  | periods (N) 	++ :: period (N)  :: facade (NM) impl (NI) 
V_3P_IRR:NAME:AbstractInputComponent boolean isStyleClassSetted(): is (V)  | style (NM) class (NM) setted (N) 	++ :: boolean (N)  :: abstract (NM) input (NM) component (N) 
SPECIAL:NAME:ServerDataXML GameOver addGame(GameInfo gameInfo, boolean eloRatings): add (V)  | EQUIV[game (N) , [ game (NM) info (NI) - game (NM) info (NI) ]]	++ :: [ boolean (N) - elo (NM) ratings (N) ] :: game (NM) over (N)  :: server (NM) data (NM) XML (N) 
BASE_VERB:NAME:ExptHash void trackExperimentsByHash(DsIntern ds): track (V)  | experiments (N) -- by (P) hash (N) 	++ :: [ ds (NM) intern (N) - ds (N) ] :: expt (NM) hash (N) 
SPECIAL:NAME:Options void addLogHandlers(JTextPane traceWindow): add (V)  | log (NM) handlers (N) 	++ :: [ J (NM) text (NM) pane (N) - trace (NM) window (N) ] :: options (N) 
BASE_VERB:CLAS:AdminServiceLocator Admin getadmin(): getadmin (V)  | admin (NM) service (NM) locator (N) 	++ :: admin (N) 
SPECIAL:NAME:HeaderLcinfo void setAttr_name(int i, String _value): set (V)  | attr (NM) name (NI) 	++ :: [ int (N) - i (N) ] :: [ string (NI) - value (NI) ] :: header (NM) lcinfo (N) 
SPECIAL:NAME:StaffServerImpl void initCommon(): init (V)  | common (N) 	++ :: staff (NM) server (NM) impl (NI) 
ENDS_WITH_ED:NAME:void widgetSelected(SelectionEvent e): handle (V) | widget (NM) selected (N) 	++ :: [ selection (NM) event (NI) - e (N) ] :: ANONYMOUS (N)  :: void (N) 
SPECIAL:FORM:ClassHeaderAstImpl void eSet(int featureID, Object newValue): e (PRE) set (V)  | [ int (N) - feature (NM) ID (NI) ]	++ :: [ object (NI) - new (NM) value (NI) ] :: class (NM) header (NM) ast (NM) impl (NI) 
SPECIAL:NAME:DefaultHighLowDataset Number getLow(int series, int item): get (V)  | low (N) 	++ :: [ int (N) - series (N) ] :: [ int (N) - item (NI) ] :: number (NI)  :: default (NM) high (NM) low (NM) dataset (N) 
BASE_VERB:NAME:ClassOptions int defaultDisplayStringLength(): default (V)  | display (NM) string (NM) length (N) 	++ :: int (N)  :: class (NM) options (N) 
NOUN_PHRASE:NAME:Factory static DateTime newInstance(XmlOptions options): get (V) | new (NM) instance (NI) 	++ :: [ xml (NM) options (N) - options (N) ] :: factory (N)  :: date (NM) time (N) 
SPECIAL:NAME:LockServiceImpl Set getLocksByUserId(long userId): get (V)  | locks (N) -- by (P) EQUIV[user (NM) id (NI) , [ long (N) - user (NM) id (NI) ]]	++ :: set (N)  :: lock (NM) service (NM) impl (NI) 
CONSTRUCTOR:NAME:ShelterInventory ShelterInventory ShelterInventory(boolean showdetail):  | shelter (NM) inventory (N) 	++ :: [ boolean (N) - showdetail (N) ]
SPECIAL:NAME:AbstractPerson String getMainNumber(): get (V)  | main (NM) number (NI) 	++ :: string (NI)  :: abstract (NM) person (N) 
SPECIAL:NAME:CSS2PropertiesImpl String getColor(): get (V)  | color (N) 	++ :: string (NI)  :: CSS (NM) 2 (NM) properties (NM) impl (NI) 
SPECIAL:NAME:Entities static String replaceEntity(String line, int from, int to): replace (V)  | entity (N) 	++ :: [ string (NI) - line (N) ] :: [ int (N) - from (N) ] :: [ int (N) - to (N) ] :: string (NI)  :: entities (N) 
SPECIAL:NAME:Log void setDebuglevel(int debuglevel): set (V)  | debuglevel (N) 	++ :: [ int (N) - debuglevel (N) ] :: log (N) 
SPECIAL:NAME:TImageSourceBean void setCreatedBy(int createdBy): set (V)  | created (N) -- by (P) [ int (N) - created (NM) by (N) ]	++ :: [ int (N) - created (NM) by (N) ] :: T (NM) image (NM) source (NM) bean (NI) 
SPECIAL:NAME:Results byte getBytes(int columnIndex): get (V)  | bytes (NI) 	++ :: [ int (N) - column (NM) index (NI) ] :: byte (N)  :: results (N) 
BASE_VERB:NAME:foreign static cell MAKE_CELL(Object o): MAKE (V)  | CELL (N) 	++ :: [ object (NI) - o (N) ] :: cell (N)  :: foreign (N) 
VOID_NP:NAME:Command void unsetSubItem(): handle (V) | unset (NM) sub (NM) item (NI) 	++ :: command (N)  :: void (N) 
ENDS_WITH_ED:NAME:RefluxDialog void APPLY_BUTTON_actionPerformed(ActionEvent _evt): handle (V) | APPLY (NM) BUTTON (NM) action (NM) performed (N) 	++ :: [ action (NM) event (NI) - evt (N) ] :: reflux (NM) dialog (N)  :: void (N) 
SPECIAL:NAME:XmlDataSet int getNumberColumns(): get (V)  | number (NM) columns (N) 	++ :: int (N)  :: xml (NM) data (NM) set (N) 
SPECIAL:CLAS:TestExprRelationalOpNode void testEvaluate(): test (VI) evaluate (V)  | test (NM) expr (NM) relational (NM) op (NM) node (NI) 	++
SPECIAL:NAME:DefaultListableBeanFactoryTests void testPrototypeCircleLeadsToException(): test (VI)  | prototype (NM) circle (NM) leads (N) -- to (P) exception (N) 	++ :: default (NM) listable (NM) bean (NM) factory (NM) tests (N) 
SPECIAL:NAME:PerformImplTest ReceiveImpl getReceiveMatch3(): get (V)  | receive (NM) match (N) 3 (D) 	++ :: receive (NM) impl (NI)  :: perform (NM) impl (NM) test (N) 
NOUN_PHRASE:NAME:Tool static Object factory(String p): get (V) | factory (N) 	++ :: [ string (NI) - p (NI) ] :: tool (N)  :: object (NI) 
CONSTRUCTOR:NAME:FileFontStrike FileFontStrike FileFontStrike(FileFont fileFont, FontStrikeDesc desc):  | file (NM) font (NM) strike (N) 	++ :: [ file (NM) font (N) - file (NM) font (N) ] :: [ font (NM) strike (NM) desc (NI) - desc (NI) ]
SPECIAL:NAME:Section Section getXml(): get (V)  | xml (N) 	++ :: section (N)  :: section (N) 
EVENT_PARAM:NAME:GraphCanvasMouseTrackListener void mouseHover(MouseEvent e): handle (V) | mouse (NM) hover (N) 	++ :: [ mouse (NM) event (NI) - e (N) ] :: graph (NM) canvas (NM) mouse (NM) track (NM) listener (N)  :: void (N) 
SPECIAL:NAME:SkeletonInstance void _setAnimationState__AnimationStateSetR(long _pointer_, long animSet): set (V)  | animation (NM) state (NM) animation (NM) state (NM) set (NM) R (N) 	++ :: [ long (N) - pointer (N) ] :: [ long (N) - anim (NM) set (N) ] :: skeleton (NM) instance (NI) 
SPECIAL:NAME:LedgerTableModel int getRowCount(): get (V)  | row (NM) count (N) 	++ :: int (N)  :: ledger (NM) table (NM) model (NI) 
SPECIAL:NAME:FindCriteria void setInitials(Variant Value): set (V)  | initials (N) 	++ :: [ variant (N) - value (NI) ] :: find (NM) criteria (N) 
SPECIAL:NAME:Init int getLineTo(): get (V)  | line (N) to (NM) 	++ :: int (N)  :: init (N) 
BASE_VERB:NAME:JBarcode String calcCheckSum(String text): calc (V)  | check (NM) sum (N) 	++ :: [ string (NI) - text (NI) ] :: string (NI)  :: J (NM) barcode (N) 
SPECIAL:NAME:FormIconWriter void printHTML(StandardGenericFormIcon sfi): print (V)  | HTML (N) 	++ :: [ standard (NM) generic (NM) form (NM) icon (N) - sfi (N) ] :: form (NM) icon (NM) writer (N) 
SPECIAL:NAME:DriversDirect DriverBus getBus(): get (V)  | bus (N) 	++ :: driver (NM) bus (N)  :: drivers (NM) direct (N) 
SPECIAL:NAME:OraResSet Object getObject(int i, Map map): get (V)  | object (NI) 	++ :: [ int (N) - i (N) ] :: [ map (N) - map (N) ] :: object (NI)  :: ora (NM) res (NM) set (N) 
BASE_VERB:NAME:EaseDataElement Vector ifEqualsGetEaseKeys(String key): if (V)  | equals (NM) get (NM) ease (NM) keys (N) 	++ :: [ string (NI) - key (NI) ] :: vector (N)  :: ease (NM) data (NM) element (NI) 
SPECIAL:NAME:Service Integer getConfigResponseId(): get (V)  | config (NM) response (NM) id (NI) 	++ :: integer (N)  :: service (N) 
SPECIAL:NAME:ConnectorFactoryTestCase void testCreateSmtpConnector(): test (VI) create (V)  | smtp (NM) connector (N) 	++ :: connector (NM) factory (NM) test (NM) case (N) 
SPECIAL:NAME:BlockCipher int processBlock(byte in, int inOff, byte out, int outOff): process (VI)  | block (N) 	++ :: [ byte (N) - in (NI) ] :: [ int (N) - in (NM) off (N) ] :: [ byte (N) - out (N) ] :: [ int (N) - out (NM) off (N) ] :: int (N)  :: block (NM) cipher (N) 
V_MODAL:NAME:CapitalShip boolean canTurnRight(): can (VI) turn (V)  | right (N) 	++ :: boolean (N)  :: capital (NM) ship (N) 
SPECIAL:NAME:ResourceImpl void addAssignment(Assignment assignment): add (V)  | EQUIV[assignment (N) , [ assignment (N) - assignment (N) ]]	++ :: resource (NM) impl (NI) 
V_3P_IRR:NAME:MjDoc boolean isField(): is (V)  | field (N) 	++ :: boolean (N)  :: mj (NM) doc (NI) 
SPECIAL:NAME:Table CachedRow getRow(int pos): get (V)  | row (N) 	++ :: [ int (N) - pos (N) ] :: cached (NM) row (N)  :: table (N) 
BASE_VERB:CLAS:SCProductVersionUtil static SCProductVersion fetchByPrimaryKey(long productVersionId): fetch (VI)  | SC (NM) product (NM) version (NM) util (N) -- by (P) primary (NM) key (NI) 	++ :: [ long (N) - product (NM) version (NM) id (NI) ] :: SC (NM) product (NM) version (N) 
PREP:NAME:Intervals static IntervalIndexList toIntervalIndexList(List toWrap): convert (V) | to (P) interval (NM) index (NM) list (N) 	++ :: [ list (N) - to (NM) wrap (N) ] :: intervals (N)  :: interval (NM) index (NM) list (N) 
SPECIAL:NAME:Choice void setSelectedIndex(int i, boolean state): set (V)  | selected (NM) index (NI) 	++ :: [ int (N) - i (N) ] :: [ boolean (N) - state (N) ] :: choice (N) 
BASE_VERB:FORM:TreeFactory static ATree star(ATree body, ATree separator): star (V)  | [ A (NM) tree (NI) - body (N) ]	++ :: [ A (NM) tree (NI) - separator (N) ] :: tree (NM) factory (N)  :: A (NM) tree (NI) 
SPECIAL:NAME:AccessibleAWTComponent void setCursor(Cursor cursor): set (V)  | cursor (N) 	++ :: [ cursor (N) - cursor (N) ] :: accessible (NM) AWT (NM) component (N) 
NOUN_PHRASE:NAME:ModeleDesSens ModeleMu donnerModeleMu(): get (V) | donner (NM) modele (NM) mu (N) 	++ :: modele (NM) des (NM) sens (N)  :: modele (NM) mu (N) 
SPECIAL:NAME:DataSource void removeChangeListener(DataSourceChangeListener listener): remove (V)  | EQUIV[change (NM) listener (N) , [ data (NM) source (NM) change (NM) listener (N) - listener (N) ]]	++ :: data (NM) source (NI) 
BASE_VERB:NAME:Configs void storeConfig(): store (V)  | config (NI) 	++ :: configs (N) 
SPECIAL:NAME:IncrementalSAXSource_Xerces void setContentHandler(ContentHandler handler): set (V)  | content (NM) handler (N) 	++ :: [ content (NM) handler (N) - handler (N) ] :: incremental (NM) SAX (NM) source (NM) xerces (N) 
NOUN_PHRASE:NAME:as2j Literal literal(): get (V) | literal (N) 	++ :: as (NM) 2 (NM) j (N)  :: literal (N) 
SPECIAL:FORM:MCountry static void main(String args): main (V)  | [ string (NI) - args (N) ]	++ :: M (NM) country (N) 
PREP:NAME:ProductImpl_Proxy String toString(): convert (V) | to (P) string (NI) 	++ :: product (NM) impl (NM) proxy (NI)  :: string (NI) 
NOUN_PHRASE:NAME:MwtJNI static long new_WSCdirTree(long jarg1, String jarg2): get (V) | new (NM) WS (NM) cdir (NM) tree (NI) 	++ :: [ long (N) - jarg (NM) 1 (N) ] :: [ string (NI) - jarg (NM) 2 (N) ] :: mwt (NM) JNI (N)  :: long (N) 
SPECIAL:NAME:TestObject InsideTestObject getCreateMethodType(): get (V)  | create (NM) method (NM) type (N) 	++ :: inside (NM) test (NM) object (NI)  :: test (NM) object (NI) 
V_3P_IRR:NAME:DefaultLocalFileProvider boolean isAbsoluteLocalName(String name): is (V)  | EQUIV[absolute (NM) local (NM) name (NI) , [ string (NI) - name (NI) ]]	++ :: boolean (N)  :: default (NM) local (NM) file (NM) provider (N) 
SPECIAL:NAME:Subprogram static void setSystemPath(String path): set (V)  | system (NM) path (NI) 	++ :: [ string (NI) - path (NI) ] :: subprogram (N) 
SPECIAL:NAME:MRJPlugin void setField(String name, String signature, Object value): set (V)  | field (N) 	++ :: [ string (NI) - name (NI) ] :: [ string (NI) - signature (N) ] :: [ object (NI) - value (NI) ] :: MRJ (NM) plugin (N) 
BASE_VERB:FORM:ServiceFinder List aquire(URI id, Map params): aquire (V)  | [ URI (NI) - id (NI) ]	++ :: [ map (N) - params (N) ] :: service (NM) finder (N)  :: list (N) 
SPECIAL:NAME:FileUtils static byte readFileBytes(File file): read (V)  | file (NM) bytes (NI) 	++ :: [ file (NI) - file (NI) ] :: byte (N)  :: file (NM) utils (N) 
SPECIAL:FORM:LineLengthComparator int compare(Object o1, Object o2): compare (V)  | [ object (NI) - o (NM) 1 (N) ]	++ :: [ object (NI) - o (NM) 2 (N) ] :: line (NM) length (NM) comparator (N)  :: int (N) 
SPECIAL:NAME:ScopeTableModel int getColumnCount(): get (V)  | column (NM) count (N) 	++ :: int (N)  :: scope (NM) table (NM) model (NI) 
SPECIAL:NAME:Node static LocationInfoIf getLocationInfoProvider(): get (V)  | location (NM) info (NM) provider (N) 	++ :: location (NM) info (NM) if (NI)  :: node (NI) 
SPECIAL:NAME:SliceManager void setPlaneSelect(boolean value): set (V)  | plane (NM) select (N) 	++ :: [ boolean (N) - value (NI) ] :: slice (NM) manager (N) 
ENDS_WITH_ED:NAME:EditorWatcher void partClosed(IWorkbenchPart part): handle (V) | part (NM) closed (N) 	++ :: [ I (NM) workbench (NM) part (N) - part (N) ] :: editor (NM) watcher (N)  :: void (N) 
SPECIAL:FORM:Syndic8Search static void main(String args): main (V)  | [ string (NI) - args (N) ]	++ :: syndic (NM) 8 (NM) search (N) 
SPECIAL:NAME:TagEvent String getName(): get (V)  | name (NI) 	++ :: string (NI)  :: tag (NM) event (NI) 
SPECIAL:NAME:ABTObjectSpaceCOM String getUniqueId(): get (V)  | unique (NM) id (NI) 	++ :: string (NI)  :: ABT (NM) object (NM) space (NM) COM (N) 
SPECIAL:NAME:AbstractServletContextListener CurrentConfig getCurrentConfig(): get (V)  | current (NM) config (NI) 	++ :: current (NM) config (NI)  :: abstract (NM) servlet (NM) context (NM) listener (N) 
BASE_VERB:FORM:edit_005fuser_jsp void _jspService(HttpServletRequest request, HttpServletResponse response): jsp (PRE) service (V)  | [ http (NM) servlet (NM) request (N) - request (N) ]	++ :: [ http (NM) servlet (NM) response (N) - response (N) ] :: edit (NM) 005 (NM) fuser (NM) jsp (N) 
CONSTRUCTOR:NAME:ExtremeTableTestHelper ExtremeTableTestHelper ExtremeTableTestHelper(TableParameters parameters):  | extreme (NM) table (NM) test (NM) helper (N) 	++ :: [ table (NM) parameters (N) - parameters (N) ]
BASE_VERB:FORM:NamingContextImpl void list(int how_many, BindingListHolder bl, BindingIteratorHolder bi): list (V)  | [ int (N) - how (NM) many (DT) ]	++ :: [ binding (NM) list (NM) holder (NI) - bl (N) ] :: [ binding (NM) iterator (NM) holder (NI) - bi (N) ] :: naming (NM) context (NM) impl (NI) 
SPECIAL:NAME:StandardPanelGenerator XMLPanel getPanel(Duration el): get (V)  | panel (N) 	++ :: [ duration (N) - el (N) ] :: XML (NM) panel (N)  :: standard (NM) panel (NM) generator (N) 
PREP:NAME:CastLibrary static VFolder toVFolder(Object x): convert (V) | to (P) V (NM) folder (N) 	++ :: [ object (NI) - x (N) ] :: cast (NM) library (N)  :: V (NM) folder (N) 
SPECIAL:NAME:DBTable String getSchemaName(): get (V)  | schema (NM) name (NI) 	++ :: string (NI)  :: DB (NM) table (N) 
PREP:NAME:HierarchicalSortTypeEnum String toString(): convert (V) | to (P) string (NI) 	++ :: hierarchical (NM) sort (NM) type (NM) enum (NI)  :: string (NI) 
BASE_VERB:NAME:NondirectBufferWrapper static ByteBuffer wrapNoCopyBuffer(ByteBuffer buf, int size): wrap (V)  | EQUIV[no (DT) copy (NM) buffer (NI) , [ byte (NM) buffer (NI) - buf (N) ]]	++ :: [ int (N) - size (N) ] :: byte (NM) buffer (NI)  :: nondirect (NM) buffer (NM) wrapper (NI) 
BASE_VERB:FORM:Factory static StringType parse(InputStream is): parse (V)  | [ input (NM) stream (NI) - is (N) ]	++ :: factory (N)  :: string (NM) type (N) 
ENDS_WITH_ED:NAME:ListeningTableModel void tableChanged(TableModelEvent event): handle (V) | table (NM) changed (N) 	++ :: [ table (NM) model (NM) event (NI) - event (NI) ] :: listening (NM) table (NM) model (NI)  :: void (N) 
SPECIAL:NAME:Allocation AllocLinkID getAllocLinkID(): get (V)  | alloc (NM) link (NM) ID (NI) 	++ :: alloc (NM) link (NM) ID (NI)  :: allocation (N) 
SPECIAL:NAME:BindZoneFile String getZoneType(): get (V)  | zone (NM) type (N) 	++ :: string (NI)  :: bind (NM) zone (NM) file (NI) 
SPECIAL:NAME:Path static int getPathType(Vector vPath, Mapping mapping): get (V)  | path (NM) type (N) 	++ :: [ vector (N) - v (NM) path (NI) ] :: [ mapping (N) - mapping (N) ] :: int (N)  :: path (NI) 
V_3P_IRR:NAME:ResourceManager boolean isPlasticWindowsAvailable(): is (V)  | plastic (NM) windows (NM) available (N) 	++ :: boolean (N)  :: resource (NM) manager (N) 
SPECIAL:NAME:ChromosomeInfoTypeImpl int getInstallationId(): get (V)  | installation (NM) id (NI) 	++ :: int (N)  :: chromosome (NM) info (NM) type (NM) impl (NI) 
SPECIAL:NAME:LayoutTag String getRendererType(): get (V)  | renderer (NM) type (N) 	++ :: string (NI)  :: layout (NM) tag (NI) 
SPECIAL:NAME:TestPushDownFieldRefactoring void test1(): test (VI)  | 1 (D) 	++ :: test (NM) push (NM) down (NM) field (NM) refactoring (N) 
SPECIAL:NAME:JaxenXPath void setVariable(String name, Object value): set (V)  | variable (N) 	++ :: [ string (NI) - name (NI) ] :: [ object (NI) - value (NI) ] :: jaxen (NM) X (NM) path (NI) 
SPECIAL:NAME:XSLTTool void setXSLT(SAXEventBuffer xslt): set (V)  | XSLT (N) 	++ :: [ SAX (NM) event (NM) buffer (NI) - xslt (N) ] :: XSLT (NM) tool (N) 
ENDS_WITH_ED:NAME:DeplacerOutil void mouseDragged(MouseEvent e): handle (V) | mouse (NM) dragged (N) 	++ :: [ mouse (NM) event (NI) - e (N) ] :: deplacer (NM) outil (N)  :: void (N) 
BASE_VERB:NAME:KIF_DASH_ExpressionImpl List listStatements(): list (V)  | statements (N) 	++ :: list (N)  :: KIF (NM) DASH (NM) expression (NM) impl (NI) 
SPECIAL:NAME:XmppEndpoint JID getComponentName(): get (V)  | component (NM) name (NI) 	++ :: JID (N)  :: xmpp (NM) endpoint (N) 
SPECIAL:CLAS:FinishedUnit2 void init(): init (V)  | finished (NM) unit (NM) 2 (N) 	++
SPECIAL:NAME:Message3 Vector getVectorData(): get (V)  | vector (NM) data (NI) 	++ :: vector (N)  :: message (NM) 3 (N) 
BASE_VERB:NAME:Amputation String triggerStrings(): trigger (V)  | strings (N) 	++ :: string (NI)  :: amputation (N) 
SPECIAL:NAME:UndoActionHandler void startTransaction(String name): start (V)  | transaction (N) 	++ :: [ string (NI) - name (NI) ] :: undo (NM) action (NM) handler (N) 
SPECIAL:NAME:ActivityProxy void setPriority(int newValue): set (V)  | priority (N) 	++ :: [ int (N) - new (NM) value (NI) ] :: activity (NM) proxy (NI) 
BASE_VERB:FORM:HuffmanCompression void transmit(OutputStream out, int j): transmit (V)  | [ output (NM) stream (NI) - out (N) ]	++ :: [ int (N) - j (N) ] :: huffman (NM) compression (N) 
BASE_VERB:NAME:AddressEntryTextArea void updateAddressList(): update (V)  | address (NM) list (N) 	++ :: address (NM) entry (NM) text (NM) area (N) 
SPECIAL:NAME:CustomerEJB CustomerValueObject getCustomerValue(): get (V)  | customer (NM) value (NI) 	++ :: customer (NM) value (NM) object (NI)  :: customer (NM) EJB (N) 
SPECIAL:NAME:TopicRepository static Topic getTopic(Topic t): get (V)  | EQUIV[topic (N) , [ topic (N) - t (N) ]]	++ :: topic (N)  :: topic (NM) repository (N) 
BASE_VERB:NAME:PlotterPanel void showBubbleChart(): show (V)  | bubble (NM) chart (N) 	++ :: plotter (NM) panel (N) 
SPECIAL:CLAS:AgentMessageHandler void setToSearch(MOB mob, Message msg, Map effects): set (V)  | agent (NM) message (NM) handler (N) -- to (P) search (N) 	++ :: [ MOB (N) - mob (N) ] :: [ message (NI) - msg (NI) ] :: [ map (N) - effects (N) ]
SPECIAL:NAME:Ontology LinkedList getOrganizedAxiomsList(Language l): get (V)  | organized (NM) axioms (NM) list (N) 	++ :: [ language (N) - l (N) ] :: linked (NM) list (N)  :: ontology (N) 
ENDS_WITH_ED:NAME:NullParticipantConnection void joinAccepted(ParticipantPort port): handle (V) | join (NM) accepted (N) 	++ :: [ participant (NM) port (N) - port (N) ] :: null (NM) participant (NM) connection (N)  :: void (N) 
SPECIAL:NAME:IbmNotWf3XmlConfTest void testNotWellFormed_IbmNotWfP85Ibm85n184xml(): test (VI)  | not (DT) well (NM) formed (NM) ibm (NM) not (DT) wf (NM) P (NM) 85 (D) ibm (NM) 85 (D) n (NM) 184 (D) xml (N) 	++ :: ibm (NM) not (DT) wf (NM) 3 (NM) xml (NM) conf (NM) test (N) 
PREP:NAME:SWTFlowLayout String toString(): convert (V) | to (P) string (NI) 	++ :: SWT (NM) flow (NM) layout (N)  :: string (NI) 
VOID_NP:NAME:InitializeConceptTagContext void nonImmediateValidation(): handle (V) | non (PRE) immediate (NM) validation (N) 	++ :: initialize (NM) concept (NM) tag (NM) context (N)  :: void (N) 
VOID_NP:NAME:StdoutLogger void info(String message, Throwable t): handle (V) | info (NI) 	++ :: [ string (NI) - message (NI) ] :: [ throwable (N) - t (N) ] :: stdout (NM) logger (N)  :: void (N) 
SPECIAL:NAME:CasProcessorDeploymentParamImpl void setParameterName(String aParamName): set (V)  | parameter (NM) name (NI) 	++ :: [ string (NI) - a (NM) param (NM) name (NI) ] :: cas (NM) processor (NM) deployment (NM) param (NM) impl (NI) 
BASE_VERB:NAME:OurAppletStub void appletResize(int x, int y): applet (V)  | resize (N) 	++ :: [ int (N) - x (N) ] :: [ int (N) - y (N) ] :: our (PR) applet (NM) stub (N) 
SPECIAL:NAME:DataElementImpl AggregateDataElementType getDataElementParentType(): get (V)  | data (NM) element (NM) parent (NM) type (N) 	++ :: aggregate (NM) data (NM) element (NM) type (N)  :: data (NM) element (NM) impl (NI) 
SPECIAL:NAME:QIconView QIconViewItem findItem(QPoint pos): find (V)  | item (NI) 	++ :: [ Q (NM) point (N) - pos (N) ] :: Q (NM) icon (NM) view (NM) item (NI)  :: Q (NM) icon (NM) view (NI) 
BASE_VERB:FORM:QuickSort static void qsort(byte array): qsort (V)  | [ byte (N) - array (N) ]	++ :: quick (NM) sort (N) 
SPECIAL:NAME:UserDb User createUser(String login): create (V)  | user (N) 	++ :: [ string (NI) - login (N) ] :: user (N)  :: user (NM) db (N) 
SPECIAL:NAME:SystemProperties void loadProperties(Thinlet thinlet, Object table): load (V)  | properties (N) 	++ :: [ thinlet (N) - thinlet (N) ] :: [ object (NI) - table (N) ] :: system (NM) properties (N) 
NOUN_PHRASE:NAME:CellFontDecorator boolean fontSubscript(): get (V) | font (NM) subscript (N) 	++ :: cell (NM) font (NM) decorator (N)  :: boolean (N) 
PREP:NAME:MoveObject String toString(Ability ability): convert (V) | to (P) string (NI) 	++ :: [ ability (N) - ability (N) ] :: move (NM) object (NI)  :: string (NI) 
ENDS_WITH_ED:NAME:void actionPerformed(ActionEvent e): handle (V) | action (NM) performed (N) 	++ :: [ action (NM) event (NI) - e (N) ] :: ANONYMOUS (N)  :: void (N) 
SPECIAL:NAME:TableRequest void getRequest(JDataSet dataset, ParameterList parameters): get (V)  | request (N) 	++ :: [ J (NM) data (NM) set (N) - dataset (N) ] :: [ parameter (NM) list (N) - parameters (N) ] :: table (NM) request (N) 
CONSTRUCTOR:NAME:SoundBank SoundBank SoundBank(Applet parent, int startNote, int endNote, String bankName):  | sound (NM) bank (N) 	++ :: [ applet (N) - parent (N) ] :: [ int (N) - start (NM) note (N) ] :: [ int (N) - end (NM) note (N) ] :: [ string (NI) - bank (NM) name (NI) ]
CONSTRUCTOR:NAME:AggregateCategoryAction AggregateCategoryAction AggregateCategoryAction(MainApplicationWindow mainWindow):  | aggregate (NM) category (NM) action (N) 	++ :: [ main (NM) application (NM) window (N) - main (NM) window (N) ]
BASE_VERB:CLAS:CollectionHandling static String convertToLines(Collection convertToLines, char deliminator): convert (V)  | collection (NM) handling (N) -- to (P) EQUIV[lines (N) , [ collection (N) - convert (NM) to (NM) lines (N) ]]	++ :: [ char (N) - deliminator (N) ] :: string (NI) 
SPECIAL:CLAS:void run(): run (VI)  | ANONYMOUS (N) 	++
SPECIAL:NAME:Monster int getAttack(): get (V)  | attack (N) 	++ :: int (N)  :: monster (N) 
SPECIAL:FORM:int compare(File file0, File file1): compare (V)  | [ file (NI) - file (NM) 0 (N) ]	++ :: [ file (NI) - file (NM) 1 (N) ] :: ANONYMOUS (N)  :: int (N) 
SPECIAL:NAME:ClientEnvFrame void setCursor(Cursor cursor): set (V)  | cursor (N) 	++ :: [ cursor (N) - cursor (N) ] :: client (NM) env (NM) frame (N) 
SPECIAL:NAME:SOSFileOperations static boolean removeFile(File file, String fileSpec, int flags, SOSLogger logger): remove (V)  | EQUIV[file (NI) , [ file (NI) - file (NI) ], [ string (NI) - file (NM) spec (NI) ]]	++ :: [ int (N) - flags (N) ] :: [ SOS (NM) logger (N) - logger (N) ] :: boolean (N)  :: SOS (NM) file (NM) operations (N) 
SPECIAL:NAME:GraphicClockPlugin Object getInstance(PluginInstance pluginInstance, PluginInstanceParameterValue values): get (V)  | EQUIV[instance (NI) , [ plugin (NM) instance (NI) - plugin (NM) instance (NI) ]]	++ :: [ plugin (NM) instance (NM) parameter (NM) value (NI) - values (N) ] :: object (NI)  :: graphic (NM) clock (NM) plugin (N) 
BASE_VERB:NAME:WindowsComboBoxUI void uninstallListeners(): uninstall (V)  | listeners (N) 	++ :: windows (NM) combo (NM) box (NM) UI (N) 
SPECIAL:CLAS:theme_002deditor_jsp void _jspInit(): jsp (PRE) init (V)  | theme (NM) 002 (NM) deditor (NM) jsp (N) 	++
V_3P_IRR:NAME:JMLObjectSequence boolean isPrefix(JMLObjectSequence s2): is (V)  | prefix (N) 	++ :: [ JML (NM) object (NM) sequence (N) - s (NM) 2 (N) ] :: boolean (N)  :: JML (NM) object (NM) sequence (N) 
SPECIAL:NAME:DLQConfig void setDestinationQueue(String value): set (V)  | destination (NM) queue (N) 	++ :: [ string (NI) - value (NI) ] :: DLQ (NM) config (NI) 
SPECIAL:NAME:OrderDetailsForm void setShipToBillingAddr(boolean shipToBillingAddr): set (V)  | ship (N) -- to (P) billing (NM) addr (N) 	++ :: [ boolean (N) - ship (NM) to (NM) billing (NM) addr (N) ] :: order (NM) details (NM) form (N) 
ENDS_WITH_ED:NAME:PdfStamperImp void markUsed(int num): handle (V) | mark (NM) used (N) 	++ :: [ int (N) - num (NI) ] :: pdf (NM) stamper (NM) imp (N)  :: void (N) 
BASE_VERB:FORM:ByteArrays static void shuffle(byte a, int fromIndex, int toIndex, Random r): shuffle (V)  | [ byte (N) - a (N) ]	++ :: [ int (N) - from (NM) index (NI) ] :: [ int (N) - to (NM) index (NI) ] :: [ random (N) - r (N) ] :: byte (NM) arrays (N) 
SPECIAL:NAME:XPProgressBarUI static Skin getSkinHorizontal(): get (V)  | skin (NM) horizontal (N) 	++ :: skin (N)  :: XP (NM) progress (NM) bar (NM) UI (N) 
SPECIAL:CLAS:GeometryToolsInternalCoordinates static void sortBy2DDistance(IAtom atoms, Point2d point): sort (V)  | geometry (NM) tools (NM) internal (NM) coordinates (N) -- by (P) 2 (D) D (NM) distance (N) 	++ :: [ I (NM) atom (N) - atoms (N) ] :: [ point (NM) 2 (NM) d (N) - point (N) ]
SPECIAL:CLAS:RelationalAssociationTableClass ModelElement findByRef(String pRef): find (V)  | relational (NM) association (NM) table (NM) class (NI) -- by (P) EQUIV[ref (NI) , [ string (NI) - p (NM) ref (NI) ]]	++ :: model (NM) element (NI) 
SPECIAL:NAME:LockManager static LockManager getInstance(): get (V)  | instance (NI) 	++ :: lock (NM) manager (N)  :: lock (NM) manager (N) 
SPECIAL:NAME:Order String getShipToLastName(): get (V)  | ship (N) -- to (P) last (DT) name (NI) 	++ :: string (NI)  :: order (N) 
CONSTRUCTOR:NAME:CommandEvent CommandEvent CommandEvent(Object source_, NapsterService napsterService_):  | command (NM) event (NI) 	++ :: [ object (NI) - source (NI) ] :: [ napster (NM) service (N) - napster (NM) service (N) ]
BASE_VERB:CLAS:MouseOptionPane void _save(): save (V)  | mouse (NM) option (NM) pane (N) 	++
SPECIAL:NAME:DataSet List getAllRows(): get (V)  | all (DT) rows (N) 	++ :: list (N)  :: data (NM) set (N) 
V_3P_IRR:NAME:Group boolean hasStagingGroup(): has (V)  | staging (NM) group (N) 	++ :: boolean (N)  :: group (N) 
SPECIAL:NAME:XirussRepositoryDefaultImpl int getHttpApiPort(): get (V)  | http (NM) api (NM) port (N) 	++ :: int (N)  :: xiruss (NM) repository (NM) default (NM) impl (NI) 
VOID_NP:NAME:MapModuleManager void newMapModule(MindMap map, ModeController modeController): handle (V) | new (NM) map (NM) module (N) 	++ :: [ mind (NM) map (N) - map (N) ] :: [ mode (NM) controller (N) - mode (NM) controller (N) ] :: map (NM) module (NM) manager (N)  :: void (N) 
SPECIAL:NAME:OutboundRequestImpl void addHeaderField(String name, String value): add (V)  | header (NM) field (N) 	++ :: [ string (NI) - name (NI) ] :: [ string (NI) - value (NI) ] :: outbound (NM) request (NM) impl (NI) 
SPECIAL:NAME:SimpleParameterStatement void setTime(int parameterIndex, Time x): set (V)  | time (N) 	++ :: [ int (N) - parameter (NM) index (NI) ] :: [ time (N) - x (N) ] :: simple (NM) parameter (NM) statement (NI) 
SPECIAL:NAME:ClassDescriptor StatementsForClassIF getStatementsForClass(ConnectionManagerIF conMan): get (V)  | statements (N) -- for (P) class (NI) 	++ :: [ connection (NM) manager (NM) IF (NI) - con (NM) man (N) ] :: statements (NM) for (NM) class (NM) IF (NI)  :: class (NM) descriptor (NI) 
SPECIAL:NAME:ColorLib static int getCacheMissCount(): get (V)  | cache (NM) miss (NM) count (N) 	++ :: int (N)  :: color (NM) lib (N) 
ENDS_WITH_ED:NAME:CurrentBotStatePanel void locationFieldActionPerformed(ActionEvent evt): handle (V) | location (NM) field (NM) action (NM) performed (N) 	++ :: [ action (NM) event (NI) - evt (N) ] :: current (NM) bot (NM) state (NM) panel (N)  :: void (N) 
CONSTRUCTOR:NAME:CacheManagerListenerImpl CacheManagerListenerImpl CacheManagerListenerImpl(CacheConcurrencyMode mode, PersistenceUnitMeta punitMeta):  | cache (NM) manager (NM) listener (NM) impl (NI) 	++ :: [ cache (NM) concurrency (NM) mode (N) - mode (N) ] :: [ persistence (NM) unit (NM) meta (N) - punit (NM) meta (N) ]
BASE_VERB:NAME:OutputPane void fetchResults(Keywords keywords): fetch (VI)  | results (N) 	++ :: [ keywords (N) - keywords (N) ] :: output (NM) pane (N) 
SPECIAL:NAME:ExpBlueprint String getDetails(): get (V)  | details (N) 	++ :: string (NI)  :: exp (NM) blueprint (N) 
SPECIAL:NAME:TextPieceInfoImpl int getRenderedOffset(): get (V)  | rendered (NM) offset (N) 	++ :: int (N)  :: text (NM) piece (NM) info (NM) impl (NI) 
BASE_VERB:CLAS:BeanCoder Object decode(): decode (V)  | bean (NM) coder (N) 	++ :: object (NI) 
SPECIAL:NAME:SafeBasicCacheImpl OdalKeyedCache getDelegate(): get (V)  | delegate (N) 	++ :: odal (NM) keyed (NM) cache (N)  :: safe (NM) basic (NM) cache (NM) impl (NI) 
CONSTRUCTOR:NAME:CloseAction CloseAction CloseAction(String s, int i):  | close (NM) action (N) 	++ :: [ string (NI) - s (N) ] :: [ int (N) - i (N) ]
SPECIAL:NAME:ThreadLocalSessionManager Session getSession(): get (V)  | session (N) 	++ :: session (N)  :: thread (NM) local (NM) session (NM) manager (N) 
SPECIAL:NAME:Cluster double getRow(): get (V)  | row (N) 	++ :: double (N)  :: cluster (N) 
SPECIAL:FORM:Output void write(byte buffer, int offset, int count): write (V)  | [ byte (N) - buffer (NI) ]	++ :: [ int (N) - offset (N) ] :: [ int (N) - count (N) ] :: output (N) 
CONSTRUCTOR:NAME:DispatchStateException DispatchStateException DispatchStateException(String message):  | dispatch (NM) state (NM) exception (N) 	++ :: [ string (NI) - message (NI) ]
SPECIAL:NAME:SqlInsertOperator SqlCall createCall(SqlNode operands): create (V)  | call (N) 	++ :: [ sql (NM) node (NI) - operands (N) ] :: sql (NM) call (N)  :: sql (NM) insert (NM) operator (N) 
SPECIAL:NAME:PhpSimpleHttpScriptContext void setAttribute(String key, Object value, int scope): set (V)  | attribute (N) 	++ :: [ string (NI) - key (NI) ] :: [ object (NI) - value (NI) ] :: [ int (N) - scope (N) ] :: php (NM) simple (NM) http (NM) script (NM) context (N) 
SPECIAL:NAME:LexerTest void testCommandFinderAndEmptyStrings(): test (VI)  | command (NM) finder (NM) and (NM) empty (NM) strings (N) 	++ :: lexer (NM) test (N) 
BASE_VERB:NAME:Operator void setupOperatorParameters(): setup (V)  | operator (NM) parameters (N) 	++ :: operator (N) 
SPECIAL:NAME:RowHeaderResizer void removeListeners(): remove (V)  | listeners (N) 	++ :: row (NM) header (NM) resizer (N) 
NOUN_PHRASE:NAME:CharsetRecog_gb_18030 boolean nextChar(iteratedChar it, CharsetDetector det): get (V) | next (DT) char (N) 	++ :: [ iterated (NM) char (N) - it (PR) ] :: [ charset (NM) detector (N) - det (N) ] :: charset (NM) recog (NM) gb (NM) 18030 (N)  :: boolean (N) 
SPECIAL:FORM:RMIBenchmark void test(int count, String description): test (VI)  | [ int (N) - count (N) ]	++ :: [ string (NI) - description (NI) ] :: RMI (NM) benchmark (N) 
SPECIAL:NAME:PresentationImpl void setPageArray(int i, Page page): set (V)  | page (NM) array (N) 	++ :: [ int (N) - i (N) ] :: [ page (N) - page (N) ] :: presentation (NM) impl (NI) 
BASE_VERB:NAME:DynamicTimeSeriesCollection int translateGet(int toFetch): translate (V)  | get (N) 	++ :: [ int (N) - to (NM) fetch (N) ] :: int (N)  :: dynamic (NM) time (NM) series (NM) collection (N) 
BASE_VERB:NAME:Unmarshaller void eatText1(String value): eat (V)  | text (NI) 1 (D) 	++ :: [ string (NI) - value (NI) ] :: unmarshaller (N) 
BASE_VERB:FORM:AccessibleControlShape void cleanup(TestParameters tParam, PrintWriter log): cleanup (V)  | [ test (NM) parameters (N) - t (NM) param (N) ]	++ :: [ print (NM) writer (N) - log (N) ] :: accessible (NM) control (NM) shape (N) 
BASE_VERB:NAME:HTMLFlexiWriter String HTMLEscape(String htmlString): HTML (V)  | escape (N) 	++ :: [ string (NI) - html (NM) string (NI) ] :: string (NI)  :: HTML (NM) flexi (NM) writer (N) 
SPECIAL:NAME:TreeCollector static String getChosenFieldPrefix(String id): get (V)  | chosen (NM) field (NM) prefix (N) 	++ :: [ string (NI) - id (NI) ] :: string (NI)  :: tree (NM) collector (N) 
SPECIAL:NAME:GranularConstantLoopBuffer void setLinearBias(float val): set (V)  | linear (NM) bias (N) 	++ :: [ float (N) - val (NI) ] :: granular (NM) constant (NM) loop (NM) buffer (NI) 
SPECIAL:CLAS:FungendyelabellistManager int deleteByWhere(String where): delete (V)  | fungendyelabellist (NM) manager (N) -- by (P) EQUIV[where (N) , [ string (NI) - where (N) ]]	++ :: int (N) 
SPECIAL:NAME:OO7_CompositePartImpl void addPart(OO7_AtomicPart x): add (V)  | EQUIV[part (N) , [ OO (NM) 7 (NM) atomic (NM) part (N) - x (N) ]]	++ :: OO (NM) 7 (NM) composite (NM) part (NM) impl (NI) 
BASE_VERB:NAME:JavaWebApplicationServer ServletContextIntf deployServletContext(Prim servlet): deploy (V)  | servlet (NM) context (N) 	++ :: [ prim (N) - servlet (N) ] :: servlet (NM) context (NM) intf (N)  :: java (NM) web (NM) application (NM) server (N) 
SPECIAL:NAME:IChildContainer void setChildren(CCFChild c): set (V)  | children (N) 	++ :: [ CCF (NM) child (N) - c (N) ] :: I (NM) child (NM) container (NI) 
CONSTRUCTOR:NAME:LineInfo LineInfo LineInfo(byte token, Object obj):  | line (NM) info (NI) 	++ :: [ byte (N) - token (N) ] :: [ object (NI) - obj (NI) ]
SPECIAL:NAME:ObjectFactory JAXBElement<byte> createX509DataTypeX509CRL(byte value): create (V)  | X (NM) 509 (D) data (NM) type (NM) X (NM) 509 (D) CRL (N) 	++ :: [ byte (N) - value (NI) ] :: JAXB (NM) element (NM) byte (N)  :: object (NM) factory (N) 
BASE_VERB:FORM:void update(Graphics g): update (V)  | [ graphics (N) - g (N) ]	++ :: ANONYMOUS (N) 
SPECIAL:CLAS:MainFrame void copyToClipboard(String thisData): copy (V)  | main (NM) frame (N) -- to (P) clipboard (N) 	++ :: [ string (NI) - this (PR) data (NI) ]
SPECIAL:NAME:SEEDEngine String getAlgorithmName(): get (V)  | algorithm (NM) name (NI) 	++ :: string (NI)  :: SEED (NM) engine (N) 
SPECIAL:NAME:OffLine2Slice String retrieveError(): retrieve (V)  | error (N) 	++ :: string (NI)  :: off (NM) line (NM) 2 (NM) slice (N) 
V_3P_IRR:NAME:TestParse boolean hasMetaTags(): has (V)  | meta (NM) tags (N) 	++ :: boolean (N)  :: test (NM) parse (N) 
CONSTRUCTOR:NAME:CircleRegionContainment CircleRegionContainment CircleRegionContainment(AttributeSet as):  | circle (NM) region (NM) containment (N) 	++ :: [ attribute (NM) set (N) - as (N) ]
ENDS_WITH_ING:NAME:DefaultArcUserObjectRappresentation void cancelEditing(): handle (V) | cancel (NM) editing (N) 	++ :: default (NM) arc (NM) user (NM) object (NM) rappresentation (N)  :: void (N) 
BASE_VERB:CLAS:MapModuleManager void changeToMapOfMode(Mode mode): change (V)  | map (NM) module (NM) manager (N) -- to (P) EQUIV[map (NM) of (NM) mode (N) , [ mode (N) - mode (N) ]]	++
SPECIAL:CLAS:JFrmSQL boolean start(): start (V)  | J (NM) frm (NM) SQL (N) 	++ :: boolean (N) 
SPECIAL:NAME:EditMissionDialog void setAction(String action): set (V)  | action (N) 	++ :: [ string (NI) - action (N) ] :: edit (NM) mission (NM) dialog (N) 
BASE_VERB:CLAS:FlatFeatFormat boolean canread(): canread (V)  | flat (NM) feat (NM) format (NI) 	++ :: boolean (N) 
SPECIAL:NAME:NamedValue static NamedValue getDefaultNamedValues(String str, Object defaultValue): get (V)  | default (NM) named (NM) values (N) 	++ :: [ string (NI) - str (NI) ] :: [ object (NI) - default (NM) value (NI) ] :: named (NM) value (NI)  :: named (NM) value (NI) 
BASE_VERB:NAME:Project JPopupMenu _prepareChooseSpecification(JPopupMenu popup, ActionListener al): prepare (V)  | choose (NM) specification (N) 	++ :: [ J (NM) popup (NM) menu (N) - popup (N) ] :: [ action (NM) listener (N) - al (N) ] :: J (NM) popup (NM) menu (N)  :: project (N) 
BASE_VERB:NAME:ChatAgent void clearPrivateList(): clear (V)  | private (NM) list (N) 	++ :: chat (NM) agent (N) 
SPECIAL:NAME:Ephemera String getClassName(): get (V)  | class (NM) name (NI) 	++ :: string (NI)  :: ephemera (N) 
BASE_VERB:NAME:FreeVector List subList(int piFromIndex, int piToIndex): sub (V)  | list (N) 	++ :: [ int (N) - pi (NM) from (NM) index (NI) ] :: [ int (N) - pi (NM) to (NM) index (NI) ] :: list (N)  :: free (NM) vector (N) 
SPECIAL:NAME:TaskForm void setManager(String manager): set (V)  | manager (N) 	++ :: [ string (NI) - manager (N) ] :: task (NM) form (N) 
SPECIAL:NAME:olivTidyBean boolean getEncloseText(): get (V)  | enclose (NM) text (NI) 	++ :: boolean (N)  :: oliv (NM) tidy (NM) bean (NI) 
V_3P_IRR:NAME:IComponent boolean isMoveable(): is (V)  | moveable (N) 	++ :: boolean (N)  :: I (NM) component (N) 
BASE_VERB:CLAS:NotesViewWindow void display(): display (V)  | notes (NM) view (NM) window (N) 	++
SPECIAL:NAME:LdapPublisher String getARLAttribute(): get (V)  | ARL (NM) attribute (N) 	++ :: string (NI)  :: ldap (NM) publisher (N) 
BASE_VERB:FORM:ScopeProgressCellRenderer void repaint(Rectangle r): repaint (V)  | [ rectangle (N) - r (N) ]	++ :: scope (NM) progress (NM) cell (NM) renderer (N) 
SPECIAL:FORM:OrderMassStatusRequest void set(UnderlyingSymbol value): set (V)  | [ underlying (NM) symbol (N) - value (NI) ]	++ :: order (NM) mass (NM) status (NM) request (N) 
NOUN_PHRASE:NAME:Result static Result newRollbackToSavepointRequest(String name): get (V) | new (NM) rollback (NM) to (NM) savepoint (NM) request (N) 	++ :: [ string (NI) - name (NI) ] :: result (N)  :: result (N) 
ENDS_WITH_ED:NAME:void actionPerformed(ActionEvent evt): handle (V) | action (NM) performed (N) 	++ :: [ action (NM) event (NI) - evt (N) ] :: ANONYMOUS (N)  :: void (N) 
SPECIAL:NAME:AffineTransformer double getOptimalFitnessValue(): get (V)  | optimal (NM) fitness (NM) value (NI) 	++ :: double (N)  :: affine (NM) transformer (N) 
SPECIAL:NAME:IMessage Object getNativeMsg(): get (V)  | native (NM) msg (NI) 	++ :: object (NI)  :: I (NM) message (NI) 
V_3P_IRR:NAME:IPTool boolean isFirstSubNetBit(): is (V)  | first (NM) sub (NM) net (NM) bit (N) 	++ :: boolean (N)  :: IP (NM) tool (N) 
SPECIAL:FORM:ConversionSample static void main(String args): main (V)  | [ string (NI) - args (N) ]	++ :: conversion (NM) sample (N) 
BASE_VERB:NAME:JavaSoundAudioDevice void flushImpl(): flush (V)  | impl (NI) 	++ :: java (NM) sound (NM) audio (NM) device (N) 
V_3P_IRR:NAME:X_C_ProjectPhase boolean isComplete(): is (V)  | complete (N) 	++ :: boolean (N)  :: X (NM) C (NM) project (NM) phase (N) 
SPECIAL:FORM:SVValue void initialize(SVAttribute attr, SVTClass definitionClass, StateVector testMethod): initialize (V)  | [ SV (NM) attribute (N) - attr (N) ]	++ :: [ SVT (NM) class (NI) - definition (NM) class (NI) ] :: [ state (NM) vector (N) - test (NM) method (N) ] :: SV (NM) value (NI) 
SPECIAL:NAME:AttributePointer Object getValue(Object parent, Object grandParent, boolean finalNode): get (V)  | value (NI) 	++ :: [ object (NI) - parent (N) ] :: [ object (NI) - grand (NM) parent (N) ] :: [ boolean (N) - final (NM) node (NI) ] :: object (NI)  :: attribute (NM) pointer (N) 
SPECIAL:NAME:JPEGEncoder void WriteMarker(byte data, OutputStream out): write (V)  | marker (N) 	++ :: [ byte (N) - data (NI) ] :: [ output (NM) stream (NI) - out (N) ] :: JPEG (NM) encoder (N) 
BASE_VERB:NAME:FramePrProperty TwipsMeasureType xgetH(): xget (V)  | H (N) 	++ :: twips (NM) measure (NM) type (N)  :: frame (NM) pr (NM) property (N) 
PREP:NAME:Zoo String toString(): convert (V) | to (P) string (NI) 	++ :: zoo (N)  :: string (NI) 
CONSTRUCTOR:NAME:ASTDMAPRuleSet ASTDMAPRuleSet ASTDMAPRuleSet(int id):  | ASTDMAP (NM) rule (NM) set (N) 	++ :: [ int (N) - id (NI) ]
SPECIAL:NAME:GACreator void createIndividual(GAIndividual p1, GAIndividual p2): create (V)  | EQUIV[individual (N) , [ GA (NM) individual (N) - p (NM) 1 (N) ], [ GA (NM) individual (N) - p (NM) 2 (N) ]]	++ :: GA (NM) creator (N) 
SPECIAL:NAME:SimplePermissionRule static void setReturnUrl(ReturnPathContainer rpContainer, String returnPath): set (V)  | return (NM) url (NI) 	++ :: [ return (NM) path (NM) container (NI) - rp (NM) container (NI) ] :: [ string (NI) - return (NM) path (NI) ] :: simple (NM) permission (NM) rule (N) 
BASE_VERB:NAME:PdfEncryption byte computeOwnerKey(byte userPad, byte ownerPad, boolean strength128Bits): compute (V)  | owner (NM) key (NI) 	++ :: [ byte (N) - user (NM) pad (N) ] :: [ byte (N) - owner (NM) pad (N) ] :: [ boolean (N) - strength (NM) 128 (NM) bits (N) ] :: byte (N)  :: pdf (NM) encryption (N) 
SPECIAL:NAME:ImageLoader Image loadImage(String name): load (V)  | image (N) 	++ :: [ string (NI) - name (NI) ] :: image (N)  :: image (NM) loader (N) 
CONSTRUCTOR:NAME:ListOption ListOption ListOption(String name, String label, String tooltip, List<Object> value, List<Object> items, int selMode):  | list (NM) option (N) 	++ :: [ string (NI) - name (NI) ] :: [ string (NI) - label (NI) ] :: [ string (NI) - tooltip (N) ] :: [ list (NM) object (NI) - value (NI) ] :: [ list (NM) object (NI) - items (N) ] :: [ int (N) - sel (NM) mode (N) ]
SPECIAL:NAME:EditPomTest void addRequestEditParameter(String id, String version, String name): add (V)  | request (NM) edit (NM) parameter (N) 	++ :: [ string (NI) - id (NI) ] :: [ string (NI) - version (N) ] :: [ string (NI) - name (NI) ] :: edit (NM) pom (NM) test (N) 
BASE_VERB:NAME:HeroStepIncreaser void increaseEnergies(): increase (V)  | energies (N) 	++ :: hero (NM) step (NM) increaser (N) 
BASE_VERB:NAME:JvReflectiveVisitor void defaultVisit(Object o): default (V)  | visit (N) 	++ :: [ object (NI) - o (N) ] :: jv (NM) reflective (NM) visitor (N) 
VOID_NP:NAME:AccountListView void selectionEvent(PersistentObject obj): handle (V) | selection (NM) event (NI) 	++ :: [ persistent (NM) object (NI) - obj (NI) ] :: account (NM) list (NM) view (NI)  :: void (N) 
SPECIAL:NAME:DefaultInputHandler Hashtable getBindings(): get (V)  | bindings (N) 	++ :: hashtable (N)  :: default (NM) input (NM) handler (N) 
SPECIAL:NAME:X_M_MovementLine BigDecimal getConfirmedQty(): get (V)  | confirmed (NM) qty (N) 	++ :: big (NM) decimal (N)  :: X (NM) M (NM) movement (NM) line (N) 
SPECIAL:NAME:UmxFile static FileType getFileType(): get (V)  | file (NM) type (N) 	++ :: file (NM) type (N)  :: umx (NM) file (NI) 
SPECIAL:CLAS:ProxyGeneratorTask void execute(): execute (VI)  | proxy (NM) generator (NM) task (N) 	++
BASE_VERB:NAME:KjcPrettyPrinter void visitVariableDefinition(JVariableDefinition self, int modifiers, CType type, String ident, JExpression expr): visit (V)  | EQUIV[variable (NM) definition (NI) , [ J (NM) variable (NM) definition (NI) - self (N) ]]	++ :: [ int (N) - modifiers (N) ] :: [ C (NM) type (N) - type (N) ] :: [ string (NI) - ident (N) ] :: [ J (NM) expression (N) - expr (NI) ] :: kjc (NM) pretty (NM) printer (N) 
SPECIAL:NAME:JSane_Swing_Widget_Factory JSane_Widget_Wrapper_Interface getWidget(JSane_Base_Type_Word word, JSane_Base_Constraint constraint): get (V)  | widget (N) 	++ :: [ J (NM) sane (NM) base (NM) type (NM) word (N) - word (N) ] :: [ J (NM) sane (NM) base (NM) constraint (N) - constraint (N) ] :: J (NM) sane (NM) widget (NM) wrapper (NM) interface (NI)  :: J (NM) sane (NM) swing (NM) widget (NM) factory (N) 
SPECIAL:NAME:AbstractStandardRoleFactory List<PrimaryKey> findPrimaryKeysByEnabledFlag(String enabledFlag): find (V)  | primary (NM) keys (N) -- by (P) EQUIV[enabled (NM) flag (N) , [ string (NI) - enabled (NM) flag (N) ]]	++ :: list (NM) primary (NM) key (NI)  :: abstract (NM) standard (NM) role (NM) factory (N) 
SPECIAL:NAME:AccessibleValue boolean setCurrentAccessibleValue(Number number): set (V)  | current (NM) accessible (NM) value (NI) 	++ :: [ number (NI) - number (NI) ] :: boolean (N)  :: accessible (NM) value (NI) 
SPECIAL:NAME:SwingCommandButton static AbstractButton createCheckBox(SwingCommand command): create (V)  | check (NM) box (N) 	++ :: [ swing (NM) command (N) - command (N) ] :: abstract (NM) button (N)  :: swing (NM) command (NM) button (N) 
SPECIAL:CLAS:PO boolean delete(boolean force): delete (V)  | PO (N) 	++ :: [ boolean (N) - force (N) ] :: boolean (N) 
ENDS_WITH_ED:NAME:void mouseEntered(MouseEvent e): handle (V) | mouse (NM) entered (N) 	++ :: [ mouse (NM) event (NI) - e (N) ] :: ANONYMOUS (N)  :: void (N) 
PREP:NAME:Galmast void onStart(): handle (V) | on (NM) start (N) 	++ :: galmast (N)  :: void (N) 
BASE_VERB:NAME:AbstractMarkupBuilder void beginTag(String name, Object attrs): begin (V)  | tag (NI) 	++ :: [ string (NI) - name (NI) ] :: [ object (NI) - attrs (N) ] :: abstract (NM) markup (NM) builder (N) 
SPECIAL:CLAS:Emulators static void writeToIniFile(): write (V)  | emulators (N) -- to (P) ini (NM) file (NI) 	++
SPECIAL:FORM:News void set(RawDataLength value): set (V)  | [ raw (NM) data (NM) length (N) - value (NI) ]	++ :: news (N) 
SPECIAL:NAME:NewsTemplateFrame boolean getConjective_Check(): get (V)  | conjective (NM) check (N) 	++ :: boolean (N)  :: news (NM) template (NM) frame (N) 
SPECIAL:NAME:AcousticEmitterSystemData AcousticEmitterSystem getAcousticEmitterSystem(): get (V)  | acoustic (NM) emitter (NM) system (N) 	++ :: acoustic (NM) emitter (NM) system (N)  :: acoustic (NM) emitter (NM) system (NM) data (NI) 
SPECIAL:NAME:BuildCommandTest void testJsonHashShouldNotReturnBuildSinceForNonActiveBuild(): test (VI)  | json (NM) hash (NM) should (NM) not (DT) return (NM) build (N) -- since (P) for (NM) non (NM) active (NM) build (N) 	++ :: build (NM) command (NM) test (N) 
SPECIAL:CLAS:ProcessMgr void remove(): remove (V)  | process (NM) mgr (N) 	++
BASE_VERB:NAME:TIFFDecoderLogLuv void decodeRowPacked24(byte row): decode (V)  | row (NM) packed (N) 24 (D) 	++ :: [ byte (N) - row (N) ] :: TIFF (NM) decoder (NM) log (NM) luv (N) 
BASE_VERB:NAME:AnimationGui void makeTransformationPanel(): make (V)  | transformation (NM) panel (N) 	++ :: animation (NM) gui (N) 
BASE_VERB:NAME:Stack void dup2_x1(): dup (V)  | 2 (D) x (N) 1 (D) 	++ :: stack (N) 
SPECIAL:NAME:X_A_Asset_Group void setIsOwned(boolean IsOwned): set (V)  | is (NM) owned (N) 	++ :: [ boolean (N) - is (NM) owned (N) ] :: X (NM) A (NM) asset (NM) group (N) 
SPECIAL:NAME:ExpressionWrapper Object getValue(): get (V)  | value (NI) 	++ :: object (NI)  :: expression (NM) wrapper (NI) 
SPECIAL:NAME:TokenPrinter int printNonNumbers(int scanner, int endTokenOffset): print (V)  | non (NM) numbers (N) 	++ :: [ int (N) - scanner (N) ] :: [ int (N) - end (NM) token (NM) offset (N) ] :: int (N)  :: token (NM) printer (N) 
BASE_VERB:NAME:ReadoutApplet void paintTime(Graphics g): paint (V)  | time (N) 	++ :: [ graphics (N) - g (N) ] :: readout (NM) applet (N) 
SPECIAL:NAME:Utility double getUpperBound(double totalWeight, double totalPositiveWeight, Hypothesis hypo, double delta): get (V)  | upper (NM) bound (N) 	++ :: [ double (N) - total (NM) weight (N) ] :: [ double (N) - total (NM) positive (NM) weight (N) ] :: [ hypothesis (N) - hypo (N) ] :: [ double (N) - delta (N) ] :: double (N)  :: utility (N) 
SPECIAL:NAME:EntityInsertAction Object getState(): get (V)  | state (N) 	++ :: object (NI)  :: entity (NM) insert (NM) action (N) 
VOID_NP:NAME:PackagerListener void packagerMsg(String info): handle (V) | packager (NM) msg (NI) 	++ :: [ string (NI) - info (NI) ] :: packager (NM) listener (N)  :: void (N) 
CONSTRUCTOR:NAME:EntitySaveAction EntitySaveAction EntitySaveAction(EntitiesModel cm, EntityEditor editor):  | entity (NM) save (NM) action (N) 	++ :: [ entities (NM) model (NI) - cm (N) ] :: [ entity (NM) editor (N) - editor (N) ]
CONSTRUCTOR:NAME:SimulationPool SimulationPool SimulationPool():  | simulation (NM) pool (N) 	++
SPECIAL:FORM:ExceptionDefSeqHelper static void write(OutputStream out, ExceptionDef val): write (V)  | [ output (NM) stream (NI) - out (N) ]	++ :: [ exception (NM) def (NI) - val (NI) ] :: exception (NM) def (NM) seq (NM) helper (N) 
SPECIAL:NAME:StudentQuestionRating int getInterestedCount(): get (V)  | interested (NM) count (N) 	++ :: int (N)  :: student (NM) question (NM) rating (N) 
CONSTRUCTOR:NAME:ECHOConnectionFactoryImpl ECHOConnectionFactoryImpl ECHOConnectionFactoryImpl():  | ECHO (NM) connection (NM) factory (NM) impl (NI) 	++
BASE_VERB:FORM:Lifecycle void configure(Node parameters): configure (V)  | [ node (NI) - parameters (N) ]	++ :: lifecycle (N) 
SPECIAL:NAME:DipolarRelaxation ArrayList findAllResonances(Map conditions): find (V)  | all (DT) resonances (N) 	++ :: [ map (N) - conditions (N) ] :: array (NM) list (N)  :: dipolar (NM) relaxation (N) 
SPECIAL:NAME:ImageInputStream long readUnsignedInt(): read (V)  | unsigned (NM) int (N) 	++ :: long (N)  :: image (NM) input (NM) stream (NI) 
ENDS_WITH_ED:NAME:ColumnHeaderListener void mouseClicked(MouseEvent evt): handle (V) | mouse (NM) clicked (N) 	++ :: [ mouse (NM) event (NI) - evt (N) ] :: column (NM) header (NM) listener (N)  :: void (N) 
SPECIAL:NAME:DataOutputStream void write_Abstract(Object value): write (V)  | abstract (N) 	++ :: [ object (NI) - value (NI) ] :: data (NM) output (NM) stream (NI) 
VOID_NP:NAME:RefHolder void _unmarshal(OtpInputStream in): handle (V) | unmarshal (N) 	++ :: [ otp (NM) input (NM) stream (NI) - in (NI) ] :: ref (NM) holder (NI)  :: void (N) 
V_3P_IRR:NAME:boolean hasNext(): has (V)  | next (DT) 	++ :: boolean (N)  :: ANONYMOUS (N) 
SPECIAL:NAME:ITextureArray void push_front(ITexture element): push (V)  | front (N) 	++ :: [ I (NM) texture (N) - element (NI) ] :: I (NM) texture (NM) array (N) 
BASE_VERB:FORM:DBaseDateFunctions void dayofyear(XRowSet xRowRes): dayofyear (V)  | [ X (NM) row (NM) set (N) - x (NM) row (NM) res (N) ]	++ :: D (NM) base (NM) date (NM) functions (N) 
SPECIAL:NAME:SegregatedListHeap void startCollect(): start (V)  | collect (N) 	++ :: segregated (NM) list (NM) heap (N) 
SPECIAL:NAME:PackingSessionLine double getWeight(): get (V)  | weight (N) 	++ :: double (N)  :: packing (NM) session (NM) line (N) 
CONSTRUCTOR:NAME:TestDatePreference TestDatePreference TestDatePreference(String name):  | test (NM) date (NM) preference (N) 	++ :: [ string (NI) - name (NI) ]
NOUN_PHRASE:NAME:DiscreteIndexer String index(Node node): get (V) | index (NI) 	++ :: [ node (NI) - node (NI) ] :: discrete (NM) indexer (N)  :: string (NI) 
BASE_VERB:NAME:Transaction boolean markDirtyIncludes(DBModel aDBModel): mark (V)  | dirty (NM) includes (N) 	++ :: [ DB (NM) model (NI) - a (NM) DB (NM) model (NI) ] :: boolean (N)  :: transaction (N) 
BASE_VERB:CLAS:ZData void revalidate(): revalidate (V)  | Z (NM) data (NI) 	++
BASE_VERB:NAME:ConfigureDetectorsDialog void populateTable(): populate (V)  | table (N) 	++ :: configure (NM) detectors (NM) dialog (N) 
SPECIAL:NAME:ElementBool double getDouble(): get (V)  | double (N) 	++ :: double (N)  :: element (NM) bool (N) 
SPECIAL:NAME:Double double getXMin(): get (V)  | X (NM) min (N) 	++ :: double (N)  :: double (N) 
CONSTRUCTOR:NAME:EventListener EventListener EventListener():  | event (NM) listener (N) 	++
SPECIAL:NAME:Lg3dDataObject JavaEditor createJavaEditor(): create (V)  | java (NM) editor (N) 	++ :: java (NM) editor (N)  :: lg (NM) 3 (NM) d (NM) data (NM) object (NI) 
SPECIAL:NAME:Lattice2DViewer void setColorRangeSize(int new_size): set (V)  | color (NM) range (NM) size (N) 	++ :: [ int (N) - new (NM) size (N) ] :: lattice (NM) 2 (NM) D (NM) viewer (N) 
SPECIAL:NAME:TextPanel void replaceRange(MConstText newText, int start, int end): replace (V)  | range (N) 	++ :: [ M (NM) const (NM) text (NI) - new (NM) text (NI) ] :: [ int (N) - start (N) ] :: [ int (N) - end (N) ] :: text (NM) panel (N) 
V_3P_IRR:NAME:BaseLineFrame boolean isActionAvailable(int action): is (V)  | action (NM) available (N) 	++ :: [ int (N) - action (N) ] :: boolean (N)  :: base (NM) line (NM) frame (N) 
VOID_NP:NAME:void menuAboutToShow(IMenuManager menuManager): handle (V) | menu (NM) about (NM) to (NM) show (N) 	++ :: [ I (NM) menu (NM) manager (N) - menu (NM) manager (N) ] :: ANONYMOUS (N)  :: void (N) 
BASE_VERB:FORM:DefineExpression void apply(InFlowWorkItem wi): apply (V)  | [ in (NM) flow (NM) work (NM) item (NI) - wi (N) ]	++ :: define (NM) expression (N) 
PREP:NAME:CloseFontReq String toString(): convert (V) | to (P) string (NI) 	++ :: close (NM) font (NM) req (N)  :: string (NI) 
SPECIAL:NAME:Expression Expression getRightExpression(): get (V)  | right (NM) expression (N) 	++ :: expression (N)  :: expression (N) 
SPECIAL:NAME:FormTest void testFormAccessAfterBrowsing(): test (VI)  | form (NM) access (N) -- after (P) browsing (N) 	++ :: form (NM) test (N) 
CONSTRUCTOR:NAME:HTTPConnectionDescriptor HTTPConnectionDescriptor HTTPConnectionDescriptor(HTTPConnection connection, ListenerInterface targetInterface):  | HTTP (NM) connection (NM) descriptor (NI) 	++ :: [ HTTP (NM) connection (N) - connection (N) ] :: [ listener (NM) interface (NI) - target (NM) interface (NI) ]
SPECIAL:NAME:MessageFormatFilter void setFormatString(String format): set (V)  | format (NM) string (NI) 	++ :: [ string (NI) - format (NI) ] :: message (NM) format (NM) filter (N) 
CONSTRUCTOR:NAME:ProgressConfigPanel ProgressConfigPanel ProgressConfigPanel():  | progress (NM) config (NM) panel (N) 	++
BASE_VERB:NAME:DataPilotSubtotal Function xgetFunction(): xget (V)  | function (N) 	++ :: function (N)  :: data (NM) pilot (NM) subtotal (N) 
BASE_VERB:NAME:Spell_HeatMetal void affectCharStats(MOB affected, CharStats affectableStats): affect (V)  | EQUIV[char (NM) stats (N) , [ char (NM) stats (N) - affectable (NM) stats (N) ]]	++ :: [ MOB (N) - affected (N) ] :: spell (NM) heat (NM) metal (N) 
SPECIAL:NAME:MessagePanel void startListening(): start (V)  | listening (N) 	++ :: message (NM) panel (N) 
SPECIAL:CLAS:ServiceImpl EventDefinition getInEventDef(int idx): get (V)  | service (NM) impl (NI) -- in (P) event (NM) def (NI) 	++ :: [ int (N) - idx (N) ] :: event (NM) definition (NI) 
SPECIAL:NAME:Version void setAuthor(String author): set (V)  | author (N) 	++ :: [ string (NI) - author (N) ] :: version (N) 
ENDS_WITH_ED:NAME:MediaPlayer void componentHidden(ComponentEvent e): handle (V) | component (NM) hidden (N) 	++ :: [ component (NM) event (NI) - e (N) ] :: media (NM) player (N)  :: void (N) 
SPECIAL:NAME:Event String getName(): get (V)  | name (NI) 	++ :: string (NI)  :: event (NI) 
BASE_VERB:FORM:Invocation Object invoke(long arg): invoke (VI)  | [ long (N) - arg (N) ]	++ :: invocation (N)  :: object (NI) 
CONSTRUCTOR:NAME:ConfigurableX509TrustManager ConfigurableX509TrustManager ConfigurableX509TrustManager(String level):  | configurable (NM) X (NM) 509 (NM) trust (NM) manager (N) 	++ :: [ string (NI) - level (N) ]
V_3P_IRR:NAME:DynamicObjectArray boolean isEmpty(): is (V)  | empty (N) 	++ :: boolean (N)  :: dynamic (NM) object (NM) array (N) 
CONSTRUCTOR:NAME:LogViewModel LogViewModel LogViewModel(MemoryLogModel memoryLogModel):  | log (NM) view (NM) model (NI) 	++ :: [ memory (NM) log (NM) model (NI) - memory (NM) log (NM) model (NI) ]
SPECIAL:NAME:PatchFrameTestCase void _06_setFadeTime(): 06 (D) set (V)  | fade (NM) time (N) 	++ :: patch (NM) frame (NM) test (NM) case (N) 
SPECIAL:NAME:SIU_S19_LOCATION_RESOURCE NTE getNTE(int rep): get (V)  | NTE (N) 	++ :: [ int (N) - rep (N) ] :: NTE (N)  :: SIU (NM) S (NM) 19 (NM) LOCATION (NM) RESOURCE (N) 
SPECIAL:NAME:PapaSLPISoPageBackwardAction void doActionSelect(HttpServletRequest request, HttpServletResponse response, HashMap parameters, ArrayList objectIds, ArrayList selectedObjectIds, MvcSFForwardBean mfb): do (VI)  | action (NM) select (N) 	++ :: [ http (NM) servlet (NM) request (N) - request (N) ] :: [ http (NM) servlet (NM) response (N) - response (N) ] :: [ hash (NM) map (N) - parameters (N) ] :: [ array (NM) list (N) - object (NM) ids (N) ] :: [ array (NM) list (N) - selected (NM) object (NM) ids (N) ] :: [ mvc (NM) SF (NM) forward (NM) bean (NI) - mfb (N) ] :: papa (NM) SLPI (NM) so (NM) page (NM) backward (NM) action (N) 
NOUN_PHRASE:NAME:ContentIterator char last(): get (V) | last (DT) 	++ :: content (NM) iterator (N)  :: char (N) 
BASE_VERB:NAME:PdfContentByte static byte escapeString(byte b): escape (V)  | string (NI) 	++ :: [ byte (N) - b (N) ] :: byte (N)  :: pdf (NM) content (NM) byte (N) 
SPECIAL:CLAS:OS Object clone(): clone (V)  | OS (N) 	++ :: object (NI) 
SPECIAL:NAME:LineOutputWriter void writeLineNumber(): write (V)  | line (NM) number (NI) 	++ :: line (NM) output (NM) writer (N) 
SPECIAL:NAME:Unit String getName(): get (V)  | name (NI) 	++ :: string (NI)  :: unit (N) 
BASE_VERB:NAME:OnDemandDayProgramFile void saveDayProgram(boolean update): save (V)  | day (NM) program (N) 	++ :: [ boolean (N) - update (N) ] :: [ boolean (N) - update (N) ] :: on (NM) demand (NM) day (NM) program (NM) file (NI) 
SPECIAL:NAME:TaskHandler static Moblet getMoblet(HostEntry entry, Socket socket): get (V)  | moblet (N) 	++ :: [ host (NM) entry (NI) - entry (NI) ] :: [ socket (N) - socket (N) ] :: moblet (N)  :: task (NM) handler (N) 
BASE_VERB:NAME:VersionsService void attrs2obj(ManagedObjIF obj, Attributes attrs): attrs (V)  | EQUIV[2 (D) obj (NI) , [ managed (NM) obj (NM) IF (NI) - obj (NI) ]]	++ :: [ attributes (N) - attrs (N) ] :: versions (NM) service (N) 
SPECIAL:NAME:TestSafeCompoundAssignment void testDivideDouble(): test (VI) divide (V)  | double (N) 	++ :: test (NM) safe (NM) compound (NM) assignment (N) 
SPECIAL:FORM:Encrypter void init(byte pass): init (V)  | [ byte (N) - pass (N) ]	++ :: encrypter (N) 
SPECIAL:NAME:ResultsField AppendField getAppendField(): get (V)  | append (NM) field (N) 	++ :: append (NM) field (N)  :: results (NM) field (N) 
SPECIAL:NAME:ServicesTestGUI JMenuItem getExitMenuItem(): get (V)  | exit (NM) menu (NM) item (NI) 	++ :: J (NM) menu (NM) item (NI)  :: services (NM) test (NM) GUI (N) 
SPECIAL:CLAS:OutgoingConnection void Init(): init (V)  | outgoing (NM) connection (N) 	++
SPECIAL:NAME:DateField int getHeight(): get (V)  | height (N) 	++ :: int (N)  :: date (NM) field (N) 
SPECIAL:NAME:AbstractRenderer void setItemLabelFont(Font font): set (V)  | item (NM) label (NM) font (N) 	++ :: [ font (N) - font (N) ] :: abstract (NM) renderer (N) 
SPECIAL:NAME:JRTemplateImage void setTopBorder(byte topBorder): set (V)  | top (NM) border (N) 	++ :: [ byte (N) - top (NM) border (N) ] :: JR (NM) template (NM) image (N) 
V_3P_IRR:NAME:LayoutDirector boolean isANewPageSequence(): is (V)  | A (NM) new (NM) page (NM) sequence (N) 	++ :: boolean (N)  :: layout (NM) director (N) 
CONSTRUCTOR:NAME:StreamToStreamByLineThread StreamToStreamByLineThread StreamToStreamByLineThread(InputStream in, PrintStream out, String prefix, NotificationRecipient nr, Object notificationParam):  | stream (NM) to (NM) stream (NM) by (NM) line (NM) thread (N) 	++ :: [ input (NM) stream (NI) - in (NI) ] :: [ print (NM) stream (NI) - out (N) ] :: [ string (NI) - prefix (N) ] :: [ notification (NM) recipient (N) - nr (N) ] :: [ object (NI) - notification (NM) param (N) ]
ENDS_WITH_ED:NAME:void widgetSelected(SelectionEvent e): handle (V) | widget (NM) selected (N) 	++ :: [ selection (NM) event (NI) - e (N) ] :: ANONYMOUS (N)  :: void (N) 
BASE_VERB:NAME:MainApplicationWindow void showNewsFeedWatchesTree(): show (V)  | news (NM) feed (NM) watches (NM) tree (NI) 	++ :: main (NM) application (NM) window (N) 
SPECIAL:NAME:CostDriverDetailView JMenuItem getMniChangeCost(): get (V)  | mni (NM) change (NM) cost (N) 	++ :: J (NM) menu (NM) item (NI)  :: cost (NM) driver (NM) detail (NM) view (NI) 
PREP:NAME:TestResultHandler Object forInterpreterBusy(InterpreterBusy that):  | for (P) interpreter (NM) busy (N) 	++ :: [ interpreter (NM) busy (N) - that (PR) ] :: test (NM) result (NM) handler (N)  :: object (NI) 
SPECIAL:NAME:CommandFactory void addSayCommand(String message): add (V)  | say (NM) command (N) 	++ :: [ string (NI) - message (NI) ] :: command (NM) factory (N) 
SPECIAL:CLAS:Container void init(): init (V)  | container (NI) 	++
SPECIAL:NAME:Filter getFilter(): get (V)  | filter (N) 	++ :: filter (N)  :: ANONYMOUS (N) 
SPECIAL:NAME:ContentHandler void startDocument(): start (V)  | document (NI) 	++ :: content (NM) handler (N) 
SPECIAL:NAME:VisitorUtils static String getClassName(): get (V)  | class (NM) name (NI) 	++ :: string (NI)  :: visitor (NM) utils (N) 
ENDS_WITH_ED:NAME:void parsed(String argument): handle (V) | parsed (N) 	++ :: [ string (NI) - argument (N) ] :: ANONYMOUS (N)  :: void (N) 
SPECIAL:NAME:FunctionDOMapBuilder DatabaseMap getDatabaseMap(): get (V)  | database (NM) map (N) 	++ :: database (NM) map (N)  :: function (NM) DO (NM) map (NM) builder (N) 
BASE_VERB:NAME:GeneralTableTest static void countNominalMultiIDs(): count (V)  | nominal (NM) multi (NM) I (NM) ds (N) 	++ :: general (NM) table (NM) test (N) 
EVENT_PARAM:NAME:void insertUpdate(DocumentEvent evt): handle (V) | insert (NM) update (N) 	++ :: [ document (NM) event (NI) - evt (N) ] :: ANONYMOUS (N)  :: void (N) 
SPECIAL:NAME:ReportRsIteratorFactoryImpl static RsIteratorFactory getInstance(): get (V)  | instance (NI) 	++ :: rs (NM) iterator (NM) factory (N)  :: report (NM) rs (NM) iterator (NM) factory (NM) impl (NI) 
SPECIAL:NAME:WebHelper static String createQueryString(Map<String,String> parameters, String encoding): create (V)  | EQUIV[query (NM) string (NI) , [ string (NI) - parameters (N) ], [ string (NI) - encoding (N) ]]	++ :: string (NI)  :: web (NM) helper (N) 
SPECIAL:FORM:QuoteCancel void set(AccountType value): set (V)  | [ account (NM) type (N) - value (NI) ]	++ :: quote (NM) cancel (N) 
BASE_VERB:NAME:BuApplet boolean confirmExit(): confirm (V)  | exit (N) 	++ :: boolean (N)  :: bu (NM) applet (N) 
ENDS_WITH_ED:NAME:SGSInstanceClient void fireAllOutputDataDownloaded(): handle (V) | fire (NM) all (DT) output (NM) data (NM) downloaded (N) 	++ :: SGS (NM) instance (NM) client (N)  :: void (N) 
SPECIAL:NAME:Terrain int GetAdjCountFor(int iObjId): get (V)  | adj (NM) count (N) -- for (P) [ int (N) - i (NM) obj (NM) id (NI) ]	++ :: [ int (N) - i (NM) obj (NM) id (NI) ] :: int (N)  :: terrain (N) 
SPECIAL:NAME:XJCTask File getBinding(): get (V)  | binding (N) 	++ :: file (NI)  :: XJC (NM) task (N) 
CONSTRUCTOR:NAME:LearnProcessor LearnProcessor LearnProcessor(Core coreToUse):  | learn (NM) processor (N) 	++ :: [ core (N) - core (NM) to (NM) use (N) ]
SPECIAL:NAME:RequestType int getGetCapabilitiesCount(): get (V)  | get (NM) capabilities (NM) count (N) 	++ :: int (N)  :: request (NM) type (N) 
SPECIAL:NAME:JMenuBar int getHeight(): get (V)  | height (N) 	++ :: int (N)  :: J (NM) menu (NM) bar (N) 
CONSTRUCTOR:NAME:NewArrayInstruction NewArrayInstruction NewArrayInstruction(Code owner):  | new (NM) array (NM) instruction (N) 	++ :: [ code (NI) - owner (N) ]
SPECIAL:NAME:QueryLanguageTransformerDescriptorFactory List<XSLTransformerDescriptor> getTransformerDescriptors(): get (V)  | transformer (NM) descriptors (N) 	++ :: list (NM) XSL (NM) transformer (NM) descriptor (NI)  :: query (NM) language (NM) transformer (NM) descriptor (NM) factory (N) 
CONSTRUCTOR:NAME:TrackedMap TrackedMap TrackedMap(Map map):  | tracked (NM) map (N) 	++ :: [ map (N) - map (N) ]
BASE_VERB:NAME:Model Object unwrapObject(Object wrapper): unwrap (V)  | EQUIV[object (NI) , [ object (NI) - wrapper (NI) ]]	++ :: object (NI)  :: model (NI) 
SPECIAL:NAME:AbstractStandardEmptyAccount String getMatchNameText(): get (V)  | match (NM) name (NM) text (NI) 	++ :: string (NI)  :: abstract (NM) standard (NM) empty (NM) account (N) 
SPECIAL:NAME:NewOrderMultileg MaxFloor getMaxFloor(): get (V)  | max (NM) floor (N) 	++ :: max (NM) floor (N)  :: new (NM) order (NM) multileg (N) 
SPECIAL:NAME:CheckedList boolean addAll(int index, Collection<? extends E> coll): add (V)  | all (DT) 	++ :: [ int (N) - index (NI) ] :: boolean (N)  :: checked (NM) list (N) 
SPECIAL:NAME:NFA void addTransition(int start, int input, int dest): add (V)  | transition (N) 	++ :: [ int (N) - start (N) ] :: [ int (N) - input (NI) ] :: [ int (N) - dest (N) ] :: NFA (N) 
V_3P_IRR:NAME:CIM_ReplaceableProductFRU boolean isDataValid(Vector invalidProperties): is (V)  | data (NM) valid (N) 	++ :: [ vector (N) - invalid (NM) properties (N) ] :: boolean (N)  :: CIM (NM) replaceable (NM) product (NM) FRU (N) 
SPECIAL:NAME:ReplyAction ActionForward doAddDiaryReply(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response): do (VI) add (V)  | diary (NM) reply (N) 	++ :: [ action (NM) mapping (N) - mapping (N) ] :: [ action (NM) form (N) - form (N) ] :: [ http (NM) servlet (NM) request (N) - request (N) ] :: [ http (NM) servlet (NM) response (N) - response (N) ] :: action (NM) forward (N)  :: reply (NM) action (N) 
SPECIAL:FORM:ProfileBody_1_1Holder void _read(InputStream _er_input): read (V)  | [ input (NM) stream (NI) - er (NM) input (NI) ]	++ :: profile (NM) body (NM) 1 (NM) 1 (NM) holder (NI) 
VOID_NP:NAME:GateChunker void GateChunker(String localdir): handle (V) | gate (NM) chunker (N) 	++ :: [ string (NI) - localdir (N) ] :: gate (NM) chunker (N)  :: void (N) 
BASE_VERB:CLAS:HTMLdtd static int charFromName(String name): char (V)  | HTM (NM) ldtd (N) -- from (P) EQUIV[name (NI) , [ string (NI) - name (NI) ]]	++ :: int (N) 
BASE_VERB:NAME:Instruction buildInstruction(ByteReader in, ConstantPool constantPool, CodeBlock codeBlock): build (V)  | instruction (N) 	++ :: [ byte (NM) reader (N) - in (NI) ] :: [ constant (NM) pool (N) - constant (NM) pool (N) ] :: [ code (NM) block (N) - code (NM) block (N) ] :: instruction (N)  :: ANONYMOUS (N) 
ENDS_WITH_ING:NAME:AsciiCharBuffer int remaining(): handle (V) | remaining (N) 	++ :: ascii (NM) char (NM) buffer (NI)  :: int (N) 
SPECIAL:NAME:NEATGADescriptor void setSurvivalThreshold(double survivalThreshold): set (V)  | survival (NM) threshold (N) 	++ :: [ double (N) - survival (NM) threshold (N) ] :: NEATGA (NM) descriptor (NI) 
BASE_VERB:NAME:Inspector JMenu makeFileMenu(): make (V)  | file (NM) menu (N) 	++ :: J (NM) menu (N)  :: inspector (N) 
SPECIAL:CLAS:PrefsEditor void write(): write (V)  | prefs (NM) editor (N) 	++
VOID_NP:NAME:JCEMac void engineInit(Key key, AlgorithmParameterSpec params): handle (V) | engine (NM) init (N) 	++ :: [ key (NI) - key (NI) ] :: [ algorithm (NM) parameter (NM) spec (NI) - params (N) ] :: JCE (NM) mac (N)  :: void (N) 
NOUN_PHRASE:NAME:VertexIterator Vertex nextVertex(): get (V) | next (DT) vertex (N) 	++ :: vertex (NM) iterator (N)  :: vertex (N) 
BASE_VERB:NAME:ClassParser Class parseClass(Element element): parse (V)  | class (NI) 	++ :: [ element (NI) - element (NI) ] :: class (NI)  :: class (NM) parser (N) 
BASE_VERB:FORM:LogWrapper void debug(Object message, Throwable t): debug (VI)  | [ object (NI) - message (NI) ]	++ :: [ throwable (N) - t (N) ] :: log (NM) wrapper (NI) 
BASE_VERB:FORM:JMSClient void enlist(Xid xid): enlist (V)  | [ xid (N) - xid (N) ]	++ :: JMS (NM) client (N) 
CONSTRUCTOR:NAME:PersonnelTable PersonnelTable PersonnelTable():  | personnel (NM) table (N) 	++
VOID_NP:NAME:Cube void unsetLayer(): handle (V) | unset (NM) layer (N) 	++ :: cube (N)  :: void (N) 
SPECIAL:NAME:ParameterBlock void removeParameters(): remove (V)  | parameters (N) 	++ :: parameter (NM) block (N) 
BASE_VERB:NAME:ModifyTracksPlugin void clearActiveTrack(): clear (V)  | active (NM) track (N) 	++ :: modify (NM) tracks (NM) plugin (N) 
SPECIAL:NAME:PDFPage PDFAnnot addLink(int x, int y, int w, int h, PDFObject dest): add (V)  | link (N) 	++ :: [ int (N) - x (N) ] :: [ int (N) - y (N) ] :: [ int (N) - w (N) ] :: [ int (N) - h (N) ] :: [ PDF (NM) object (NI) - dest (N) ] :: PDF (NM) annot (N)  :: PDF (NM) page (N) 
SPECIAL:NAME:PostgresPlugin static PostgresPlugin getInstance(): get (V)  | instance (NI) 	++ :: postgres (NM) plugin (N)  :: postgres (NM) plugin (N) 
BASE_VERB:CLAS:AdminClientControllerEJB void ejbPassivate(): ejb (PRE) passivate (V)  | admin (NM) client (NM) controller (NM) EJB (N) 	++
SPECIAL:NAME:EmbeddedJmsTestCase InitialContext getInitialContext(): get (V)  | initial (NM) context (N) 	++ :: initial (NM) context (N)  :: embedded (NM) jms (NM) test (NM) case (N) 
EVENT_PARAM:NAME:EventList void schedule(SimEvent event): handle (V) | schedule (N) 	++ :: [ sim (NM) event (NI) - event (NI) ] :: event (NM) list (N)  :: void (N) 
BASE_VERB:FORM:PRED_$dummy_compile_grammar46pl_0_2 Predicate exec(Prolog engine): exec (V)  | [ prolog (N) - engine (N) ]	++ :: PRED (NM) dummy (NM) compile (NM) grammar (NM) 46 (NM) pl (NM) 0 (NM) 2 (N)  :: predicate (N) 
EMPTY:NONE:ManyMembers2 void d1603():  | d (PRE) 1603 (D) 
BASE_VERB:NAME:BasicGraphUI void paintOverlay(Graphics g): paint (V)  | overlay (N) 	++ :: [ graphics (N) - g (N) ] :: basic (NM) graph (NM) UI (N) 
ENDS_WITH_ED:NAME:MouseSelectionTracker void selectionPerformed(int ox, int oy, int px, int py): handle (V) | selection (NM) performed (N) 	++ :: [ int (N) - ox (N) ] :: [ int (N) - oy (N) ] :: [ int (N) - px (N) ] :: [ int (N) - py (N) ] :: mouse (NM) selection (NM) tracker (N)  :: void (N) 
SPECIAL:CLAS:GradeableRootCompositeTest void testToString(): test (VI)  | gradeable (NM) root (NM) composite (NM) test (N) -- to (P) string (NI) 	++
SPECIAL:NAME:ImagePanel Dimension getPreferredSize(): get (V)  | preferred (NM) size (N) 	++ :: dimension (N)  :: image (NM) panel (N) 
SPECIAL:NAME:Id3Checker void writeTag(String key, String value): write (V)  | tag (NI) 	++ :: [ string (NI) - key (NI) ] :: [ string (NI) - value (NI) ] :: id (NM) 3 (NM) checker (N) 
NOUN_PHRASE:NAME:CurrencyDenomination Vector columnObjects(): get (V) | column (NM) objects (N) 	++ :: currency (NM) denomination (N)  :: vector (N) 
BASE_VERB:NAME:JmiChangeSet void fireDeletionRule(RefAssociation refAssoc, JmiDeletionRule rule, RefObject droppedEnd, RefObject otherEnd): fire (V)  | EQUIV[deletion (NM) rule (N) , [ jmi (NM) deletion (NM) rule (N) - rule (N) ]]	++ :: [ ref (NM) association (N) - ref (NM) assoc (N) ] :: [ ref (NM) object (NI) - dropped (NM) end (N) ] :: [ ref (NM) object (NI) - other (DT) end (N) ] :: jmi (NM) change (NM) set (N) 
SPECIAL:NAME:FullWord String getPOS(): get (V)  | POS (N) 	++ :: string (NI)  :: full (NM) word (N) 
CONSTRUCTOR:NAME:ErrorException ErrorException ErrorException(String message, Throwable cause):  | error (NM) exception (N) 	++ :: [ string (NI) - message (NI) ] :: [ throwable (N) - cause (N) ]
SPECIAL:CLAS:Header OnBehalfOfCompID getOnBehalfOfCompID(): get (V)  | header (N) -- on (P) behalf (NM) of (NM) comp (NM) ID (NI) 	++ :: on (NM) behalf (NM) of (NM) comp (NM) ID (NI) 
SPECIAL:NAME:JDBCStorage Repository getRootRepository(): get (V)  | root (NM) repository (N) 	++ :: repository (N)  :: JDBC (NM) storage (N) 
SPECIAL:NAME:PageCtrl void addFellow(Component comp): add (V)  | fellow (N) 	++ :: [ component (N) - comp (N) ] :: page (NM) ctrl (N) 
ENDS_WITH_ED:NAME:void actionPerformed(ActionEvent e): handle (V) | action (NM) performed (N) 	++ :: [ action (NM) event (NI) - e (N) ] :: ANONYMOUS (N)  :: void (N) 
SPECIAL:NAME:CheckBoxControlFactory JComponent createComponent(): create (V)  | component (N) 	++ :: J (NM) component (N)  :: check (NM) box (NM) control (NM) factory (N) 
SPECIAL:NAME:Socket void setSoTimeout(int timeout): set (V)  | so (NM) timeout (N) 	++ :: [ int (N) - timeout (N) ] :: socket (N) 
BASE_VERB:CLAS:CalendarTypeConvertor Object convertFromString(String str, Object errSource): convert (V)  | calendar (NM) type (NM) convertor (N) -- from (P) EQUIV[string (NI) , [ string (NI) - str (NI) ]]	++ :: [ object (NI) - err (NM) source (NI) ] :: object (NI) 
SPECIAL:CLAS:ZBDTunnel Object clone(): clone (V)  | ZBD (NM) tunnel (N) 	++ :: object (NI) 
SPECIAL:NAME:TimeHistory int getValues(): get (V)  | values (N) 	++ :: int (N)  :: time (NM) history (N) 
SPECIAL:NAME:PlaylistItem void setPlaylistPath(String playlistPath): set (V)  | playlist (NM) path (NI) 	++ :: [ string (NI) - playlist (NM) path (NI) ] :: playlist (NM) item (NI) 
PREP:NAME:AdapterCharList static CharList asCharList(CharSequence delegate):  | as (P) char (NM) list (N) 	++ :: [ char (NM) sequence (N) - delegate (N) ] :: adapter (NM) char (NM) list (N)  :: char (NM) list (N) 
SPECIAL:NAME:GL11 static void nglGetLightfv(int light, int pname, FloatBuffer params, int params_position, long function_pointer): ngl (PRE) get (V)  | lightfv (N) 	++ :: [ int (N) - light (N) ] :: [ int (N) - pname (N) ] :: [ float (NM) buffer (NI) - params (N) ] :: [ int (N) - params (NM) position (N) ] :: [ long (N) - function (NM) pointer (N) ] :: GL (NM) 11 (N) 
SPECIAL:NAME:LevelNodeTestCase void testIterator(): test (VI)  | iterator (N) 	++ :: level (NM) node (NM) test (NM) case (N) 
SPECIAL:NAME:Constraint void setLessOrEqual(String value): set (V)  | less (DT) or (NM) equal (N) 	++ :: [ string (NI) - value (NI) ] :: constraint (N) 
SPECIAL:NAME:BlockMatrix int getRowCount(): get (V)  | row (NM) count (N) 	++ :: int (N)  :: block (NM) matrix (N) 
NOUN_PHRASE:NAME:SContext int sizeResourceParams(): get (V) | size (NM) resource (NM) params (N) 	++ :: S (NM) context (N)  :: int (N) 
SPECIAL:NAME:TraceMBeanImpl void setTraceLevel(ComponentID componentId, Level level): set (V)  | trace (NM) level (N) 	++ :: [ component (NM) ID (NI) - component (NM) id (NI) ] :: [ level (N) - level (N) ] :: trace (NM) M (NM) bean (NM) impl (NI) 
SPECIAL:NAME:IMeshCache boolean setMeshFilename(IMesh mesh, String filename): set (V)  | mesh (NM) filename (N) 	++ :: [ I (NM) mesh (N) - mesh (N) ] :: [ string (NI) - filename (N) ] :: boolean (N)  :: I (NM) mesh (NM) cache (N) 
SPECIAL:NAME:IElementHandler startChildElement(String tagName, Attributes attributes): start (V)  | child (NM) element (NI) 	++ :: [ string (NI) - tag (NM) name (NI) ] :: [ attributes (N) - attributes (N) ] :: I (NM) element (NM) handler (N)  :: ANONYMOUS (N) 
SPECIAL:NAME:String getColumnName(int col): get (V)  | column (NM) name (NI) 	++ :: [ int (N) - col (N) ] :: string (NI)  :: ANONYMOUS (N) 
CONSTRUCTOR:NAME:AllDocumentsList AllDocumentsList AllDocumentsList(WindowCaller wc, Integer typeIds):  | all (DT) documents (NM) list (N) 	++ :: [ window (NM) caller (N) - wc (N) ] :: [ integer (N) - type (NM) ids (N) ]
SPECIAL:NAME:GroupImpl void setCurrentUNode(Unmarshallable currentUNode): set (V)  | current (NM) U (NM) node (NI) 	++ :: [ unmarshallable (N) - current (NM) U (NM) node (NI) ] :: group (NM) impl (NI) 
SPECIAL:NAME:HibernateMBean void setDatasourceName(String datasourceName): set (V)  | datasource (NM) name (NI) 	++ :: [ string (NI) - datasource (NM) name (NI) ] :: hibernate (NM) M (NM) bean (NI) 
SPECIAL:NAME:MD_ObliqueLineAzimuth void setAzimuthAngle(BigDecimal new_azimuthAngle): set (V)  | azimuth (NM) angle (N) 	++ :: [ big (NM) decimal (N) - new (NM) azimuth (NM) angle (N) ] :: MD (NM) oblique (NM) line (NM) azimuth (N) 
SPECIAL:NAME:TxE int getBegin(): get (V)  | begin (N) 	++ :: int (N)  :: tx (NM) E (N) 
ENDS_WITH_ED:NAME:DesktopManager String ApplicationCreated(String applicationname): handle (V) | application (NM) created (N) 	++ :: [ string (NI) - applicationname (N) ] :: desktop (NM) manager (N)  :: string (NI) 
VOID_NP:NAME:AwtOperationProcessor void transformationsRotate180(): handle (V) | transformations (NM) rotate (N) 180 (D) 	++ :: awt (NM) operation (NM) processor (N)  :: void (N) 
SPECIAL:NAME:PrefsDialog void createGroup(): create (V)  | group (N) 	++ :: prefs (NM) dialog (N) 
SPECIAL:NAME:SWTItemFactory XColor getColorCMYK(float c, float m, float y, float k): get (V)  | color (NM) CMYK (N) 	++ :: [ float (N) - c (N) ] :: [ float (N) - m (N) ] :: [ float (N) - y (N) ] :: [ float (N) - k (N) ] :: X (NM) color (N)  :: SWT (NM) item (NM) factory (N) 
CONSTRUCTOR:NAME:PromptForPasswordException PromptForPasswordException PromptForPasswordException():  | prompt (NM) for (NM) password (NM) exception (N) 	++
BASE_VERB:NAME:DataPilotTable void xsetTargetRangeAddress(CellRangeAddress targetRangeAddress): xset (V)  | EQUIV[target (NM) range (NM) address (NI) , [ cell (NM) range (NM) address (NI) - target (NM) range (NM) address (NI) ]]	++ :: data (NM) pilot (NM) table (N) 
SPECIAL:NAME:MessageListPane void removeActionListener(ActionListener listener): remove (V)  | EQUIV[action (NM) listener (N) , [ action (NM) listener (N) - listener (N) ]]	++ :: message (NM) list (NM) pane (N) 
SPECIAL:CLAS:Scheduler void init(): init (V)  | scheduler (N) 	++
ENDS_WITH_ING:NAME:void windowClosing(WindowEvent e): handle (V) | window (NM) closing (N) 	++ :: [ window (NM) event (NI) - e (N) ] :: ANONYMOUS (N)  :: void (N) 
CONSTRUCTOR:NAME:SolarSystemTargetMinorPlanet SolarSystemTargetMinorPlanet SolarSystemTargetMinorPlanet(String name, String i18NName, IObserver observer):  | solar (NM) system (NM) target (NM) minor (NM) planet (N) 	++ :: [ string (NI) - name (NI) ] :: [ string (NI) - i (NM) 18 (NM) N (NM) name (NI) ] :: [ I (NM) observer (N) - observer (N) ]
BASE_VERB:FORM:DemoBase static String explode(String s): explode (V)  | [ string (NI) - s (N) ]	++ :: demo (NM) base (N)  :: string (NI) 
SPECIAL:NAME:M static DMat getLongLatRad(DMat p): get (V)  | long (NM) lat (NM) rad (N) 	++ :: [ D (NM) mat (N) - p (NI) ] :: D (NM) mat (N)  :: M (N) 
CONSTRUCTOR:NAME:CommunicationEventObservable CommunicationEventObservable CommunicationEventObservable():  | communication (NM) event (NM) observable (N) 	++
BASE_VERB:FORM:Minutes int compute(Calendar c): compute (V)  | [ calendar (N) - c (N) ]	++ :: minutes (N)  :: int (N) 
SPECIAL:CLAS:FilenameSelectorTest void testValidate(): test (VI) validate (VI)  | filename (NM) selector (NM) test (N) 	++
BASE_VERB:NAME:SF static int gsl_sf_bessel_Ynu_e(double arg0, double arg1, long arg2): gsl (PRE) sf (PRE) bessel (V)  | ynu (NM) e (N) 	++ :: [ double (N) - arg (NM) 0 (N) ] :: [ double (N) - arg (NM) 1 (N) ] :: [ long (N) - arg (NM) 2 (N) ] :: int (N)  :: SF (N) 
SPECIAL:NAME:DataStoreInterface void setByteArray(int row, int column, byte value): set (V)  | byte (NM) array (N) 	++ :: [ int (N) - row (N) ] :: [ int (N) - column (N) ] :: [ byte (N) - value (NI) ] :: data (NM) store (NM) interface (NI) 
BASE_VERB:FORM:DefaultDataReflector String reflect(Object o): reflect (V)  | [ object (NI) - o (N) ]	++ :: default (NM) data (NM) reflector (N)  :: string (NI) 
SPECIAL:CLAS:ThreadVar Thread get(): get (V)  | thread (NM) var (N) 	++ :: thread (N) 
SPECIAL:NAME:TrackManager String getActiveTrackIdentifier(): get (V)  | active (NM) track (NM) identifier (NI) 	++ :: string (NI)  :: track (NM) manager (N) 
BASE_VERB:NAME:SpecializedGraph int tripleCount(): triple (V)  | count (N) 	++ :: int (N)  :: specialized (NM) graph (N) 
SPECIAL:NAME:ISRadioButton void setFormat(String format): set (V)  | format (NI) 	++ :: [ string (NI) - format (NI) ] :: IS (NM) radio (NM) button (N) 
SPECIAL:NAME:Job void setCommand(String Command): set (V)  | command (N) 	++ :: [ string (NI) - command (N) ] :: job (N) 
CONSTRUCTOR:NAME:LongBuilder LongBuilder LongBuilder():  | long (NM) builder (N) 	++
SPECIAL:NAME:ExtractionModel void readModel(String fileName): read (V)  | model (NI) 	++ :: [ string (NI) - file (NM) name (NI) ] :: extraction (NM) model (NI) 
SPECIAL:NAME:JIDBean void setFirstName(String temp): set (V)  | first (NM) name (NI) 	++ :: [ string (NI) - temp (N) ] :: JID (NM) bean (NI) 
SPECIAL:NAME:SpreadsheetImpl VariableDecls getVariableDecls(): get (V)  | variable (NM) decls (N) 	++ :: variable (NM) decls (N)  :: spreadsheet (NM) impl (NI) 
SPECIAL:NAME:XSnapshotPropertyUtils static void setProperty(Object target, String property, Object value): set (V)  | property (N) 	++ :: [ object (NI) - target (N) ] :: [ string (NI) - property (N) ] :: [ object (NI) - value (NI) ] :: X (NM) snapshot (NM) property (NM) utils (N) 
SPECIAL:CLAS:Object construct(): construct (V)  | ANONYMOUS (N) 	++ :: object (NI) 
SPECIAL:NAME:DataFlavor static DataFlavor getTextPlainUnicodeFlavor(): get (V)  | text (NM) plain (NM) unicode (NM) flavor (N) 	++ :: data (NM) flavor (N)  :: data (NM) flavor (N) 
PREP:NAME:BlockType String toString(): convert (V) | to (P) string (NI) 	++ :: block (NM) type (N)  :: string (NI) 
PREP:NAME:ExperimentNameSQLQuery String asList():  | as (P) list (N) 	++ :: experiment (NM) name (NM) SQL (NM) query (N)  :: string (NI) 
ENDS_WITH_ED:NAME:PhotosListUIModel void fireTableDataChanged(): handle (V) | fire (NM) table (NM) data (NM) changed (N) 	++ :: photos (NM) list (NM) UI (NM) model (NI)  :: void (N) 
ENDS_WITH_ED:NAME:Operand void columnRemoved(int sheetIndex, int col, boolean currentSheet): handle (V) | column (NM) removed (N) 	++ :: [ int (N) - sheet (NM) index (NI) ] :: [ int (N) - col (N) ] :: [ boolean (N) - current (NM) sheet (N) ] :: operand (N)  :: void (N) 
SPECIAL:NAME:RtfDocumentSettings void setWriteImageScalingInformation(boolean writeImageScalingInformation): set (V)  | write (NM) image (NM) scaling (NM) information (N) 	++ :: [ boolean (N) - write (NM) image (NM) scaling (NM) information (N) ] :: rtf (NM) document (NM) settings (N) 
SPECIAL:NAME:VCellEditor Component getTableCellEditorComponent(JTable table, Object value, boolean isSelected, int row, int col): get (V)  | table (NM) cell (NM) editor (NM) component (N) 	++ :: [ J (NM) table (N) - table (N) ] :: [ object (NI) - value (NI) ] :: [ int (N) - row (N) ] :: [ int (N) - col (N) ] :: [ boolean (N) - is (NM) selected (N) ] :: component (N)  :: V (NM) cell (NM) editor (N) 
SPECIAL:NAME:TotalAmountDetailBase void setAmountCrBalanced2Null(): set (V)  | amount (NM) cr (NM) balanced (NM) 2 (D) null (N) 	++ :: total (NM) amount (NM) detail (NM) base (N) 
SPECIAL:NAME:VDUBuffer void setCursorPosition(int c, int l): set (V)  | cursor (NM) position (N) 	++ :: [ int (N) - c (N) ] :: [ int (N) - l (N) ] :: VDU (NM) buffer (NI) 
BASE_VERB:NAME:ConnectionPool void fillPool(int size): fill (V)  | pool (N) 	++ :: [ int (N) - size (N) ] :: connection (NM) pool (N) 
BASE_VERB:FORM:Factory static FontFamilyComplexAttribute parse(InputStream is, XmlOptions options): parse (V)  | [ input (NM) stream (NI) - is (N) ]	++ :: [ xml (NM) options (N) - options (N) ] :: factory (N)  :: font (NM) family (NM) complex (NM) attribute (N) 
SPECIAL:NAME:CachedCallableStatement Timestamp getTimestamp(String parameterName): get (V)  | timestamp (N) 	++ :: [ string (NI) - parameter (NM) name (NI) ] :: timestamp (N)  :: cached (NM) callable (NM) statement (NI) 
ENDS_WITH_ED:NAME:prev_page void actionPerformed(ActionEvent evt): handle (V) | action (NM) performed (N) 	++ :: [ action (NM) event (NI) - evt (N) ] :: prev (NM) page (N)  :: void (N) 
PREP:NAME:LazySingletonAspectInstanceFactoryDecorator String toString(): convert (V) | to (P) string (NI) 	++ :: lazy (NM) singleton (NM) aspect (NM) instance (NM) factory (NM) decorator (N)  :: string (NI) 
SPECIAL:NAME:XMLSerializer void removeNamespace(String prefix, String elementName): remove (V)  | namespace (N) 	++ :: [ string (NI) - prefix (N) ] :: [ string (NI) - element (NM) name (NI) ] :: XML (NM) serializer (N) 
SPECIAL:NAME:PasswordGenerator String getLower(int val): get (V)  | lower (N) 	++ :: [ int (N) - val (NI) ] :: string (NI)  :: password (NM) generator (N) 
BASE_VERB:NAME:AutomataLayoutManager void layoutContainer(Container parent): layout (V)  | EQUIV[container (NI) , [ container (NI) - parent (N) ]]	++ :: automata (NM) layout (NM) manager (N) 
SPECIAL:NAME:style void setCOL_SPAN(String col_span): set (V)  | COL (NM) SPAN (N) 	++ :: [ string (NI) - col (NM) span (N) ] :: style (N) 
SPECIAL:NAME:FilterTest void testNull(): test (VI)  | null (N) 	++ :: filter (NM) test (N) 
SPECIAL:FORM:BaseDalImpl void find(NonLockingSelectQuery q): find (V)  | [ non (NM) locking (NM) select (NM) query (N) - q (N) ]	++ :: base (NM) dal (NM) impl (NI) 
SPECIAL:NAME:ActionConfig void setImage(String image): set (V)  | image (N) 	++ :: [ string (NI) - image (N) ] :: action (NM) config (NI) 
V_3PS:FORM:ThreadOnlyFilter boolean matches(Event event): matches (V)  | [ event (NI) - event (NI) ]	++ :: thread (NM) only (NM) filter (N)  :: boolean (N) 
SPECIAL:NAME:AbstractAccount int getIntegerAttribute(PrimaryKey attributePk, int defaultValue): get (V)  | EQUIV[integer (NM) attribute (N) , [ primary (NM) key (NI) - attribute (NM) pk (NI) ]]	++ :: [ int (N) - default (NM) value (NI) ] :: int (N)  :: abstract (NM) account (N) 
SPECIAL:NAME:AbstractRendererTests void testSetStroke(): test (VI) set (V)  | stroke (N) 	++ :: abstract (NM) renderer (NM) tests (N) 
SPECIAL:NAME:Ligature String getLigature(): get (V)  | ligature (N) 	++ :: string (NI)  :: ligature (N) 
CONSTRUCTOR:NAME:BDDTestCase BDDTestCase BDDTestCase():  | BDD (NM) test (NM) case (N) 	++
SPECIAL:NAME:MockResultSet URL getURL(int columnIndex): get (V)  | URL (NI) 	++ :: [ int (N) - column (NM) index (NI) ] :: URL (NI)  :: mock (NM) result (NM) set (N) 
SPECIAL:NAME:Utilities static Frame getNonClearingFrame(String name, Component c): get (V)  | non (NM) clearing (NM) frame (N) 	++ :: [ string (NI) - name (NI) ] :: [ component (N) - c (N) ] :: frame (N)  :: utilities (N) 
EVENT_PARAM:NAME:GraphicView void mouseDown(NSEvent theEvent): handle (V) | mouse (NM) down (N) 	++ :: [ NS (NM) event (NI) - the (DT) event (NI) ] :: graphic (NM) view (NI)  :: void (N) 
SPECIAL:NAME:JComponent int getY(): get (V)  | Y (N) 	++ :: int (N)  :: J (NM) component (N) 
SPECIAL:NAME:MOPAC93Format String getNameExtensions(): get (V)  | name (NM) extensions (N) 	++ :: string (NI)  :: MOPAC (NM) 93 (NM) format (NI) 
SPECIAL:NAME:LazyFetch String orderBy(): order (V)  | by (NM) 	++ :: string (NI)  :: lazy (NM) fetch (N) 
CONSTRUCTOR:NAME:IcalParserDaoException IcalParserDaoException IcalParserDaoException(String message, Throwable throwable):  | ical (NM) parser (NM) dao (NM) exception (N) 	++ :: [ string (NI) - message (NI) ] :: [ throwable (N) - throwable (N) ]
SPECIAL:NAME:UploadWindow JList getList(): get (V)  | list (N) 	++ :: J (NM) list (N)  :: upload (NM) window (N) 
CONSTRUCTOR:NAME:CompositeEditorPane CompositeEditorPane CompositeEditorPane(List properties, List templates, PropertyEditorManager mgr):  | composite (NM) editor (NM) pane (N) 	++ :: [ list (N) - properties (N) ] :: [ list (N) - templates (N) ] :: [ property (NM) editor (NM) manager (N) - mgr (N) ]
SPECIAL:NAME:TestBulkBean void testMissingProperty(): test (VI)  | missing (NM) property (N) 	++ :: test (NM) bulk (NM) bean (NI) 
V_3P_IRR:NAME:Props boolean isAntiAliasingEnabled(): is (V)  | anti (NM) aliasing (NM) enabled (N) 	++ :: boolean (N)  :: props (N) 
SPECIAL:NAME:Range void setLower(String lower): set (V)  | lower (N) 	++ :: [ string (NI) - lower (N) ] :: range (N) 
CONSTRUCTOR:NAME:threadPoolWorker threadPoolWorker threadPoolWorker():  | thread (NM) pool (NM) worker (N) 	++
SPECIAL:NAME:PanelPlayer void setParentContainer(Container c): set (V)  | parent (NM) container (NI) 	++ :: [ container (NI) - c (N) ] :: panel (NM) player (N) 
SPECIAL:NAME:X_M_Storage int getM_AttributeSetInstance_ID(): get (V)  | M (NM) attribute (NM) set (NM) instance (NM) ID (NI) 	++ :: int (N)  :: X (NM) M (NM) storage (N) 
SPECIAL:NAME:TitleImageCache RenderedImage getPdfTitleImage(File comicFile): get (V)  | pdf (NM) title (NM) image (N) 	++ :: [ file (NI) - comic (NM) file (NI) ] :: rendered (NM) image (N)  :: title (NM) image (NM) cache (N) 
SPECIAL:NAME:oldEntrezNucleotideHandler ArrayList getSummaryForProtein(ArrayList Gis): get (V)  | summary (N) -- for (P) protein (N) 	++ :: [ array (NM) list (N) - gis (N) ] :: array (NM) list (N)  :: old (NM) entrez (NM) nucleotide (NM) handler (N) 
V_3P_IRR:NAME:DNSIncoming boolean isResponse(): is (V)  | response (N) 	++ :: boolean (N)  :: DNS (NM) incoming (N) 
CONSTRUCTOR:NAME:MouseTracker MouseTracker MouseTracker():  | mouse (NM) tracker (N) 	++
SPECIAL:NAME:Menu void setBgColor(int color): set (V)  | bg (NM) color (N) 	++ :: [ int (N) - color (N) ] :: menu (N) 
SPECIAL:NAME:AutoUpdate void addSDL(SDL sdl): add (V)  | EQUIV[SDL (N) , [ SDL (N) - sdl (N) ]]	++ :: auto (NM) update (N) 
CONSTRUCTOR:NAME:Stick Stick Stick():  | stick (N) 	++
SPECIAL:NAME:PlayerYearStat int getPuntAtt(): get (V)  | punt (NM) att (N) 	++ :: int (N)  :: player (NM) year (NM) stat (N) 
V_3P_IRR:NAME:ABTError static boolean isError(Object object): is (V)  | error (N) 	++ :: [ object (NI) - object (NI) ] :: boolean (N)  :: ABT (NM) error (N) 
SPECIAL:NAME:Configuration static long getLongProperty(String key): get (V)  | long (NM) property (N) 	++ :: [ string (NI) - key (NI) ] :: long (N)  :: configuration (NI) 
SPECIAL:NAME:JEANFileTreeNode static JEANFileTreeNode getRoot(): get (V)  | root (N) 	++ :: JEAN (NM) file (NM) tree (NM) node (NI)  :: JEAN (NM) file (NM) tree (NM) node (NI) 
SPECIAL:NAME:CIM_ChassisInRackHelper static CIMInstance copyDataToServerInstance(CIMClient cimClient, CIM_ChassisInRack dataInstance, boolean notifyDifferencies): copy (V)  | data (NI) -- to (P) server (NM) instance (NI) 	++ :: [ CIM (NM) client (N) - cim (NM) client (N) ] :: [ CIM (NM) chassis (NM) in (NM) rack (N) - data (NM) instance (NI) ] :: [ boolean (N) - notify (NM) differencies (N) ] :: CIM (NM) instance (NI)  :: CIM (NM) chassis (NM) in (NM) rack (NM) helper (N) 
SPECIAL:NAME:XYStepAreaRenderer void setShapesFilled(boolean filled): set (V)  | shapes (NM) filled (N) 	++ :: [ boolean (N) - filled (N) ] :: XY (NM) step (NM) area (NM) renderer (N) 
SPECIAL:NAME:Generator JPanel getPropertiesPanel(): get (V)  | properties (NM) panel (N) 	++ :: J (NM) panel (N)  :: generator (N) 
CONSTRUCTOR:NAME:CloseAction CloseAction CloseAction(ProblemSolver parent_arg):  | close (NM) action (N) 	++ :: [ problem (NM) solver (N) - parent (NM) arg (N) ]
BASE_VERB:FORM:Factory static TitleDocument parse(XMLInputStream xis, XmlOptions options): parse (V)  | [ XML (NM) input (NM) stream (NI) - xis (N) ]	++ :: [ xml (NM) options (N) - options (N) ] :: factory (N)  :: title (NM) document (NI) 
ENDS_WITH_ED:NAME:PECommonPanel void onWindowResized(int x, int y): handle (V) | on (NM) window (NM) resized (N) 	++ :: [ int (N) - x (N) ] :: [ int (N) - y (N) ] :: PE (NM) common (NM) panel (N)  :: void (N) 
CONSTRUCTOR:NAME:LinePlot LinePlot LinePlot(String n, Color c, int _type, int _radius, double _XY):  | line (NM) plot (N) 	++ :: [ string (NI) - n (N) ] :: [ color (N) - c (N) ] :: [ int (N) - type (N) ] :: [ int (N) - radius (N) ] :: [ double (N) - XY (N) ]
SPECIAL:NAME:IdentityTest void testCreateUniqueEntityEntryKeyForAssignIdGenerator(): test (VI) create (V)  | unique (NM) entity (NM) entry (NM) key (NI) -- for (P) assign (NM) id (NM) generator (N) 	++ :: identity (NM) test (N) 
SPECIAL:NAME:NodeImpl NodeList getChildNodes(): get (V)  | child (NM) nodes (N) 	++ :: node (NM) list (N)  :: node (NM) impl (NI) 
V_3P_IRR:NAME:XWikiServletRequest boolean isRequestedSessionIdValid(): is (V)  | requested (NM) session (NM) id (NM) valid (N) 	++ :: boolean (N)  :: X (NM) wiki (NM) servlet (NM) request (N) 
CONSTRUCTOR:NAME:Intervals Intervals Intervals():  | intervals (N) 	++
NOUN_PHRASE:NAME:OverriddenDayTypesImpl static OverriddenDayTypes unmarshal(File file): get (V) | unmarshal (N) 	++ :: [ file (NI) - file (NI) ] :: overridden (NM) day (NM) types (NM) impl (NI)  :: overridden (NM) day (NM) types (N) 
SPECIAL:FORM:SearchEngine void search(String query): search (V)  | [ string (NI) - query (N) ]	++ :: search (NM) engine (N) 
SPECIAL:NAME:BorderLeftAttribute String getBorderLeft(): get (V)  | border (NM) left (N) 	++ :: string (NI)  :: border (NM) left (NM) attribute (N) 
NOUN_PHRASE:NAME:ResolutionSyntax boolean lessThanOrEquals(ResolutionSyntax other): get (V) | less (DT) than (NM) or (NM) equals (N) 	++ :: [ resolution (NM) syntax (N) - other (DT) ] :: resolution (NM) syntax (N)  :: boolean (N) 
ENDS_WITH_ED:NAME:void actionPerformed(ActionEvent e): handle (V) | action (NM) performed (N) 	++ :: [ action (NM) event (NI) - e (N) ] :: ANONYMOUS (N)  :: void (N) 
SPECIAL:NAME:IsoBiMapTest void testClear(): test (VI)  | clear (N) 	++ :: iso (NM) bi (NM) map (NM) test (N) 
CONSTRUCTOR:NAME:SpacePrimitive SpacePrimitive SpacePrimitive(float x, float y, float z):  | space (NM) primitive (N) 	++ :: [ float (N) - x (N) ] :: [ float (N) - y (N) ] :: [ float (N) - z (N) ]
SPECIAL:NAME:XTreeBinding String getOutputPath(): get (V)  | output (NM) path (NI) 	++ :: string (NI)  :: X (NM) tree (NM) binding (N) 
V_3P_IRR:NAME:ICCKModule boolean isReadoutGraphicsVisible(): is (V)  | readout (NM) graphics (NM) visible (N) 	++ :: boolean (N)  :: ICCK (NM) module (N) 
NOUN_PHRASE:NAME:XLParser static long mk_tokenSet_32(): get (V) | mk (PRE) token (NM) set (N) 32 (D) 	++ :: XL (NM) parser (N)  :: long (N) 
SPECIAL:NAME:XTMSubjectIndicatorRef void deleteSelf(): delete (V)  | self (N) 	++ :: XTM (NM) subject (NM) indicator (NM) ref (NI) 
SPECIAL:NAME:TextLayout void writeNode(double x, double y, double z, String label): write (V)  | node (NI) 	++ :: [ double (N) - x (N) ] :: [ double (N) - y (N) ] :: [ double (N) - z (N) ] :: [ string (NI) - label (NI) ] :: text (NM) layout (N) 
V_3P_IRR:NAME:HashIterator boolean hasNext(): has (V)  | next (DT) 	++ :: boolean (N)  :: hash (NM) iterator (N) 
V_3P_IRR:NAME:Execution boolean isForwarded(): is (V)  | forwarded (N) 	++ :: boolean (N)  :: execution (N) 
SPECIAL:NAME:TestCreateDestroy void initFields(): init (V)  | fields (N) 	++ :: test (NM) create (NM) destroy (N) 
V_MODAL:NAME:Monster boolean shouldStealItem(AdventureResult item, float dropModifier): should (VI) steal (V)  | EQUIV[item (NI) , [ adventure (NM) result (N) - item (NI) ]]	++ :: [ float (N) - drop (NM) modifier (N) ] :: boolean (N)  :: monster (N) 
SPECIAL:FORM:MosaicApp static void main(String args): main (V)  | [ string (NI) - args (N) ]	++ :: mosaic (NM) app (N) 
NOUN_PHRASE:NAME:SubList int lastIndexOf(int fromIndex, int toIndex, int e, boolean ignoreCase): get (V) | last (DT) index (NM) of (N) 	++ :: [ int (N) - from (NM) index (NI) ] :: [ int (N) - to (NM) index (NI) ] :: [ int (N) - e (N) ] :: [ boolean (N) - ignore (NM) case (N) ] :: sub (NM) list (N)  :: int (N) 
SPECIAL:NAME:LayoutPageImpl UnmarshallingEventHandler createUnmarshaller(UnmarshallingContext context): create (V)  | unmarshaller (N) 	++ :: [ unmarshalling (NM) context (N) - context (N) ] :: unmarshalling (NM) event (NM) handler (N)  :: layout (NM) page (NM) impl (NI) 
ENDS_WITH_ED:NAME:ParsingThread boolean passed(): handle (V) | passed (N) 	++ :: parsing (NM) thread (N)  :: boolean (N) 
SPECIAL:NAME:SearchBuffer SearchResult findNext(): find (V)  | next (DT) 	++ :: search (NM) result (N)  :: search (NM) buffer (NI) 
ENDS_WITH_ING:NAME:void windowClosing(WindowEvent e): handle (V) | window (NM) closing (N) 	++ :: [ window (NM) event (NI) - e (N) ] :: ANONYMOUS (N)  :: void (N) 
ENDS_WITH_ED:NAME:MouseHandler void mousePressed(MouseEvent evt): handle (V) | mouse (NM) pressed (N) 	++ :: [ mouse (NM) event (NI) - evt (N) ] :: mouse (NM) handler (N)  :: void (N) 
BASE_VERB:NAME:PersistentObject Object resolveCollection(Object o): resolve (V)  | collection (N) 	++ :: [ object (NI) - o (N) ] :: object (NI)  :: persistent (NM) object (NI) 
EMPTY:NONE:stub void t9(int i):  | t (PRE) 9 (D) 
BASE_VERB:CLAS:ProductionRun boolean store(): store (V)  | production (NM) run (N) 	++ :: boolean (N) 
SPECIAL:NAME:UIJFChart void setChartDataAtSession(FacesContext facesContext): set (V)  | chart (NM) data (NI) -- at (P) session (N) 	++ :: [ faces (NM) context (N) - faces (NM) context (N) ] :: UIJF (NM) chart (N) 
SPECIAL:NAME:WebBrowser void setDocument(InputStream input, String baseURL): set (V)  | document (NI) 	++ :: [ input (NM) stream (NI) - input (NI) ] :: [ string (NI) - base (NM) URL (NI) ] :: web (NM) browser (N) 
ENDS_WITH_ED:NAME:void itemStateChanged(ItemEvent e): handle (V) | item (NM) state (NM) changed (N) 	++ :: [ item (NM) event (NI) - e (N) ] :: ANONYMOUS (N)  :: void (N) 
CONSTRUCTOR:NAME:RandomAccessImpl RandomAccessImpl RandomAccessImpl(SortedList<E> delegate, EventListenerRegistry listeners):  | random (NM) access (NM) impl (NI) 	++ :: [ sorted (NM) list (NM) E (N) - delegate (N) ] :: [ event (NM) listener (NM) registry (N) - listeners (N) ]
SPECIAL:NAME:AESFastEngine String getAlgorithmName(): get (V)  | algorithm (NM) name (NI) 	++ :: string (NI)  :: AES (NM) fast (NM) engine (N) 
SPECIAL:NAME:JbiWrapperHandler void addNamespace(String NamespaceURI): add (V)  | EQUIV[namespace (N) , [ string (NI) - namespace (NM) URI (NI) ]]	++ :: jbi (NM) wrapper (NM) handler (N) 
SPECIAL:NAME:ChooseFileListener static ChooseFileListener getInstance(FleshGUI inputFleshGUI): get (V)  | instance (NI) 	++ :: [ flesh (NM) GUI (N) - input (NM) flesh (NM) GUI (N) ] :: choose (NM) file (NM) listener (N)  :: choose (NM) file (NM) listener (N) 
SPECIAL:NAME:SimpleTreeNode List getChildren(): get (V)  | children (N) 	++ :: list (N)  :: simple (NM) tree (NM) node (NI) 
CONSTRUCTOR:NAME:Double Double Double(double x, double y, double w, double h):  | double (N) 	++ :: [ double (N) - x (N) ] :: [ double (N) - y (N) ] :: [ double (N) - w (N) ] :: [ double (N) - h (N) ]
CONSTRUCTOR:NAME:MainFrameWindowStateBeanInfo MainFrameWindowStateBeanInfo MainFrameWindowStateBeanInfo():  | main (NM) frame (NM) window (NM) state (NM) bean (NM) info (NI) 	++
SPECIAL:NAME:SimpleInteractionsModel void setInterpreterPrivateAccessible(boolean accessible): set (V)  | interpreter (NM) private (NM) accessible (N) 	++ :: [ boolean (N) - accessible (N) ] :: simple (NM) interactions (NM) model (NI) 
NOUN_PHRASE:NAME:Derivative double gradient(double val0, double val1, double val2, double dis0, double dis1, double dis2): get (V) | gradient (N) 	++ :: [ double (N) - val (NM) 0 (N) ] :: [ double (N) - val (NM) 1 (N) ] :: [ double (N) - val (NM) 2 (N) ] :: [ double (N) - dis (NM) 0 (N) ] :: [ double (N) - dis (NM) 1 (N) ] :: [ double (N) - dis (NM) 2 (N) ] :: derivative (N)  :: double (N) 
SPECIAL:NAME:List void setSelectedFlags(boolean selectedArray): set (V)  | selected (NM) flags (N) 	++ :: [ boolean (N) - selected (NM) array (N) ] :: list (N) 
SPECIAL:NAME:ServiceManagerEJBImpl void removeCluster(AuthzSubjectValue subj, Integer clusterId): remove (V)  | EQUIV[cluster (N) , [ integer (N) - cluster (NM) id (NI) ]]	++ :: [ authz (NM) subject (NM) value (NI) - subj (N) ] :: service (NM) manager (NM) EJB (NM) impl (NI) 
SPECIAL:NAME:Controller void setTimerInterval(long timerInterval): set (V)  | timer (NM) interval (N) 	++ :: [ long (N) - timer (NM) interval (N) ] :: controller (N) 
BASE_VERB:NAME:EAController void exportJobDescription(): export (V)  | job (NM) description (NI) 	++ :: EA (NM) controller (N) 
V_3PS:FORM:REGSAM boolean equals(Object obj): equals (V)  | [ object (NI) - obj (NI) ]	++ :: REGSAM (N)  :: boolean (N) 
BASE_VERB:FORM:PNGParser void parse(IGFile file): parse (V)  | [ IG (NM) file (NI) - file (NI) ]	++ :: PNG (NM) parser (N) 
CONSTRUCTOR:NAME:RangeDictionary RangeDictionary RangeDictionary():  | range (NM) dictionary (N) 	++
V_3P_IRR:NAME:BinaryExpression boolean isConstant(): is (V)  | constant (N) 	++ :: boolean (N)  :: binary (NM) expression (N) 
SPECIAL:NAME:SidewaysPrint static int checkAngle(int angle): check (VI)  | EQUIV[angle (N) , [ int (N) - angle (N) ]]	++ :: int (N)  :: sideways (NM) print (N) 
SPECIAL:CLAS:GrappaLine Object clone(): clone (V)  | grappa (NM) line (N) 	++ :: object (NI) 
SPECIAL:NAME:BusinessProcess void setEntered(Timestamp tmp): set (V)  | entered (N) 	++ :: [ timestamp (N) - tmp (N) ] :: business (NM) process (N) 
BASE_VERB:CLAS:DataSourcePluginListener void removing(): removing (V)  | data (NM) source (NM) plugin (NM) listener (N) 	++
SPECIAL:NAME:XMLLoadToTree void loadTargetFormatDataTree(IXmlFormatModel m, Vector<Document> eDataList): load (V)  | target (NM) format (NM) data (NM) tree (NI) 	++ :: [ I (NM) xml (NM) format (NM) model (NI) - m (N) ] :: [ vector (NM) document (NI) - e (NM) data (NM) list (N) ] :: XML (NM) load (NM) to (NM) tree (NI) 
SPECIAL:NAME:BOSSComponentFrame void createToolBar(): create (V)  | tool (NM) bar (N) 	++ :: BOSS (NM) component (NM) frame (N) 
CONSTRUCTOR:NAME:CDDBTrack CDDBTrack CDDBTrack(Track track):  | CDDB (NM) track (N) 	++ :: [ track (N) - track (N) ]
SPECIAL:FORM:GetListGroupUsers void execute(SessionData data, Element command): execute (VI)  | [ session (NM) data (NI) - data (NI) ]	++ :: [ element (NI) - command (N) ] :: get (NM) list (NM) group (NM) users (N) 
SPECIAL:NAME:MemoryBankAppReg String getBankDescription(): get (V)  | bank (NM) description (NI) 	++ :: string (NI)  :: memory (NM) bank (NM) app (NM) reg (N) 
CONSTRUCTOR:NAME:MProductPrice MProductPrice MProductPrice(Properties ctx, ResultSet rs):  | M (NM) product (NM) price (N) 	++ :: [ properties (N) - ctx (N) ] :: [ result (NM) set (N) - rs (N) ]
ENDS_WITH_ED:NAME:ISSTransitGUI void AboutMenuItemActionPerformed(ActionEvent evt): handle (V) | about (NM) menu (NM) item (NM) action (NM) performed (N) 	++ :: [ action (NM) event (NI) - evt (N) ] :: ISS (NM) transit (NM) GUI (N)  :: void (N) 
NOUN_PHRASE:NAME:JTreeTable int realEditingRow(): get (V) | real (NM) editing (NM) row (N) 	++ :: J (NM) tree (NM) table (N)  :: int (N) 
EVENT_PARAM:NAME:TextAnalysisResultsEventListener void requestTextAnalysisResults(TextAnalysisResultsEvent event): handle (V) | request (NM) text (NM) analysis (NM) results (N) 	++ :: [ text (NM) analysis (NM) results (NM) event (NI) - event (NI) ] :: text (NM) analysis (NM) results (NM) event (NM) listener (N)  :: void (N) 
SPECIAL:NAME:Image void setIsOrigin(boolean isOrigin): set (V)  | is (NM) origin (N) 	++ :: [ boolean (N) - is (NM) origin (N) ] :: image (N) 
SPECIAL:NAME:ExpenseForm String getProjectID(): get (V)  | project (NM) ID (NI) 	++ :: string (NI)  :: expense (NM) form (N) 
BASE_VERB:FORM:Schedule void contract(int mpts, int ilo): contract (V)  | [ int (N) - mpts (N) ]	++ :: [ int (N) - ilo (N) ] :: schedule (N) 
NOUN_PHRASE:NAME:Factory static XMLInputStream newValidatingXMLInputStream(XMLInputStream xis): get (V) | new (NM) validating (NM) XML (NM) input (NM) stream (NI) 	++ :: [ XML (NM) input (NM) stream (NI) - xis (N) ] :: factory (N)  :: XML (NM) input (NM) stream (NI) 
SPECIAL:NAME:NameValuePair Object getKey(): get (V)  | key (NI) 	++ :: object (NI)  :: name (NM) value (NM) pair (N) 
BASE_VERB:FORM:OverviewMapJComponent void setup(MapRenderer mv): setup (V)  | [ map (NM) renderer (N) - mv (N) ]	++ :: overview (NM) map (NM) J (NM) component (N) 
EVENT_PARAM:NAME:ChannelStoreListener void postAdd(ChannelStoreEvent evt): handle (V) | post (NM) add (N) 	++ :: [ channel (NM) store (NM) event (NI) - evt (N) ] :: channel (NM) store (NM) listener (N)  :: void (N) 
BASE_VERB:NAME:ThrottleTpi void reportCallsOnTerminal(String terminal, boolean flag): report (V)  | calls (N) -- on (P) EQUIV[terminal (N) , [ string (NI) - terminal (N) ]]	++ :: [ boolean (N) - flag (N) ] :: throttle (NM) tpi (N) 
SPECIAL:NAME:AbstractTable JavaTypeMapping getVersionMapping(): get (V)  | version (NM) mapping (N) 	++ :: java (NM) type (NM) mapping (N)  :: abstract (NM) table (N) 
SPECIAL:NAME:GrammarInfoImpl Class getRootElement(String namespaceUri, String localName): get (V)  | root (NM) element (NI) 	++ :: [ string (NI) - namespace (NM) uri (NI) ] :: [ string (NI) - local (NM) name (NI) ] :: class (NI)  :: grammar (NM) info (NM) impl (NI) 
BASE_VERB:CLAS:XMLFileWriter void close(): close (V)  | XML (NM) file (NM) writer (N) 	++
SPECIAL:NAME:AbstractSelectManyComponent String getMarginLeft(): get (V)  | margin (NM) left (N) 	++ :: string (NI)  :: abstract (NM) select (NM) many (DT) component (N) 
ENDS_WITH_ED:NAME:FLGEditToolBarColorButton_MouseAdapter void mousePressed(MouseEvent e): handle (V) | mouse (NM) pressed (N) 	++ :: [ mouse (NM) event (NI) - e (N) ] :: FLG (NM) edit (NM) tool (NM) bar (NM) color (NM) button (NM) mouse (NM) adapter (NI)  :: void (N) 
VOID_NP:NAME:Analysis void caseAIsMarkedPreCs(AIsMarkedPreCs node): handle (V) | case (NM) A (NM) is (NM) marked (NM) pre (NM) cs (N) 	++ :: [ A (NM) is (NM) marked (NM) pre (NM) cs (N) - node (NI) ] :: analysis (N)  :: void (N) 
SPECIAL:NAME:CJKFont static IntHashtable createMetric(String s): create (V)  | metric (N) 	++ :: [ string (NI) - s (N) ] :: int (NM) hashtable (N)  :: CJK (NM) font (N) 
BASE_VERB:NAME:SVNDeltaGenerator String sendDelta(String path, InputStream source, long sourceOffset, InputStream target, ISVNDeltaConsumer consumer, boolean computeChecksum): send (V)  | delta (N) 	++ :: [ string (NI) - path (NI) ] :: [ input (NM) stream (NI) - source (NI) ] :: [ long (N) - source (NM) offset (N) ] :: [ input (NM) stream (NI) - target (N) ] :: [ ISVN (NM) delta (NM) consumer (N) - consumer (N) ] :: [ boolean (N) - compute (NM) checksum (N) ] :: string (NI)  :: SVN (NM) delta (NM) generator (N) 
SPECIAL:NAME:AbstractStandardIcon void printHTMLMaxHeight(): print (V)  | HTML (NM) max (NM) height (N) 	++ :: abstract (NM) standard (NM) icon (N) 
CONSTRUCTOR:NAME:TextToken TextToken TextToken():  | text (NM) token (N) 	++
PREP:NAME:StateMachine String toString(): convert (V) | to (P) string (NI) 	++ :: state (NM) machine (N)  :: string (NI) 
ENDS_WITH_ED:NAME:void actionPerformed(ActionEvent evt): handle (V) | action (NM) performed (N) 	++ :: [ action (NM) event (NI) - evt (N) ] :: ANONYMOUS (N)  :: void (N) 
BASE_VERB:CLAS:XMLWriter static boolean indentBefore(String tag): indent (V)  | XML (NM) writer (N) -- before (P) [ string (NI) - tag (NI) ]	++ :: [ string (NI) - tag (NI) ] :: boolean (N) 
BASE_VERB:NAME:XMLDocumentFragmentScannerImpl void scanPIData(String target, XMLStringBuffer data): scan (V)  | EQUIV[PI (NM) data (NI) , [ XML (NM) string (NM) buffer (NI) - data (NI) ]]	++ :: [ string (NI) - target (N) ] :: XML (NM) document (NM) fragment (NM) scanner (NM) impl (NI) 
BASE_VERB:FORM:HashMap int hash(Object key): hash (V)  | [ object (NI) - key (NI) ]	++ :: hash (NM) map (N)  :: int (N) 
SPECIAL:NAME:StringUtils static String getBaseName(File aFile): get (V)  | base (NM) name (NI) 	++ :: [ file (NI) - a (NM) file (NI) ] :: string (NI)  :: string (NM) utils (N) 
BASE_VERB:FORM:Donna boolean mobilita(GameMotherClass gmc, char ogg, int a, int b, int c, int d): mobilita (V)  | [ game (NM) mother (NM) class (NI) - gmc (N) ]	++ :: [ char (N) - ogg (N) ] :: [ int (N) - a (N) ] :: [ int (N) - b (N) ] :: [ int (N) - c (N) ] :: [ int (N) - d (N) ] :: donna (N)  :: boolean (N) 
SPECIAL:NAME:DialogImplementation Rectangle getBounds(): get (V)  | bounds (N) 	++ :: rectangle (N)  :: dialog (NM) implementation (N) 
SPECIAL:NAME:InfoPlayer FrameRate getRate(): get (V)  | rate (N) 	++ :: frame (NM) rate (N)  :: info (NM) player (N) 
SPECIAL:NAME:MProjectTypePhase MProjectTypeTask getTasks(): get (V)  | tasks (N) 	++ :: M (NM) project (NM) type (NM) task (N)  :: M (NM) project (NM) type (NM) phase (N) 
SPECIAL:FORM:NoLegs void set(LegSecuritySubType value): set (V)  | [ leg (NM) security (NM) sub (NM) type (N) - value (NI) ]	++ :: no (DT) legs (N) 
SPECIAL:NAME:Utility InputStream createSOAPStreamFromRequestStream(InputStream req): create (V)  | SOAP (NM) stream (NI) -- from (P) request (NM) stream (NI) 	++ :: [ input (NM) stream (NI) - req (N) ] :: input (NM) stream (NI)  :: utility (N) 
SPECIAL:NAME:DOMSubTreeData Node getRoot(): get (V)  | root (N) 	++ :: node (NI)  :: DOM (NM) sub (NM) tree (NM) data (NI) 
SPECIAL:NAME:RuleBasedCollator static int getTag(int ce): get (V)  | tag (NI) 	++ :: [ int (N) - ce (N) ] :: int (N)  :: rule (NM) based (NM) collator (N) 
SPECIAL:NAME:EditRecordFieldData void setLabel(String sLabel): set (V)  | label (NI) 	++ :: [ string (NI) - s (NM) label (NI) ] :: edit (NM) record (NM) field (NM) data (NI) 
CONSTRUCTOR:NAME:Guitar Guitar Guitar(int fretboardType):  | guitar (N) 	++ :: [ int (N) - fretboard (NM) type (N) ]
SPECIAL:NAME:Action void setParameterSuper(String key, int line, String action_parameter, int parameter_types): set (V)  | parameter (NM) super (N) 	++ :: [ string (NI) - key (NI) ] :: [ int (N) - line (N) ] :: [ string (NI) - action (NM) parameter (N) ] :: [ int (N) - parameter (NM) types (N) ] :: action (N) 
SPECIAL:NAME:AbstractStandardGlobalCatalogAccountFactory List<StandardGlobalCatalogAccount> findEnabledByEmployeeID(String employeeID): find (V)  | enabled (N) -- by (P) EQUIV[employee (NM) ID (NI) , [ string (NI) - employee (NM) ID (NI) ]]	++ :: list (NM) standard (NM) global (NM) catalog (NM) account (N)  :: abstract (NM) standard (NM) global (NM) catalog (NM) account (NM) factory (N) 
BASE_VERB:NAME:InheritanceTypeImpl void serializeBody(XMLSerializer context): serialize (V)  | body (N) 	++ :: [ XML (NM) serializer (N) - context (N) ] :: inheritance (NM) type (NM) impl (NI) 
SPECIAL:NAME:Bit7Encoder boolean getQuoteSpecials(): get (V)  | quote (NM) specials (N) 	++ :: boolean (N)  :: bit (NM) 7 (NM) encoder (N) 
EVENT_PARAM:NAME:MdBuilderTreeDropListener void dragEnter(DropTargetDragEvent dtde): handle (V) | drag (NM) enter (N) 	++ :: [ drop (NM) target (NM) drag (NM) event (NI) - dtde (N) ] :: md (NM) builder (NM) tree (NM) drop (NM) listener (N)  :: void (N) 
SPECIAL:NAME:FindElementDialog void findNextAndCenter(): find (V)  | next (DT) and (NM) center (N) 	++ :: find (NM) element (NM) dialog (N) 
CONSTRUCTOR:NAME:PersistenceManager PersistenceManager PersistenceManager():  | persistence (NM) manager (N) 	++
SPECIAL:NAME:XmlString void addTag(String tagName, boolean value): add (V)  | EQUIV[tag (NI) , [ string (NI) - tag (NM) name (NI) ]]	++ :: [ boolean (N) - value (NI) ] :: xml (NM) string (NI) 
SPECIAL:NAME:GetOpt void addJavaSettingsTopic(): add (V)  | java (NM) settings (NM) topic (N) 	++ :: get (NM) opt (N) 
CONSTRUCTOR:NAME:ImmutableUserLayoutManagerWrapper ImmutableUserLayoutManagerWrapper ImmutableUserLayoutManagerWrapper(IUserLayoutManager manager):  | immutable (NM) user (NM) layout (NM) manager (NM) wrapper (NI) 	++ :: [ I (NM) user (NM) layout (NM) manager (N) - manager (N) ]
SPECIAL:NAME:XionParseException String getAdditionalMessage(): get (V)  | additional (NM) message (NI) 	++ :: string (NI)  :: xion (NM) parse (NM) exception (N) 
BASE_VERB:NAME:GSLVector static gsl_vector_complex_float gsl_vector_complex_float_calloc(Integer2 arg0): gsl (PRE) vector (V)  | complex (NM) float (NM) calloc (N) 	++ :: [ integer (NM) 2 (N) - arg (NM) 0 (N) ] :: gsl (NM) vector (NM) complex (NM) float (N)  :: GSL (NM) vector (N) 
CONSTRUCTOR:NAME:QuickViewManager QuickViewManager QuickViewManager(ShrimpProject project):  | quick (NM) view (NM) manager (N) 	++ :: [ shrimp (NM) project (N) - project (N) ]
SPECIAL:NAME:AbstractStandardContentType String getCommentEncoded(): get (V)  | comment (NM) encoded (N) 	++ :: string (NI)  :: abstract (NM) standard (NM) content (NM) type (N) 
CONSTRUCTOR:NAME:CreateTableTemplate CreateTableTemplate CreateTableTemplate(String dbDriver, String dbName, String user, String passwd, String tableNames, String className, String generationType, String baseClassName, ClassLoader classLoader):  | create (NM) table (NM) template (N) 	++ :: [ string (NI) - db (NM) driver (N) ] :: [ string (NI) - db (NM) name (NI) ] :: [ string (NI) - user (N) ] :: [ string (NI) - passwd (N) ] :: [ string (NI) - table (NM) names (N) ] :: [ string (NI) - class (NM) name (NI) ] :: [ string (NI) - generation (NM) type (N) ] :: [ string (NI) - base (NM) class (NM) name (NI) ] :: [ class (NM) loader (N) - class (NM) loader (N) ]
NOUN_PHRASE:NAME:Unmarshaller UnmarshallableObject owner(): get (V) | owner (N) 	++ :: unmarshaller (N)  :: unmarshallable (NM) object (NI) 
CONSTRUCTOR:NAME:Matrix4 Matrix4 Matrix4(float m, boolean rowMajor):  | matrix (NM) 4 (N) 	++ :: [ float (N) - m (N) ] :: [ boolean (N) - row (NM) major (N) ]
SPECIAL:NAME:Workbench Command getMinimizeFocusedThemeCommand(): get (V)  | minimize (NM) focused (NM) theme (NM) command (N) 	++ :: command (N)  :: workbench (N) 
BASE_VERB:CLAS:ActionThread void finish(): finish (V)  | action (NM) thread (N) 	++
NOUN_PHRASE:NAME:MMSHeaders int tokenForName(String name): get (V) | token (NM) for (NM) name (NI) 	++ :: [ string (NI) - name (NI) ] :: MMS (NM) headers (N)  :: int (N) 
SPECIAL:NAME:DefinitionLinkbase Set getDimensionTaxonomy(Concept dimensionElement): get (V)  | dimension (NM) taxonomy (N) 	++ :: [ concept (N) - dimension (NM) element (NI) ] :: set (N)  :: definition (NM) linkbase (N) 
SPECIAL:NAME:FixedURLWebRequestSource void setDestination(String destination): set (V)  | destination (N) 	++ :: [ string (NI) - destination (N) ] :: fixed (NM) URL (NM) web (NM) request (NM) source (NI) 
BASE_VERB:FORM:FabricCanvas void paint(Graphics theGraphics): paint (V)  | [ graphics (N) - the (DT) graphics (N) ]	++ :: fabric (NM) canvas (N) 
SPECIAL:NAME:Unix_Shortcut File getKdeBase(int userType): get (V)  | kde (NM) base (N) 	++ :: [ int (N) - user (NM) type (N) ] :: file (NI)  :: unix (NM) shortcut (N) 
SPECIAL:CLAS:Object doInTransaction(TransactionStatus status): do (VI)  | ANONYMOUS (N) -- in (P) transaction (N) 	++ :: [ transaction (NM) status (N) - status (N) ] :: object (NI) 
V_3P_IRR:NAME:NonblockingResolver static boolean isDataComplete(byte in): is (V)  | data (NM) complete (N) 	++ :: [ byte (N) - in (NI) ] :: boolean (N)  :: nonblocking (NM) resolver (N) 
VOID_NP:NAME:BeanContextSupport void childJustAddedHook(Object child, BCSChild bcsc): handle (V) | child (NM) just (NM) added (NM) hook (N) 	++ :: [ object (NI) - child (N) ] :: [ BCS (NM) child (N) - bcsc (N) ] :: bean (NM) context (NM) support (N)  :: void (N) 
NOUN_PHRASE:NAME:CheckerConfig static CheckerConfig instance(): get (V) | instance (NI) 	++ :: checker (NM) config (NI)  :: checker (NM) config (NI) 
SPECIAL:NAME:DualProgressBarDialog static void setBottomMessage(String message): set (V)  | bottom (NM) message (NI) 	++ :: [ string (NI) - message (NI) ] :: dual (NM) progress (NM) bar (NM) dialog (N) 
BASE_VERB:CLAS:WSPasswordCallbackHandler void clear(): clear (V)  | WS (NM) password (NM) callback (NM) handler (N) 	++
SPECIAL:NAME:Image void checkWidthAndHeight(int w, int h): check (VI)  | width (NM) and (NM) height (N) 	++ :: [ int (N) - w (N) ] :: [ int (N) - h (N) ] :: image (N) 
CONSTRUCTOR:NAME:PrintAction PrintAction PrintAction():  | print (NM) action (N) 	++
SPECIAL:NAME:SMTPJavamail String getFileSeparator(): get (V)  | file (NM) separator (N) 	++ :: string (NI)  :: SMTP (NM) javamail (N) 
ENDS_WITH_ED:NAME:void actionPerformed(ActionEvent e): handle (V) | action (NM) performed (N) 	++ :: [ action (NM) event (NI) - e (N) ] :: ANONYMOUS (N)  :: void (N) 
CONSTRUCTOR:NAME:SFNode SFNode SFNode(BaseNode node):  | SF (NM) node (NI) 	++ :: [ base (NM) node (NI) - node (NI) ]
SPECIAL:NAME:AGManager void setInputString(String s): set (V)  | input (NM) string (NI) 	++ :: [ string (NI) - s (N) ] :: AG (NM) manager (N) 
SPECIAL:NAME:CommandImpl void addSuperTypes(): add (V)  | super (NM) types (N) 	++ :: command (NM) impl (NI) 
SPECIAL:NAME:ColumnForm void setPersistenceManager(PersistenceManager persistenceManager): set (V)  | persistence (NM) manager (N) 	++ :: [ persistence (NM) manager (N) - persistence (NM) manager (N) ] :: column (NM) form (N) 
BASE_VERB:FORM:ANSICodes static String resetmode(int mode): resetmode (V)  | [ int (N) - mode (N) ]	++ :: ANSI (NM) codes (N)  :: string (NI) 
CONSTRUCTOR:NAME:VariableInstruction VariableInstruction VariableInstruction():  | variable (NM) instruction (N) 	++
SPECIAL:NAME:GridSwing Vector getData(): get (V)  | data (NI) 	++ :: vector (N)  :: grid (NM) swing (N) 
PREP:NAME:Option String toFIXML(String ident): convert (V) | to (P) FIXML (N) 	++ :: [ string (NI) - ident (N) ] :: option (N)  :: string (NI) 
SPECIAL:NAME:ObjectUtilsTests void testNullSafeHashCodeWithObjectBeingObjectArray(): test (VI)  | null (NM) safe (NM) hash (NM) code (NI) -- with (P) object (NM) being (NM) object (NM) array (N) 	++ :: object (NM) utils (NM) tests (N) 
BASE_VERB:CLAS:ProcessFinishedInterruptHandler void handleInterrupt(): handle (VI) interrupt (VI)  | process (NM) finished (NM) interrupt (NM) handler (N) 	++
SPECIAL:NAME:ArgumentNode int getCmdType(): get (V)  | cmd (NM) type (N) 	++ :: int (N)  :: argument (NM) node (NI) 
VOID_NP:NAME:GuitarXMLReader void characters(char buf, int offset, int len): handle (V) | characters (N) 	++ :: [ char (N) - buf (N) ] :: [ int (N) - offset (N) ] :: [ int (N) - len (N) ] :: guitar (NM) XML (NM) reader (N)  :: void (N) 
ENDS_WITH_ED:NAME:GroupEditorPanel void ObjectSelected(LdapObject obj): handle (V) | object (NM) selected (N) 	++ :: [ ldap (NM) object (NI) - obj (NI) ] :: group (NM) editor (NM) panel (N)  :: void (N) 
BASE_VERB:CLAS:BibtexEntryTest void pass(): pass (V)  | bibtex (NM) entry (NM) test (N) 	++
SPECIAL:NAME:ModelNotification String getService(): get (V)  | service (N) 	++ :: string (NI)  :: model (NM) notification (N) 
BASE_VERB:FORM:CompError void validate(Validator v): validate (VI)  | [ validator (N) - v (N) ]	++ :: comp (NM) error (N) 
SPECIAL:NAME:JirrJNI static int get_SShader_id(long jarg1): get (V)  | S (NM) shader (NM) id (NI) 	++ :: [ long (N) - jarg (NM) 1 (N) ] :: int (N)  :: jirr (NM) JNI (N) 
SPECIAL:FORM:Quati static void main(String args): main (V)  | [ string (NI) - args (N) ]	++ :: quati (N) 
CONSTRUCTOR:NAME:VariableType VariableType VariableType():  | variable (NM) type (N) 	++
SPECIAL:NAME:Module BaseModule getOptBaseModuleList(int i): get (V)  | opt (NM) base (NM) module (NM) list (N) 	++ :: [ int (N) - i (N) ] :: base (NM) module (N)  :: module (N) 
NOUN_PHRASE:NAME:Factory static List newInstance(): get (V) | new (NM) instance (NI) 	++ :: factory (N)  :: list (N) 
ENDS_WITH_ED:NAME:void actionPerformed(ActionEvent e): handle (V) | action (NM) performed (N) 	++ :: [ action (NM) event (NI) - e (N) ] :: ANONYMOUS (N)  :: void (N) 
SPECIAL:NAME:Script void setTimeout(String timeout): set (V)  | timeout (N) 	++ :: [ string (NI) - timeout (N) ] :: script (N) 
SPECIAL:NAME:ListView void initComponents(): init (V)  | components (N) 	++ :: list (NM) view (NI) 
V_3P_IRR:NAME:OPT_BC2IR static boolean hasLessConservativeGuard(OPT_RegisterOperand rop1, OPT_RegisterOperand rop2): has (V)  | less (DT) conservative (NM) guard (N) 	++ :: [ OPT (NM) register (NM) operand (N) - rop (NM) 1 (N) ] :: [ OPT (NM) register (NM) operand (N) - rop (NM) 2 (N) ] :: boolean (N)  :: OPT (NM) BC (NM) 2 (NM) IR (N) 
BASE_VERB:NAME:AbstractQueryHandler void updateBeanFieldsOnly(Persistable beanToUpdate): update (V)  | bean (NM) fields (NM) only (N) 	++ :: [ persistable (N) - bean (NM) to (NM) update (N) ] :: abstract (NM) query (NM) handler (N) 
PREP:NAME:BorderLabel void onPaint(Graphics g): handle (V) | on (NM) paint (N) 	++ :: [ graphics (N) - g (N) ] :: border (NM) label (NI)  :: void (N) 
SPECIAL:FORM:PersistenceManagerServer void delete(Persistable obj): delete (V)  | [ persistable (N) - obj (NI) ]	++ :: persistence (NM) manager (NM) server (N) 
BASE_VERB:NAME:TagsAssetService TagsAsset updateAsset(String className, long classPK, String entryNames, Date startDate, Date endDate, Date publishDate, Date expirationDate, String mimeType, String title, String description, String summary, String url, int height, int width): update (V)  | asset (N) 	++ :: [ string (NI) - class (NM) name (NI) ] :: [ long (N) - class (NM) PK (NI) ] :: [ string (NI) - entry (NM) names (N) ] :: [ date (N) - start (NM) date (N) ] :: [ date (N) - end (NM) date (N) ] :: [ date (N) - publish (NM) date (N) ] :: [ date (N) - expiration (NM) date (N) ] :: [ string (NI) - mime (NM) type (N) ] :: [ string (NI) - title (N) ] :: [ string (NI) - description (NI) ] :: [ string (NI) - summary (N) ] :: [ string (NI) - url (NI) ] :: [ int (N) - height (N) ] :: [ int (N) - width (N) ] :: tags (NM) asset (N)  :: tags (NM) asset (NM) service (N) 
SPECIAL:NAME:BeanContextSupport void removeBeanContextMembershipListener(BeanContextMembershipListener bcml): remove (V)  | EQUIV[bean (NM) context (NM) membership (NM) listener (N) , [ bean (NM) context (NM) membership (NM) listener (N) - bcml (N) ]]	++ :: bean (NM) context (NM) support (N) 
SPECIAL:FORM:DecVariableValueTest static void main(String args): main (V)  | [ string (NI) - args (N) ]	++ :: dec (NM) variable (NM) value (NM) test (N) 
SPECIAL:NAME:DeleteBatchQuery Object getValue(int dbAttributeIndex): get (V)  | value (NI) 	++ :: [ int (N) - db (NM) attribute (NM) index (NI) ] :: object (NI)  :: delete (NM) batch (NM) query (N) 
CONSTRUCTOR:NAME:TimestampCellRenderer TimestampCellRenderer TimestampCellRenderer(boolean withTime):  | timestamp (NM) cell (NM) renderer (N) 	++ :: [ boolean (N) - with (NM) time (N) ]
SPECIAL:FORM:FixEventFile static void main(String args): main (V)  | [ string (NI) - args (N) ]	++ :: fix (NM) event (NM) file (NI) 
NOUN_PHRASE:NAME:jTPCCTools static long nonUniformRandom(long type, long x, long min, long max): get (V) | non (PRE) uniform (NM) random (N) 	++ :: [ long (N) - type (N) ] :: [ long (N) - x (N) ] :: [ long (N) - min (N) ] :: [ long (N) - max (N) ] :: j (NM) TPCC (NM) tools (N)  :: long (N) 
SPECIAL:FORM:NoOrders void set(SolicitedFlag value): set (V)  | [ solicited (NM) flag (N) - value (NI) ]	++ :: no (DT) orders (N) 
SPECIAL:NAME:RMIClientConnectorImpl void setAttributes(ObjectName pName, AttributeList pAttributes): set (V)  | attributes (N) 	++ :: [ object (NM) name (NI) - p (NM) name (NI) ] :: [ attribute (NM) list (N) - p (NM) attributes (N) ] :: RMI (NM) client (NM) connector (NM) impl (NI) 
PREP:NAME:Angle double toRadiant(): convert (V) | to (P) radiant (N) 	++ :: angle (N)  :: double (N) 
BASE_VERB:NAME:MemoryDirContext Object lookupLink(Name name): lookup (V)  | link (N) 	++ :: [ name (NI) - name (NI) ] :: object (NI)  :: memory (NM) dir (NM) context (N) 
SPECIAL:NAME:DocPrElt KinsokuProperty addNewNoLineBreaksBefore(): add (V)  | new (NM) no (DT) line (NM) breaks (N) before (NM) 	++ :: kinsoku (NM) property (N)  :: doc (NM) pr (NM) elt (NI) 
BASE_VERB:FORM:PolyFn Object invoke(Object arg1, Object arg2, Object arg3, Object arg4, Object arg5, Object arg6, Object arg7, Object arg8, Object arg9, Object arg10, Object arg11, Object arg12, Object arg13, Object arg14, Object arg15, Object arg16, Object arg17, Object arg18, Object arg19): invoke (VI)  | [ object (NI) - arg (NM) 1 (N) ]	++ :: [ object (NI) - arg (NM) 2 (N) ] :: [ object (NI) - arg (NM) 3 (N) ] :: [ object (NI) - arg (NM) 4 (N) ] :: [ object (NI) - arg (NM) 5 (N) ] :: [ object (NI) - arg (NM) 6 (N) ] :: [ object (NI) - arg (NM) 7 (N) ] :: [ object (NI) - arg (NM) 8 (N) ] :: [ object (NI) - arg (NM) 9 (N) ] :: [ object (NI) - arg (NM) 10 (N) ] :: [ object (NI) - arg (NM) 11 (N) ] :: [ object (NI) - arg (NM) 12 (N) ] :: [ object (NI) - arg (NM) 13 (N) ] :: [ object (NI) - arg (NM) 14 (N) ] :: [ object (NI) - arg (NM) 15 (N) ] :: [ object (NI) - arg (NM) 16 (N) ] :: [ object (NI) - arg (NM) 17 (N) ] :: [ object (NI) - arg (NM) 18 (N) ] :: [ object (NI) - arg (NM) 19 (N) ] :: poly (NM) fn (N)  :: object (NI) 
VOID_NP:NAME:void caseVoidType(VoidType t): handle (V) | case (NM) void (NM) type (N) 	++ :: [ void (NM) type (N) - t (N) ] :: ANONYMOUS (N)  :: void (N) 
SPECIAL:NAME:PaintManager int getMaxRotation(): get (V)  | max (NM) rotation (N) 	++ :: int (N)  :: paint (NM) manager (N) 
SPECIAL:NAME:SubjectImpl DocumentDeclaration createRawValidator(): create (V)  | raw (NM) validator (N) 	++ :: document (NM) declaration (NI)  :: subject (NM) impl (NI) 
V_3PS:FORM:SwingSystemTray boolean equals(Object o): equals (V)  | [ object (NI) - o (N) ]	++ :: swing (NM) system (NM) tray (N)  :: boolean (N) 
SPECIAL:NAME:ObjectFactory KeyField createKeyField(): create (V)  | key (NM) field (N) 	++ :: key (NM) field (N)  :: object (NM) factory (N) 
BASE_VERB:NAME:RunControl void sendErrorMessage(Exception exc): send (V)  | error (NM) message (NI) 	++ :: [ exception (N) - exc (N) ] :: run (NM) control (N) 
SPECIAL:FORM:DaemonServlet void init(ServletConfig config): init (V)  | [ servlet (NM) config (NI) - config (NI) ]	++ :: daemon (NM) servlet (N) 
SPECIAL:NAME:TextLabel NType getNTypeImpl(): get (V)  | N (NM) type (NM) impl (NI) 	++ :: N (NM) type (N)  :: text (NM) label (NI) 
SPECIAL:CLAS:FBFirmenstamm String getForKto7Sa(long vishandle): get (V)  | FB (NM) firmenstamm (N) -- for (P) kto (NM) 7 (D) sa (N) 	++ :: [ long (N) - vishandle (N) ] :: string (NI) 
SPECIAL:NAME:JmxKernelAbstraction void setMbeanServer(MBeanServer server): set (V)  | mbean (NM) server (N) 	++ :: [ M (NM) bean (NM) server (N) - server (N) ] :: jmx (NM) kernel (NM) abstraction (N) 
SPECIAL:NAME:CayenneContextGraphAction void setArcChangeInProcess(boolean flag): set (V)  | arc (NM) change (N) -- in (P) process (N) 	++ :: [ boolean (N) - flag (N) ] :: cayenne (NM) context (NM) graph (NM) action (N) 
SPECIAL:NAME:ProcessDestroyer void addShutdownHook(): add (V)  | shutdown (NM) hook (N) 	++ :: process (NM) destroyer (N) 
SPECIAL:NAME:Analysis void setDrillthroughDatasource(String drillthroughDatasource): set (V)  | drillthrough (NM) datasource (N) 	++ :: [ string (NI) - drillthrough (NM) datasource (N) ] :: analysis (N) 
CONSTRUCTOR:NAME:HTMLformatFrame_jbZwischenablage5Einf_actionAdapter HTMLformatFrame_jbZwischenablage5Einf_actionAdapter HTMLformatFrame_jbZwischenablage5Einf_actionAdapter(HTMLformatFrame adaptee):  | HTM (NM) lformat (NM) frame (NM) jb (NM) zwischenablage (NM) 5 (NM) einf (NM) action (NM) adapter (NI) 	++ :: [ HTM (NM) lformat (NM) frame (N) - adaptee (N) ]
BASE_VERB:NAME:AddToClasspathChange boolean entryAlreadyExists(): entry (V)  | already (NM) exists (N) 	++ :: boolean (N)  :: add (NM) to (NM) classpath (NM) change (N) 
SPECIAL:NAME:Directory void setDouble(int tagType, double value): set (V)  | double (N) 	++ :: [ int (N) - tag (NM) type (N) ] :: [ double (N) - value (NI) ] :: directory (N) 
SPECIAL:NAME:Database Class getTableClassConfigured(): get (V)  | table (NM) class (NM) configured (N) 	++ :: class (NI)  :: database (N) 
CONSTRUCTOR:NAME:EntityTableColumn EntityTableColumn EntityTableColumn(String columnName, Class columnClass, int width, TableCellEditor editor, TableCellRenderer renderer, int attrs):  | entity (NM) table (NM) column (N) 	++ :: [ string (NI) - column (NM) name (NI) ] :: [ class (NI) - column (NM) class (NI) ] :: [ int (N) - width (N) ] :: [ table (NM) cell (NM) editor (N) - editor (N) ] :: [ table (NM) cell (NM) renderer (N) - renderer (N) ] :: [ int (N) - attrs (N) ]
CONSTRUCTOR:NAME:JNumericTextField JNumericTextField JNumericTextField(Number min, Number max, Number initial):  | J (NM) numeric (NM) text (NM) field (N) 	++ :: [ number (NI) - min (N) ] :: [ number (NI) - max (N) ] :: [ number (NI) - initial (N) ]
SPECIAL:NAME:ArbeitnehmerProtokoll void setSzAlt(String s): set (V)  | sz (NM) alt (N) 	++ :: [ string (NI) - s (N) ] :: arbeitnehmer (NM) protokoll (N) 
SPECIAL:NAME:Sinavi2TypeBief int getGareEnAmont(): get (V)  | gare (NM) en (NM) amont (N) 	++ :: int (N)  :: sinavi (NM) 2 (NM) type (NM) bief (N) 
SPECIAL:NAME:GrpCorrectMultipleChoiceDescriptor String getNameSpaceURI(): get (V)  | name (NM) space (NM) URI (NI) 	++ :: string (NI)  :: grp (NM) correct (NM) multiple (NM) choice (NM) descriptor (NI) 
PREP:NAME:URI String toString(): convert (V) | to (P) string (NI) 	++ :: URI (NI)  :: string (NI) 
SPECIAL:NAME:HARMIServerImpl Object createHAStub(LoadBalancePolicy policy): create (V)  | HA (NM) stub (N) 	++ :: [ load (NM) balance (NM) policy (N) - policy (N) ] :: object (NI)  :: HARMI (NM) server (NM) impl (NI) 
BASE_VERB:NAME:Service String extractSession(String pathInfo): extract (V)  | session (N) 	++ :: [ string (NI) - path (NM) info (NI) ] :: string (NI)  :: service (N) 
SPECIAL:NAME:HistoryList void addHistory(Environment CurrentProj, long ReadSnapShot, Field ThisField, User CurrentUser, int Action, long DataRow, String Reason, String OldValue, long OldTextId, String OldFilePath, long OldFileSize, String NewValue, long NewTextId, String NewFilePath, long NewFileSize): add (V)  | history (N) 	++ :: [ environment (N) - current (NM) proj (N) ] :: [ long (N) - read (NM) snap (NM) shot (N) ] :: [ field (N) - this (PR) field (N) ] :: [ user (N) - current (NM) user (N) ] :: [ int (N) - action (N) ] :: [ long (N) - data (NM) row (N) ] :: [ string (NI) - reason (N) ] :: [ string (NI) - old (NM) value (NI) ] :: [ long (N) - old (NM) text (NM) id (NI) ] :: [ string (NI) - old (NM) file (NM) path (NI) ] :: [ long (N) - old (NM) file (NM) size (N) ] :: [ string (NI) - new (NM) value (NI) ] :: [ long (N) - new (NM) text (NM) id (NI) ] :: [ string (NI) - new (NM) file (NM) path (NI) ] :: [ long (N) - new (NM) file (NM) size (N) ] :: history (NM) list (N) 
SPECIAL:NAME:NoteDBVO void setRelateEntityVO(EntityVO relateEntityVO): set (V)  | relate (NM) entity (NM) VO (NI) 	++ :: [ entity (NM) VO (NI) - relate (NM) entity (NM) VO (NI) ] :: note (NM) DBVO (N) 
SPECIAL:NAME:FJK3S String getClassName(): get (V)  | class (NM) name (NI) 	++ :: string (NI)  :: FJK (NM) 3 (NM) S (N) 
SPECIAL:NAME:AbstractServer String getRegistrationPage(): get (V)  | registration (NM) page (N) 	++ :: string (NI)  :: abstract (NM) server (N) 
SPECIAL:CLAS:ExceptionDef int compareTo(Object other): compare (V)  | exception (NM) def (NI) -- to (P) [ object (NI) - other (DT) ]	++ :: [ object (NI) - other (DT) ] :: int (N) 
SPECIAL:NAME:Database String getDate(): get (V)  | date (N) 	++ :: string (NI)  :: database (N) 
SPECIAL:NAME:Parser QName getQNameSafe(String stringRep): get (V)  | Q (NM) name (NM) safe (N) 	++ :: [ string (NI) - string (NM) rep (N) ] :: Q (NM) name (NI)  :: parser (N) 
BASE_VERB:NAME:CargoAndTerrainParser void processingInstruction(String target, String data): processing (V)  | instruction (N) 	++ :: [ string (NI) - target (N) ] :: [ string (NI) - data (NI) ] :: cargo (NM) and (NM) terrain (NM) parser (N) 
SPECIAL:NAME:ImageView Icon getLoadingImageIcon(): get (V)  | loading (NM) image (NM) icon (N) 	++ :: icon (N)  :: image (NM) view (NI) 
SPECIAL:NAME:ErrorLogManager static void setInstance(ErrorLogManager instance): set (V)  | instance (NI) 	++ :: [ error (NM) log (NM) manager (N) - instance (NI) ] :: error (NM) log (NM) manager (N) 
SPECIAL:CLAS:MainQtThread void run(): run (VI)  | main (NM) qt (NM) thread (N) 	++
SPECIAL:NAME:ObjectPool void setMinSize(int size): set (V)  | min (NM) size (N) 	++ :: [ int (N) - size (N) ] :: object (NM) pool (N) 
SPECIAL:NAME:JFrmMainFrame String getProperty(String propertyName, String defaultValue): get (V)  | EQUIV[property (N) , [ string (NI) - property (NM) name (NI) ]]	++ :: [ string (NI) - default (NM) value (NI) ] :: string (NI)  :: J (NM) frm (NM) main (NM) frame (N) 
V_3P_IRR:NAME:DebianMirror boolean isDebianPackageList(String path): is (V)  | debian (NM) package (NM) list (N) 	++ :: [ string (NI) - path (NI) ] :: boolean (N)  :: debian (NM) mirror (N) 
SPECIAL:NAME:Table int getHeightUnits(): get (V)  | height (NM) units (N) 	++ :: int (N)  :: table (N) 
SPECIAL:NAME:DBIdentity String getID(): get (V)  | ID (NI) 	++ :: string (NI)  :: DB (NM) identity (N) 
V_3P_IRR:NAME:DacsCurrentCredentials boolean isSetCommonStatus(): is (V)  | set (NM) common (NM) status (N) 	++ :: boolean (N)  :: dacs (NM) current (NM) credentials (N) 
VOID_NP:NAME:GenAlbumAlbumAccesslistBean void userServiceEventImplementation(int eventType, IUserBean iub): handle (V) | user (NM) service (NM) event (NM) implementation (N) 	++ :: [ int (N) - event (NM) type (N) ] :: [ I (NM) user (NM) bean (NI) - iub (N) ] :: gen (NM) album (NM) album (NM) accesslist (NM) bean (NI)  :: void (N) 
SPECIAL:NAME:AbstractShortList int copyNext(int index, ShortIterator source, int remaining): copy (V)  | next (DT) 	++ :: [ int (N) - index (NI) ] :: [ short (NM) iterator (N) - source (NI) ] :: [ int (N) - remaining (N) ] :: int (N)  :: abstract (NM) short (NM) list (N) 
PREP:NAME:assemble void onDoubleClick(UOplayer pl): handle (V) | on (NM) double (NM) click (N) 	++ :: [ U (NM) oplayer (N) - pl (N) ] :: assemble (N)  :: void (N) 
CONSTRUCTOR:NAME:IntKeyCharChainedHashMap IntKeyCharChainedHashMap IntKeyCharChainedHashMap(int capacity, double loadFactor, int growthChunk):  | int (NM) key (NM) char (NM) chained (NM) hash (NM) map (N) 	++ :: [ int (N) - capacity (N) ] :: [ double (N) - load (NM) factor (N) ] :: [ int (N) - growth (NM) chunk (N) ]
BASE_VERB:NAME:NavigationContext void notifyPage(AttributeContainer container, String url): notify (VI)  | page (N) 	++ :: [ attribute (NM) container (NI) - container (NI) ] :: [ string (NI) - url (NI) ] :: navigation (NM) context (N) 
SPECIAL:NAME:ExpressionMatrix List<String> getSelectedStringIDs(): get (V)  | selected (NM) string (NM) I (NM) ds (N) 	++ :: list (NM) string (NI)  :: expression (NM) matrix (N) 
SPECIAL:NAME:FSL_FlexibleLineBorder static FSL_FlexibleLineBorder createRightLineBorder(): create (V)  | right (NM) line (NM) border (N) 	++ :: FSL (NM) flexible (NM) line (NM) border (N)  :: FSL (NM) flexible (NM) line (NM) border (N) 
SPECIAL:NAME:SSTimeFieldBeanInfo int getDefaultEventIndex(): get (V)  | default (NM) event (NM) index (NI) 	++ :: int (N)  :: SS (NM) time (NM) field (NM) bean (NM) info (NI) 
CONSTRUCTOR:NAME:LogdocImpl LogdocImpl LogdocImpl(APIImpl api):  | logdoc (NM) impl (NI) 	++ :: [ API (NM) impl (NI) - api (N) ]
SPECIAL:NAME:ScalarTypeFloat Class<?> getType(): get (V)  | type (N) 	++ :: class (NI)  :: scalar (NM) type (NM) float (N) 
SPECIAL:FORM:void print(double d): print (V)  | [ double (N) - d (N) ]	++ :: ANONYMOUS (N) 
SPECIAL:NAME:RepeatSimpleTag void doTag(): do (VI)  | tag (NI) 	++ :: repeat (NM) simple (NM) tag (NI) 
SPECIAL:NAME:gsl_prec_root5_eps void set1(long address, int n0, double data): set (V)  | 1 (D) 	++ :: [ long (N) - address (NI) ] :: [ int (N) - n (NM) 0 (N) ] :: [ double (N) - data (NI) ] :: gsl (NM) prec (NM) root (NM) 5 (NM) eps (N) 
SPECIAL:NAME:TextActionHandler void setPasteAction(IAction action): set (V)  | paste (NM) action (N) 	++ :: [ I (NM) action (N) - action (N) ] :: text (NM) action (NM) handler (N) 
SPECIAL:NAME:JabbaDefault String getName(): get (V)  | name (NI) 	++ :: string (NI)  :: jabba (NM) default (N) 
SPECIAL:NAME:Jix void doZoomNormalCommand(): do (VI)  | zoom (NM) normal (NM) command (N) 	++ :: jix (N) 
BASE_VERB:FORM:StyleMap void put(ExcelCellStyle ecs, HSSFCellStyle hcs): put (V)  | [ excel (NM) cell (NM) style (N) - ecs (N) ]	++ :: [ HSSF (NM) cell (NM) style (N) - hcs (N) ] :: style (NM) map (N) 
SPECIAL:CLAS:EditNodeAction void run(): run (VI)  | edit (NM) node (NM) action (N) 	++
SPECIAL:NAME:TableCell void setGridLocation(int r, int c): set (V)  | grid (NM) location (NI) 	++ :: [ int (N) - r (N) ] :: [ int (N) - c (N) ] :: table (NM) cell (N) 
V_3P_IRR:NAME:PackagesGroup boolean isComplete(): is (V)  | complete (N) 	++ :: boolean (N)  :: packages (NM) group (N) 
SPECIAL:NAME:DataDictonaryTestErrCheck void testDateValidation(): test (VI)  | date (NM) validation (N) 	++ :: data (NM) dictonary (NM) test (NM) err (NM) check (N) 
CONSTRUCTOR:NAME:PBKDF2Params PBKDF2Params PBKDF2Params(ASN1Sequence seq):  | PBKDF (NM) 2 (NM) params (N) 	++ :: [ ASN (NM) 1 (NM) sequence (N) - seq (N) ]
SPECIAL:NAME:e_StdOverloaded_r$star$semicolon$$desc void push_a_idx(CleanVM vm, Object data, int idx): push (V)  | EQUIV[a (NM) idx (N) , [ int (N) - idx (N) ]]	++ :: [ clean (NM) VM (N) - vm (N) ] :: [ object (NI) - data (NI) ] :: e (NM) std (NM) overloaded (NM) r (NM) star (NM) semicolon (NM) desc (NI) 
BASE_VERB:FORM:URLStringParser Object parse(String arg): parse (V)  | [ string (NI) - arg (N) ]	++ :: URL (NM) string (NM) parser (N)  :: object (NI) 
ENDS_WITH_ED:NAME:FrameImpl void unsetDisabled(): handle (V) | unset (NM) disabled (N) 	++ :: frame (NM) impl (NI)  :: void (N) 
SPECIAL:NAME:StaticLine static VisualAttributes getClassDefaultAttributes(int variant): get (V)  | class (NM) default (NM) attributes (N) 	++ :: [ int (N) - variant (N) ] :: visual (NM) attributes (N)  :: static (NM) line (N) 
SPECIAL:NAME:GUI JButton getJbBorrarC(): get (V)  | jb (NM) borrar (NM) C (N) 	++ :: J (NM) button (N)  :: GUI (N) 
BASE_VERB:NAME:RodsNumberAxis void selectVerticalAutoTickUnit(Graphics2D g2, Rectangle2D dataArea, RectangleEdge edge): select (V)  | vertical (NM) auto (NM) tick (NM) unit (N) 	++ :: [ graphics (NM) 2 (NM) D (N) - g (NM) 2 (N) ] :: [ rectangle (NM) 2 (NM) D (N) - data (NM) area (N) ] :: [ rectangle (NM) edge (N) - edge (N) ] :: rods (NM) number (NM) axis (N) 
SPECIAL:NAME:TransactionUtil static void setTransactionBeginStack(Exception newExc): set (V)  | transaction (NM) begin (NM) stack (N) 	++ :: [ exception (N) - new (NM) exc (N) ] :: transaction (NM) util (N) 
SPECIAL:NAME:IPhpScriptContext HttpProxy getContinuation(): get (V)  | continuation (N) 	++ :: http (NM) proxy (NI)  :: I (NM) php (NM) script (NM) context (N) 
SPECIAL:NAME:Confirmation Currency getCurrency(): get (V)  | currency (N) 	++ :: currency (N)  :: confirmation (N) 
SPECIAL:NAME:BWAFinanzbericht String getKtoSac15Nr(long vishandle): get (V)  | kto (NM) sac (NM) 15 (D) nr (N) 	++ :: [ long (N) - vishandle (N) ] :: string (NI)  :: BWA (NM) finanzbericht (N) 
CONSTRUCTOR:NAME:SessionMetaData SessionMetaData SessionMetaData(ApplicationMetaData app):  | session (NM) meta (NM) data (NI) 	++ :: [ application (NM) meta (NM) data (NI) - app (N) ]
SPECIAL:CLAS:DimensionsRecord Object clone(): clone (V)  | dimensions (NM) record (N) 	++ :: object (NI) 
SPECIAL:NAME:SDDValidationInfo static String getAttrRegEx(Object sddTypeObj): get (V)  | attr (NM) reg (NM) ex (N) 	++ :: [ object (NI) - sdd (NM) type (NM) obj (NI) ] :: string (NI)  :: SDD (NM) validation (NM) info (NI) 
SPECIAL:CLAS:SenderThread void run(): run (VI)  | sender (NM) thread (N) 	++
BASE_VERB:NAME:WfProcessMgrImpl void buildInitialContext(): build (V)  | initial (NM) context (N) 	++ :: wf (NM) process (NM) mgr (NM) impl (NI) 
SPECIAL:NAME:HumanView HumanPlayer getHumanPlayer(): get (V)  | human (NM) player (N) 	++ :: human (NM) player (N)  :: human (NM) view (NI) 
SPECIAL:NAME:_dup List<StackElement> getPoppedElements(DecompilationContext dc): get (V)  | popped (NM) elements (N) 	++ :: [ decompilation (NM) context (N) - dc (N) ] :: list (NM) stack (NM) element (NI)  :: dup (N) 
SPECIAL:NAME:ReportPrintCanvas void printPage(Graphics g): print (V)  | page (N) 	++ :: [ graphics (N) - g (N) ] :: report (NM) print (NM) canvas (N) 
SPECIAL:NAME:ExternalClass IClass getInnerClasses(): get (V)  | inner (NM) classes (N) 	++ :: I (NM) class (NI)  :: external (NM) class (NI) 
SPECIAL:NAME:RedirectJSPBean void setQueryParameter(String queryParameter): set (V)  | query (NM) parameter (N) 	++ :: [ string (NI) - query (NM) parameter (N) ] :: redirect (NM) JSP (NM) bean (NI) 
SPECIAL:NAME:SwingWorker void setValue(Object x): set (V)  | value (NI) 	++ :: [ object (NI) - x (N) ] :: swing (NM) worker (N) 
SPECIAL:NAME:VirtualEnvironmentsFinder Map getBreakdown(VirtualEnvironmentsBreakdownType type, VirtualEnvironmentsFilterData filter): get (V)  | breakdown (N) 	++ :: [ virtual (NM) environments (NM) breakdown (NM) type (N) - type (N) ] :: [ virtual (NM) environments (NM) filter (NM) data (NI) - filter (N) ] :: map (N)  :: virtual (NM) environments (NM) finder (N) 
BASE_VERB:NAME:JDBCDataStore TModelInfo fetchTModelInfo(String tModelKey): fetch (VI)  | T (NM) model (NM) info (NI) 	++ :: [ string (NI) - t (NM) model (NM) key (NI) ] :: T (NM) model (NM) info (NI)  :: JDBC (NM) data (NM) store (N) 
SPECIAL:NAME:LimeXMLReplyCollection void loadFinished(): load (V)  | finished (N) 	++ :: lime (NM) XML (NM) reply (NM) collection (N) 
V_MODAL:NAME:IntLiteral boolean mayRepresentMIN_VALUE(): may (VI) represent (V)  | MIN (NM) VALUE (NI) 	++ :: boolean (N)  :: int (NM) literal (N) 
SPECIAL:FORM:Main void load(String fname): load (V)  | [ string (NI) - fname (N) ]	++ :: main (N) 
BASE_VERB:NAME:Path static Element resolveOne(ElementSet rootElements, Path p): resolve (V)  | one (N) 	++ :: [ element (NM) set (N) - root (NM) elements (N) ] :: [ path (NI) - p (NI) ] :: element (NI)  :: path (NI) 
CONSTRUCTOR:NAME:UserController UserController UserController():  | user (NM) controller (N) 	++
V_3P_IRR:NAME:RelationalOperator boolean isGreater(int val): is (V)  | greater (N) 	++ :: [ int (N) - val (NI) ] :: boolean (N)  :: relational (NM) operator (N) 
SPECIAL:NAME:XAbstractDataSource void setLogWriter(PrintWriter out): set (V)  | log (NM) writer (N) 	++ :: [ print (NM) writer (N) - out (N) ] :: X (NM) abstract (NM) data (NM) source (NI) 
BASE_VERB:NAME:ClassManager String accessModifiersAsShouldBe(IMethodInfo oldmth, IMethodInfo newmth): access (V)  | modifiers (N) -- as (P) should (NM) be (N) 	++ :: [ I (NM) method (NM) info (NI) - oldmth (N) ] :: [ I (NM) method (NM) info (NI) - newmth (N) ] :: string (NI)  :: class (NM) manager (N) 
SPECIAL:NAME:CenturionMovementRound int getRound(): get (V)  | round (N) 	++ :: int (N)  :: centurion (NM) movement (NM) round (N) 
BASE_VERB:NAME:Document boolean stopLocalKernel(boolean closingApp, boolean preserveWindows): stop (VI)  | local (NM) kernel (N) 	++ :: [ boolean (N) - closing (NM) app (N) ] :: [ boolean (N) - preserve (NM) windows (N) ] :: [ boolean (N) - closing (NM) app (N) ] :: [ boolean (N) - preserve (NM) windows (N) ] :: boolean (N)  :: document (NI) 
BASE_VERB:FORM:JIFileSystemType JIFileSystem format(Device device, Object specificOptions): format (V)  | [ device (N) - device (N) ]	++ :: [ object (NI) - specific (NM) options (N) ] :: JI (NM) file (NM) system (NM) type (N)  :: JI (NM) file (NM) system (N) 
SPECIAL:NAME:PolygonSprite void setColor(Color color): set (V)  | color (N) 	++ :: [ color (N) - color (N) ] :: polygon (NM) sprite (N) 
BASE_VERB:NAME:SingleImplementationInliner void visitLocalVariableTypeInfo(Clazz clazz, Method method, CodeAttribute codeAttribute, LocalVariableTypeInfo localVariableTypeInfo): visit (V)  | EQUIV[local (NM) variable (NM) type (NM) info (NI) , [ local (NM) variable (NM) type (NM) info (NI) - local (NM) variable (NM) type (NM) info (NI) ]]	++ :: [ clazz (N) - clazz (N) ] :: [ method (N) - method (N) ] :: [ code (NM) attribute (N) - code (NM) attribute (N) ] :: single (NM) implementation (NM) inliner (N) 
CONSTRUCTOR:NAME:ThornTypeException ThornTypeException ThornTypeException(String description):  | thorn (NM) type (NM) exception (N) 	++ :: [ string (NI) - description (NI) ]
SPECIAL:NAME:LogElement Object getPropertyValue(Object propName): get (V)  | property (NM) value (NI) 	++ :: [ object (NI) - prop (NM) name (NI) ] :: object (NI)  :: log (NM) element (NI) 
BASE_VERB:NAME:SelectionKey SelectionKey interestOps(int ops): interest (V)  | EQUIV[ops (N) , [ int (N) - ops (N) ]]	++ :: selection (NM) key (NI)  :: selection (NM) key (NI) 
CONSTRUCTOR:NAME:Triple Triple Triple():  | triple (N) 	++
SPECIAL:NAME:Point3VectorTest void testGetXYZAxis3(): test (VI) get (V)  | XYZ (NM) axis (N) 3 (D) 	++ :: point (NM) 3 (NM) vector (NM) test (N) 
SPECIAL:NAME:AbstractCrawlerImpl void setMaximumPages(int max): set (V)  | maximum (NM) pages (N) 	++ :: [ int (N) - max (N) ] :: abstract (NM) crawler (NM) impl (NI) 
BASE_VERB:NAME:Prayer_AnimateDead int abstractQuality(): abstract (V)  | quality (N) 	++ :: int (N)  :: prayer (NM) animate (NM) dead (N) 
BASE_VERB:NAME:NewTreeModel void logFiniteDistribution(int indent, FiniteDistribution leaf): log (V)  | EQUIV[finite (NM) distribution (N) , [ finite (NM) distribution (N) - leaf (N) ]]	++ :: [ int (N) - indent (N) ] :: new (NM) tree (NM) model (NI) 
BASE_VERB:NAME:SegmentMerger int mergeFields(): merge (V)  | fields (N) 	++ :: int (N)  :: segment (NM) merger (N) 
SPECIAL:NAME:CSS2Properties void setLetterSpacing(String letterSpacing): set (V)  | letter (NM) spacing (N) 	++ :: [ string (NI) - letter (NM) spacing (N) ] :: CSS (NM) 2 (NM) properties (N) 
SPECIAL:NAME:Storage void deleteObject(OID oid): delete (V)  | object (NI) 	++ :: [ OID (N) - oid (N) ] :: storage (N) 
SPECIAL:NAME:EqualPredicate Object getValue(): get (V)  | value (NI) 	++ :: object (NI)  :: equal (NM) predicate (N) 
SPECIAL:NAME:RtfColorList int getColorNumber(RtfColor color): get (V)  | color (NM) number (NI) 	++ :: [ rtf (NM) color (N) - color (N) ] :: int (N)  :: rtf (NM) color (NM) list (N) 
SPECIAL:NAME:Jdb void startProcessInternal(): start (V)  | process (NM) internal (N) 	++ :: jdb (N) 
SPECIAL:NAME:ObjectUtilTest void testSaveNullClassPropertyFilterHandler(): test (VI) save (V)  | null (NM) class (NM) property (NM) filter (NM) handler (N) 	++ :: object (NM) util (NM) test (N) 
SPECIAL:FORM:TestFrame static void main(String args): main (V)  | [ string (NI) - args (N) ]	++ :: test (NM) frame (N) 
ENDS_WITH_ED:NAME:void actionPerformed(ActionEvent evt): handle (V) | action (NM) performed (N) 	++ :: [ action (NM) event (NI) - evt (N) ] :: ANONYMOUS (N)  :: void (N) 
SPECIAL:NAME:URelaxer static byte getBinaryObject(Object value): get (V)  | EQUIV[binary (NM) object (NI) , [ object (NI) - value (NI) ]]	++ :: byte (N)  :: U (NM) relaxer (N) 
BASE_VERB:NAME:ptuCore void updateParametersConfig(double newValues, boolean changeDirectory): update (V)  | parameters (NM) config (NI) 	++ :: [ double (N) - new (NM) values (N) ] :: [ boolean (N) - change (NM) directory (N) ] :: ptu (NM) core (N) 
SPECIAL:NAME:AzureusCore PluginManagerDefaults getPluginManagerDefaults(): get (V)  | plugin (NM) manager (NM) defaults (N) 	++ :: plugin (NM) manager (NM) defaults (N)  :: azureus (NM) core (N) 
SPECIAL:NAME:FixedScheduleTypeImpl RecurrenceType getRecurrence(): get (V)  | recurrence (N) 	++ :: recurrence (NM) type (N)  :: fixed (NM) schedule (NM) type (NM) impl (NI) 
BASE_VERB:FORM:TDoubleObjectHashMap Object put(double key, Object value): put (V)  | [ double (N) - key (NI) ]	++ :: [ object (NI) - value (NI) ] :: T (NM) double (NM) object (NM) hash (NM) map (N)  :: object (NI) 
BASE_VERB:NAME:void receiveMessage(String parsed): receive (V)  | message (NI) 	++ :: [ string (NI) - parsed (N) ] :: ANONYMOUS (N) 
BASE_VERB:CLAS:FilterServiceTest void tearDown(): tear (V) down (VP)  | filter (NM) service (NM) test (N) 	++
CONSTRUCTOR:NAME:Checkbox Checkbox Checkbox(String label, boolean state):  | checkbox (N) 	++ :: [ string (NI) - label (NI) ] :: [ boolean (N) - state (N) ]
SPECIAL:NAME:LefttImpl String getValue(): get (V)  | value (NI) 	++ :: string (NI)  :: leftt (NM) impl (NI) 
ENDS_WITH_ED:NAME:void actionPerformed(ActionEvent e): handle (V) | action (NM) performed (N) 	++ :: [ action (NM) event (NI) - e (N) ] :: ANONYMOUS (N)  :: void (N) 
PREP:NAME:JConditionalExpression String toString(): convert (V) | to (P) string (NI) 	++ :: J (NM) conditional (NM) expression (N)  :: string (NI) 
SPECIAL:NAME:MultiValuedRoleMetaInfo Class getAssociatedType(): get (V)  | associated (NM) type (N) 	++ :: class (NI)  :: multi (NM) valued (NM) role (NM) meta (NM) info (NI) 
SPECIAL:NAME:GuiApplet String getTitle(): get (V)  | title (N) 	++ :: string (NI)  :: gui (NM) applet (N) 
BASE_VERB:FORM:Wrapper byte unwrap(byte in, int inOff, int inLen): unwrap (V)  | [ byte (N) - in (NI) ]	++ :: [ int (N) - in (NM) off (N) ] :: [ int (N) - in (NM) len (N) ] :: wrapper (NI)  :: byte (N) 
SPECIAL:NAME:LazyCollection Object readNext(): read (V)  | next (DT) 	++ :: object (NI)  :: lazy (NM) collection (N) 
SPECIAL:NAME:FilesReader String getDisplayName(): get (V)  | display (NM) name (NI) 	++ :: string (NI)  :: files (NM) reader (N) 
SPECIAL:NAME:LearnerPreferenceType String getLanguage(): get (V)  | language (N) 	++ :: string (NI)  :: learner (NM) preference (NM) type (N) 
SPECIAL:NAME:FSDefineFont2 String getName(): get (V)  | name (NI) 	++ :: string (NI)  :: FS (NM) define (NM) font (NM) 2 (N) 
SPECIAL:NAME:FTPClient String getRemoteHost(): get (V)  | remote (NM) host (N) 	++ :: string (NI)  :: FTP (NM) client (N) 
SPECIAL:FORM:Transfer static void main(String arg): main (V)  | [ string (NI) - arg (N) ]	++ :: transfer (N) 
V_3P_IRR:NAME:ID3Tag boolean isValidTag(): is (V)  | valid (NM) tag (NI) 	++ :: boolean (N)  :: ID (NM) 3 (NM) tag (NI) 
SPECIAL:NAME:Arbeitnehmer void setMigTnrBez(String s): set (V)  | mig (NM) tnr (NM) bez (N) 	++ :: [ string (NI) - s (N) ] :: arbeitnehmer (N) 
V_3PS:FORM:DateAxis boolean equals(Object object): equals (V)  | [ object (NI) - object (NI) ]	++ :: date (NM) axis (N)  :: boolean (N) 
PREP:NAME:FooQuote String toSource(): convert (V) | to (P) source (NI) 	++ :: foo (NM) quote (N)  :: string (NI) 
SPECIAL:NAME:PushAndBubbleReasoner Set getParents(LinkedObject lo): get (V)  | parents (N) 	++ :: [ linked (NM) object (NI) - lo (N) ] :: set (N)  :: push (NM) and (NM) bubble (NM) reasoner (N) 
BASE_VERB:CLAS:SaveService void dispatchToSpecificService(Element elem): dispatch (VI)  | save (NM) service (N) -- to (P) specific (NM) service (N) 	++ :: [ element (NI) - elem (NI) ]
SPECIAL:NAME:IAttributeSet IAttribute getAttributes(): get (V)  | attributes (N) 	++ :: I (NM) attribute (N)  :: I (NM) attribute (NM) set (N) 
V_3P_IRR:NAME:MonitorsManager static boolean isMonitored(XForgeContext context): is (V)  | monitored (N) 	++ :: [ X (NM) forge (NM) context (N) - context (N) ] :: boolean (N)  :: monitors (NM) manager (N) 
SPECIAL:NAME:ComponentFieldTemplate String getFormula(): get (V)  | formula (N) 	++ :: string (NI)  :: component (NM) field (NM) template (N) 
SPECIAL:NAME:ResourceAccessProxy InputStream getResourceAsStream(String resourceName): get (V)  | EQUIV[resource (N) , [ string (NI) - resource (NM) name (NI) ]]-- as (P) stream (NI) 	++ :: input (NM) stream (NI)  :: resource (NM) access (NM) proxy (NI) 
SPECIAL:NAME:AccountManager boolean getIsEmployeeAccountEditingAuthorized(PrimaryKey accountPk, PrimaryKey accountToUpdatePk): get (V)  | is (NM) employee (NM) account (NM) editing (NM) authorized (N) 	++ :: [ primary (NM) key (NI) - account (NM) pk (NI) ] :: [ primary (NM) key (NI) - account (NM) to (NM) update (NM) pk (NI) ] :: boolean (N)  :: account (NM) manager (N) 
BASE_VERB:NAME:CompPanelManager void exportCsv(): export (V)  | csv (N) 	++ :: comp (NM) panel (NM) manager (N) 
BASE_VERB:CLAS:IScalableImagePart Rectangle positionForDisplay(Rectangle in): position (V)  | I (NM) scalable (NM) image (NM) part (N) -- for (P) display (N) 	++ :: [ rectangle (N) - in (NI) ] :: rectangle (N) 
SPECIAL:NAME:SearchDataMapOptionsPanel Boolean getData(): get (V)  | data (NI) 	++ :: boolean (N)  :: search (NM) data (NM) map (NM) options (NM) panel (N) 
CONSTRUCTOR:NAME:DiscardAction DiscardAction DiscardAction():  | discard (NM) action (N) 	++
SPECIAL:NAME:BankStatementPayment String createPayment(MBankStatementLine bsl): create (V)  | payment (N) 	++ :: [ M (NM) bank (NM) statement (NM) line (N) - bsl (N) ] :: string (NI)  :: bank (NM) statement (NM) payment (N) 
CONSTRUCTOR:NAME:BuTableCellEditor BuTableCellEditor BuTableCellEditor(BuTextField _tf):  | bu (NM) table (NM) cell (NM) editor (N) 	++ :: [ bu (NM) text (NM) field (N) - tf (N) ]
SPECIAL:NAME:InterPlatformMigrationHelperImpl ProtocolsList getAvailableProtocols(int category): get (V)  | available (NM) protocols (N) 	++ :: [ int (N) - category (N) ] :: protocols (NM) list (N)  :: inter (NM) platform (NM) migration (NM) helper (NM) impl (NI) 
CONSTRUCTOR:NAME:MapToCharKeyIntMapAdapter MapToCharKeyIntMapAdapter MapToCharKeyIntMapAdapter(Map map):  | map (NM) to (NM) char (NM) key (NM) int (NM) map (NM) adapter (NI) 	++ :: [ map (N) - map (N) ]
SPECIAL:NAME:X_S_TimeExpenseLine int getC_Currency_ID(): get (V)  | C (NM) currency (NM) ID (NI) 	++ :: int (N)  :: X (NM) S (NM) time (NM) expense (NM) line (N) 
SPECIAL:NAME:DisguiseRegistry int getFieldIdList(InstanceId id, boolean bSkeleton, int nBucketId): get (V)  | field (NM) id (NM) list (N) 	++ :: [ instance (NM) id (NI) - id (NI) ] :: [ int (N) - n (NM) bucket (NM) id (NI) ] :: [ boolean (N) - b (NM) skeleton (N) ] :: int (N)  :: disguise (NM) registry (N) 
EVENT_PARAM:NAME:JFTAdmin void connEtoC14(ActionEvent arg1): handle (V) | conn (NM) eto (NM) C (N) 14 (D) 	++ :: [ action (NM) event (NI) - arg (NM) 1 (N) ] :: JFT (NM) admin (N)  :: void (N) 
SPECIAL:NAME:Plugin String initShow(String name): init (V)  | show (N) 	++ :: [ string (NI) - name (NI) ] :: string (NI)  :: plugin (N) 
SPECIAL:NAME:JIThumbnailService String getKeyWordsForImage(DiskObject f): get (V)  | key (NM) words (N) -- for (P) image (N) 	++ :: [ disk (NM) object (NI) - f (N) ] :: string (NI)  :: JI (NM) thumbnail (NM) service (N) 
BASE_VERB:NAME:Reporter void generateDaysToAdd(Connection conn, File outputDir): generate (V)  | days (N) -- to (P) add (N) 	++ :: [ connection (N) - conn (N) ] :: [ file (NI) - output (NM) dir (NI) ] :: reporter (N) 
BASE_VERB:FORM:ASTArguments Object jjtAccept(MKParserVisitor visitor, Object data): jjt (PRE) accept (VI)  | [ MK (NM) parser (NM) visitor (N) - visitor (N) ]	++ :: [ object (NI) - data (NI) ] :: AST (NM) arguments (N)  :: object (NI) 
SPECIAL:CLAS:MummichogObject void removeFromScoresSet(Comparable key): remove (V)  | mummichog (NM) object (NI) -- from (P) scores (NM) set (N) 	++ :: [ comparable (N) - key (NI) ]
CONSTRUCTOR:NAME:GalaxyEditPanel GalaxyEditPanel GalaxyEditPanel(WorldEditDialog parent):  | galaxy (NM) edit (NM) panel (N) 	++ :: [ world (NM) edit (NM) dialog (N) - parent (N) ]
SPECIAL:NAME:MCRAccessControlSystem String getRuleDescription(String permission): get (V)  | rule (NM) description (NI) 	++ :: [ string (NI) - permission (N) ] :: string (NI)  :: MCR (NM) access (NM) control (NM) system (N) 
BASE_VERB:NAME:PersonTestHelper static void makePersonARecruiter(Person person, Company company): make (V)  | person (NM) A (NM) recruiter (N) 	++ :: [ person (N) - person (N) ] :: [ company (N) - company (N) ] :: person (NM) test (NM) helper (N) 
SPECIAL:CLAS:NewEvQueue SimEvent pop(): pop (V)  | new (NM) ev (NM) queue (N) 	++ :: sim (NM) event (NI) 
SPECIAL:NAME:DynamicConceptTagValidator void addMainFlagMustNotBePresent(String inFlagName, String inError): add (V)  | main (NM) flag (NM) must (NM) not (DT) be (NM) present (N) 	++ :: [ string (NI) - in (NM) flag (NM) name (NI) ] :: [ string (NI) - in (NM) error (N) ] :: dynamic (NM) concept (NM) tag (NM) validator (N) 
BASE_VERB:NAME:JPYGutterPainter void paintValidLine(Graphics2D gfx, int screenLine, int physicalLine, int start, int end, int y): paint (V)  | EQUIV[valid (NM) line (N) , [ int (N) - screen (NM) line (N) ], [ int (N) - physical (NM) line (N) ]]	++ :: [ graphics (NM) 2 (NM) D (N) - gfx (N) ] :: [ int (N) - start (N) ] :: [ int (N) - end (N) ] :: [ int (N) - y (N) ] :: JPY (NM) gutter (NM) painter (N) 
SPECIAL:NAME:InstantiateFactory static Factory getInstance(Class classToInstantiate, Class paramTypes, Object args): get (V)  | instance (NI) 	++ :: [ class (NI) - class (NM) to (NM) instantiate (N) ] :: [ class (NI) - param (NM) types (N) ] :: [ object (NI) - args (N) ] :: factory (N)  :: instantiate (NM) factory (N) 
ENDS_WITH_ED:NAME:ReplaceActionListener void actionPerformed(ActionEvent e): handle (V) | action (NM) performed (N) 	++ :: [ action (NM) event (NI) - e (N) ] :: replace (NM) action (NM) listener (N)  :: void (N) 
ENDS_WITH_ED:NAME:SmallButton void mousePressed(MouseEvent e): handle (V) | mouse (NM) pressed (N) 	++ :: [ mouse (NM) event (NI) - e (N) ] :: small (NM) button (N)  :: void (N) 
V_3P_IRR:NAME:HashIterator boolean hasNext(): has (V)  | next (DT) 	++ :: boolean (N)  :: hash (NM) iterator (N) 
CONSTRUCTOR:NAME:FadeSettings FadeSettings FadeSettings(JFrame parent):  | fade (NM) settings (N) 	++ :: [ J (NM) frame (N) - parent (N) ]
SPECIAL:NAME:StringTools static boolean compareEquals(byte b, String s): compare (V)  | equals (N) 	++ :: [ byte (N) - b (N) ] :: [ string (NI) - s (N) ] :: boolean (N)  :: string (NM) tools (N) 
VOID_NP:NAME:WideFieldSaverGUI void WRAPPER_pacs_setCalledAELLIcon(ImageIcon icon): handle (V) | WRAPPER (NM) pacs (NM) set (NM) called (NM) AELL (NM) icon (N) 	++ :: [ image (NM) icon (N) - icon (N) ] :: wide (NM) field (NM) saver (NM) GUI (N)  :: void (N) 
SPECIAL:CLAS:ChildRecordsRec Object clone(): clone (V)  | child (NM) records (NM) rec (N) 	++ :: object (NI) 
SPECIAL:NAME:Run void setStartCoordinates(RunCoordinates newCoordinates): set (V)  | start (NM) coordinates (N) 	++ :: [ run (NM) coordinates (N) - new (NM) coordinates (N) ] :: run (N) 
V_3P_IRR:NAME:NoOrders boolean isSet(SecondaryOrderID field): is (V)  | set (N) 	++ :: [ secondary (NM) order (NM) ID (NI) - field (N) ] :: boolean (N)  :: no (DT) orders (N) 
ENDS_WITH_ED:NAME:StartTestExecutionAction void actionPerformed(ActionEvent arg0): handle (V) | action (NM) performed (N) 	++ :: [ action (NM) event (NI) - arg (NM) 0 (N) ] :: start (NM) test (NM) execution (NM) action (N)  :: void (N) 
SPECIAL:NAME:void setValue(FtpEndpoint endpoint, Object value): set (V)  | value (NI) 	++ :: [ ftp (NM) endpoint (N) - endpoint (N) ] :: [ object (NI) - value (NI) ] :: ANONYMOUS (N) 
BASE_VERB:NAME:GUIControl void changeMovementPolicy(String strView, String strPolicy): change (V)  | EQUIV[movement (NM) policy (N) , [ string (NI) - str (NM) policy (N) ]]	++ :: [ string (NI) - str (NM) view (NI) ] :: GUI (NM) control (N) 
BASE_VERB:NAME:ConfigTools static URL configFileToURL(String path, String defaultPropertiesFile): config (V)  | EQUIV[file (NI) , [ string (NI) - default (NM) properties (NM) file (NI) ]]-- to (P) URL (NI) 	++ :: [ string (NI) - path (NI) ] :: URL (NI)  :: config (NM) tools (N) 
ENDS_WITH_ED:NAME:userDesktop void jMenuHelpAbout_actionPerformed(ActionEvent e): handle (V) | j (PRE) menu (NM) help (NM) about (NM) action (NM) performed (N) 	++ :: [ action (NM) event (NI) - e (N) ] :: user (NM) desktop (N)  :: void (N) 
ENDS_WITH_ED:NAME:AddPlayerDialog void cancelButtonActionPerformed(ActionEvent evt): handle (V) | cancel (NM) button (NM) action (NM) performed (N) 	++ :: [ action (NM) event (NI) - evt (N) ] :: add (NM) player (NM) dialog (N)  :: void (N) 
PREP:NAME:Calculator static double toMiles(double km): convert (V) | to (P) miles (N) 	++ :: [ double (N) - km (N) ] :: calculator (N)  :: double (N) 
SPECIAL:NAME:Student String getName(): get (V)  | name (NI) 	++ :: string (NI)  :: student (N) 
SPECIAL:NAME:TypeDetailEditor void setModel(TypeEditorModel model): set (V)  | model (NI) 	++ :: [ type (NM) editor (NM) model (NI) - model (NI) ] :: type (NM) detail (NM) editor (N) 
SPECIAL:NAME:AbstractBreakpoint void removeBreakpointListener(BreakpointListener listener): remove (V)  | EQUIV[breakpoint (NM) listener (N) , [ breakpoint (NM) listener (N) - listener (N) ]]	++ :: abstract (NM) breakpoint (N) 
SPECIAL:CLAS:FunctionBO static Function retrieveByFunctionCode(String code): retrieve (V)  | function (NM) BO (N) -- by (P) EQUIV[function (NM) code (NI) , [ string (NI) - code (NI) ]]	++ :: function (N) 
SPECIAL:NAME:Symbol ElementKind getKind(): get (V)  | kind (N) 	++ :: element (NM) kind (N)  :: symbol (N) 
BASE_VERB:NAME:InstructionVisitor void visit_if_icmplt(Instruction inst): visit (V)  | if (NM) icmplt (N) 	++ :: [ instruction (N) - inst (N) ] :: instruction (NM) visitor (N) 
PREP:NAME:Capsule Chunk toChunk(): convert (V) | to (P) chunk (N) 	++ :: capsule (N)  :: chunk (N) 
BASE_VERB:FORM:Inner void a(String descr): a (V)  | [ string (NI) - descr (N) ]	++ :: inner (N) 
BASE_VERB:NAME:gsl_odeiv_step void setn_state(long address, int index, long object_address): setn (V)  | state (N) 	++ :: [ long (N) - address (NI) ] :: [ int (N) - index (NI) ] :: [ long (N) - object (NM) address (NI) ] :: gsl (NM) odeiv (NM) step (N) 
SPECIAL:NAME:Param void setLcinfo(HeaderLcinfo lcinfo): set (V)  | lcinfo (N) 	++ :: [ header (NM) lcinfo (N) - lcinfo (N) ] :: param (N) 
SPECIAL:NAME:ConfChoice Object getValue(): get (V)  | value (NI) 	++ :: object (NI)  :: conf (NM) choice (N) 
SPECIAL:NAME:EvidenceSet void addEvidence(Evidence ev): add (V)  | EQUIV[evidence (N) , [ evidence (N) - ev (N) ]]	++ :: evidence (NM) set (N) 
V_3PS:FORM:IdentityEntry boolean equals(Object obj): equals (V)  | [ object (NI) - obj (NI) ]	++ :: identity (NM) entry (NI)  :: boolean (N) 
V_3PS:FORM:MethodAccessFlag boolean equals(Object obj): equals (V)  | [ object (NI) - obj (NI) ]	++ :: method (NM) access (NM) flag (N)  :: boolean (N) 
V_3P_IRR:NAME:APIDifferenceStrategy boolean isMethodDifferent(Method_info oldMethod, Method_info newMethod): is (V)  | method (NM) different (N) 	++ :: [ method (NM) info (NI) - old (NM) method (N) ] :: [ method (NM) info (NI) - new (NM) method (N) ] :: boolean (N)  :: API (NM) difference (NM) strategy (N) 
SPECIAL:NAME:JMSServerMessageHandler Destination getDestination(String name): get (V)  | destination (N) 	++ :: [ string (NI) - name (NI) ] :: destination (N)  :: JMS (NM) server (NM) message (NM) handler (N) 
BASE_VERB:CLAS:DefaultRasterLegendProducerTest void tearDown(): tear (V) down (VP)  | default (NM) raster (NM) legend (NM) producer (NM) test (N) 	++
SPECIAL:NAME:FilterMethods void addFilterMethod(Map<LifecycleStage,List<Method>> methodMap, LifecycleStage stage, Method method): add (V)  | EQUIV[filter (NM) method (N) , [ list (NM) method (N) - method (NM) map (N) ], [ method (N) - method (N) ]]	++ :: [ lifecycle (NM) stage (N) - stage (N) ] :: filter (NM) methods (N) 
CONSTRUCTOR:NAME:TrainingCourse TrainingCourse TrainingCourse():  | training (NM) course (N) 	++
SPECIAL:NAME:DBProvider int getDefaultPort(): get (V)  | default (NM) port (N) 	++ :: int (N)  :: DB (NM) provider (N) 
BASE_VERB:NAME:FloatAttributeAdapter Set visadSet(List list): visad (V)  | set (N) 	++ :: [ list (N) - list (N) ] :: set (N)  :: float (NM) attribute (NM) adapter (NI) 
CONSTRUCTOR:NAME:TestCalculator TestCalculator TestCalculator():  | test (NM) calculator (N) 	++
SPECIAL:CLAS:SumDataSource void start(): start (V)  | sum (NM) data (NM) source (NI) 	++
SPECIAL:FORM:AttributeValueMap Object get(Object key): get (V)  | [ object (NI) - key (NI) ]	++ :: attribute (NM) value (NM) map (N)  :: object (NI) 
SPECIAL:NAME:WidthTweakingTable void setSbVertical(JScrollBar sbVertical): set (V)  | sb (NM) vertical (N) 	++ :: [ J (NM) scroll (NM) bar (N) - sb (NM) vertical (N) ] :: width (NM) tweaking (NM) table (N) 
BASE_VERB:NAME:SqlFile File plBlockFile(String type): pl (PRE) block (V)  | file (NI) 	++ :: [ string (NI) - type (N) ] :: file (NI)  :: sql (NM) file (NI) 
NOUN_PHRASE:NAME:KeyStore int size(): get (V) | size (N) 	++ :: key (NM) store (N)  :: int (N) 
PREP:NAME:void onRedirect(OTHost host): handle (V) | on (NM) redirect (N) 	++ :: [ OT (NM) host (N) - host (N) ] :: ANONYMOUS (N)  :: void (N) 
SPECIAL:NAME:EntryPoints VmMethod getPutfieldWriteBarrier(): get (V)  | putfield (NM) write (NM) barrier (N) 	++ :: vm (NM) method (N)  :: entry (NM) points (N) 
SPECIAL:NAME:TextApp boolean getOpaqueFlag(): get (V)  | opaque (NM) flag (N) 	++ :: boolean (N)  :: text (NM) app (N) 
SPECIAL:NAME:PyTimeTuple PyInteger getMin(): get (V)  | min (N) 	++ :: py (NM) integer (N)  :: py (NM) time (NM) tuple (N) 
CONSTRUCTOR:NAME:FunctionException FunctionException FunctionException(String message):  | function (NM) exception (N) 	++ :: [ string (NI) - message (NI) ]
SPECIAL:NAME:SqlNVarChar void setLong(long value): set (V)  | long (N) 	++ :: [ long (N) - value (NI) ] :: sql (NM) N (NM) var (NM) char (N) 
PREP:NAME:IconType String toString(): convert (V) | to (P) string (NI) 	++ :: icon (NM) type (N)  :: string (NI) 
CONSTRUCTOR:NAME:MPEGRELDocument MPEGRELDocument MPEGRELDocument():  | MPEGREL (NM) document (NI) 	++
CONSTRUCTOR:NAME:LoadAction LoadAction LoadAction(AlgernonTab tab, String name, String tooltip, KeyStroke acceleratorKey, Integer mnemonic):  | load (NM) action (N) 	++ :: [ algernon (NM) tab (N) - tab (N) ] :: [ string (NI) - name (NI) ] :: [ string (NI) - tooltip (N) ] :: [ key (NM) stroke (N) - accelerator (NM) key (NI) ] :: [ integer (N) - mnemonic (N) ]
SPECIAL:NAME:AbstractGameChange RestrictedToNation getResToNation(): get (V)  | res (N) -- to (P) nation (N) 	++ :: restricted (NM) to (NM) nation (N)  :: abstract (NM) game (NM) change (N) 
NOUN_PHRASE:NAME:FieldLine Choice newOpChoice(String labels): get (V) | new (NM) op (NM) choice (N) 	++ :: [ string (NI) - labels (N) ] :: field (NM) line (N)  :: choice (N) 
SPECIAL:NAME:AddUserBean void addNodeReports(TreeNodeCheckedImage node, Set reports): add (V)  | EQUIV[node (NM) reports (N) , [ set (N) - reports (N) ]]	++ :: [ tree (NM) node (NM) checked (NM) image (N) - node (NI) ] :: add (NM) user (NM) bean (NI) 
BASE_VERB:NAME:AccessManager void shareSessionIsAlive(AnyLogicContext alc): share (V)  | session (NM) is (NM) alive (N) 	++ :: [ any (DT) logic (NM) context (N) - alc (N) ] :: access (NM) manager (N) 
PREP:NAME:Data String toString(): convert (V) | to (P) string (NI) 	++ :: data (NI)  :: string (NI) 
BASE_VERB:NAME:DefaultUserHandler void handleGetUser(User user): handle (VI) get (V)  | EQUIV[user (N) , [ user (N) - user (N) ]]	++ :: default (NM) user (NM) handler (N) 
ENDS_WITH_ED:NAME:void actionPerformed(ActionEvent e): handle (V) | action (NM) performed (N) 	++ :: [ action (NM) event (NI) - e (N) ] :: ANONYMOUS (N)  :: void (N) 
SPECIAL:NAME:SerialFileCopier void copyReadOnly(File src, File dest, FileCopierCallback cb, Object cbarg): copy (V)  | read (NM) only (N) 	++ :: [ file (NI) - src (N) ] :: [ file (NI) - dest (N) ] :: [ file (NM) copier (NM) callback (N) - cb (N) ] :: [ object (NI) - cbarg (N) ] :: serial (NM) file (NM) copier (N) 
SPECIAL:FORM:NoQuoteEntries void set(SecuritySubType value): set (V)  | [ security (NM) sub (NM) type (N) - value (NI) ]	++ :: no (DT) quote (NM) entries (N) 
SPECIAL:NAME:DefaultPropertyDefinitionCategory void setPropertyClass(PropertyClass propertyClass): set (V)  | property (NM) class (NI) 	++ :: [ property (NM) class (NI) - property (NM) class (NI) ] :: default (NM) property (NM) definition (NM) category (N) 
BASE_VERB:FORM:Factory static StyleName parse(XMLStreamReader sr): parse (V)  | [ XML (NM) stream (NM) reader (N) - sr (N) ]	++ :: factory (N)  :: style (NM) name (NI) 
SPECIAL:NAME:OutboxPoller Message createMessageRecord(OutboxEnvelope envelope, SRInfo srInfo): create (V)  | message (NM) record (N) 	++ :: [ outbox (NM) envelope (N) - envelope (N) ] :: [ SR (NM) info (NI) - sr (NM) info (NI) ] :: message (NI)  :: outbox (NM) poller (N) 
BASE_VERB:NAME:DomHelper static Document parseXml(URL url): parse (V)  | xml (N) 	++ :: [ URL (NI) - url (NI) ] :: document (NI)  :: dom (NM) helper (N) 
SPECIAL:NAME:Int8ArrayTest void testString(): test (VI)  | string (NI) 	++ :: int (NM) 8 (NM) array (NM) test (N) 
VOID_NP:NAME:Manager void systemDisable(int state): handle (V) | system (NM) disable (N) 	++ :: [ int (N) - state (N) ] :: manager (N)  :: void (N) 
ENDS_WITH_ED:NAME:TextDisplay void mouseMoved(MouseEvent e): handle (V) | mouse (NM) moved (N) 	++ :: [ mouse (NM) event (NI) - e (N) ] :: text (NM) display (N)  :: void (N) 
SPECIAL:NAME:BCU1_0_TP int getDevicesInProgrammingMode(): get (V)  | devices (N) -- in (P) programming (NM) mode (N) 	++ :: int (N)  :: BCU (NM) 1 (NM) 0 (NM) TP (N) 
BASE_VERB:NAME:KrHyper Vector selectDisjunction(): select (V)  | disjunction (N) 	++ :: vector (N)  :: kr (NM) hyper (N) 
BASE_VERB:FORM:CourseKeywordDlg void update(Course course): update (V)  | [ course (N) - course (N) ]	++ :: course (NM) keyword (NM) dlg (N) 
SPECIAL:NAME:QDialog void setType(int value): set (V)  | type (N) 	++ :: [ int (N) - value (NI) ] :: Q (NM) dialog (N) 
PREP:NAME:Qualog static boolean onGreen(QlLevel level, String name, byte ary): handle (V) | on (NM) green (N) 	++ :: [ ql (NM) level (N) - level (N) ] :: [ string (NI) - name (NI) ] :: [ byte (N) - ary (N) ] :: qualog (N)  :: boolean (N) 
SPECIAL:NAME:Filter void setPixels(int x, int y, int w, int h, ColorModel model, byte pixels, int off, int scansize): set (V)  | pixels (N) 	++ :: [ int (N) - x (N) ] :: [ int (N) - y (N) ] :: [ int (N) - w (N) ] :: [ int (N) - h (N) ] :: [ color (NM) model (NI) - model (NI) ] :: [ byte (N) - pixels (N) ] :: [ int (N) - off (N) ] :: [ int (N) - scansize (N) ] :: filter (N) 
SPECIAL:NAME:PrimitiveValidBO char getChar3(): get (V)  | char (N) 3 (D) 	++ :: char (N)  :: primitive (NM) valid (NM) BO (N) 
SPECIAL:NAME:ServerFrame int getNumMaxUtenti(): get (V)  | num (NM) max (NM) utenti (N) 	++ :: int (N)  :: server (NM) frame (N) 
SPECIAL:NAME:X_M_DistributionRunLine void setM_DistributionRun_ID(int M_DistributionRun_ID): set (V)  | M (NM) distribution (NM) run (NM) ID (NI) 	++ :: [ int (N) - M (NM) distribution (NM) run (NM) ID (NI) ] :: X (NM) M (NM) distribution (NM) run (NM) line (N) 
SPECIAL:NAME:GetMapKvpRequestReaderTest void testCreateRequest(): test (VI) create (V)  | request (N) 	++ :: get (NM) map (NM) kvp (NM) request (NM) reader (NM) test (N) 
SPECIAL:NAME:MultipleSEGsFactory MultipleSEGs createMultipleSEGs(Node sfref, String path, char predelim0, char predelim1, StringBuffer res, int fullResLen, Document syntax, Hashtable predefs, Hashtable valids): create (V)  | multiple (NM) SE (NM) gs (N) 	++ :: [ node (NI) - sfref (N) ] :: [ string (NI) - path (NI) ] :: [ char (N) - predelim (NM) 0 (N) ] :: [ char (N) - predelim (NM) 1 (N) ] :: [ string (NM) buffer (NI) - res (N) ] :: [ int (N) - full (NM) res (NM) len (N) ] :: [ document (NI) - syntax (N) ] :: [ hashtable (N) - predefs (N) ] :: [ hashtable (N) - valids (N) ] :: multiple (NM) SE (NM) gs (N)  :: multiple (NM) SE (NM) gs (NM) factory (N) 
SPECIAL:NAME:Position Angle getLongitude(): get (V)  | longitude (N) 	++ :: angle (N)  :: position (N) 
SPECIAL:NAME:TrPrElt void removeWBefore(int i): remove (V)  | W (N) -- before (P) [ int (N) - i (N) ]	++ :: [ int (N) - i (N) ] :: tr (NM) pr (NM) elt (NI) 
CONSTRUCTOR:NAME:ButtonBarFactory ButtonBarFactory ButtonBarFactory():  | button (NM) bar (NM) factory (N) 	++
SPECIAL:NAME:ClassTreeActionPane void enableInstanceMenuItem(boolean b): enable (VI)  | instance (NM) menu (NM) item (NI) 	++ :: [ boolean (N) - b (N) ] :: [ boolean (N) - b (N) ] :: class (NM) tree (NM) action (NM) pane (N) 
SPECIAL:NAME:CompositeTupleSet void addColumn(String name, Class type, Object defaultValue): add (V)  | column (N) 	++ :: [ string (NI) - name (NI) ] :: [ class (NI) - type (N) ] :: [ object (NI) - default (NM) value (NI) ] :: composite (NM) tuple (NM) set (N) 
SPECIAL:NAME:ComboGridComponent void addSelectionListener(ISelectionListener listener): add (V)  | EQUIV[selection (NM) listener (N) , [ I (NM) selection (NM) listener (N) - listener (N) ]]	++ :: combo (NM) grid (NM) component (N) 
BASE_VERB:NAME:ERFrame2 void showError(String msg): show (V)  | error (N) 	++ :: [ string (NI) - msg (NI) ] :: ER (NM) frame (NM) 2 (N) 
V_MODAL:NAME:Trap_SleepGas int canTargetCode(): can (VI) target (V)  | code (NI) 	++ :: int (N)  :: trap (NM) sleep (NM) gas (N) 
PREP:NAME:PaymentPK String toString(): convert (V) | to (P) string (NI) 	++ :: payment (NM) PK (NI)  :: string (NI) 
SPECIAL:NAME:GraphView void createPartControl(Composite parent, IMemento memento): create (V)  | part (NM) control (N) 	++ :: [ composite (N) - parent (N) ] :: [ I (NM) memento (N) - memento (N) ] :: graph (NM) view (NI) 
SPECIAL:NAME:JobDescriptor void setAllowSuspension(String allowSuspension): set (V)  | allow (NM) suspension (N) 	++ :: [ string (NI) - allow (NM) suspension (N) ] :: job (NM) descriptor (NI) 
SPECIAL:NAME:MenuBar void setLayoutPanelLogo(PanelLayout pl): set (V)  | layout (NM) panel (NM) logo (N) 	++ :: [ panel (NM) layout (N) - pl (N) ] :: menu (NM) bar (N) 
SPECIAL:NAME:ImageReader void processThumbnailPassStarted(BufferedImage thumbnail, int pass, int minPass, int maxPass, int minX, int minY, int periodX, int periodY, int bands): process (VI)  | thumbnail (NM) pass (NM) started (N) 	++ :: [ buffered (NM) image (N) - thumbnail (N) ] :: [ int (N) - pass (N) ] :: [ int (N) - min (NM) pass (N) ] :: [ int (N) - max (NM) pass (N) ] :: [ int (N) - min (NM) X (N) ] :: [ int (N) - min (NM) Y (N) ] :: [ int (N) - period (NM) X (N) ] :: [ int (N) - period (NM) Y (N) ] :: [ int (N) - bands (N) ] :: image (NM) reader (N) 
ENDS_WITH_ED:NAME:SortableTableHeaderListener void mouseMoved(MouseEvent e): handle (V) | mouse (NM) moved (N) 	++ :: [ mouse (NM) event (NI) - e (N) ] :: sortable (NM) table (NM) header (NM) listener (N)  :: void (N) 
SPECIAL:NAME:InteractionsModel InteractionsScriptModel loadHistoryAsScript(FileOpenSelector selector): load (V)  | history (N) -- as (P) script (N) 	++ :: [ file (NM) open (NM) selector (N) - selector (N) ] :: interactions (NM) script (NM) model (NI)  :: interactions (NM) model (NI) 
BASE_VERB:NAME:InteractionsDocument void moveHistoryNext(String entry): move (V)  | history (NM) next (DT) 	++ :: [ string (NI) - entry (NI) ] :: interactions (NM) document (NI) 
SPECIAL:NAME:ValueAcMthImpl void removeOwnerListener(PropertyChangeListener listener): remove (V)  | EQUIV[owner (NM) listener (N) , [ property (NM) change (NM) listener (N) - listener (N) ]]	++ :: value (NM) ac (NM) mth (NM) impl (NI) 
SPECIAL:NAME:ReplyMessage_1_2 int getRequestId(): get (V)  | request (NM) id (NI) 	++ :: int (N)  :: reply (NM) message (NM) 1 (NM) 2 (N) 
V_3P_IRR:NAME:ForwardQueryResult boolean isCompiledQueryEqual(ForwardQueryResult qc): is (V)  | compiled (NM) query (NM) equal (N) 	++ :: [ forward (NM) query (NM) result (N) - qc (N) ] :: boolean (N)  :: forward (NM) query (NM) result (N) 
SPECIAL:NAME:CopyRefactoring IChange createChange(IProgressMonitor pm, ICompilationUnit cu): create (V)  | change (N) 	++ :: [ I (NM) progress (NM) monitor (N) - pm (N) ] :: [ I (NM) compilation (NM) unit (N) - cu (N) ] :: I (NM) change (N)  :: copy (NM) refactoring (N) 
SPECIAL:NAME:SizeSequence int getSize(int index): get (V)  | size (N) 	++ :: [ int (N) - index (NI) ] :: int (N)  :: size (NM) sequence (N) 
PREP:NAME:Configuration static short toShortArray(double a): convert (V) | to (P) short (NM) array (N) 	++ :: [ double (N) - a (N) ] :: configuration (NI)  :: short (N) 
SPECIAL:NAME:ChoicePointContext SubGoalId getIndexBack(): get (V)  | index (NM) back (N) 	++ :: sub (NM) goal (NM) id (NI)  :: choice (NM) point (NM) context (N) 
BASE_VERB:NAME:TwilightFilter FeaturePairI cleanUpTwilightZone(FeaturePairI terminal_span, FeaturePairI internal_span, boolean both_terminal, boolean debug): clean (V) up (VP)  | twilight (NM) zone (N) 	++ :: [ feature (NM) pair (NM) I (N) - terminal (NM) span (N) ] :: [ feature (NM) pair (NM) I (N) - internal (NM) span (N) ] :: [ boolean (N) - both (DT) terminal (N) ] :: [ boolean (N) - debug (N) ] :: feature (NM) pair (NM) I (N)  :: twilight (NM) filter (N) 
V_3PS:FORM:DefaultTentativeDisparities boolean contains(TentativeDisparity td): contains (V)  | [ tentative (NM) disparity (N) - td (N) ]	++ :: default (NM) tentative (NM) disparities (N)  :: boolean (N) 
SPECIAL:NAME:VMXState Object getObjectArray(int length): get (V)  | object (NM) array (N) 	++ :: [ int (N) - length (N) ] :: object (NI)  :: VMX (NM) state (N) 
CONSTRUCTOR:NAME:ValidationContext ValidationContext ValidationContext(DefaultJAXBContextImpl _context, ValidationEventHandler _eventHandler, boolean validateID):  | validation (NM) context (N) 	++ :: [ default (NM) JAXB (NM) context (NM) impl (NI) - context (N) ] :: [ validation (NM) event (NM) handler (N) - event (NM) handler (N) ] :: [ boolean (N) - validate (NM) ID (NI) ]
SPECIAL:CLAS:DefaultMyPreferencesEditBlock Object clone(): clone (V)  | default (NM) my (PR) preferences (NM) edit (NM) block (N) 	++ :: object (NI) 
SPECIAL:NAME:ElementFacadeLocal void setCallerPrincipal(Principal callerPrincipal): set (V)  | caller (NM) principal (N) 	++ :: [ principal (N) - caller (NM) principal (N) ] :: element (NM) facade (NM) local (N) 
SPECIAL:NAME:UseCaseModel void checkDuplicatesUseCases(): check (VI)  | duplicates (NM) use (NM) cases (N) 	++ :: use (NM) case (NM) model (NI) 
BASE_VERB:NAME:MockDnaseqHandlerHelper void acceptAddOrdersToBatchOrder(Object p0_HttpServletRequest, Object p1_BatchOrder): accept (VI) add (V)  | orders (N) -- to (P) EQUIV[batch (NM) order (N) , [ object (NI) - p (NM) 1 (NM) batch (NM) order (N) ]]	++ :: [ object (NI) - p (NM) 0 (NM) http (NM) servlet (NM) request (N) ] :: mock (NM) dnaseq (NM) handler (NM) helper (N) 
SPECIAL:CLAS:EmailAddressPersistenceImpl List findByC_C_C_P(long companyId, long classNameId, long classPK, boolean primary, int begin, int end): find (V)  | email (NM) address (NM) persistence (NM) impl (NI) -- by (P) C (NM) C (NM) C (NM) P (NI) 	++ :: [ long (N) - company (NM) id (NI) ] :: [ long (N) - class (NM) name (NM) id (NI) ] :: [ long (N) - class (NM) PK (NI) ] :: [ int (N) - begin (N) ] :: [ int (N) - end (N) ] :: [ boolean (N) - primary (N) ] :: list (N) 
SPECIAL:FORM:Graph void init(GraphController gc, GraphModel model, BasicMarqueeHandler mh, XMLCollectionElement wpOrAs): init (V)  | [ graph (NM) controller (N) - gc (N) ]	++ :: [ graph (NM) model (NI) - model (NI) ] :: [ basic (NM) marquee (NM) handler (N) - mh (N) ] :: [ XML (NM) collection (NM) element (NI) - wp (NM) or (NM) as (N) ] :: graph (N) 
V_3P_IRR:NAME:MailEJB boolean isSupportEmailAccount(int emailAccountID, CVDal cvdal): is (V)  | EQUIV[support (NM) email (NM) account (N) , [ int (N) - email (NM) account (NM) ID (NI) ]]	++ :: [ CV (NM) dal (N) - cvdal (N) ] :: boolean (N)  :: mail (NM) EJB (N) 
BASE_VERB:NAME:Fmod static int FSOUND_GetOutput(): FSOUND (V)  | get (NM) output (N) 	++ :: int (N)  :: fmod (N) 
SPECIAL:NAME:Createconference String getTagName(): get (V)  | tag (NM) name (NI) 	++ :: string (NI)  :: createconference (N) 
SPECIAL:NAME:WSRP_v1_PortletManagement_Binding_SOAPSkeleton void clonePortlet(RegistrationContext registrationContext, PortletContext portletContext, UserContext userContext, StringHolder portletHandle, ByteArrayHolder portletState, ExtensionArrayHolder extensions): clone (V)  | EQUIV[portlet (N) , [ string (NM) holder (NI) - portlet (NM) handle (NI) ]]	++ :: [ registration (NM) context (N) - registration (NM) context (N) ] :: [ portlet (NM) context (N) - portlet (NM) context (N) ] :: [ user (NM) context (N) - user (NM) context (N) ] :: [ byte (NM) array (NM) holder (NI) - portlet (NM) state (N) ] :: [ extension (NM) array (NM) holder (NI) - extensions (N) ] :: WSRP (NM) v (NM) 1 (NM) portlet (NM) management (NM) binding (NM) SOAP (NM) skeleton (N) 
SPECIAL:NAME:IbmNotWf2XmlConfTest String loadTestData(String uri): load (V)  | test (NM) data (NI) 	++ :: [ string (NI) - uri (NI) ] :: string (NI)  :: ibm (NM) not (DT) wf (NM) 2 (NM) xml (NM) conf (NM) test (N) 
PREP:NAME:LinkedMessageHandler void onUserMode(Server server, User target, User source, String mode): handle (V) | on (NM) user (NM) mode (N) 	++ :: [ server (N) - server (N) ] :: [ user (N) - target (N) ] :: [ user (N) - source (NI) ] :: [ string (NI) - mode (N) ] :: linked (NM) message (NM) handler (N)  :: void (N) 
SPECIAL:NAME:User HashSet getGrantedClassNames(boolean andToPublic): get (V)  | granted (NM) class (NM) names (N) 	++ :: [ boolean (N) - and (NM) to (NM) public (N) ] :: [ boolean (N) - and (NM) to (NM) public (N) ] :: hash (NM) set (N)  :: user (N) 
BASE_VERB:NAME:CountryDOAgent DataObject buildDataObject(Data data): build (V)  | data (NM) object (NI) 	++ :: [ data (NI) - data (NI) ] :: data (NM) object (NI)  :: country (NM) DO (NM) agent (N) 
VOID_NP:NAME:WorkflowTextResource void rollback(): handle (V) | rollback (N) 	++ :: workflow (NM) text (NM) resource (N)  :: void (N) 
V_3PS:NAME:FSSharedDataManager boolean containsEMailAddress(String sEMailAddressName): contains (V)  | EQUIV[E (NM) mail (NM) address (NI) , [ string (NI) - s (NM) E (NM) mail (NM) address (NM) name (NI) ]]	++ :: boolean (N)  :: FS (NM) shared (NM) data (NM) manager (N) 
CONSTRUCTOR:NAME:XException XException XException(String msg):  | X (NM) exception (N) 	++ :: [ string (NI) - msg (NI) ]
SPECIAL:NAME:IPlatform String getName(): get (V)  | name (NI) 	++ :: string (NI)  :: I (NM) platform (N) 
BASE_VERB:CLAS:InternalZoomFrame void dispose(): dispose (V)  | internal (NM) zoom (NM) frame (N) 	++
BASE_VERB:CLAS:BandwidthThrottle void waitForBandwidth(): wait (V)  | bandwidth (NM) throttle (N) -- for (P) bandwidth (N) 	++
PREP:NAME:Coordinate String toString(): convert (V) | to (P) string (NI) 	++ :: coordinate (N)  :: string (NI) 
BASE_VERB:NAME:BulletinZipUtilities static void extractPacketsToZipStream(String clientId, ReadableDatabase db, DatabaseKey packetKeys, OutputStream outputStream, MartusCrypto security): extract (V)  | packets (N) -- to (P) EQUIV[zip (NM) stream (NI) , [ output (NM) stream (NI) - output (NM) stream (NI) ]]	++ :: [ string (NI) - client (NM) id (NI) ] :: [ readable (NM) database (N) - db (N) ] :: [ database (NM) key (NI) - packet (NM) keys (N) ] :: [ martus (NM) crypto (N) - security (N) ] :: bulletin (NM) zip (NM) utilities (N) 
SPECIAL:FORM:RefExperiment void init(NmrExpPrototype parent, Map attrlinks): init (V)  | [ nmr (NM) exp (NM) prototype (N) - parent (N) ]	++ :: [ map (N) - attrlinks (N) ] :: ref (NM) experiment (N) 
VOID_NP:NAME:ApplyDesignModeAttributeImpl void unsetApplyDesignMode(): handle (V) | unset (NM) apply (NM) design (NM) mode (N) 	++ :: apply (NM) design (NM) mode (NM) attribute (NM) impl (NI)  :: void (N) 
SPECIAL:CLAS:SwingExeRequestRenderer void init(): init (V)  | swing (NM) exe (NM) request (NM) renderer (N) 	++
SPECIAL:NAME:TraceInterface void setLink(ObjectReference ref, ObjectReference link): set (V)  | link (N) 	++ :: [ object (NM) reference (NI) - ref (NI) ] :: [ object (NM) reference (NI) - link (N) ] :: trace (NM) interface (NI) 
V_3P_IRR:CLAS:CFissionBase boolean isInScriptTag(): is (V)  | C (NM) fission (NM) base (N) -- in (P) script (NM) tag (NI) 	++ :: boolean (N) 
SPECIAL:CLAS:SemanticScopeImpl boolean removeOnEvent(OnEvent value): remove (V)  | semantic (NM) scope (NM) impl (NI) -- on (P) EQUIV[event (NI) , [ on (NM) event (NI) - value (NI) ]]	++ :: boolean (N) 
BASE_VERB:NAME:TapestryParameterTagImpl void validateLocation(): validate (VI)  | location (NI) 	++ :: tapestry (NM) parameter (NM) tag (NM) impl (NI) 
SPECIAL:NAME:Object getValue(): get (V)  | value (NI) 	++ :: object (NI)  :: ANONYMOUS (N) 
SPECIAL:NAME:AbstMedicalIncident MedicalCategory getMedicalCategory(): get (V)  | medical (NM) category (N) 	++ :: medical (NM) category (N)  :: abst (NM) medical (NM) incident (N) 
BASE_VERB:CLAS:JEditorAbstract void activate(): activate (VI)  | J (NM) editor (NM) abstract (N) 	++
BASE_VERB:FORM:Factory static RubyAlignAttribute parse(XMLStreamReader sr, XmlOptions options): parse (V)  | [ XML (NM) stream (NM) reader (N) - sr (N) ]	++ :: [ xml (NM) options (N) - options (N) ] :: factory (N)  :: ruby (NM) align (NM) attribute (N) 
BASE_VERB:CLAS:LimitedLengthInputStream void close(): close (V)  | limited (NM) length (NM) input (NM) stream (NI) 	++
PREP:NAME:Enum static Enum forString(String s):  | for (P) string (NI) 	++ :: [ string (NI) - s (N) ] :: enum (NI)  :: enum (NI) 
SPECIAL:NAME:TIMETextInformationID3V2Frame int getMinutes(): get (V)  | minutes (N) 	++ :: int (N)  :: TIME (NM) text (NM) information (NM) ID (NM) 3 (NM) V (NM) 2 (NM) frame (N) 
BASE_VERB:FORM:JavaOptionsFunction void apply(Machine mc, int nargs): apply (V)  | [ machine (N) - mc (N) ]	++ :: [ int (N) - nargs (N) ] :: java (NM) options (NM) function (N) 
SPECIAL:NAME:StandardArticle String getOnlineHelpRelativeLocation(AnyLogicContext alc): get (V)  | online (NM) help (NM) relative (NM) location (NI) 	++ :: [ any (DT) logic (NM) context (N) - alc (N) ] :: string (NI)  :: standard (NM) article (N) 
BASE_VERB:NAME:BlockExeServiceProvider int reportHam(String filename): report (V)  | ham (N) 	++ :: [ string (NI) - filename (N) ] :: int (N)  :: block (NM) exe (NM) service (NM) provider (N) 
CONSTRUCTOR:NAME:ConstNode ConstNode ConstNode(IdentNode ident, Node expr, boolean priv):  | const (NM) node (NI) 	++ :: [ ident (NM) node (NI) - ident (N) ] :: [ node (NI) - expr (NI) ] :: [ boolean (N) - priv (N) ]
BASE_VERB:NAME:ServerUpdatesProcessor boolean handleUserInRole(boolean additions, Node userNode, Node roleNode): handle (VI)  | EQUIV[user (N) , [ node (NI) - user (NM) node (NI) ]]-- in (P) EQUIV[role (N) , [ node (NI) - role (NM) node (NI) ]]	++ :: [ node (NI) - user (NM) node (NI) ] :: [ boolean (N) - additions (N) ] :: boolean (N)  :: server (NM) updates (NM) processor (N) 
BASE_VERB:NAME:MockVector void expectClear(): expect (VI)  | clear (N) 	++ :: mock (NM) vector (N) 
SPECIAL:NAME:DendrogramLinkShaper Shape createLink(Point2D startPos, int startOrientation, Point2D endPos, int endOrientation, Shape prevShape): create (V)  | link (N) 	++ :: [ point (NM) 2 (NM) D (N) - start (NM) pos (N) ] :: [ int (N) - start (NM) orientation (N) ] :: [ point (NM) 2 (NM) D (N) - end (NM) pos (N) ] :: [ int (N) - end (NM) orientation (N) ] :: [ shape (N) - prev (NM) shape (N) ] :: shape (N)  :: dendrogram (NM) link (NM) shaper (N) 
SPECIAL:NAME:ChartSets void addDataSet(ChartFilter filter, Dataset dataSet): add (V)  | EQUIV[data (NM) set (N) , [ dataset (N) - data (NM) set (N) ]]	++ :: [ chart (NM) filter (N) - filter (N) ] :: chart (NM) sets (N) 
CONSTRUCTOR:NAME:NonstrictReadWriteCache NonstrictReadWriteCache NonstrictReadWriteCache():  | nonstrict (NM) read (NM) write (NM) cache (N) 	++
NOUN_PHRASE:NAME:GreekKeysParser String next(): get (V) | next (DT) 	++ :: greek (NM) keys (NM) parser (N)  :: string (NI) 
SPECIAL:NAME:WMLAccessElementImpl String getPath(): get (V)  | path (NI) 	++ :: string (NI)  :: WML (NM) access (NM) element (NM) impl (NI) 
BASE_VERB:FORM:void report(Throwable e): report (V)  | [ throwable (N) - e (N) ]	++ :: ANONYMOUS (N) 
SPECIAL:NAME:StyleType int getLegendURLMaxCount(): get (V)  | legend (NM) URL (NM) max (NM) count (N) 	++ :: int (N)  :: style (NM) type (N) 
SPECIAL:CLAS:void run(): run (VI)  | ANONYMOUS (N) 	++
SPECIAL:CLAS:BuildIndexAction void run(): run (VI)  | build (NM) index (NM) action (N) 	++
ENDS_WITH_ED:NAME:IVImagePane void mouseEntered(MouseEvent e): handle (V) | mouse (NM) entered (N) 	++ :: [ mouse (NM) event (NI) - e (N) ] :: IV (NM) image (NM) pane (N)  :: void (N) 
SPECIAL:NAME:FilesystemImageManager ImageDal getImageDal(): get (V)  | image (NM) dal (N) 	++ :: image (NM) dal (N)  :: filesystem (NM) image (NM) manager (N) 
BASE_VERB:CLAS:CharsetEncoder void implOnUnmappableCharacter(CodingErrorAction newAction): impl (VI)  | charset (NM) encoder (N) -- on (P) unmappable (NM) character (N) 	++ :: [ coding (NM) error (NM) action (N) - new (NM) action (N) ]
SPECIAL:NAME:FormEventType boolean getCombineUsingAnd(): get (V)  | combine (NM) using (NM) and (N) 	++ :: boolean (N)  :: form (NM) event (NM) type (N) 
CONSTRUCTOR:NAME:SettingsEditor SettingsEditor SettingsEditor():  | settings (NM) editor (N) 	++
CONSTRUCTOR:NAME:FEDObjectClass FEDObjectClass FEDObjectClass(String name, ObjectClass superObjectClass, AtomicInteger objectCount):  | FED (NM) object (NM) class (NI) 	++ :: [ string (NI) - name (NI) ] :: [ object (NM) class (NI) - super (NM) object (NM) class (NI) ] :: [ atomic (NM) integer (N) - object (NM) count (N) ]
SPECIAL:NAME:VorbisCodecHeader String getEncodingType(): get (V)  | encoding (NM) type (N) 	++ :: string (NI)  :: vorbis (NM) codec (NM) header (N) 
SPECIAL:NAME:AwardModel void setAwardAwardid(int row, int newValue): set (V)  | award (NM) awardid (N) 	++ :: [ int (N) - row (N) ] :: [ int (N) - new (NM) value (NI) ] :: award (NM) model (NI) 
BASE_VERB:CLAS:OyoahaFileThemeLoader void open(): open (V)  | oyoaha (NM) file (NM) theme (NM) loader (N) 	++
CONSTRUCTOR:NAME:ChildAddedEvent ChildAddedEvent ChildAddedEvent(CommandNode parent, CommandNode child, int childIndex):  | child (NM) added (NM) event (NI) 	++ :: [ command (NM) node (NI) - parent (N) ] :: [ command (NM) node (NI) - child (N) ] :: [ int (N) - child (NM) index (NI) ]
SPECIAL:NAME:Rule void setMessage(String message): set (V)  | message (NI) 	++ :: [ string (NI) - message (NI) ] :: rule (N) 
SPECIAL:NAME:Assert static void assertEquals(int expected, int actual): assert (VI)  | equals (N) 	++ :: [ int (N) - expected (N) ] :: [ int (N) - actual (N) ] :: assert (N) 
BASE_VERB:NAME:TargetManager int transferSeeds(Permission fromPermissionOid, Permission toPermissionOid): transfer (V)  | seeds (N) 	++ :: [ permission (N) - from (NM) permission (NM) oid (N) ] :: [ permission (N) - to (NM) permission (NM) oid (N) ] :: int (N)  :: target (NM) manager (N) 
BASE_VERB:CLAS:ExistingProjectPage void apply(): apply (V)  | existing (NM) project (NM) page (N) 	++
SPECIAL:NAME:FileRepository void deleteDomain(WikiDomain domain): delete (V)  | EQUIV[domain (N) , [ wiki (NM) domain (N) - domain (N) ]]	++ :: file (NM) repository (N) 
BASE_VERB:NAME:FAnnealing void perturbaParam(float parTransf, float parTransf2, Random rand): perturba (V)  | param (N) 	++ :: [ float (N) - par (NM) transf (N) ] :: [ float (N) - par (NM) transf (NM) 2 (N) ] :: [ random (N) - rand (N) ] :: F (NM) annealing (N) 
SPECIAL:NAME:DefaultXMLInfoMgr Map getAllVaults(): get (V)  | all (DT) vaults (N) 	++ :: map (N)  :: default (NM) XML (NM) info (NM) mgr (N) 
BASE_VERB:NAME:SplitPaneTreeView void makeVisible(TreePath path): make (V)  | visible (N) 	++ :: [ tree (NM) path (NI) - path (NI) ] :: split (NM) pane (NM) tree (NM) view (NI) 
SPECIAL:NAME:ValidationList List<String> getMessages(): get (V)  | messages (N) 	++ :: list (NM) string (NI)  :: validation (NM) list (N) 
SPECIAL:NAME:Weapon int getLeaderUsageLimit(): get (V)  | leader (NM) usage (NM) limit (N) 	++ :: int (N)  :: weapon (N) 
SPECIAL:NAME:NumberProperty double getMax(): get (V)  | max (N) 	++ :: double (N)  :: number (NM) property (N) 
SPECIAL:NAME:Param void setLcinfo(HeaderLcinfo lcinfo): set (V)  | lcinfo (N) 	++ :: [ header (NM) lcinfo (N) - lcinfo (N) ] :: param (N) 
SPECIAL:NAME:SequenceEmitter List<SequenceFieldEmitter> getFields(): get (V)  | fields (N) 	++ :: list (NM) sequence (NM) field (NM) emitter (N)  :: sequence (NM) emitter (N) 
NOUN_PHRASE:NAME:Symbol Scope members(): get (V) | members (N) 	++ :: symbol (N)  :: scope (N) 
NOUN_PHRASE:NAME:DlAdd Node newInstance(): get (V) | new (NM) instance (NI) 	++ :: dl (NM) add (N)  :: node (NI) 
BASE_VERB:NAME:JOggVirtualAlias void updateID(int id): update (V)  | EQUIV[ID (NI) , [ int (N) - id (NI) ]]	++ :: J (NM) ogg (NM) virtual (NM) alias (N) 
SPECIAL:NAME:HeaderLcinfo void setAttr_name(int i, String _value): set (V)  | attr (NM) name (NI) 	++ :: [ int (N) - i (N) ] :: [ string (NI) - value (NI) ] :: header (NM) lcinfo (N) 
VOID_NP:NAME:JointErrorHandler void error(SAXParseException e): handle (V) | error (N) 	++ :: [ SAX (NM) parse (NM) exception (N) - e (N) ] :: joint (NM) error (NM) handler (N)  :: void (N) 
BASE_VERB:NAME:ClientProtocol void send_card_color(int cid, int color): send (V)  | EQUIV[card (NM) color (N) , [ int (N) - color (N) ]]	++ :: [ int (N) - cid (N) ] :: client (NM) protocol (N) 
SPECIAL:NAME:TransactionServiceImpl Status get_status(): get (V)  | status (N) 	++ :: status (N)  :: transaction (NM) service (NM) impl (NI) 
SPECIAL:NAME:AbstractTab GruntspudContext getContext(): get (V)  | context (N) 	++ :: gruntspud (NM) context (N)  :: abstract (NM) tab (N) 
SPECIAL:NAME:TableReference String getExpression(): get (V)  | expression (N) 	++ :: string (NI)  :: table (NM) reference (NI) 
CONSTRUCTOR:NAME:MultipleThreadException MultipleThreadException MultipleThreadException():  | multiple (NM) thread (NM) exception (N) 	++
SPECIAL:FORM:MatlabSyntax static void set(Matrix A, int i0, int i1, int j0, int j1, Matrix X): set (V)  | [ matrix (N) - A (N) ]	++ :: [ int (N) - i (NM) 0 (N) ] :: [ int (N) - i (NM) 1 (N) ] :: [ int (N) - j (NM) 0 (N) ] :: [ int (N) - j (NM) 1 (N) ] :: [ matrix (N) - X (N) ] :: matlab (NM) syntax (N) 
V_3P_IRR:NAME:Unit boolean isAmpere(): is (V)  | ampere (N) 	++ :: boolean (N)  :: unit (N) 
SPECIAL:NAME:DroppableList String getItem(int index): get (V)  | item (NI) 	++ :: [ int (N) - index (NI) ] :: string (NI)  :: droppable (NM) list (N) 
SPECIAL:NAME:MD_Band void setPeakResponse(BigDecimal peakResponse): set (V)  | peak (NM) response (N) 	++ :: [ big (NM) decimal (N) - peak (NM) response (N) ] :: MD (NM) band (N) 
NOUN_PHRASE:NAME:Prayer_AnimateSpectre int classificationCode(): get (V) | classification (NM) code (NI) 	++ :: prayer (NM) animate (NM) spectre (N)  :: int (N) 
SPECIAL:NAME:Project InterfaceProjectUI getProjectUI(): get (V)  | project (NM) UI (N) 	++ :: interface (NM) project (NM) UI (N)  :: project (N) 
CONSTRUCTOR:NAME:Tank Tank Tank(Agent agent, String productions, String color, Point initialLocation, String facing, int energy, int health, int missiles, TankSoarWorld world):  | tank (N) 	++ :: [ agent (N) - agent (N) ] :: [ string (NI) - productions (N) ] :: [ string (NI) - color (N) ] :: [ point (N) - initial (NM) location (NI) ] :: [ string (NI) - facing (N) ] :: [ int (N) - energy (N) ] :: [ int (N) - health (N) ] :: [ int (N) - missiles (N) ] :: [ tank (NM) soar (NM) world (N) - world (N) ]
SPECIAL:NAME:VariableImpl Boolean getFree(): get (V)  | free (N) 	++ :: boolean (N)  :: variable (NM) impl (NI) 
SPECIAL:NAME:ShoppingCouponServiceImpl ShoppingCoupon addCoupon(long plid, String code, boolean autoCode, String name, String description, int startDateMonth, int startDateDay, int startDateYear, int startDateHour, int startDateMinute, int endDateMonth, int endDateDay, int endDateYear, int endDateHour, int endDateMinute, boolean neverExpire, boolean active, String limitCategories, String limitSkus, double minOrder, double discount, String discountType): add (V)  | coupon (N) 	++ :: [ long (N) - plid (N) ] :: [ string (NI) - code (NI) ] :: [ boolean (N) - auto (NM) code (NI) ] :: [ string (NI) - name (NI) ] :: [ string (NI) - description (NI) ] :: [ int (N) - start (NM) date (NM) month (N) ] :: [ int (N) - start (NM) date (NM) day (N) ] :: [ int (N) - start (NM) date (NM) year (N) ] :: [ int (N) - start (NM) date (NM) hour (N) ] :: [ int (N) - start (NM) date (NM) minute (N) ] :: [ int (N) - end (NM) date (NM) month (N) ] :: [ int (N) - end (NM) date (NM) day (N) ] :: [ int (N) - end (NM) date (NM) year (N) ] :: [ int (N) - end (NM) date (NM) hour (N) ] :: [ int (N) - end (NM) date (NM) minute (N) ] :: [ boolean (N) - never (NM) expire (N) ] :: [ boolean (N) - active (N) ] :: [ string (NI) - limit (NM) categories (N) ] :: [ string (NI) - limit (NM) skus (N) ] :: [ double (N) - min (NM) order (N) ] :: [ double (N) - discount (N) ] :: [ string (NI) - discount (NM) type (N) ] :: shopping (NM) coupon (N)  :: shopping (NM) coupon (NM) service (NM) impl (NI) 
CONSTRUCTOR:NAME:ConstantLongInfo ConstantLongInfo ConstantLongInfo(ByteReader in):  | constant (NM) long (NM) info (NI) 	++ :: [ byte (NM) reader (N) - in (NI) ]
SPECIAL:NAME:AccessLogValveForm String getResolveHosts(): get (V)  | resolve (NM) hosts (N) 	++ :: string (NI)  :: access (NM) log (NM) valve (NM) form (N) 
SPECIAL:NAME:PortletAppAddResource void addJavaScriptAtPositionPlain(FacesContext context, ResourcePosition position, Class myfacesCustomComponent, String resourceName): add (V)  | java (NM) script (N) -- at (P) position (NM) plain (N) 	++ :: [ faces (NM) context (N) - context (N) ] :: [ resource (NM) position (N) - position (N) ] :: [ class (NI) - myfaces (NM) custom (NM) component (N) ] :: [ string (NI) - resource (NM) name (NI) ] :: portlet (NM) app (NM) add (NM) resource (N) 
SPECIAL:NAME:DefaultMessageDefinition void setType(String type): set (V)  | type (N) 	++ :: [ string (NI) - type (N) ] :: default (NM) message (NM) definition (NI) 
SPECIAL:NAME:SDLPixelFormat void setAlpha(short argAlpha): set (V)  | alpha (N) 	++ :: [ short (N) - arg (NM) alpha (N) ] :: SDL (NM) pixel (NM) format (NI) 
BASE_VERB:FORM:ServiceDaemon void service(Socket socket): service (V)  | [ socket (N) - socket (N) ]	++ :: service (NM) daemon (N) 
SPECIAL:NAME:DataObject DataAttribute getAttribute(String name): get (V)  | attribute (N) 	++ :: [ string (NI) - name (NI) ] :: data (NM) attribute (N)  :: data (NM) object (NI) 
SPECIAL:NAME:ClientInfo void setEncoding(String enc): set (V)  | encoding (N) 	++ :: [ string (NI) - enc (N) ] :: client (NM) info (NI) 
SPECIAL:NAME:AbstractChartPanel void setChartRenderer(Map renderer): set (V)  | chart (NM) renderer (N) 	++ :: [ map (N) - renderer (N) ] :: abstract (NM) chart (NM) panel (N) 
PREP:NAME:ActivityManagementMBeanTestSbb void onTCKResourceEventY1(TCKResourceEventY event, ActivityContextInterface aci): handle (V) | on (NM) TCK (NM) resource (NM) event (NM) Y (N) 1 (D) 	++ :: [ TCK (NM) resource (NM) event (NM) Y (N) - event (NI) ] :: [ activity (NM) context (NM) interface (NI) - aci (N) ] :: activity (NM) management (NM) M (NM) bean (NM) test (NM) sbb (N)  :: void (N) 
BASE_VERB:NAME:CPlayerObject3D void moveBackwardsIfEnoughAPs(): move (V)  | backwards (NM) if (NM) enough (DT) A (NM) ps (N) 	++ :: C (NM) player (NM) object (NM) 3 (NM) D (N) 
SPECIAL:CLAS:PropertiesManager static void load(): load (V)  | properties (NM) manager (N) 	++
SPECIAL:NAME:Kontext User getUser(): get (V)  | user (N) 	++ :: user (N)  :: kontext (N) 
SPECIAL:NAME:ContactFacadeLocal Collection getEmployeeListCollection(int individualID): get (V)  | employee (NM) list (NM) collection (N) 	++ :: [ int (N) - individual (NM) ID (NI) ] :: collection (N)  :: contact (NM) facade (NM) local (N) 
ENDS_WITH_ED:NAME:TabbedHandler void fireChanged(Element currentPanel): handle (V) | fire (NM) changed (N) 	++ :: [ element (NI) - current (NM) panel (N) ] :: tabbed (NM) handler (N)  :: void (N) 
V_3P_IRR:NAME:RegistrationInstructionsResponse boolean isSet(ClOrdID field): is (V)  | set (N) 	++ :: [ cl (NM) ord (NM) ID (NI) - field (N) ] :: boolean (N)  :: registration (NM) instructions (NM) response (N) 
SPECIAL:NAME:Town GeoData getGeo_data(): get (V)  | geo (NM) data (NI) 	++ :: geo (NM) data (NI)  :: town (N) 
CONSTRUCTOR:NAME:ColumnsImpl ColumnsImpl ColumnsImpl(SchemaType sType):  | columns (NM) impl (NI) 	++ :: [ schema (NM) type (N) - s (NM) type (N) ]
SPECIAL:NAME:DiscussionTopic int getNThreads(): get (V)  | N (NM) threads (N) 	++ :: int (N)  :: discussion (NM) topic (N) 
SPECIAL:NAME:CorePeerFailureDetector GenericState getCurrentState(): get (V)  | current (NM) state (N) 	++ :: generic (NM) state (N)  :: core (NM) peer (NM) failure (NM) detector (N) 
NOUN_PHRASE:NAME:SunGraphicsEnvironment static boolean fontSupportsDefaultEncoding(Font font): get (V) | font (NM) supports (NM) default (NM) encoding (N) 	++ :: [ font (N) - font (N) ] :: sun (NM) graphics (NM) environment (N)  :: boolean (N) 
BASE_VERB:FORM:HuffEncoder int encode(int coef, int last_dc, int len): encode (V)  | [ int (N) - coef (N) ]	++ :: [ int (N) - last (DT) dc (N) ] :: [ int (N) - len (N) ] :: huff (NM) encoder (N)  :: int (N) 
ENDS_WITH_ED:NAME:void valueChanged(TreeSelectionEvent e): handle (V) | value (NM) changed (N) 	++ :: [ tree (NM) selection (NM) event (NI) - e (N) ] :: ANONYMOUS (N)  :: void (N) 
V_3P_IRR:NAME:Contents boolean isFileValid(File file): is (V)  | file (NM) valid (N) 	++ :: [ file (NI) - file (NI) ] :: boolean (N)  :: contents (N) 
VOID_NP:NAME:MODERES_GenericGUIGDMOGRMParser void token_error(): handle (V) | token (NM) error (N) 	++ :: MODERES (NM) generic (NM) GUIGDMOGRM (NM) parser (N)  :: void (N) 
ENDS_WITH_ED:NAME:void mousePressed(MouseEvent e): handle (V) | mouse (NM) pressed (N) 	++ :: [ mouse (NM) event (NI) - e (N) ] :: ANONYMOUS (N)  :: void (N) 
V_3PS:FORM:PluralRules boolean equals(PluralRules rhs): equals (V)  | [ plural (NM) rules (N) - rhs (N) ]	++ :: plural (NM) rules (N)  :: boolean (N) 
SPECIAL:NAME:UpdateUserSettings void setContent2(String content2): set (V)  | content (N) 2 (D) 	++ :: [ string (NI) - content (NM) 2 (N) ] :: update (NM) user (NM) settings (N) 
V_3P_IRR:NAME:GameRules boolean hasWon(BoundedUniverse u, byte playersColour): has (V)  | won (N) 	++ :: [ bounded (NM) universe (N) - u (N) ] :: [ byte (N) - players (NM) colour (N) ] :: boolean (N)  :: game (NM) rules (N) 
SPECIAL:CLAS:WaitStep static MemopsBaseClass getByKey(Project root, List fullKey): get (V)  | wait (NM) step (N) -- by (P) EQUIV[key (NI) , [ list (N) - full (NM) key (NI) ]]	++ :: [ project (N) - root (N) ] :: memops (NM) base (NM) class (NI) 
SPECIAL:NAME:CommandSyntaxTest void testCommandSyntax(): test (VI)  | command (NM) syntax (N) 	++ :: command (NM) syntax (NM) test (N) 
SPECIAL:NAME:DsDef long getHeartbeat(): get (V)  | heartbeat (N) 	++ :: long (N)  :: ds (NM) def (NI) 
BASE_VERB:FORM:OccuranceList OccuranceList intersect(OccuranceList other): intersect (V)  | [ occurance (NM) list (N) - other (DT) ]	++ :: occurance (NM) list (N)  :: occurance (NM) list (N) 
SPECIAL:NAME:DisplayModel String getShortDisplay(): get (V)  | short (NM) display (N) 	++ :: string (NI)  :: display (NM) model (NI) 
BASE_VERB:FORM:NOFileManager static void save(BaseModel pModel, File out): save (V)  | [ base (NM) model (NI) - p (NM) model (NI) ]	++ :: [ file (NI) - out (N) ] :: NO (DT) file (NM) manager (N) 
SPECIAL:NAME:RanDistRightHyp Point getOperatorPosition(Predicate predicate, String predStr, IPosition position): get (V)  | EQUIV[operator (NM) position (N) , [ I (NM) position (N) - position (N) ]]	++ :: [ predicate (N) - predicate (N) ] :: [ string (NI) - pred (NM) str (NI) ] :: point (N)  :: ran (NM) dist (NM) right (NM) hyp (N) 
CONSTRUCTOR:NAME:SAX2DOMEx SAX2DOMEx SAX2DOMEx(Node node):  | SAX (NM) 2 (NM) DOM (NM) ex (N) 	++ :: [ node (NI) - node (NI) ]
SPECIAL:NAME:Connection void setReadOnly(boolean readOnly): set (V)  | read (NM) only (N) 	++ :: [ boolean (N) - read (NM) only (N) ] :: connection (N) 
BASE_VERB:NAME:AtomImpl void unregisterListener(ThingListener listener): unregister (V)  | EQUIV[listener (N) , [ thing (NM) listener (N) - listener (N) ]]	++ :: atom (NM) impl (NI) 
BASE_VERB:FORM:GL11 static void glFogi(int pname, int param): gl (PRE) fogi (V)  | [ int (N) - pname (N) ]	++ :: [ int (N) - param (N) ] :: GL (NM) 11 (N) 
SPECIAL:NAME:SelectionTableModel Object getValueAt(int rowIndex, int columnIndex): get (V)  | value (NI) -- at (P) [ int (N) - row (NM) index (NI) ]	++ :: [ int (N) - row (NM) index (NI) ] :: [ int (N) - column (NM) index (NI) ] :: object (NI)  :: selection (NM) table (NM) model (NI) 
SPECIAL:NAME:CCTask void setRelentless(boolean relentless): set (V)  | relentless (N) 	++ :: [ boolean (N) - relentless (N) ] :: CC (NM) task (N) 
SPECIAL:NAME:PatientOverzichtDialog JPanel getJPanel2(): get (V)  | J (NM) panel (N) 2 (D) 	++ :: J (NM) panel (N)  :: patient (NM) overzicht (NM) dialog (N) 
CONSTRUCTOR:NAME:Boot Boot Boot(String args):  | boot (N) 	++ :: [ string (NI) - args (N) ]
BASE_VERB:FORM:ExpireMap Object put(Object key, Object value): put (V)  | [ object (NI) - key (NI) ]	++ :: [ object (NI) - value (NI) ] :: expire (NM) map (N)  :: object (NI) 
SPECIAL:CLAS:AbstractMyArticlesViewBlock Object clone(): clone (V)  | abstract (NM) my (PR) articles (NM) view (NM) block (N) 	++ :: object (NI) 
SPECIAL:NAME:PCTRunTest void test25(): test (VI)  | 25 (D) 	++ :: PCT (NM) run (NM) test (N) 
NOUN_PHRASE:NAME:AllWebTests static Test suite(): get (V) | suite (N) 	++ :: all (DT) web (NM) tests (N)  :: test (N) 
CONSTRUCTOR:NAME:PackageOutlineImpl PackageOutlineImpl PackageOutlineImpl(BeanGenerator outline, Model model, JPackage _pkg):  | package (NM) outline (NM) impl (NI) 	++ :: [ bean (NM) generator (N) - outline (N) ] :: [ model (NI) - model (NI) ] :: [ J (NM) package (N) - pkg (N) ]
CONSTRUCTOR:NAME:SAXParseException SAXParseException SAXParseException(String message, Locator locator, Exception e):  | SAX (NM) parse (NM) exception (N) 	++ :: [ string (NI) - message (NI) ] :: [ locator (N) - locator (N) ] :: [ exception (N) - e (N) ]
CONSTRUCTOR:NAME:DoF2DatabaseViewAsStatistics DoF2DatabaseViewAsStatistics DoF2DatabaseViewAsStatistics():  | do (NM) F (NM) 2 (NM) database (NM) view (NM) as (NM) statistics (N) 	++
SPECIAL:NAME:InputFilesPanel void addInputFileRow(String name, boolean editable): add (V)  | input (NM) file (NM) row (N) 	++ :: [ string (NI) - name (NI) ] :: [ boolean (N) - editable (N) ] :: input (NM) files (NM) panel (N) 
CONSTRUCTOR:NAME:TestBean TestBean TestBean(boolean booleanProperty):  | test (NM) bean (NI) 	++ :: [ boolean (N) - boolean (NM) property (N) ]
SPECIAL:NAME:JGCSChannelImpl JGCSDataSession getDataSession(): get (V)  | data (NM) session (N) 	++ :: JGCS (NM) data (NM) session (N)  :: JGCS (NM) channel (NM) impl (NI) 
V_3P_IRR:NAME:Generalization boolean hasSubClasss(): has (V)  | sub (NM) classs (N) 	++ :: boolean (N)  :: generalization (N) 
BASE_VERB:CLAS:OutputStream void close(): close (V)  | output (NM) stream (NI) 	++
SPECIAL:NAME:OptionsSpiderPanel JScrollPane getJScrollPane1(): get (V)  | J (NM) scroll (NM) pane (N) 1 (D) 	++ :: J (NM) scroll (NM) pane (N)  :: options (NM) spider (NM) panel (N) 
BASE_VERB:NAME:DSASigner BigInteger calculateE(BigInteger n, byte message): calculate (V)  | E (N) 	++ :: [ big (NM) integer (N) - n (N) ] :: [ byte (N) - message (NI) ] :: big (NM) integer (N)  :: DSA (NM) signer (N) 
SPECIAL:NAME:NavigationBar String getInitiallyOpened(): get (V)  | initially (NM) opened (N) 	++ :: string (NI)  :: navigation (NM) bar (N) 
SPECIAL:NAME:URLConnectionAdapter String getHeaderField(int n): get (V)  | header (NM) field (N) 	++ :: [ int (N) - n (N) ] :: string (NI)  :: URL (NM) connection (NM) adapter (NI) 
SPECIAL:NAME:TextEffect Font getFont(): get (V)  | font (N) 	++ :: font (N)  :: text (NM) effect (N) 
SPECIAL:NAME:SeqAnalysisLocal void setProgOutput(String cmd, InputStreamReader isr): set (V)  | prog (NM) output (N) 	++ :: [ string (NI) - cmd (N) ] :: [ input (NM) stream (NM) reader (N) - isr (N) ] :: seq (NM) analysis (NM) local (N) 
PREP:NAME:Adapter static FloatCollection asFloats(Collection collection):  | as (P) floats (N) 	++ :: [ collection (N) - collection (N) ] :: adapter (NI)  :: float (NM) collection (N) 
SPECIAL:NAME:TestStringPropertyGets void testSubstring2End(): test (VI) substring (V)  | 2 (D) end (N) 	++ :: test (NM) string (NM) property (NM) gets (N) 
SPECIAL:NAME:PdfView String getFont(): get (V)  | font (N) 	++ :: string (NI)  :: pdf (NM) view (NI) 
BASE_VERB:CLAS:BrowseEdgeModel XMLElement save(): save (V)  | browse (NM) edge (NM) model (NI) 	++ :: XML (NM) element (NI) 
V_3P_IRR:NAME:StringTools static boolean isKana(char c): is (V)  | kana (N) 	++ :: [ char (N) - c (N) ] :: boolean (N)  :: string (NM) tools (N) 
SPECIAL:NAME:JavaParameterizedClass void findMatchingMethods(String id, JavaType argTypes, boolean checkArgs, boolean allowConversion, boolean allowVarArgs, JavaStructuredType typeContext, Set<JavaFunction> foundMethods): find (V)  | EQUIV[matching (NM) methods (N) , [ set (NM) java (NM) function (N) - found (NM) methods (N) ]]	++ :: [ string (NI) - id (NI) ] :: [ java (NM) type (N) - arg (NM) types (N) ] :: [ java (NM) structured (NM) type (N) - type (NM) context (N) ] :: [ boolean (N) - check (NM) args (N) ] :: [ boolean (N) - allow (NM) conversion (N) ] :: [ boolean (N) - allow (NM) var (NM) args (N) ] :: java (NM) parameterized (NM) class (NI) 
V_3P_IRR:NAME:PostgresqlExpression boolean isDateAttribute(EOAttribute eoattribute): is (V)  | EQUIV[date (NM) attribute (N) , [ EO (NM) attribute (N) - eoattribute (N) ]]	++ :: boolean (N)  :: postgresql (NM) expression (N) 
NOUN_PHRASE:NAME:Poison_Firebreather String name(): get (V) | name (NI) 	++ :: poison (NM) firebreather (N)  :: string (NI) 
BASE_VERB:NAME:ParseHTML void handleEndTag(Tag t, int pos): handle (VI)  | EQUIV[end (NM) tag (NI) , [ tag (NI) - t (N) ]]	++ :: [ int (N) - pos (N) ] :: parse (NM) HTML (N) 
SPECIAL:NAME:HorizontalLayout void addLayoutComponent(String name, Component comp): add (V)  | EQUIV[layout (NM) component (N) , [ component (N) - comp (N) ]]	++ :: [ string (NI) - name (NI) ] :: horizontal (NM) layout (N) 
SPECIAL:FORM:ShadowFunctionOrSetTypeJ3D boolean doTransform(Object group, Data data, float value_array, float default_values, DataRenderer renderer): do (VI) transform (V)  | [ object (NI) - group (N) ]	++ :: [ data (NI) - data (NI) ] :: [ float (N) - value (NM) array (N) ] :: [ float (N) - default (NM) values (N) ] :: [ data (NM) renderer (N) - renderer (N) ] :: shadow (NM) function (NM) or (NM) set (NM) type (NM) J (NM) 3 (NM) D (N)  :: boolean (N) 
SPECIAL:NAME:PortletUrl void setParameter(String name, String value): set (V)  | parameter (N) 	++ :: [ string (NI) - name (NI) ] :: [ string (NI) - value (NI) ] :: portlet (NM) url (NI) 
EMPTY:NONE:BentoParser boolean jj_3R_534():  | jj (PRE) 3 (D) R (PRE) 534 (D) 
BASE_VERB:NAME:ContourPolygon void xsetWidth(Length width): xset (V)  | EQUIV[width (N) , [ length (N) - width (N) ]]	++ :: contour (NM) polygon (N) 
SPECIAL:FORM:LmdifTest_f77 static void main(String args): main (V)  | [ string (NI) - args (N) ]	++ :: lmdif (NM) test (NM) f (NM) 77 (N) 
SPECIAL:FORM:ServletOutputStreamFacade void write(byte b, int off, int len): write (V)  | [ byte (N) - b (N) ]	++ :: [ int (N) - off (N) ] :: [ int (N) - len (N) ] :: servlet (NM) output (NM) stream (NM) facade (NI) 
SPECIAL:NAME:AssertConstructor static void assertHasSameConstructor(String message, Class c, Class arguments, int protection): assert (VI)  | has (NM) same (NM) constructor (N) 	++ :: [ string (NI) - message (NI) ] :: [ class (NI) - c (N) ] :: [ class (NI) - arguments (N) ] :: [ int (N) - protection (N) ] :: assert (NM) constructor (N) 
SPECIAL:FORM:IRteoService IXJLDocument rteoXJLClone(IXJLDocument $IXJLDocument): rteo (PRE) XJL (PRE) clone (V)  | [ IXJL (NM) document (NI) - IXJL (NM) document (NI) ]	++ :: I (NM) rteo (NM) service (N)  :: IXJL (NM) document (NI) 
V_3P_IRR:NAME:Scanner boolean hasNextShort(): has (V)  | next (DT) short (N) 	++ :: boolean (N)  :: scanner (N) 
SPECIAL:CLAS:BugcommentsDAO List findByCommentInfo(Object commentInfo): find (V)  | bugcomments (NM) DAO (N) -- by (P) EQUIV[comment (NM) info (NI) , [ object (NI) - comment (NM) info (NI) ]]	++ :: list (N) 
SPECIAL:NAME:JRFillTextElement byte getMode(): get (V)  | mode (N) 	++ :: byte (N)  :: JR (NM) fill (NM) text (NM) element (NI) 
SPECIAL:FORM:MultilegOrderCancelReplaceRequest ClOrdLinkID get(ClOrdLinkID value): get (V)  | [ cl (NM) ord (NM) link (NM) ID (NI) - value (NI) ]	++ :: multileg (NM) order (NM) cancel (NM) replace (NM) request (N)  :: cl (NM) ord (NM) link (NM) ID (NI) 
SPECIAL:NAME:FontChooser Font getFont(): get (V)  | font (N) 	++ :: font (N)  :: font (NM) chooser (N) 
SPECIAL:NAME:SearchQueryTest void testWrongKeysInErrors(): test (VI)  | wrong (NM) keys (N) -- in (P) errors (N) 	++ :: search (NM) query (NM) test (N) 
SPECIAL:NAME:AdapterDataOutput void writeInt(int v): write (V)  | EQUIV[int (N) , [ int (N) - v (N) ]]	++ :: adapter (NM) data (NM) output (N) 
SPECIAL:NAME:Case Collection getDirectlyDependentSteps(Step step): get (V)  | directly (NM) dependent (NM) steps (N) 	++ :: [ step (N) - step (N) ] :: collection (N)  :: case (N) 
VOID_NP:NAME:TabbedPrintWriter void tab(): handle (V) | tab (N) 	++ :: tabbed (NM) print (NM) writer (N)  :: void (N) 
SPECIAL:NAME:URI String getRawAuthority(): get (V)  | raw (NM) authority (N) 	++ :: string (NI)  :: URI (NI) 
SPECIAL:NAME:WebappConfig String getBaseUri(): get (V)  | base (NM) uri (NI) 	++ :: string (NI)  :: webapp (NM) config (NI) 
SPECIAL:NAME:Utilities static int findLargestIndex(T inArray, Comparator<T> comparator): find (V)  | largest (NM) index (NI) 	++ :: [ T (N) - in (NM) array (N) ] :: [ comparator (NM) T (N) - comparator (N) ] :: int (N)  :: utilities (N) 
CONSTRUCTOR:NAME:BlobManager BlobManager BlobManager(Raf raf, BeeTree bt):  | blob (NM) manager (N) 	++ :: [ raf (N) - raf (N) ] :: [ bee (NM) tree (NI) - bt (N) ]
SPECIAL:NAME:AddStrategy void initResult(): init (V)  | result (N) 	++ :: add (NM) strategy (N) 
SPECIAL:NAME:Envelope void setActionCommandsEnabled(): set (V)  | action (NM) commands (NM) enabled (N) 	++ :: envelope (N) 
NOUN_PHRASE:NAME:GameResult Iterator<Player> players(): get (V) | players (N) 	++ :: game (NM) result (N)  :: iterator (NM) player (N) 
SPECIAL:NAME:Test4 void initMemory(): init (V)  | memory (N) 	++ :: test (NM) 4 (N) 
BASE_VERB:FORM:Display boolean SEL_TIMEOUT(long senderHandle, int selector, long ptr): SEL (PRE) TIMEOUT (V)  | [ long (N) - sender (NM) handle (NI) ]	++ :: [ int (N) - selector (N) ] :: [ long (N) - ptr (N) ] :: display (N)  :: boolean (N) 
SPECIAL:NAME:PackageFactory static Element getTimeoutsContent(Timeouts _Timeouts, Element element, String reference): get (V)  | timeouts (NM) content (N) 	++ :: [ timeouts (N) - timeouts (N) ] :: [ element (NI) - element (NI) ] :: [ string (NI) - reference (NI) ] :: element (NI)  :: package (NM) factory (N) 
ENDS_WITH_ED:NAME:PropertiesChangeListener void propertiesChanged(PropertiesChangeEvent e): handle (V) | properties (NM) changed (N) 	++ :: [ properties (NM) change (NM) event (NI) - e (N) ] :: properties (NM) change (NM) listener (N)  :: void (N) 
SPECIAL:FORM:TIDEClassNode TIDENode copy(JTree destTree, TreePath destPath): copy (V)  | [ J (NM) tree (NI) - dest (NM) tree (NI) ]	++ :: [ tree (NM) path (NI) - dest (NM) path (NI) ] :: TIDE (NM) class (NM) node (NI)  :: TIDE (NM) node (NI) 
CONSTRUCTOR:NAME:ExtDateField ExtDateField ExtDateField(boolean showWeekNumbers):  | ext (NM) date (NM) field (N) 	++ :: [ boolean (N) - show (NM) week (NM) numbers (N) ]
SPECIAL:NAME:Action int getPaintActionLocation(): get (V)  | paint (NM) action (NM) location (NI) 	++ :: int (N)  :: action (N) 
SPECIAL:NAME:InteractiveCommandLine void removeUpdate(DocumentEvent e): remove (V)  | update (N) 	++ :: [ document (NM) event (NI) - e (N) ] :: interactive (NM) command (NM) line (N) 
SPECIAL:NAME:ParsedHTML WebLink getLinkWithImageText(String text): get (V)  | link (N) -- with (P) EQUIV[image (NM) text (NI) , [ string (NI) - text (NI) ]]	++ :: web (NM) link (N)  :: parsed (NM) HTML (N) 
BASE_VERB:NAME:RACompiler static RAStatementSet parseStatementSet(String s): parse (V)  | statement (NM) set (N) 	++ :: [ string (NI) - s (N) ] :: RA (NM) statement (NM) set (N)  :: RA (NM) compiler (N) 
VOID_NP:NAME:MS void collectionPhase(int phaseId): handle (V) | collection (NM) phase (N) 	++ :: [ int (N) - phase (NM) id (NI) ] :: MS (N)  :: void (N) 
SPECIAL:NAME:ReferenceInvalidatingEntityCache int getCacheID(): get (V)  | cache (NM) ID (NI) 	++ :: int (N)  :: reference (NM) invalidating (NM) entity (NM) cache (N) 
SPECIAL:NAME:Timeline List getDays(): get (V)  | days (N) 	++ :: list (N)  :: timeline (N) 
BASE_VERB:NAME:ASTAnalysisContainer void outAEffectAnykeyword(AEffectAnykeyword node): out (V)  | EQUIV[A (NM) effect (NM) anykeyword (N) , [ A (NM) effect (NM) anykeyword (N) - node (NI) ]]	++ :: AST (NM) analysis (NM) container (NI) 
PREP:NAME:Offset static Offset fromInt(int address): convert (V) | from (P) int (N) 	++ :: [ int (N) - address (NI) ] :: offset (N)  :: offset (N) 
SPECIAL:NAME:Primitive short getShortValue(): get (V)  | short (NM) value (NI) 	++ :: short (N)  :: primitive (N) 
SPECIAL:NAME:XML String getNodeName(String instanceName): get (V)  | EQUIV[node (NM) name (NI) , [ string (NI) - instance (NM) name (NI) ]]	++ :: string (NI)  :: XML (N) 
SPECIAL:NAME:XmlRpcAccount String getPassword(): get (V)  | password (N) 	++ :: string (NI)  :: xml (NM) rpc (NM) account (N) 
V_3PS:FORM:ParserSelecter boolean accepts(char c): accepts (V)  | [ char (N) - c (N) ]	++ :: parser (NM) selecter (N)  :: boolean (N) 
EVENT_PARAM:NAME:StylePresentationDialog void propertyChange(PropertyChangeEvent evt): handle (V) | property (NM) change (N) 	++ :: [ property (NM) change (NM) event (NI) - evt (N) ] :: style (NM) presentation (NM) dialog (N)  :: void (N) 
CONSTRUCTOR:NAME:FileTransferProxy FileTransferProxy FileTransferProxy():  | file (NM) transfer (NM) proxy (NI) 	++
SPECIAL:NAME:IXMLElement void setName(String fullName, String namespace): set (V)  | name (NI) 	++ :: [ string (NI) - full (NM) name (NI) ] :: [ string (NI) - namespace (N) ] :: IXML (NM) element (NI) 
CONSTRUCTOR:NAME:KarteikartenDialog KarteikartenDialog KarteikartenDialog(Frame owner, String title):  | karteikarten (NM) dialog (N) 	++ :: [ frame (N) - owner (N) ] :: [ string (NI) - title (N) ]
SPECIAL:NAME:ShrimpCascadeLayout void resetLayout(): reset (V)  | layout (N) 	++ :: shrimp (NM) cascade (NM) layout (N) 
BASE_VERB:NAME:VMDouble static double longBitsToDouble(long v): long (V)  | bits (N) -- to (P) double (N) 	++ :: [ long (N) - v (N) ] :: double (N)  :: VM (NM) double (N) 
SPECIAL:CLAS:Command void execute(): execute (VI)  | command (N) 	++
BASE_VERB:NAME:Amount BigDecimal calcNearestAbove(BigDecimal amount): calc (V)  | nearest (N) -- above (P) [ big (NM) decimal (N) - amount (N) ]	++ :: [ big (NM) decimal (N) - amount (N) ] :: big (NM) decimal (N)  :: amount (N) 
CONSTRUCTOR:NAME:SafeThread SafeThread SafeThread():  | safe (NM) thread (N) 	++
SPECIAL:NAME:StyleMapEditor void setUpColorEditor(JTable table): set (V) up (VP)  | color (NM) editor (N) 	++ :: [ J (NM) table (N) - table (N) ] :: style (NM) map (NM) editor (N) 
PREP:NAME:boolean with(Object edge):  | with (P) 	++ :: [ object (NI) - edge (N) ] :: ANONYMOUS (N)  :: boolean (N) 
SPECIAL:NAME:ECIESTest String getName(): get (V)  | name (NI) 	++ :: string (NI)  :: ECIES (NM) test (N) 
V_3P_IRR:NAME:CIM_PackageInChassis boolean isDataValid(Vector invalidProperties): is (V)  | data (NM) valid (N) 	++ :: [ vector (N) - invalid (NM) properties (N) ] :: boolean (N)  :: CIM (NM) package (NM) in (NM) chassis (N) 
BASE_VERB:FORM:JoTabbedPaneUI void update(Graphics g, JComponent c): update (V)  | [ graphics (N) - g (N) ]	++ :: [ J (NM) component (N) - c (N) ] :: jo (NM) tabbed (NM) pane (NM) UI (N) 
BASE_VERB:NAME:HeadWriter void updateMin(Point a_value): update (V)  | min (N) 	++ :: [ point (N) - a (NM) value (NI) ] :: head (NM) writer (N) 
SPECIAL:NAME:BasicJeriExporter boolean getKeepAlive(): get (V)  | keep (NM) alive (N) 	++ :: boolean (N)  :: basic (NM) jeri (NM) exporter (N) 
SPECIAL:NAME:SettingsNode String getKey(): get (V)  | key (NI) 	++ :: string (NI)  :: settings (NM) node (NI) 
SPECIAL:NAME:ThreeWayTurnout String getNextLogicalState(): get (V)  | next (DT) logical (NM) state (N) 	++ :: string (NI)  :: three (NM) way (NM) turnout (N) 
SPECIAL:NAME:ActionPlugin String getPathFromClassName(String fqn, String alias): get (V)  | path (NI) -- from (P) class (NM) name (NI) 	++ :: [ string (NI) - fqn (N) ] :: [ string (NI) - alias (N) ] :: string (NI)  :: action (NM) plugin (N) 
SPECIAL:NAME:DomUtils Element getAllChildrenWithAttribute(Element root, String elementname, String attribname, String attribval): get (V)  | all (DT) children (N) -- with (P) attribute (N) 	++ :: [ element (NI) - root (N) ] :: [ string (NI) - elementname (N) ] :: [ string (NI) - attribname (N) ] :: [ string (NI) - attribval (N) ] :: element (NI)  :: dom (NM) utils (N) 
SPECIAL:NAME:AbstractPersonSSN static List<PrimaryKey> findEnabledBySocialSecurityNumber(String ssn): find (V)  | enabled (N) -- by (P) social (NM) security (NM) number (NI) 	++ :: [ string (NI) - ssn (N) ] :: list (NM) primary (NM) key (NI)  :: abstract (NM) person (NM) SSN (N) 
CONSTRUCTOR:NAME:JButtonColorListener JButtonColorListener JButtonColorListener(Component parent, JColor color, JButton button):  | J (NM) button (NM) color (NM) listener (N) 	++ :: [ component (N) - parent (N) ] :: [ J (NM) color (N) - color (N) ] :: [ J (NM) button (N) - button (N) ]
BASE_VERB:NAME:TypeHierarchyViewPart void updateHierarchyViewer(boolean doExpand): update (V)  | hierarchy (NM) viewer (N) 	++ :: [ boolean (N) - do (NM) expand (N) ] :: [ boolean (N) - do (NM) expand (N) ] :: type (NM) hierarchy (NM) view (NM) part (N) 
SPECIAL:NAME:InputContext Locale getLocale(): get (V)  | locale (N) 	++ :: locale (N)  :: input (NM) context (N) 
SPECIAL:NAME:UsecaseAttributes2 void loadData(RQMLFirstClass elem): load (V)  | data (NI) 	++ :: [ RQML (NM) first (NM) class (NI) - elem (NI) ] :: usecase (NM) attributes (NM) 2 (N) 
SPECIAL:NAME:ResultSetMetaData int getColumnDisplaySize(int column): get (V)  | column (NM) display (NM) size (N) 	++ :: [ int (N) - column (N) ] :: int (N)  :: result (NM) set (NM) meta (NM) data (NI) 
SPECIAL:NAME:EditorSettingsPanel ActionListener getColorChangedAction(): get (V)  | color (NM) changed (NM) action (N) 	++ :: action (NM) listener (N)  :: editor (NM) settings (NM) panel (N) 
SPECIAL:NAME:SinglePartHttpResponse SSLInfo getSSLInfo(): get (V)  | SSL (NM) info (NI) 	++ :: SSL (NM) info (NI)  :: single (NM) part (NM) http (NM) response (N) 
CONSTRUCTOR:NAME:CreditCardInformation CreditCardInformation CreditCardInformation(String creditCard, String cardType, String creditcardVerificationValue, String expirationMonth, String expirationYear):  | credit (NM) card (NM) information (N) 	++ :: [ string (NI) - credit (NM) card (N) ] :: [ string (NI) - card (NM) type (N) ] :: [ string (NI) - creditcard (NM) verification (NM) value (NI) ] :: [ string (NI) - expiration (NM) month (N) ] :: [ string (NI) - expiration (NM) year (N) ]
SPECIAL:NAME:Spaceship double getAngle(): get (V)  | angle (N) 	++ :: double (N)  :: spaceship (N) 
SPECIAL:NAME:OptionDefinition String getLongKey(): get (V)  | long (NM) key (NI) 	++ :: string (NI)  :: option (NM) definition (NI) 
CONSTRUCTOR:NAME:DirectoryFilter DirectoryFilter DirectoryFilter(String directory):  | directory (NM) filter (N) 	++ :: [ string (NI) - directory (N) ]
SPECIAL:NAME:GetMetadatasGraphIdHistoryParams Long getNow4(): get (V)  | now (N) 4 (D) 	++ :: long (N)  :: get (NM) metadatas (NM) graph (NM) id (NM) history (NM) params (N) 
SPECIAL:NAME:PSWrapper IProofTree createFreshProofTree(IPSStatus psStatus): create (V)  | fresh (NM) proof (NM) tree (NI) 	++ :: [ IPS (NM) status (N) - ps (NM) status (N) ] :: I (NM) proof (NM) tree (NI)  :: PS (NM) wrapper (NI) 
SPECIAL:NAME:OrderMassCancelReport EncodedSecurityDesc getEncodedSecurityDesc(): get (V)  | encoded (NM) security (NM) desc (NI) 	++ :: encoded (NM) security (NM) desc (NI)  :: order (NM) mass (NM) cancel (NM) report (N) 
ENDS_WITH_ED:NAME:BinaryOperator void columnInserted(int sheetIndex, int col, boolean currentSheet): handle (V) | column (NM) inserted (N) 	++ :: [ int (N) - sheet (NM) index (NI) ] :: [ int (N) - col (N) ] :: [ boolean (N) - current (NM) sheet (N) ] :: binary (NM) operator (N)  :: void (N) 
SPECIAL:NAME:PieceGroup int getPiece(): get (V)  | piece (N) 	++ :: int (N)  :: piece (NM) group (N) 
SPECIAL:NAME:SheetTag String getHeaderLeft(): get (V)  | header (NM) left (N) 	++ :: string (NI)  :: sheet (NM) tag (NI) 
SPECIAL:NAME:CpeConfigurationImpl void setNumToProcess(int aNumToProcess): set (V)  | num (NI) -- to (P) process (N) 	++ :: [ int (N) - a (NM) num (NM) to (NM) process (N) ] :: cpe (NM) configuration (NM) impl (NI) 
SPECIAL:NAME:WriteXml Node __createObject(String name, String class_name, String type, String type_value): create (V)  | object (NI) 	++ :: [ string (NI) - name (NI) ] :: [ string (NI) - class (NM) name (NI) ] :: [ string (NI) - type (N) ] :: [ string (NI) - type (NM) value (NI) ] :: node (NI)  :: write (NM) xml (N) 
CONSTRUCTOR:NAME:AGSecondaryMenuPanel AGSecondaryMenuPanel AGSecondaryMenuPanel(VSCSPanel parent):  | AG (NM) secondary (NM) menu (NM) panel (N) 	++ :: [ VSCS (NM) panel (N) - parent (N) ]
SPECIAL:NAME:UpdateProteins Protein createNewProtein(SPTREntry sptrEntry, BioSource bioSource, boolean generateProteinShortlabelUsingBiosource): create (V)  | new (NM) protein (N) 	++ :: [ SPTR (NM) entry (NI) - sptr (NM) entry (NI) ] :: [ bio (NM) source (NI) - bio (NM) source (NI) ] :: [ boolean (N) - generate (NM) protein (NM) shortlabel (NM) using (NM) biosource (N) ] :: protein (N)  :: update (NM) proteins (N) 
SPECIAL:NAME:X_PA_Goal void setParent_ID(int Parent_ID): set (V)  | parent (NM) ID (NI) 	++ :: [ int (N) - parent (NM) ID (NI) ] :: X (NM) PA (NM) goal (N) 
BASE_VERB:NAME:PyLintPrefPage static boolean useErrors(): use (V)  | errors (N) 	++ :: boolean (N)  :: py (NM) lint (NM) pref (NM) page (N) 
SPECIAL:NAME:Document void removeUndoableEditListener(UndoableEditListener listener): remove (V)  | EQUIV[undoable (NM) edit (NM) listener (N) , [ undoable (NM) edit (NM) listener (N) - listener (N) ]]	++ :: document (NI) 
CONSTRUCTOR:NAME:ValueCustom ValueCustom ValueCustom(NestingBase parent, String name):  | value (NM) custom (N) 	++ :: [ nesting (NM) base (N) - parent (N) ] :: [ string (NI) - name (NI) ]
BASE_VERB:FORM:r362$$desc void debugPrint(int depth, PrintStream out, Object data): debug (VI) print (V)  | [ int (N) - depth (N) ]	++ :: [ print (NM) stream (NI) - out (N) ] :: [ object (NI) - data (NI) ] :: r (NM) 362 (NM) desc (NI) 
SPECIAL:NAME:Attribute void setPrecision(int prec): set (V)  | precision (N) 	++ :: [ int (N) - prec (N) ] :: attribute (N) 
SPECIAL:NAME:SealedObject Object getObject(Key key, String provider): get (V)  | object (NI) 	++ :: [ key (NI) - key (NI) ] :: [ string (NI) - provider (N) ] :: object (NI)  :: sealed (NM) object (NI) 
SPECIAL:NAME:XAffineTransform void setTransform(double m00, double m10, double m01, double m11, double m02, double m12): set (V)  | transform (N) 	++ :: [ double (N) - m (NM) 00 (N) ] :: [ double (N) - m (NM) 10 (N) ] :: [ double (N) - m (NM) 01 (N) ] :: [ double (N) - m (NM) 11 (N) ] :: [ double (N) - m (NM) 02 (N) ] :: [ double (N) - m (NM) 12 (N) ] :: X (NM) affine (NM) transform (N) 
SPECIAL:NAME:InvalidationManager void doBridgedOnlyInvalidateAll(BridgeInvalidationSubscriptionImpl exceptSource, String groupName): do (VI)  | bridged (NM) only (NM) invalidate (NM) all (DT) 	++ :: [ bridge (NM) invalidation (NM) subscription (NM) impl (NI) - except (NM) source (NI) ] :: [ string (NI) - group (NM) name (NI) ] :: invalidation (NM) manager (N) 
BASE_VERB:FORM:Factory static GradientStepCountAttribute parse(XMLStreamReader sr): parse (V)  | [ XML (NM) stream (NM) reader (N) - sr (N) ]	++ :: factory (N)  :: gradient (NM) step (NM) count (NM) attribute (N) 
SPECIAL:NAME:PtType void setEle(BigDecimal ele): set (V)  | ele (N) 	++ :: [ big (NM) decimal (N) - ele (N) ] :: pt (NM) type (N) 
SPECIAL:CLAS:ExplcitDefaultPersistenceConfigTestCase void setUp(): set (V) up (VP)  | explcit (NM) default (NM) persistence (NM) config (NM) test (NM) case (N) 	++
BASE_VERB:CLAS:RadioInputStream void close(): close (V)  | radio (NM) input (NM) stream (NI) 	++
SPECIAL:NAME:TeamLineupData double getMiddleAttack(): get (V)  | middle (NM) attack (N) 	++ :: double (N)  :: team (NM) lineup (NM) data (NI) 
SPECIAL:NAME:TestGeneral2 void testGetObjectByIdFromCache(): test (VI) get (V)  | object (NI) -- by (P) id (NM) from (NM) cache (N) 	++ :: test (NM) general (NM) 2 (N) 
ENDS_WITH_ED:NAME:ConnectWindow void actionPerformed(ActionEvent event): handle (V) | action (NM) performed (N) 	++ :: [ action (NM) event (NI) - event (NI) ] :: connect (NM) window (N)  :: void (N) 
V_3P_IRR:NAME:IACL boolean isValidAddress(EmailAddress address): is (V)  | EQUIV[valid (NM) address (NI) , [ email (NM) address (NI) - address (NI) ]]	++ :: boolean (N)  :: IACL (N) 
V_3P_IRR:NAME:BufferedImage boolean hasTileWriters(): has (V)  | tile (NM) writers (N) 	++ :: boolean (N)  :: buffered (NM) image (N) 
BASE_VERB:FORM:StringUtil static float split(String s, String delimiter, float x): split (V)  | [ string (NI) - s (N) ]	++ :: [ string (NI) - delimiter (N) ] :: [ float (N) - x (N) ] :: string (NM) util (N)  :: float (N) 
SPECIAL:NAME:BooleanMatrixMemoryTest void testMatrixLenght(): test (VI)  | matrix (NM) lenght (N) 	++ :: boolean (NM) matrix (NM) memory (NM) test (N) 
SPECIAL:NAME:DocumentFormat String getFileExtension(): get (V)  | file (NM) extension (N) 	++ :: string (NI)  :: document (NM) format (NI) 
BASE_VERB:NAME:VReport String genHelp(): gen (V)  | help (N) 	++ :: string (NI)  :: V (NM) report (N) 
V_3P_IRR:NAME:TextFileScanner boolean isDelimiter_Postcondition(char chr, boolean RESULT): is (V)  | delimiter (NM) postcondition (N) 	++ :: [ char (N) - chr (N) ] :: [ boolean (N) - RESULT (N) ] :: boolean (N)  :: text (NM) file (NM) scanner (N) 
SPECIAL:NAME:Caption void setOnkeypress(String onkeypress): set (V)  | onkeypress (N) 	++ :: [ string (NI) - onkeypress (N) ] :: caption (N) 
SPECIAL:FORM:BufferedImageCreator static BufferedImage create(ByteProcessor src): create (V)  | [ byte (NM) processor (N) - src (N) ]	++ :: buffered (NM) image (NM) creator (N)  :: buffered (NM) image (N) 
BASE_VERB:FORM:ErrorDialog static void show(String command, String message): show (V)  | [ string (NI) - command (N) ]	++ :: [ string (NI) - message (NI) ] :: error (NM) dialog (N) 
V_3PS:NAME:ScriptProvider boolean supportsService(String serviceName): supports (V)  | EQUIV[service (N) , [ string (NI) - service (NM) name (NI) ]]	++ :: boolean (N)  :: script (NM) provider (N) 
SPECIAL:NAME:AnswerBean String getAnswer(): get (V)  | answer (N) 	++ :: string (NI)  :: answer (NM) bean (NI) 
SPECIAL:NAME:DateiZugriff DZNotiz getNotiz(): get (V)  | notiz (N) 	++ :: DZ (NM) notiz (N)  :: datei (NM) zugriff (N) 
EVENT_PARAM:NAME:LifeCycleDelegate boolean lifeCycleQuery(LifeCycleEvent event): handle (V) | life (NM) cycle (NM) query (N) 	++ :: [ life (NM) cycle (NM) event (NI) - event (NI) ] :: life (NM) cycle (NM) delegate (N)  :: boolean (N) 
SPECIAL:NAME:AvailabilityServlet String getIconUrls(): get (V)  | icon (NM) urls (N) 	++ :: string (NI)  :: availability (NM) servlet (N) 
BASE_VERB:NAME:PyLong int hashCode(): hash (V)  | code (NI) 	++ :: int (N)  :: py (NM) long (N) 
SPECIAL:NAME:ToolBarButtonTag void setTitleArg1(String titleArg1): set (V)  | title (NM) arg (N) 1 (D) 	++ :: [ string (NI) - title (NM) arg (NM) 1 (N) ] :: tool (NM) bar (NM) button (NM) tag (NI) 
BASE_VERB:FORM:FeedParser static ChannelIF parse(ChannelBuilderIF cBuilder, Document doc): parse (V)  | [ channel (NM) builder (NM) IF (NI) - c (NM) builder (N) ]	++ :: [ document (NI) - doc (NI) ] :: feed (NM) parser (N)  :: channel (NM) IF (NI) 
SPECIAL:CLAS:HttpUnitReportMgmtTest void setUp(): set (V) up (VP)  | http (NM) unit (NM) report (NM) mgmt (NM) test (N) 	++
SPECIAL:NAME:Base String getDefaultSchema(): get (V)  | default (NM) schema (N) 	++ :: string (NI)  :: base (N) 
SPECIAL:NAME:NoUnderlyings UnderlyingCFICode getUnderlyingCFICode(): get (V)  | underlying (NM) CFI (NM) code (NI) 	++ :: underlying (NM) CFI (NM) code (NI)  :: no (DT) underlyings (N) 
SPECIAL:FORM:ListExecute void set(Text value): set (V)  | [ text (NI) - value (NI) ]	++ :: list (NM) execute (N) 
SPECIAL:CLAS:ProductFeatureCatGrpApplServices static ProductFeatureCatGrpAppl findByPrimaryKey(GenericDelegator delegator, String productCategoryId, String productFeatureGroupId, Date fromDate): find (V)  | product (NM) feature (NM) cat (NM) grp (NM) appl (NM) services (N) -- by (P) primary (NM) key (NI) 	++ :: [ generic (NM) delegator (N) - delegator (N) ] :: [ string (NI) - product (NM) category (NM) id (NI) ] :: [ string (NI) - product (NM) feature (NM) group (NM) id (NI) ] :: [ date (N) - from (NM) date (N) ] :: product (NM) feature (NM) cat (NM) grp (NM) appl (N) 
V_3PS:FORM:OrderCriteria boolean equals(Object obj): equals (V)  | [ object (NI) - obj (NI) ]	++ :: order (NM) criteria (N)  :: boolean (N) 
SPECIAL:NAME:TwoColAPTTable void addRow(String left, String right, int leftStyle, int rightStyle): add (V)  | row (N) 	++ :: [ string (NI) - left (N) ] :: [ string (NI) - right (N) ] :: [ int (N) - left (NM) style (N) ] :: [ int (N) - right (NM) style (N) ] :: two (NM) col (NM) APT (NM) table (N) 
EMPTY:NONE:JavaParser boolean jj_2_17(int xla):  | jj (PRE) 2 (D) 17 (D) 
BASE_VERB:NAME:BasicSeparatorUI void installDefaults(JSeparator s): install (V)  | defaults (N) 	++ :: [ J (NM) separator (N) - s (N) ] :: basic (NM) separator (NM) UI (N) 
CONSTRUCTOR:NAME:EnumMemberSeqHolder EnumMemberSeqHolder EnumMemberSeqHolder(String initial):  | enum (NM) member (NM) seq (NM) holder (NI) 	++ :: [ string (NI) - initial (N) ]
SPECIAL:NAME:KMC float getSampleNormalizedSum(KMCluster cluster, int column, float mean): get (V)  | sample (NM) normalized (NM) sum (N) 	++ :: [ KM (NM) cluster (N) - cluster (N) ] :: [ int (N) - column (N) ] :: [ float (N) - mean (N) ] :: float (N)  :: KMC (N) 
SPECIAL:NAME:FieldDisplayPainter Color getTextColor(Component c, TableModel model, int row, int col, Object value, boolean enabled, boolean focus, boolean selected, boolean cursor): get (V)  | text (NM) color (N) 	++ :: [ component (N) - c (N) ] :: [ table (NM) model (NI) - model (NI) ] :: [ int (N) - row (N) ] :: [ int (N) - col (N) ] :: [ object (NI) - value (NI) ] :: [ boolean (N) - enabled (N) ] :: [ boolean (N) - focus (N) ] :: [ boolean (N) - selected (N) ] :: [ boolean (N) - cursor (N) ] :: color (N)  :: field (NM) display (NM) painter (N) 
SPECIAL:NAME:ControlFlowFactory static ControlFlow createControlFlow(): create (V)  | control (NM) flow (N) 	++ :: control (NM) flow (N)  :: control (NM) flow (NM) factory (N) 
SPECIAL:NAME:OpenPGPIdentity String getEmail(): get (V)  | email (N) 	++ :: string (NI)  :: open (NM) PGP (NM) identity (N) 
BASE_VERB:FORM:MCRStartEditorServlet void weditobj(MCRServletJob job): weditobj (V)  | [ MCR (NM) servlet (NM) job (N) - job (N) ]	++ :: MCR (NM) start (NM) editor (NM) servlet (N) 
SPECIAL:NAME:IFA_FLLCHARTest void testReversability(): test (VI)  | reversability (N) 	++ :: IFA (NM) FLLCHAR (NM) test (N) 
SPECIAL:NAME:PropertyHelper String getListPropertyValue(Component comp, int i): get (V)  | list (NM) property (NM) value (NI) 	++ :: [ component (N) - comp (N) ] :: [ int (N) - i (N) ] :: string (NI)  :: property (NM) helper (N) 
SPECIAL:NAME:Vector void removeAllElements(): remove (V)  | all (DT) elements (N) 	++ :: vector (N) 
SPECIAL:NAME:CommunityFilter AggregateItem getAggregate(ItemRegistry registry, Set set): get (V)  | aggregate (N) 	++ :: [ item (NM) registry (N) - registry (N) ] :: [ set (N) - set (N) ] :: aggregate (NM) item (NI)  :: community (NM) filter (N) 
CONSTRUCTOR:NAME:CmdRepeatedPrivateMessage CmdRepeatedPrivateMessage CmdRepeatedPrivateMessage():  | cmd (NM) repeated (NM) private (NM) message (NI) 	++
PREP:NAME:LOVAttribute Object beforeClose(): handle (V) | before (NM) close (N) 	++ :: LOV (NM) attribute (N)  :: object (NI) 
PREP:NAME:Stack String toString(): convert (V) | to (P) string (NI) 	++ :: stack (N)  :: string (NI) 
SPECIAL:NAME:ThresholdSelectorTest void testEmpty_0(): test (VI)  | empty (N) 0 (D) 	++ :: threshold (NM) selector (NM) test (N) 
SPECIAL:NAME:ViewComboBox void removeUpdate(DocumentEvent e): remove (V)  | update (N) 	++ :: [ document (NM) event (NI) - e (N) ] :: view (NM) combo (NM) box (N) 
ENDS_WITH_ED:NAME:jQuake3Eye void jMenuItem1ActionPerformed(ActionEvent evt): handle (V) | j (PRE) menu (NM) item (NM) 1 (D) action (NM) performed (N) 	++ :: [ action (NM) event (NI) - evt (N) ] :: j (NM) quake (NM) 3 (NM) eye (N)  :: void (N) 
SPECIAL:NAME:MpfcJNI static int get_WS_DIALOG_CANCEL(): get (V)  | WS (NM) DIALOG (NM) CANCEL (N) 	++ :: int (N)  :: mpfc (NM) JNI (N) 
SPECIAL:NAME:Operand void setType(int type): set (V)  | type (N) 	++ :: [ int (N) - type (N) ] :: operand (N) 
CONSTRUCTOR:NAME:AbstractCopyOrMoveResourcesOperation AbstractCopyOrMoveResourcesOperation AbstractCopyOrMoveResourcesOperation(IResource resources, IPath destinationPaths, String label):  | abstract (NM) copy (NM) or (NM) move (NM) resources (NM) operation (N) 	++ :: [ I (NM) resource (N) - resources (N) ] :: [ I (NM) path (NI) - destination (NM) paths (N) ] :: [ string (NI) - label (NI) ]
CONSTRUCTOR:NAME:DOMCommentImpl DOMCommentImpl DOMCommentImpl(Node adaptee):  | DOM (NM) comment (NM) impl (NI) 	++ :: [ node (NI) - adaptee (N) ]
ENDS_WITH_ED:NAME:TerpPaint void ViewBitmapActionPerformed(ActionEvent evt): handle (V) | view (NM) bitmap (NM) action (NM) performed (N) 	++ :: [ action (NM) event (NI) - evt (N) ] :: terp (NM) paint (N)  :: void (N) 
BASE_VERB:NAME:MutableNodeHierarchy void cleanVoidChildren(): clean (V)  | void (NM) children (N) 	++ :: mutable (NM) node (NM) hierarchy (N) 
SPECIAL:NAME:CamelEditorWriteActionHandler void executeWriteAction(Editor editor, DataContext dataContext): execute (VI) write (V)  | action (N) 	++ :: [ editor (N) - editor (N) ] :: [ data (NM) context (N) - data (NM) context (N) ] :: camel (NM) editor (NM) write (NM) action (NM) handler (N) 
SPECIAL:NAME:UserUpdate short getMessage(): get (V)  | message (NI) 	++ :: short (N)  :: user (NM) update (N) 
BASE_VERB:FORM:DefaultFitness Fitness<F,L,A> subtract(Value<F,L,A> value): subtract (V)  | [ A (N) - value (NI) ]	++ :: default (NM) fitness (N)  :: fitness (NM) F (NM) L (NM) A (N) 
BASE_VERB:NAME:TextComponent void selectAll(): select (V)  | all (DT) 	++ :: text (NM) component (N) 
CONSTRUCTOR:NAME:CPSAllocationSlip CPSAllocationSlip CPSAllocationSlip():  | CPS (NM) allocation (NM) slip (N) 	++
CONSTRUCTOR:NAME:TigerTree TigerTree TigerTree():  | tiger (NM) tree (NI) 	++
SPECIAL:NAME:Rectangle void setBorderColorLeft(Color value): set (V)  | border (NM) color (NM) left (N) 	++ :: [ color (N) - value (NI) ] :: rectangle (N) 
SPECIAL:CLAS:ShapeSetConstraintCommand void execute(): execute (VI)  | shape (NM) set (NM) constraint (NM) command (N) 	++
EVENT_PARAM:NAME:MapPanel void tileChange(MouseEvent e): handle (V) | tile (NM) change (N) 	++ :: [ mouse (NM) event (NI) - e (N) ] :: map (NM) panel (N)  :: void (N) 
BASE_VERB:NAME:GraphOutput void beginRoot(String name): begin (V)  | root (N) 	++ :: [ string (NI) - name (NI) ] :: graph (NM) output (N) 
EVENT_PARAM:NAME:KeyListenerForMenu void handleEvent(Event e): handle (V) | handle (NM) event (NI) 	++ :: [ event (NI) - e (N) ] :: key (NM) listener (NM) for (NM) menu (N)  :: void (N) 
BASE_VERB:CLAS:NamedParameterJdbcTemplate List queryForList(String sql, Map paramMap, Class elementType): query (V)  | named (NM) parameter (NM) jdbc (NM) template (N) -- for (P) list (N) 	++ :: [ string (NI) - sql (N) ] :: [ map (N) - param (NM) map (N) ] :: [ class (NI) - element (NM) type (N) ] :: list (N) 
SPECIAL:NAME:BuilderConfiguration String getTagFilterName(): get (V)  | tag (NM) filter (NM) name (NI) 	++ :: string (NI)  :: builder (NM) configuration (NI) 
SPECIAL:NAME:UriPeer static List getAll(SearchCriteria p_criteria): get (V)  | all (DT) 	++ :: [ search (NM) criteria (N) - p (NM) criteria (N) ] :: list (N)  :: uri (NM) peer (N) 
SPECIAL:FORM:RecordViewer void run(RecordListViewer rv, int cmd): run (VI)  | [ record (NM) list (NM) viewer (N) - rv (N) ]	++ :: [ int (N) - cmd (N) ] :: record (NM) viewer (N) 
SPECIAL:NAME:TKeyRefList void addKey(String key, String filename, int line, int column): add (V)  | EQUIV[key (NI) , [ string (NI) - key (NI) ]]	++ :: [ string (NI) - filename (N) ] :: [ int (N) - line (N) ] :: [ int (N) - column (N) ] :: T (NM) key (NM) ref (NM) list (N) 
SPECIAL:CLAS:ImolaDb4o void retrieve(): retrieve (V)  | imola (NM) db (NM) 4 (NM) o (N) 	++
ENDS_WITH_ED:NAME:StartPageController void tourButtonActionPerformed(ActionEvent evt): handle (V) | tour (NM) button (NM) action (NM) performed (N) 	++ :: [ action (NM) event (NI) - evt (N) ] :: start (NM) page (NM) controller (N)  :: void (N) 
NOUN_PHRASE:NAME:Factory static AuthorInitialsDocument newInstance(): get (V) | new (NM) instance (NI) 	++ :: factory (N)  :: author (NM) initials (NM) document (NI) 
SPECIAL:NAME:ConfigurationAbstractImpl boolean getBoolean(String key, boolean defaultValue): get (V)  | boolean (N) 	++ :: [ string (NI) - key (NI) ] :: [ boolean (N) - default (NM) value (NI) ] :: boolean (N)  :: configuration (NM) abstract (NM) impl (NI) 
SPECIAL:NAME:SpectrumSliderKnob void setPaint(Color color): set (V)  | paint (N) 	++ :: [ color (N) - color (N) ] :: spectrum (NM) slider (NM) knob (N) 
SPECIAL:NAME:DMSAdapter void setCallbackAdapter(DMSCallbackAdapter callerBack): set (V)  | callback (NM) adapter (NI) 	++ :: [ DMS (NM) callback (NM) adapter (NI) - caller (NM) back (N) ] :: DMS (NM) adapter (NI) 
SPECIAL:NAME:CodeStyleManagerUnsupportedAdapter VariableKind getVariableKind(PsiVariable psiVariable): get (V)  | variable (NM) kind (N) 	++ :: [ psi (NM) variable (N) - psi (NM) variable (N) ] :: variable (NM) kind (N)  :: code (NM) style (NM) manager (NM) unsupported (NM) adapter (NI) 
SPECIAL:NAME:MockGeometryFactory LineString createLineString(List points): create (V)  | line (NM) string (NI) 	++ :: [ list (N) - points (N) ] :: line (NM) string (NI)  :: mock (NM) geometry (NM) factory (N) 
ENDS_WITH_ED:NAME:void menuDeselected(MenuEvent e): handle (V) | menu (NM) deselected (N) 	++ :: [ menu (NM) event (NI) - e (N) ] :: ANONYMOUS (N)  :: void (N) 
V_3P_IRR:NAME:BasicString boolean isIntegral(): is (V)  | integral (N) 	++ :: boolean (N)  :: basic (NM) string (NI) 
BASE_VERB:NAME:_gsl_vector_int_const_view long getn_address_vector(long address, int index): getn (V)  | address (NM) vector (N) 	++ :: [ long (N) - address (NI) ] :: [ int (N) - index (NI) ] :: long (N)  :: gsl (NM) vector (NM) int (NM) const (NM) view (NI) 
SPECIAL:NAME:ThiefSkill MOB getHighestLevelMOB(MOB meMOB, Vector not): get (V)  | EQUIV[highest (NM) level (NM) MOB (N) , [ MOB (N) - me (PR) MOB (N) ]]	++ :: [ vector (N) - not (DT) ] :: MOB (N)  :: thief (NM) skill (N) 
SPECIAL:NAME:Node void setString(String name, String tag, String value): set (V)  | string (NI) 	++ :: [ string (NI) - name (NI) ] :: [ string (NI) - tag (NI) ] :: [ string (NI) - value (NI) ] :: node (NI) 
SPECIAL:NAME:CastorJDONewsBO ArrayList getNews(int userId): get (V)  | news (N) 	++ :: [ int (N) - user (NM) id (NI) ] :: array (NM) list (N)  :: castor (NM) JDO (NM) news (NM) BO (N) 
SPECIAL:NAME:SetContentHandler void startElement(String uri, String localName, String qName, Attributes attributes): start (V)  | element (NI) 	++ :: [ string (NI) - uri (NI) ] :: [ string (NI) - local (NM) name (NI) ] :: [ string (NI) - q (NM) name (NI) ] :: [ attributes (N) - attributes (N) ] :: set (NM) content (NM) handler (N) 
SPECIAL:FORM:MessagePrinter int print(Graphics graphics, PageFormat pageFormat, int pageIndex): print (V)  | [ graphics (N) - graphics (N) ]	++ :: [ page (NM) format (NI) - page (NM) format (NI) ] :: [ int (N) - page (NM) index (NI) ] :: message (NM) printer (N)  :: int (N) 
SPECIAL:NAME:Monster int getCurrentShieldLevel(): get (V)  | current (NM) shield (NM) level (N) 	++ :: int (N)  :: monster (N) 
SPECIAL:FORM:Quote Account get(Account value): get (V)  | [ account (N) - value (NI) ]	++ :: quote (N)  :: account (N) 
ENDS_WITH_ED:NAME:void mouseReleased(MouseEvent e): handle (V) | mouse (NM) released (N) 	++ :: [ mouse (NM) event (NI) - e (N) ] :: ANONYMOUS (N)  :: void (N) 
SPECIAL:NAME:AsXMLContext URL getDTDURL(): get (V)  | DTDURL (N) 	++ :: URL (NI)  :: as (NM) XML (NM) context (N) 
BASE_VERB:NAME:Echo Kunde renameKunde(Kunde pvKunde, String pvNewName): rename (V)  | EQUIV[kunde (N) , [ kunde (N) - pv (NM) kunde (N) ]]	++ :: [ string (NI) - pv (NM) new (NM) name (NI) ] :: kunde (N)  :: echo (N) 
SPECIAL:FORM:Tools static void sort(String list): sort (V)  | [ string (NI) - list (N) ]	++ :: tools (N) 
BASE_VERB:NAME:LimssampletypelistManager void registerListener(LimssampletypelistListener listener): register (V)  | EQUIV[listener (N) , [ limssampletypelist (NM) listener (N) - listener (N) ]]	++ :: limssampletypelist (NM) manager (N) 
BASE_VERB:FORM:ConstrainedDownhillSimplex static void collapse(VectorFunction theFunction, float simplex, float funcvalue, float coordsum, int c, int N): collapse (V)  | [ vector (NM) function (N) - the (DT) function (N) ]	++ :: [ float (N) - simplex (N) ] :: [ float (N) - funcvalue (N) ] :: [ float (N) - coordsum (N) ] :: [ int (N) - c (N) ] :: [ int (N) - N (N) ] :: constrained (NM) downhill (NM) simplex (N) 
ENDS_WITH_ED:NAME:void informDamaged(Pokemon source, Pokemon target, MoveListEntry move, int damage): handle (V) | inform (NM) damaged (N) 	++ :: [ pokemon (N) - source (NI) ] :: [ pokemon (N) - target (N) ] :: [ move (NM) list (NM) entry (NI) - move (N) ] :: [ int (N) - damage (N) ] :: ANONYMOUS (N)  :: void (N) 
SPECIAL:NAME:CheckBoxFieldObject void removeCaretListener(CaretListener listener): remove (V)  | EQUIV[caret (NM) listener (N) , [ caret (NM) listener (N) - listener (N) ]]	++ :: check (NM) box (NM) field (NM) object (NI) 
SPECIAL:CLAS:ScaleShiftModule Module duplicate(): duplicate (V)  | scale (NM) shift (NM) module (N) 	++ :: module (N) 
CONSTRUCTOR:NAME:UndoableMoveGroup UndoableMoveGroup UndoableMoveGroup(GroupSelector gs, GroupTreeNode groupsRoot, GroupTreeNode moveNode, GroupTreeNode newParent, int newChildIndex):  | undoable (NM) move (NM) group (N) 	++ :: [ group (NM) selector (N) - gs (N) ] :: [ group (NM) tree (NM) node (NI) - groups (NM) root (N) ] :: [ group (NM) tree (NM) node (NI) - move (NM) node (NI) ] :: [ group (NM) tree (NM) node (NI) - new (NM) parent (N) ] :: [ int (N) - new (NM) child (NM) index (NI) ]
SPECIAL:NAME:AbstractStandardBlock int getCurrentOrderInBlockSet(): get (V)  | current (NM) order (N) -- in (P) block (NM) set (N) 	++ :: int (N)  :: abstract (NM) standard (NM) block (N) 
V_3P_IRR:NAME:NativeInvocationBridge boolean isEnabled(): is (V)  | enabled (N) 	++ :: boolean (N)  :: native (NM) invocation (NM) bridge (N) 
BASE_VERB:NAME:AbstractOrderStateChangeNotificationHandler void handleNotification(OrderStateChangeNotification _notification): handle (VI)  | EQUIV[notification (N) , [ order (NM) state (NM) change (NM) notification (N) - notification (N) ]]	++ :: abstract (NM) order (NM) state (NM) change (NM) notification (NM) handler (N) 
V_3P_IRR:NAME:NumberConverter boolean isTransient(): is (V)  | transient (N) 	++ :: boolean (N)  :: number (NM) converter (N) 
CONSTRUCTOR:NAME:JDBCConnectionProperties JDBCConnectionProperties JDBCConnectionProperties(Properties defaults):  | JDBC (NM) connection (NM) properties (N) 	++ :: [ properties (N) - defaults (N) ]
BASE_VERB:NAME:Object initialValue(): initial (V)  | value (NI) 	++ :: object (NI)  :: ANONYMOUS (N) 
SPECIAL:NAME:NativeMethods4JDK static int vmGetDeviceFreeMemory(): vm (PRE) get (V)  | device (NM) free (NM) memory (N) 	++ :: int (N)  :: native (NM) methods (NM) 4 (NM) JDK (N) 
BASE_VERB:NAME:StatusBox void changeTheme(Theme theme): change (V)  | EQUIV[theme (N) , [ theme (N) - theme (N) ]]	++ :: status (NM) box (N) 
BASE_VERB:NAME:MultifitNLin static int gsl_multifit_gradient(gsl_matrix arg0, gsl_vector arg1, gsl_vector arg2): gsl (PRE) multifit (V)  | gradient (N) 	++ :: [ gsl (NM) matrix (N) - arg (NM) 0 (N) ] :: [ gsl (NM) vector (N) - arg (NM) 1 (N) ] :: [ gsl (NM) vector (N) - arg (NM) 2 (N) ] :: int (N)  :: multifit (NM) N (NM) lin (N) 
ENDS_WITH_ED:NAME:Installer void txt_maxfileActionPerformed(ActionEvent evt): handle (V) | txt (PRE) maxfile (NM) action (NM) performed (N) 	++ :: [ action (NM) event (NI) - evt (N) ] :: installer (N)  :: void (N) 
NOUN_PHRASE:NAME:DBManager Element newElement(int id, int mapId, String type): get (V) | new (NM) element (NI) 	++ :: [ int (N) - id (NI) ] :: [ int (N) - map (NM) id (NI) ] :: [ string (NI) - type (N) ] :: DB (NM) manager (N)  :: element (NI) 
PREP:NAME:AbstractTestCase void before(): handle (V) | before (N) 	++ :: abstract (NM) test (NM) case (N)  :: void (N) 
SPECIAL:NAME:UserDB SortedList getAll(): get (V)  | all (DT) 	++ :: sorted (NM) list (N)  :: user (NM) DB (N) 
BASE_VERB:NAME:SecuritySupport InputStream openStream(URL url): open (V)  | stream (NI) 	++ :: [ URL (NI) - url (NI) ] :: input (NM) stream (NI)  :: security (NM) support (N) 
SPECIAL:NAME:Type static String getInternalName(Class<?> c): get (V)  | internal (NM) name (NI) 	++ :: [ class (NI) - c (N) ] :: string (NI)  :: type (N) 
ENDS_WITH_ED:NAME:SummaryDialog void windowDeiconified(WindowEvent e): handle (V) | window (NM) deiconified (N) 	++ :: [ window (NM) event (NI) - e (N) ] :: summary (NM) dialog (N)  :: void (N) 
BASE_VERB:NAME:DataMover void dumpState(SocketChannel src, SocketChannel dst, boolean clientToServer): dump (V)  | state (N) 	++ :: [ socket (NM) channel (N) - src (N) ] :: [ socket (NM) channel (N) - dst (N) ] :: [ boolean (N) - client (NM) to (NM) server (N) ] :: data (NM) mover (N) 
SPECIAL:NAME:PageHeight FoProperty getPropertyType(): get (V)  | property (NM) type (N) 	++ :: fo (NM) property (N)  :: page (NM) height (N) 
ENDS_WITH_ED:NAME:Deadline boolean stateReached(Activity act, String actState): handle (V) | state (NM) reached (N) 	++ :: [ activity (N) - act (N) ] :: [ string (NI) - act (NM) state (N) ] :: deadline (N)  :: boolean (N) 
SPECIAL:NAME:ColumnData int getNumber(): get (V)  | number (NI) 	++ :: int (N)  :: column (NM) data (NI) 
CONSTRUCTOR:NAME:AbstractDirectoryReorganizeBlock AbstractDirectoryReorganizeBlock AbstractDirectoryReorganizeBlock():  | abstract (NM) directory (NM) reorganize (NM) block (N) 	++
BASE_VERB:NAME:JDirectoryChooser int showChooser(JFrame aParent, String aSelectButton): show (V)  | chooser (N) 	++ :: [ J (NM) frame (N) - a (NM) parent (N) ] :: [ string (NI) - a (NM) select (NM) button (N) ] :: int (N)  :: J (NM) directory (NM) chooser (N) 
SPECIAL:NAME:IhmDebugInfoParser DefaultTreeModel getDefaultTreeModel(): get (V)  | default (NM) tree (NM) model (NI) 	++ :: default (NM) tree (NM) model (NI)  :: ihm (NM) debug (NM) info (NM) parser (N) 
PREP:NAME:MOrder String toString(): convert (V) | to (P) string (NI) 	++ :: M (NM) order (N)  :: string (NI) 
SPECIAL:NAME:Stimulus Link getCommunicationLink(): get (V)  | communication (NM) link (N) 	++ :: link (N)  :: stimulus (N) 
SPECIAL:NAME:ReferenceMap void readObject(ObjectInputStream in): read (V)  | object (NI) 	++ :: [ object (NM) input (NM) stream (NI) - in (NI) ] :: reference (NM) map (N) 
SPECIAL:NAME:NodeListModel Node getNodes(): get (V)  | nodes (N) 	++ :: node (NI)  :: node (NM) list (NM) model (NI) 
SPECIAL:NAME:AssemblyProject int getRawSeqOids(): get (V)  | raw (NM) seq (NM) oids (N) 	++ :: int (N)  :: assembly (NM) project (N) 
SPECIAL:NAME:UJaMConnectionManager int getTimeout(): get (V)  | timeout (N) 	++ :: int (N)  :: U (NM) ja (NM) M (NM) connection (NM) manager (N) 
BASE_VERB:NAME:DataBase void updateDelivery(String c, String n): update (V)  | delivery (N) 	++ :: [ string (NI) - c (N) ] :: [ string (NI) - n (N) ] :: data (NM) base (N) 
ED_VERB:NAME:FileIdentificationPane int selectedRowToFileIndex(int selectedRow): selected (V)  | EQUIV[row (N) , [ int (N) - selected (NM) row (N) ]]-- to (P) file (NM) index (NI) 	++ :: int (N)  :: file (NM) identification (NM) pane (N) 
CONSTRUCTOR:NAME:IdCardModifier IdCardModifier IdCardModifier(String name, MCard to, Ability ability, Test whileCondition, List<MEventListener> linkedEvents, List<MEventListener> until, boolean linked, int layer, Expression idCard, Operation op):  | id (NM) card (NM) modifier (N) 	++ :: [ string (NI) - name (NI) ] :: [ M (NM) card (N) - to (N) ] :: [ ability (N) - ability (N) ] :: [ test (N) - while (NM) condition (N) ] :: [ list (NM) M (NM) event (NM) listener (N) - linked (NM) events (N) ] :: [ list (NM) M (NM) event (NM) listener (N) - until (N) ] :: [ boolean (N) - linked (N) ] :: [ int (N) - layer (N) ] :: [ expression (N) - id (NM) card (N) ] :: [ operation (N) - op (N) ]
SPECIAL:NAME:EGAxe boolean setBounds(double _min, double _max, int _nbPas): set (V)  | bounds (N) 	++ :: [ double (N) - min (N) ] :: [ double (N) - max (N) ] :: [ int (N) - nb (NM) pas (N) ] :: boolean (N)  :: EG (NM) axe (N) 
SPECIAL:CLAS:PHPSyntaxRdr static void readFromFile(String filename): read (V)  | PHP (NM) syntax (NM) rdr (N) -- from (P) file (NI) 	++ :: [ string (NI) - filename (N) ]
NOUN_PHRASE:NAME:ValueAxis double valueToJava2D(double value, Rectangle2D area, RectangleEdge edge): get (V) | value (NM) to (NM) java (NM) 2 (D) D (N) 	++ :: [ double (N) - value (NI) ] :: [ rectangle (NM) 2 (NM) D (N) - area (N) ] :: [ rectangle (NM) edge (N) - edge (N) ] :: value (NM) axis (N)  :: double (N) 
BASE_VERB:NAME:ClassGraphPanel void rightArrow(Graphics g, int x, int y): right (V)  | arrow (N) 	++ :: [ graphics (N) - g (N) ] :: [ int (N) - x (N) ] :: [ int (N) - y (N) ] :: class (NM) graph (NM) panel (N) 
SPECIAL:NAME:LaunchException int getReturnCode(): get (V)  | return (NM) code (NI) 	++ :: int (N)  :: launch (NM) exception (N) 
BASE_VERB:FORM:void handle(Node node, XmlHandler<KeyEventTypeLoadingException> xh): handle (VI)  | [ node (NI) - node (NI) ]	++ :: [ xml (NM) handler (NM) key (NM) event (NM) type (NM) loading (NM) exception (N) - xh (N) ] :: ANONYMOUS (N) 
SPECIAL:NAME:XADataSource int getLoginTimeout(): get (V)  | login (NM) timeout (N) 	++ :: int (N)  :: XA (NM) data (NM) source (NI) 
BASE_VERB:FORM:void complete(Object o): complete (V)  | [ object (NI) - o (N) ]	++ :: ANONYMOUS (N) 
SPECIAL:NAME:APCampaignSurveyResult void setTargetType(String targetType): set (V)  | target (NM) type (N) 	++ :: [ string (NI) - target (NM) type (N) ] :: AP (NM) campaign (NM) survey (NM) result (N) 
BASE_VERB:NAME:RelationshipFieldsImpl void serializeAttributes(XMLSerializer context): serialize (V)  | attributes (N) 	++ :: [ XML (NM) serializer (N) - context (N) ] :: relationship (NM) fields (NM) impl (NI) 
SPECIAL:NAME:IReferenceInfo String getSourceId(): get (V)  | source (NM) id (NI) 	++ :: string (NI)  :: I (NM) reference (NM) info (NI) 
NOUN_PHRASE:NAME:SortedVector Object firstElement(): get (V) | first (NM) element (NI) 	++ :: sorted (NM) vector (N)  :: object (NI) 
V_3P_IRR:NAME:NoEvents boolean isSet(EventType field): is (V)  | set (N) 	++ :: [ event (NM) type (N) - field (N) ] :: boolean (N)  :: no (DT) events (N) 
SPECIAL:FORM:UJaMHTMLEditorKit void write(Writer out, Document doc, int pos, int len): write (V)  | [ writer (N) - out (N) ]	++ :: [ document (NI) - doc (NI) ] :: [ int (N) - pos (N) ] :: [ int (N) - len (N) ] :: U (NM) ja (NM) MHTML (NM) editor (NM) kit (N) 
SPECIAL:NAME:AnonymousPrincipal static String getUsername(): get (V)  | username (N) 	++ :: string (NI)  :: anonymous (NM) principal (N) 
SPECIAL:FORM:SecurityListRequest void set(CouponPaymentDate value): set (V)  | [ coupon (NM) payment (NM) date (N) - value (NI) ]	++ :: security (NM) list (NM) request (N) 
SPECIAL:NAME:Applet void readObject(ObjectInputStream s): read (V)  | object (NI) 	++ :: [ object (NM) input (NM) stream (NI) - s (N) ] :: applet (N) 
SPECIAL:NAME:SingleAttributeDNL String getStrings(): get (V)  | strings (N) 	++ :: string (NI)  :: single (NM) attribute (NM) DNL (N) 
CONSTRUCTOR:NAME:Bomb Bomb Bomb(int size):  | bomb (N) 	++ :: [ int (N) - size (N) ]
SPECIAL:NAME:StringUtil static String replaceString(String mainString, String oldString, String newString): replace (V)  | EQUIV[string (NI) , [ string (NI) - main (NM) string (NI) ], [ string (NI) - old (NM) string (NI) ], [ string (NI) - new (NM) string (NI) ]]	++ :: string (NI)  :: string (NM) util (N) 
V_3P_IRR:NAME:UMLVisualIDRegistry static boolean isNodeActivityFinalNode_2018(ActivityFinalNode element): is (V)  | node (NM) activity (NM) final (NM) node (NI) 2018 (D) 	++ :: [ activity (NM) final (NM) node (NI) - element (NI) ] :: boolean (N)  :: UML (NM) visual (NM) ID (NM) registry (N) 
PREP:NAME:FooLib static Short toShort(Object _o): convert (V) | to (P) short (N) 	++ :: [ object (NI) - o (N) ] :: foo (NM) lib (N)  :: short (N) 
BASE_VERB:NAME:AutoInternalTables void _beginLazyCanonical(): begin (V)  | lazy (NM) canonical (N) 	++ :: auto (NM) internal (NM) tables (N) 
CONSTRUCTOR:NAME:BindingsCache BindingsCache BindingsCache(PersistenceBindings bindings, short cacheId):  | bindings (NM) cache (N) 	++ :: [ persistence (NM) bindings (N) - bindings (N) ] :: [ short (N) - cache (NM) id (NI) ]
SPECIAL:NAME:ECSDefaults static boolean getDefaultFilterAttributeState(): get (V)  | default (NM) filter (NM) attribute (NM) state (N) 	++ :: boolean (N)  :: ECS (NM) defaults (N) 
SPECIAL:NAME:CreoleRegisterImpl List<String> getAnnotationVRs(): get (V)  | annotation (NM) V (NM) rs (N) 	++ :: list (NM) string (NI)  :: creole (NM) register (NM) impl (NI) 
BASE_VERB:NAME:PluginDownloadManager boolean updatePluginsList(): update (V)  | plugins (NM) list (N) 	++ :: boolean (N)  :: plugin (NM) download (NM) manager (N) 
SPECIAL:NAME:TextTab Control getExampleWidgets(): get (V)  | example (NM) widgets (N) 	++ :: control (N)  :: text (NM) tab (N) 
SPECIAL:FORM:StateVertex SoarVertex copy(int newId): copy (V)  | [ int (N) - new (NM) id (NI) ]	++ :: state (NM) vertex (N)  :: soar (NM) vertex (N) 
CONSTRUCTOR:NAME:ClassBinderFilter ClassBinderFilter ClassBinderFilter(ClassBinder core):  | class (NM) binder (NM) filter (N) 	++ :: [ class (NM) binder (N) - core (N) ]
SPECIAL:NAME:FlexSqlPreparedStatement void createSelectConditionForWhere(Vector vSelectStatement): create (V)  | select (NM) condition (N) -- for (P) where (N) 	++ :: [ vector (N) - v (NM) select (NM) statement (NI) ] :: flex (NM) sql (NM) prepared (NM) statement (NI) 
UNKOWN: :GenFMap static boolean e_GenFMap_eagLookupFMap_UNIT$semicolon4(CleanVM vm):
NOUN_PHRASE:NAME:FrameDefValidator Object primToObj(float f): get (V) | prim (NM) to (NM) obj (NI) 	++ :: [ float (N) - f (N) ] :: frame (NM) def (NM) validator (N)  :: object (NI) 
SPECIAL:NAME:TTasksBean void setUserHostId(int userHostId): set (V)  | user (NM) host (NM) id (NI) 	++ :: [ int (N) - user (NM) host (NM) id (NI) ] :: T (NM) tasks (NM) bean (NI) 
NOUN_PHRASE:NAME:StateImpl static IState Instance(Parser p, int i): get (V) | instance (NI) 	++ :: [ parser (N) - p (NI) ] :: [ int (N) - i (N) ] :: state (NM) impl (NI)  :: I (NM) state (N) 
BASE_VERB:NAME:TyUserFuncMaintBean void finishButton(String dir, JTextField P_func_name, JTextField P_oa_name, JList P_list): finish (V)  | button (N) 	++ :: [ string (NI) - dir (NI) ] :: [ J (NM) text (NM) field (N) - P (NM) func (NM) name (NI) ] :: [ J (NM) text (NM) field (N) - P (NM) oa (NM) name (NI) ] :: [ J (NM) list (N) - P (NM) list (N) ] :: ty (NM) user (NM) func (NM) maint (NM) bean (NI) 
SPECIAL:NAME:H2dTelemacBcManager H2dTelemacBcParameter getLimiteParameterFor(H2dBoundaryType _t): get (V)  | limite (NM) parameter (N) -- for (P) [ H (NM) 2 (NM) d (NM) boundary (NM) type (N) - t (N) ]	++ :: [ H (NM) 2 (NM) d (NM) boundary (NM) type (N) - t (N) ] :: H (NM) 2 (NM) d (NM) telemac (NM) bc (NM) parameter (N)  :: H (NM) 2 (NM) d (NM) telemac (NM) bc (NM) manager (N) 
NOUN_PHRASE:NAME:ExprFactory Terminal terminal(String stringValue, boolean isWide): get (V) | terminal (N) 	++ :: [ string (NI) - string (NM) value (NI) ] :: [ boolean (N) - is (NM) wide (N) ] :: expr (NM) factory (N)  :: terminal (N) 
CONSTRUCTOR:NAME:ExtrusionBrightnessAttributeImpl ExtrusionBrightnessAttributeImpl ExtrusionBrightnessAttributeImpl(SchemaType sType):  | extrusion (NM) brightness (NM) attribute (NM) impl (NI) 	++ :: [ schema (NM) type (N) - s (NM) type (N) ]
SPECIAL:NAME:SwPrivateCompaniesSuppliers void setL(String l): set (V)  | L (N) 	++ :: [ string (NI) - l (N) ] :: sw (NM) private (NM) companies (NM) suppliers (N) 
SPECIAL:NAME:FeedbackColorResolver Map getColorMap(): get (V)  | color (NM) map (N) 	++ :: map (N)  :: feedback (NM) color (NM) resolver (N) 
SPECIAL:NAME:ObjectFactory TwoAndMoreOperandsBoolGate createTwoAndMoreOperandsBoolGate(): create (V)  | two (NM) and (NM) more (DT) operands (NM) bool (NM) gate (N) 	++ :: two (NM) and (NM) more (DT) operands (NM) bool (NM) gate (N)  :: object (NM) factory (N) 
SPECIAL:NAME:FileInputStream FileChannel getChannel(): get (V)  | channel (N) 	++ :: file (NM) channel (N)  :: file (NM) input (NM) stream (NI) 
CONSTRUCTOR:NAME:DefaultTagRenderer DefaultTagRenderer DefaultTagRenderer():  | default (NM) tag (NM) renderer (N) 	++
V_3P_IRR:NAME:R boolean isRan(): is (V)  | ran (N) 	++ :: boolean (N)  :: R (N) 
SPECIAL:NAME:JSPWikiMarkupParserTest void testLinebreakEscape(): test (VI)  | linebreak (NM) escape (N) 	++ :: JSP (NM) wiki (NM) markup (NM) parser (NM) test (N) 
CONSTRUCTOR:NAME:Tuples Tuples Tuples():  | tuples (N) 	++
CONSTRUCTOR:NAME:TableColumnListener TableColumnListener TableColumnListener(JTable table):  | table (NM) column (NM) listener (N) 	++ :: [ J (NM) table (N) - table (N) ]
BASE_VERB:NAME:MainFrame void _showFileMovedError(FileMovedException fme): show (V)  | file (NM) moved (NM) error (N) 	++ :: [ file (NM) moved (NM) exception (N) - fme (N) ] :: main (NM) frame (N) 
CONSTRUCTOR:NAME:RECOINException RECOINException RECOINException(int level):  | RECOIN (NM) exception (N) 	++ :: [ int (N) - level (N) ]
V_3PS:FORM:Row boolean equals(Object obj): equals (V)  | [ object (NI) - obj (NI) ]	++ :: row (N)  :: boolean (N) 
SPECIAL:NAME:InputPanel String getLabelText(): get (V)  | label (NM) text (NI) 	++ :: string (NI)  :: input (NM) panel (N) 
SPECIAL:NAME:Screen int getRootDepth(): get (V)  | root (NM) depth (N) 	++ :: int (N)  :: screen (N) 
CONSTRUCTOR:NAME:SortModule SortModule SortModule(PackageState state):  | sort (NM) module (N) 	++ :: [ package (NM) state (N) - state (N) ]
ENDS_WITH_ED:NAME:void keyPressed(KeyEvent e): handle (V) | key (NM) pressed (N) 	++ :: [ key (NM) event (NI) - e (N) ] :: ANONYMOUS (N)  :: void (N) 
PREP:NAME:PartyManResourceBase Map beforeRemove(Map context): handle (V) | before (NM) remove (N) 	++ :: [ map (N) - context (N) ] :: party (NM) man (NM) resource (NM) base (N)  :: map (N) 
NOUN_PHRASE:NAME:CalloutCashJournal String invoice(Properties ctx, int WindowNo, MTab mTab, MField mField, Object value): get (V) | invoice (N) 	++ :: [ properties (N) - ctx (N) ] :: [ int (N) - window (NM) no (DT) ] :: [ M (NM) tab (N) - m (NM) tab (N) ] :: [ M (NM) field (N) - m (NM) field (N) ] :: [ object (NI) - value (NI) ] :: callout (NM) cash (NM) journal (N)  :: string (NI) 
BASE_VERB:NAME:ModRdnGraphVisitor void visitEdge(GraphIterator graphIterator, Object node1, Object node2, Object object): visit (V)  | edge (N) 	++ :: [ graph (NM) iterator (N) - graph (NM) iterator (N) ] :: [ object (NI) - node (NM) 1 (N) ] :: [ object (NI) - node (NM) 2 (N) ] :: [ object (NI) - object (NI) ] :: mod (NM) rdn (NM) graph (NM) visitor (N) 
BASE_VERB:NAME:WebappLoader ObjectName preRegister(MBeanServer server, ObjectName name): pre (V)  | register (N) 	++ :: [ M (NM) bean (NM) server (N) - server (N) ] :: [ object (NM) name (NI) - name (NI) ] :: object (NM) name (NI)  :: webapp (NM) loader (N) 
SPECIAL:NAME:Simulator long getServerFreeTime(int s): get (V)  | server (NM) free (NM) time (N) 	++ :: [ int (N) - s (N) ] :: long (N)  :: simulator (N) 
CONSTRUCTOR:NAME:Fail Fail Fail(String id, String reason):  | fail (N) 	++ :: [ string (NI) - id (NI) ] :: [ string (NI) - reason (N) ]
SPECIAL:NAME:JRefSelection JRef getSelectedAsRef(): get (V)  | selected (N) -- as (P) ref (NI) 	++ :: J (NM) ref (NI)  :: J (NM) ref (NM) selection (N) 
SPECIAL:NAME:SearchEnginePlugIn void setDataProvider3(String dataProvider3): set (V)  | data (NM) provider (N) 3 (D) 	++ :: [ string (NI) - data (NM) provider (NM) 3 (N) ] :: search (NM) engine (NM) plug (NM) in (NI) 
SPECIAL:NAME:UserCookie void setUsername(String username): set (V)  | username (N) 	++ :: [ string (NI) - username (N) ] :: user (NM) cookie (N) 
SPECIAL:NAME:UnaryConnector void setTarget(Vertex v): set (V)  | target (N) 	++ :: [ vertex (N) - v (N) ] :: unary (NM) connector (N) 
BASE_VERB:FORM:e_StdOverloaded_r$plus$semicolon$$desc Object build(CleanVM vm, int a, int b, int as, int bs): build (V)  | [ clean (NM) VM (N) - vm (N) ]	++ :: [ int (N) - a (N) ] :: [ int (N) - b (N) ] :: [ int (N) - as (N) ] :: [ int (N) - bs (N) ] :: e (NM) std (NM) overloaded (NM) r (NM) plus (NM) semicolon (NM) desc (NI)  :: object (NI) 
SPECIAL:NAME:GVector double getElement(int index): get (V)  | element (NI) 	++ :: [ int (N) - index (NI) ] :: double (N)  :: G (NM) vector (N) 
V_MODAL:NAME:MoveTool boolean shouldWorkAreaRegister(): should (VI) work (V)  | area (NM) register (N) 	++ :: boolean (N)  :: move (NM) tool (N) 
BASE_VERB:NAME:AbstractSearch void notifySearchConstraintHit(String constraintId): notify (VI)  | search (NM) constraint (NM) hit (N) 	++ :: [ string (NI) - constraint (NM) id (NI) ] :: abstract (NM) search (N) 
SPECIAL:NAME:InstructionContext void setSql(String sql): set (V)  | sql (N) 	++ :: [ string (NI) - sql (N) ] :: instruction (NM) context (N) 
SPECIAL:NAME:AtomSelectionEvent int getSelectedAtomIndices(): get (V)  | selected (NM) atom (NM) indices (N) 	++ :: int (N)  :: atom (NM) selection (NM) event (NI) 
SPECIAL:FORM:ConstantInstruction ConstantInstruction copy(ConstantInstruction constantInstruction): copy (V)  | [ constant (NM) instruction (N) - constant (NM) instruction (N) ]	++ :: constant (NM) instruction (N)  :: constant (NM) instruction (N) 
SPECIAL:NAME:BufferedFile FileDescriptor getFD(): get (V)  | FD (N) 	++ :: file (NM) descriptor (NI)  :: buffered (NM) file (NI) 
NOUN_PHRASE:NAME:Definitions Iterator iterator(): get (V) | iterator (N) 	++ :: definitions (N)  :: iterator (N) 
SPECIAL:NAME:SecondFundamentalTheorem WCMExpressionFunctionBean getIntFunc(): get (V)  | int (NM) func (N) 	++ :: WCM (NM) expression (NM) function (NM) bean (NI)  :: second (NM) fundamental (NM) theorem (N) 
SPECIAL:NAME:Hyphenation String getPreHyphenText(int index): get (V)  | pre (NM) hyphen (NM) text (NI) 	++ :: [ int (N) - index (NI) ] :: string (NI)  :: hyphenation (N) 
BASE_VERB:CLAS:StdBlobColumn void insert(): insert (V)  | std (NM) blob (NM) column (N) 	++
CONSTRUCTOR:NAME:SiteInfoTableModel SiteInfoTableModel SiteInfoTableModel(List<SiteInfo> data):  | site (NM) info (NM) table (NM) model (NI) 	++ :: [ list (NM) site (NM) info (NI) - data (NI) ]
V_3P_IRR:NAME:SimpleRemover boolean isASkip(OutputFileEntry entry): is (V)  | A (NM) skip (N) 	++ :: [ output (NM) file (NM) entry (NI) - entry (NI) ] :: boolean (N)  :: simple (NM) remover (N) 
BASE_VERB:NAME:RequestShortEvent ByteBuffer encodeEvent(): encode (V)  | event (NI) 	++ :: byte (NM) buffer (NI)  :: request (NM) short (NM) event (NI) 
SPECIAL:NAME:ThermFitPersistence String getClassName(): get (V)  | class (NM) name (NI) 	++ :: string (NI)  :: therm (NM) fit (NM) persistence (N) 
BASE_VERB:NAME:CashBank User makeEndowedUser(String name, double balance): make (V)  | endowed (NM) user (N) 	++ :: [ string (NI) - name (NI) ] :: [ double (N) - balance (N) ] :: user (N)  :: cash (NM) bank (N) 
BASE_VERB:FORM:CreateRecordForm ActionErrors validate(ActionMapping mapping, HttpServletRequest request): validate (VI)  | [ action (NM) mapping (N) - mapping (N) ]	++ :: [ http (NM) servlet (NM) request (N) - request (N) ] :: create (NM) record (NM) form (N)  :: action (NM) errors (N) 
ENDS_WITH_ED:NAME:ExitAction void actionPerformed(ActionEvent e): handle (V) | action (NM) performed (N) 	++ :: [ action (NM) event (NI) - e (N) ] :: exit (NM) action (N)  :: void (N) 
V_3P_IRR:NAME:JTextComponent boolean isEditable(): is (V)  | editable (N) 	++ :: boolean (N)  :: J (NM) text (NM) component (N) 
CONSTRUCTOR:NAME:Brique_Uparrow Brique_Uparrow Brique_Uparrow(int case_x, int case_y, Bloc autre_bloc):  | brique (NM) uparrow (N) 	++ :: [ int (N) - case (NM) x (N) ] :: [ int (N) - case (NM) y (N) ] :: [ bloc (N) - autre (NM) bloc (N) ]
CONSTRUCTOR:NAME:CDate CDate CDate(String str, Valeurs val):  | C (NM) date (N) 	++ :: [ string (NI) - str (NI) ] :: [ valeurs (N) - val (NI) ]
CONSTRUCTOR:NAME:Config Config Config():  | config (NI) 	++
BASE_VERB:NAME:NullLiteralExp_Impl Object refInvokeOperation(String requestedOperation, List args): ref (V)  | EQUIV[invoke (NM) operation (N) , [ string (NI) - requested (NM) operation (N) ]]	++ :: [ list (N) - args (N) ] :: object (NI)  :: null (NM) literal (NM) exp (NM) impl (NI) 
SPECIAL:NAME:Plugin Component getView(): get (V)  | view (NI) 	++ :: component (N)  :: plugin (N) 
BASE_VERB:NAME:Unmarshaller void enterAttribute(String ___uri, String ___local, String ___qname): enter (V)  | attribute (N) 	++ :: [ string (NI) - uri (NI) ] :: [ string (NI) - local (N) ] :: [ string (NI) - qname (N) ] :: unmarshaller (N) 
BASE_VERB:NAME:SendMailConfigBuilder Collection buildConfigurationFile(String filename): build (V)  | configuration (NM) file (NI) 	++ :: [ string (NI) - filename (N) ] :: collection (N)  :: send (NM) mail (NM) config (NM) builder (N) 
SPECIAL:NAME:DMail int getMessageId(): get (V)  | message (NM) id (NI) 	++ :: int (N)  :: D (NM) mail (N) 
SPECIAL:NAME:RemoteControlWidgets void setLoopingIcon(Icon loopingIcon): set (V)  | looping (NM) icon (N) 	++ :: [ icon (N) - looping (NM) icon (N) ] :: remote (NM) control (NM) widgets (N) 
ENDS_WITH_ED:NAME:void actionPerformed(ActionEvent evt): handle (V) | action (NM) performed (N) 	++ :: [ action (NM) event (NI) - evt (N) ] :: ANONYMOUS (N)  :: void (N) 
PREP:NAME:OzoneBaseNameImpl void onCreate(): handle (V) | on (NM) create (N) 	++ :: ozone (NM) base (NM) name (NM) impl (NI)  :: void (N) 
CONSTRUCTOR:NAME:Tracer Tracer Tracer(String module, int level):  | tracer (N) 	++ :: [ string (NI) - module (N) ] :: [ int (N) - level (N) ]
SPECIAL:NAME:CompilerSuite6 void testTrailing6(): test (VI)  | trailing (N) 6 (D) 	++ :: compiler (NM) suite (NM) 6 (N) 
SPECIAL:NAME:SuggestedPaletteImpl void getSample(int index, short pixel): get (V)  | sample (N) 	++ :: [ int (N) - index (NI) ] :: [ short (N) - pixel (N) ] :: suggested (NM) palette (NM) impl (NI) 
BASE_VERB:NAME:ConstraintsListCVC Constraint makeConstraint(String expr, CompoundType type, String base): make (V)  | constraint (N) 	++ :: [ string (NI) - expr (NI) ] :: [ compound (NM) type (N) - type (N) ] :: [ string (NI) - base (N) ] :: constraint (N)  :: constraints (NM) list (NM) CVC (N) 
ENDS_WITH_ED:NAME:void actionPerformed(ActionEvent actionEvent): handle (V) | action (NM) performed (N) 	++ :: [ action (NM) event (NI) - action (NM) event (NI) ] :: ANONYMOUS (N)  :: void (N) 
V_3P_IRR:NAME:Node boolean isPointLightNode(): is (V)  | point (NM) light (NM) node (NI) 	++ :: boolean (N)  :: node (NI) 
SPECIAL:CLAS:Segment Object clone(): clone (V)  | segment (N) 	++ :: object (NI) 
SPECIAL:NAME:SimpleCharStream int getBeginLine(): get (V)  | begin (NM) line (N) 	++ :: int (N)  :: simple (NM) char (NM) stream (NI) 
SPECIAL:NAME:QuantumCircuitDrawing void setGateDependencies(Map map): set (V)  | gate (NM) dependencies (N) 	++ :: [ map (N) - map (N) ] :: quantum (NM) circuit (NM) drawing (N) 
SPECIAL:NAME:NumberPlugin Parser<Node> getParser(String nonterminal): get (V)  | parser (N) 	++ :: [ string (NI) - nonterminal (N) ] :: parser (NM) node (NI)  :: number (NM) plugin (N) 
SPECIAL:NAME:GraphPlugin GraphController getGraphControllers(ISession session): get (V)  | graph (NM) controllers (N) 	++ :: [ I (NM) session (N) - session (N) ] :: graph (NM) controller (N)  :: graph (NM) plugin (N) 
BASE_VERB:FORM:XSQNameBinding String encode(Object object, String value): encode (V)  | [ object (NI) - object (NI) ]	++ :: [ string (NI) - value (NI) ] :: XSQ (NM) name (NM) binding (N)  :: string (NI) 
UNKOWN: :_PyInner static PyObject interp$3(PyFrame frame):
V_MODAL:FORM:Super_Any boolean can_delete(Transferable context): can (VI) delete (V)  | [ transferable (N) - context (N) ]	++ :: super (NM) any (DT)  :: boolean (N) 
SPECIAL:NAME:DataMetaDataTest void testGetTableInfo(): test (VI) get (V)  | table (NM) info (NI) 	++ :: data (NM) meta (NM) data (NM) test (N) 
SPECIAL:NAME:Frame void setIconImage(Image icon): set (V)  | icon (NM) image (N) 	++ :: [ image (N) - icon (N) ] :: frame (N) 
BASE_VERB:FORM:MRating void highlight(float value): highlight (V)  | [ float (N) - value (NI) ]	++ :: M (NM) rating (N) 
SPECIAL:NAME:AuthorizeUserTag String getFailureForward(): get (V)  | failure (NM) forward (N) 	++ :: string (NI)  :: authorize (NM) user (NM) tag (NI) 
BASE_VERB:NAME:DiagnosticCodeGenerator void genAlt(Alternative alt): gen (V)  | EQUIV[alt (N) , [ alternative (N) - alt (N) ]]	++ :: diagnostic (NM) code (NM) generator (N) 
SPECIAL:NAME:SourceDiff int getTokenEnd(ITokenComparator tc, int start, int count): get (V)  | token (NM) end (N) 	++ :: [ I (NM) token (NM) comparator (N) - tc (N) ] :: [ int (N) - start (N) ] :: [ int (N) - count (N) ] :: int (N)  :: source (NM) diff (N) 
SPECIAL:NAME:ConstantPool int addConstantDouble(double val): add (V)  | EQUIV[constant (NM) double (N) , [ double (N) - val (NI) ]]	++ :: int (N)  :: constant (NM) pool (N) 
SPECIAL:NAME:EnglishParser String getContextName(Vector list, Environmental E): get (V)  | context (NM) name (NI) 	++ :: [ vector (N) - list (N) ] :: [ environmental (N) - E (N) ] :: string (NI)  :: english (NM) parser (N) 
UNKOWN: :StdOverloadedList static boolean e_StdOverloadedList_lRemoveMember$semicolon304(CleanVM vm):
BASE_VERB:NAME:TestCEDigraphFactory static void fillTestCEDigraph(MutableCEDigraph digraph): fill (V)  | EQUIV[test (NM) CE (NM) digraph (N) , [ mutable (NM) CE (NM) digraph (N) - digraph (N) ]]	++ :: test (NM) CE (NM) digraph (NM) factory (N) 
SPECIAL:NAME:SimpleLayout String getRootId(): get (V)  | root (NM) id (NI) 	++ :: string (NI)  :: simple (NM) layout (N) 
V_3PS:FORM:SimpleState boolean exists(String path): exists (V)  | [ string (NI) - path (NI) ]	++ :: simple (NM) state (N)  :: boolean (N) 
SPECIAL:NAME:RangeEditor void removePropertyChangeListener(PropertyChangeListener arg0): remove (V)  | EQUIV[property (NM) change (NM) listener (N) , [ property (NM) change (NM) listener (N) - arg (NM) 0 (N) ]]	++ :: range (NM) editor (N) 
CONSTRUCTOR:NAME:exposed___rdiv__ exposed___rdiv__ exposed___rdiv__(PyObject self, Info info):  | exposed (NM) rdiv (N) 	++ :: [ py (NM) object (NI) - self (N) ] :: [ info (NI) - info (NI) ]
SPECIAL:NAME:LocaleTypeImpl void setLanguage(String value): set (V)  | language (N) 	++ :: [ string (NI) - value (NI) ] :: locale (NM) type (NM) impl (NI) 
CONSTRUCTOR:NAME:Base64 Base64 Base64():  | base (NM) 64 (N) 	++
CONSTRUCTOR:NAME:RestException RestException RestException(Exception e, ErrorCode httpErrorCode):  | rest (NM) exception (N) 	++ :: [ exception (N) - e (N) ] :: [ error (NM) code (NI) - http (NM) error (NM) code (NI) ]
ENDS_WITH_ED:NAME:void actionPerformed(ActionEvent e): handle (V) | action (NM) performed (N) 	++ :: [ action (NM) event (NI) - e (N) ] :: ANONYMOUS (N)  :: void (N) 
BASE_VERB:NAME:StringWithJavaSourceCode SavePoint savePoint(): save (V)  | point (N) 	++ :: save (NM) point (N)  :: string (NM) with (NM) java (NM) source (NM) code (NI) 
SPECIAL:NAME:SQLRConnection void endSession(): end (V)  | session (N) 	++ :: SQLR (NM) connection (N) 
SPECIAL:NAME:AcctPGDatabase boolean setConfig(String name, String value): set (V)  | config (NI) 	++ :: [ string (NI) - name (NI) ] :: [ string (NI) - value (NI) ] :: boolean (N)  :: acct (NM) PG (NM) database (N) 
SPECIAL:NAME:ObjectFactory CompareResult createCompareResult(): create (V)  | compare (NM) result (N) 	++ :: compare (NM) result (N)  :: object (NM) factory (N) 
BASE_VERB:CLAS:UserPersistence int countByPortraitId(long portraitId): count (V)  | user (NM) persistence (N) -- by (P) EQUIV[portrait (NM) id (NI) , [ long (N) - portrait (NM) id (NI) ]]	++ :: int (N) 
CONSTRUCTOR:NAME:MWorkbench MWorkbench MWorkbench(Properties ctx, int AD_Window_ID):  | M (NM) workbench (N) 	++ :: [ properties (N) - ctx (N) ] :: [ int (N) - AD (NM) window (NM) ID (NI) ]
V_3P_IRR:NAME:IIOMetadataFormat boolean isAttributeRequired(String elementName, String attrName): is (V)  | attribute (NM) required (N) 	++ :: [ string (NI) - element (NM) name (NI) ] :: [ string (NI) - attr (NM) name (NI) ] :: boolean (N)  :: IIO (NM) metadata (NM) format (NI) 
SPECIAL:NAME:IbmNotWf3XmlConfTest void testNotWellFormed_IbmNotWfP85Ibm85n21xml(): test (VI)  | not (DT) well (NM) formed (NM) ibm (NM) not (DT) wf (NM) P (NM) 85 (D) ibm (NM) 85 (D) n (NM) 21 (D) xml (N) 	++ :: ibm (NM) not (DT) wf (NM) 3 (NM) xml (NM) conf (NM) test (N) 
SPECIAL:NAME:TempMetaData void setShortName(String sName): set (V)  | short (NM) name (NI) 	++ :: [ string (NI) - s (NM) name (NI) ] :: temp (NM) meta (NM) data (NI) 
SPECIAL:NAME:OutOfDate void setOutputSources(String outputSources): set (V)  | output (NM) sources (N) 	++ :: [ string (NI) - output (NM) sources (N) ] :: out (NM) of (NM) date (N) 
BASE_VERB:FORM:Factory static ListboxDocument parse(InputStream is, XmlOptions options): parse (V)  | [ input (NM) stream (NI) - is (N) ]	++ :: [ xml (NM) options (N) - options (N) ] :: factory (N)  :: listbox (NM) document (NI) 
SPECIAL:NAME:AbstractStandardCountry void initStandardBean(): init (V)  | standard (NM) bean (NI) 	++ :: abstract (NM) standard (NM) country (N) 
SPECIAL:FORM:JSONWriter void add(Object obj): add (V)  | [ object (NI) - obj (NI) ]	++ :: JSON (NM) writer (N) 
SPECIAL:NAME:ProtBasicImpl void writeCard16(int v): write (V)  | card (N) 16 (D) 	++ :: [ int (N) - v (N) ] :: prot (NM) basic (NM) impl (NI) 
SPECIAL:FORM:Select static Instruction create(Operator o, Type type, Operand result, BooleanOperand condition, Operand val1, Operand val2, BooleanEquation predicate): create (V)  | [ operator (N) - o (N) ]	++ :: [ type (N) - type (N) ] :: [ operand (N) - result (N) ] :: [ boolean (NM) operand (N) - condition (N) ] :: [ operand (N) - val (NM) 1 (N) ] :: [ operand (N) - val (NM) 2 (N) ] :: [ boolean (NM) equation (N) - predicate (N) ] :: select (N)  :: instruction (N) 
SPECIAL:NAME:Target void setHost(String name): set (V)  | host (N) 	++ :: [ string (NI) - name (NI) ] :: target (N) 
SPECIAL:CLAS:AbstractContentRequestEditBlock Object clone(): clone (V)  | abstract (NM) content (NM) request (NM) edit (NM) block (N) 	++ :: object (NI) 
SPECIAL:NAME:DefaultMetadata Object getResource(String id): get (V)  | resource (N) 	++ :: [ string (NI) - id (NI) ] :: object (NI)  :: default (NM) metadata (N) 
PREP:NAME:Attribute String toString(): convert (V) | to (P) string (NI) 	++ :: attribute (N)  :: string (NI) 
SPECIAL:CLAS:Cons LispObject copyToArray(): copy (V)  | cons (N) -- to (P) array (N) 	++ :: lisp (NM) object (NI) 
SPECIAL:NAME:MediaCreationMgtScu boolean checkPC(int pcid, String msgid): check (VI)  | PC (N) 	++ :: [ int (N) - pcid (N) ] :: [ string (NI) - msgid (N) ] :: boolean (N)  :: media (NM) creation (NM) mgt (NM) scu (N) 
SPECIAL:NAME:ImapAttachesList SortedMap getAttachesList(Document d): get (V)  | attaches (NM) list (N) 	++ :: [ document (NI) - d (N) ] :: sorted (NM) map (N)  :: imap (NM) attaches (NM) list (N) 
ENDS_WITH_ED:NAME:MItemListener void itemStateChanged(ItemEvent e): handle (V) | item (NM) state (NM) changed (N) 	++ :: [ item (NM) event (NI) - e (N) ] :: M (NM) item (NM) listener (N)  :: void (N) 
V_3PS:NAME:GenAlbumImageThumbnailBean boolean implementsIHostServiceForBean(): implements (V)  | I (NM) host (NM) service (N) -- for (P) bean (NI) 	++ :: boolean (N)  :: gen (NM) album (NM) image (NM) thumbnail (NM) bean (NI) 
BASE_VERB:NAME:StringUtilities static String computePrefix(String description, String boundaryText, int maxSuffixLength): compute (V)  | prefix (N) 	++ :: [ string (NI) - description (NI) ] :: [ string (NI) - boundary (NM) text (NI) ] :: [ int (N) - max (NM) suffix (NM) length (N) ] :: string (NI)  :: string (NM) utilities (N) 
SPECIAL:NAME:DataTypeDefinitions static void setJdbcTypesMap(Map a): set (V)  | jdbc (NM) types (NM) map (N) 	++ :: [ map (N) - a (N) ] :: data (NM) type (NM) definitions (N) 
SPECIAL:CLAS:AbstractAsyncAuditingStoreTest void setUp(): set (V) up (VP)  | abstract (NM) async (NM) auditing (NM) store (NM) test (N) 	++
SPECIAL:NAME:ArgumentTest void testNormalArguments(): test (VI)  | normal (NM) arguments (N) 	++ :: argument (NM) test (N) 
BASE_VERB:NAME:MechMapSet void drawHeatControl(int t, boolean mtHeat): draw (V)  | heat (NM) control (N) 	++ :: [ int (N) - t (N) ] :: [ boolean (N) - mt (NM) heat (N) ] :: mech (NM) map (NM) set (N) 
V_3P_IRR:NAME:Pattern static boolean hasBaseCharacter(Matcher matcher, int i, CharSequence seq): has (V)  | base (NM) character (N) 	++ :: [ matcher (N) - matcher (N) ] :: [ int (N) - i (N) ] :: [ char (NM) sequence (N) - seq (N) ] :: boolean (N)  :: pattern (N) 
BASE_VERB:NAME:Tube Tube subdivideTubeApprox(double tol): subdivide (V)  | tube (NM) approx (N) 	++ :: [ double (N) - tol (N) ] :: tube (N)  :: tube (N) 
SPECIAL:NAME:ChoreographyImplTest ChoreographyImpl getImplementation(): get (V)  | implementation (N) 	++ :: choreography (NM) impl (NI)  :: choreography (NM) impl (NM) test (N) 
CONSTRUCTOR:NAME:ErrorHandlerTest ErrorHandlerTest ErrorHandlerTest(String testName):  | error (NM) handler (NM) test (N) 	++ :: [ string (NI) - test (NM) name (NI) ]
BASE_VERB:FORM:CoreAnnotated RetCode cdlTakuri(int startIdx, int endIdx, double inOpen, double inHigh, double inLow, double inClose, MInteger outBegIdx, MInteger outNBElement, int outInteger): cdl (PRE) takuri (V)  | [ int (N) - start (NM) idx (N) ]	++ :: [ int (N) - end (NM) idx (N) ] :: [ double (N) - in (NM) open (N) ] :: [ double (N) - in (NM) high (N) ] :: [ double (N) - in (NM) low (N) ] :: [ double (N) - in (NM) close (N) ] :: [ M (NM) integer (N) - out (NM) beg (NM) idx (N) ] :: [ M (NM) integer (N) - out (NM) NB (NM) element (NI) ] :: [ int (N) - out (NM) integer (N) ] :: core (NM) annotated (N)  :: ret (NM) code (NI) 
SPECIAL:NAME:DBPreparedStatementWrapper void setClob(int i, Clob x): set (V)  | clob (N) 	++ :: [ int (N) - i (N) ] :: [ clob (N) - x (N) ] :: DB (NM) prepared (NM) statement (NM) wrapper (NI) 
BASE_VERB:CLAS:Container void bringToFront(IWidget child): bring (V)  | container (NI) -- to (P) front (N) 	++ :: [ I (NM) widget (N) - child (N) ]
BASE_VERB:FORM:ParserFactory void sample(String val): sample (V)  | [ string (NI) - val (NI) ]	++ :: parser (NM) factory (N) 
VOID_NP:NAME:ActionLexer void mTEXT_ARG(boolean _createToken): handle (V) | m (PRE) TEXT (NM) ARG (N) 	++ :: [ boolean (N) - create (NM) token (N) ] :: action (NM) lexer (N)  :: void (N) 
SPECIAL:NAME:HTMLInputElement int getTabIndex(): get (V)  | tab (NM) index (NI) 	++ :: int (N)  :: HTML (NM) input (NM) element (NI) 
SPECIAL:NAME:OGCCrossesBinding int getExecutionMode(): get (V)  | execution (NM) mode (N) 	++ :: int (N)  :: OGC (NM) crosses (NM) binding (N) 
BASE_VERB:NAME:Unmarshaller void leaveChild(int nextState): leave (V)  | child (N) 	++ :: [ int (N) - next (DT) state (N) ] :: unmarshaller (N) 
SPECIAL:NAME:AbstractStandardContentType String getShortDescriptionEncoded(AnyLogicContext alc): get (V)  | short (NM) description (NM) encoded (N) 	++ :: [ any (DT) logic (NM) context (N) - alc (N) ] :: string (NI)  :: abstract (NM) standard (NM) content (NM) type (N) 
CONSTRUCTOR:NAME:SkinSettingsPanel SkinSettingsPanel SkinSettingsPanel():  | skin (NM) settings (NM) panel (N) 	++
CONSTRUCTOR:NAME:XInputDirectory XInputDirectory XInputDirectory():  | X (NM) input (NM) directory (N) 	++
ENDS_WITH_ED:NAME:SwingModelFactory void friendAddedReceived(SessionFriendEvent ev): handle (V) | friend (NM) added (NM) received (N) 	++ :: [ session (NM) friend (NM) event (NI) - ev (N) ] :: swing (NM) model (NM) factory (N)  :: void (N) 
SPECIAL:NAME:TestOptionsTag void testLiveJspNonStringCollections(): test (VI)  | live (NM) jsp (NM) non (NM) string (NM) collections (N) 	++ :: test (NM) options (NM) tag (NI) 
CONSTRUCTOR:NAME:KeywordType KeywordType KeywordType():  | keyword (NM) type (N) 	++
ENDS_WITH_ED:NAME:void actionPerformed(ActionEvent event): handle (V) | action (NM) performed (N) 	++ :: [ action (NM) event (NI) - event (NI) ] :: ANONYMOUS (N)  :: void (N) 
SPECIAL:NAME:Expr int getOperator(): get (V)  | operator (N) 	++ :: int (N)  :: expr (NI) 
V_3P_IRR:NAME:AppInstance boolean hasInstance(File userdir): has (V)  | instance (NI) 	++ :: [ file (NI) - userdir (N) ] :: boolean (N)  :: app (NM) instance (NI) 
SPECIAL:NAME:Expression void setExpressionBody(Thing expressionBody): set (V)  | expression (NM) body (N) 	++ :: [ thing (N) - expression (NM) body (N) ] :: expression (N) 
SPECIAL:NAME:DestinationManager int getMessageCounterHistoryDayLimit(): get (V)  | message (NM) counter (NM) history (NM) day (NM) limit (N) 	++ :: int (N)  :: destination (NM) manager (N) 
SPECIAL:NAME:Integer String getSQLTypeName(SQLWriter sqlWriter, int size, int precision, int scale): get (V)  | SQL (NM) type (NM) name (NI) 	++ :: [ SQL (NM) writer (N) - sql (NM) writer (N) ] :: [ int (N) - size (N) ] :: [ int (N) - precision (N) ] :: [ int (N) - scale (N) ] :: string (NI)  :: integer (N) 
SPECIAL:NAME:AbstractEditGraphicSymbols Stroke getDottedLineStrokeA(): get (V)  | dotted (NM) line (NM) stroke (NM) A (N) 	++ :: stroke (N)  :: abstract (NM) edit (NM) graphic (NM) symbols (N) 
BASE_VERB:NAME:ColumnValuesModel void requestRefresh(): request (V)  | refresh (N) 	++ :: column (NM) values (NM) model (NI) 
SPECIAL:NAME:LoginAuthenticator void setUserModel(UserModel userModel): set (V)  | user (NM) model (NI) 	++ :: [ user (NM) model (NI) - user (NM) model (NI) ] :: login (NM) authenticator (N) 
ENDS_WITH_ED:NAME:LifecycleRemote int timersStarted(): handle (V) | timers (NM) started (N) 	++ :: lifecycle (NM) remote (N)  :: int (N) 
SPECIAL:NAME:ViewGroup void setParent(Collection collection): set (V)  | parent (N) 	++ :: [ collection (N) - collection (N) ] :: view (NM) group (N) 
SPECIAL:NAME:CachedRowSet void setKeyColumns(int keys): set (V)  | key (NM) columns (N) 	++ :: [ int (N) - keys (N) ] :: cached (NM) row (NM) set (N) 
SPECIAL:NAME:UIScreenSection UIFieldInfo getUiField(int fieldNumber): get (V)  | EQUIV[ui (NM) field (N) , [ int (N) - field (NM) number (NI) ]]	++ :: UI (NM) field (NM) info (NI)  :: UI (NM) screen (NM) section (N) 
PREP:NAME:ncManager void beforeSceneRender(): handle (V) | before (NM) scene (NM) render (N) 	++ :: nc (NM) manager (N)  :: void (N) 
BASE_VERB:FORM:ElementBuffer void recreate(int startIndex, int endIndex): recreate (V)  | [ int (N) - start (NM) index (NI) ]	++ :: [ int (N) - end (NM) index (NI) ] :: element (NM) buffer (NI) 
CONSTRUCTOR:NAME:EC EC EC(String algorithm):  | EC (N) 	++ :: [ string (NI) - algorithm (N) ]
SPECIAL:NAME:Object getValue(Object object): get (V)  | value (NI) 	++ :: [ object (NI) - object (NI) ] :: object (NI)  :: ANONYMOUS (N) 
SPECIAL:NAME:HomeInterfaceBroker Method getCreateMethodForDOI(DomainObjectEBLocalHome aHomeInterface, IdentifiedDomainObjectDOI aDOI): get (V)  | create (NM) method (N) -- for (P) EQUIV[DOI (N) , [ identified (NM) domain (NM) object (NM) DOI (N) - a (NM) DOI (N) ]]	++ :: [ domain (NM) object (NM) EB (NM) local (NM) home (N) - a (NM) home (NM) interface (NI) ] :: method (N)  :: home (NM) interface (NM) broker (N) 
SPECIAL:NAME:Partner String getPartnerRole(): get (V)  | partner (NM) role (N) 	++ :: string (NI)  :: partner (N) 
BASE_VERB:FORM:ExtendedPersistenceContextInjector void inject(BeanContext beanContext, Object instance): inject (V)  | [ bean (NM) context (N) - bean (NM) context (N) ]	++ :: [ object (NI) - instance (NI) ] :: extended (NM) persistence (NM) context (NM) injector (N) 
SPECIAL:NAME:PixelwiseRenderer void setHDR(boolean value): set (V)  | HDR (N) 	++ :: [ boolean (N) - value (NI) ] :: pixelwise (NM) renderer (N) 
SPECIAL:CLAS:RampModule void doReset(): do (VI) reset (V)  | ramp (NM) module (N) 	++
NOUN_PHRASE:NAME:EMOFPrettyPrinter String primitiveTypeDecl(PrimitiveType self): get (V) | primitive (NM) type (NM) decl (NI) 	++ :: [ primitive (NM) type (N) - self (N) ] :: EMOF (NM) pretty (NM) printer (N)  :: string (NI) 
VOID_NP:NAME:XOLParser static void recursiveXJLConstruct(IXOLElement $IXOLElement_toBuild, Node $Node_toBuildFrom): handle (V) | recursive (NM) XJL (NM) construct (N) 	++ :: [ IXOL (NM) element (NI) - IXOL (NM) element (NM) to (NM) build (N) ] :: [ node (NI) - node (NM) to (NM) build (NM) from (N) ] :: XOL (NM) parser (N)  :: void (N) 
SPECIAL:CLAS:SearchForm String getToTime(): get (V)  | search (NM) form (N) -- to (P) time (N) 	++ :: string (NI) 
ENDS_WITH_ED:NAME:GITTreeModel void valueForPathChanged(TreePath path, Object newValue): handle (V) | value (NM) for (NM) path (NM) changed (N) 	++ :: [ tree (NM) path (NI) - path (NI) ] :: [ object (NI) - new (NM) value (NI) ] :: GIT (NM) tree (NM) model (NI)  :: void (N) 
SPECIAL:NAME:InputBindingImpl void initValueForm(): init (V)  | value (NM) form (N) 	++ :: input (NM) binding (NM) impl (NI) 
SPECIAL:NAME:ParserTest void testPattern45(): test (VI)  | pattern (N) 45 (D) 	++ :: parser (NM) test (N) 
CONSTRUCTOR:NAME:SimultaneousPlayer SimultaneousPlayer SimultaneousPlayer(EleconicsXmlParser parser):  | simultaneous (NM) player (N) 	++ :: [ eleconics (NM) xml (NM) parser (N) - parser (N) ]
CONSTRUCTOR:NAME:RunnableEvent RunnableEvent RunnableEvent(Object source, int s):  | runnable (NM) event (NI) 	++ :: [ object (NI) - source (NI) ] :: [ int (N) - s (N) ]
SPECIAL:NAME:AbstractStandardDocument String getDescriptionText(): get (V)  | description (NM) text (NI) 	++ :: string (NI)  :: abstract (NM) standard (NM) document (NI) 
SPECIAL:NAME:TemplateTable ParameterInfo getSelectedInfo(): get (V)  | selected (NM) info (NI) 	++ :: parameter (NM) info (NI)  :: template (NM) table (N) 
V_3P_IRR:NAME:InputListNode boolean isText(): is (V)  | text (NI) 	++ :: boolean (N)  :: input (NM) list (NM) node (NI) 
SPECIAL:NAME:AstFactoryImpl BitwiseXorOp createBitwiseXorOp(): create (V)  | bitwise (NM) xor (NM) op (N) 	++ :: bitwise (NM) xor (NM) op (N)  :: ast (NM) factory (NM) impl (NI) 
SPECIAL:NAME:Environment Namespace getCurrentNamespace(): get (V)  | current (NM) namespace (N) 	++ :: namespace (N)  :: environment (N) 
SPECIAL:NAME:AddressLine void setKeyValue(String keyValue): set (V)  | key (NM) value (NI) 	++ :: [ string (NI) - key (NM) value (NI) ] :: address (NM) line (N) 
SPECIAL:NAME:SenderCountry Enum getFixed(): get (V)  | fixed (N) 	++ :: enum (NI)  :: sender (NM) country (N) 
SPECIAL:NAME:RandPass void setAlphabet(char alphabet): set (V)  | alphabet (N) 	++ :: [ char (N) - alphabet (N) ] :: rand (NM) pass (N) 
SPECIAL:NAME:SSHauthenticatorModel int getIddleTime(): get (V)  | iddle (NM) time (N) 	++ :: int (N)  :: SS (NM) hauthenticator (NM) model (NI) 
SPECIAL:NAME:Type_Reader static IDLType read_type(Frame parent, String title, IDLType type, Point screen): read (V)  | EQUIV[type (N) , [ IDL (NM) type (N) - type (N) ]]	++ :: [ frame (N) - parent (N) ] :: [ string (NI) - title (N) ] :: [ point (N) - screen (N) ] :: IDL (NM) type (N)  :: type (NM) reader (N) 
SPECIAL:NAME:LoginManagerBean void setReportValues(String id, String name, String description, String periodicityTypeID, String forwardingTypeID, Date date): set (V)  | report (NM) values (N) 	++ :: [ string (NI) - id (NI) ] :: [ string (NI) - name (NI) ] :: [ string (NI) - description (NI) ] :: [ string (NI) - periodicity (NM) type (NM) ID (NI) ] :: [ string (NI) - forwarding (NM) type (NM) ID (NI) ] :: [ date (N) - date (N) ] :: login (NM) manager (NM) bean (NI) 
BASE_VERB:CLAS:BandwidthFieldParser SDPField parse(): parse (V)  | bandwidth (NM) field (NM) parser (N) 	++ :: SDP (NM) field (N) 
ENDS_WITH_ED:NAME:DebugPanelListener void threadLocationUpdated(OpenDefinitionsDocument doc, int lineNumber, boolean shouldHighlight): handle (V) | thread (NM) location (NM) updated (N) 	++ :: [ open (NM) definitions (NM) document (NI) - doc (NI) ] :: [ int (N) - line (NM) number (NI) ] :: [ boolean (N) - should (NM) highlight (N) ] :: debug (NM) panel (NM) listener (N)  :: void (N) 
CONSTRUCTOR:NAME:TestClass TestClass TestClass(Name name, int type, int dclass, long ttl):  | test (NM) class (NI) 	++ :: [ name (NI) - name (NI) ] :: [ int (N) - type (N) ] :: [ int (N) - dclass (N) ] :: [ long (N) - ttl (N) ]
SPECIAL:NAME:TestedClass void setEnabled(Boolean b): set (V)  | enabled (N) 	++ :: [ boolean (N) - b (N) ] :: tested (NM) class (NI) 
SPECIAL:NAME:Join String getMainAlias(): get (V)  | main (NM) alias (N) 	++ :: string (NI)  :: join (N) 
BASE_VERB:CLAS:RandomDistributionSOM void stop(): stop (VI)  | random (NM) distribution (NM) SOM (N) 	++
SPECIAL:NAME:LocalityScroll JScrollBar getLocalitySB(): get (V)  | locality (NM) SB (N) 	++ :: J (NM) scroll (NM) bar (N)  :: locality (NM) scroll (N) 
BASE_VERB:FORM:ColorButtons void paint(Graphics g): paint (V)  | [ graphics (N) - g (N) ]	++ :: color (NM) buttons (N) 
SPECIAL:CLAS:BoType static String getByIDandType(int id, int type): get (V)  | bo (NM) type (N) -- by (P) EQUIV[I (NM) dand (NM) type (N) , [ int (N) - type (N) ]]	++ :: [ int (N) - id (NI) ] :: string (NI) 
BASE_VERB:NAME:FibonacciXOMXMLRPCServlet static BigInteger calculateFibonacci(int generations): calculate (V)  | fibonacci (N) 	++ :: [ int (N) - generations (N) ] :: big (NM) integer (N)  :: fibonacci (NM) XOMXMLRPC (NM) servlet (N) 
BASE_VERB:NAME:AudioPlayer static String formatTime(long seconds): format (V)  | time (N) 	++ :: [ long (N) - seconds (N) ] :: string (NI)  :: audio (NM) player (N) 
SPECIAL:NAME:SpreadSheet Cell getCell(int i, int j): get (V)  | cell (N) 	++ :: [ int (N) - i (N) ] :: [ int (N) - j (N) ] :: cell (N)  :: spread (NM) sheet (N) 
BASE_VERB:FORM:Factory static BackgroundDocument parse(String xmlAsString, XmlOptions options): parse (V)  | [ string (NI) - xml (NM) as (NM) string (NI) ]	++ :: [ xml (NM) options (N) - options (N) ] :: factory (N)  :: background (NM) document (NI) 
BASE_VERB:NAME:ProxyGenerator static byte generateProxyClass(String name, Class interfaces): generate (V)  | EQUIV[proxy (NM) class (NI) , [ class (NI) - interfaces (N) ]]	++ :: [ string (NI) - name (NI) ] :: byte (N)  :: proxy (NM) generator (N) 
EMPTY:NONE:_SystemEnumStrict static boolean s140(CleanVM vm):  | s (PRE) 140 (D) 
PREP:NAME:Block String toString(): convert (V) | to (P) string (NI) 	++ :: block (N)  :: string (NI) 
SPECIAL:FORM:NoLegs LegRedemptionDate get(LegRedemptionDate value): get (V)  | [ leg (NM) redemption (NM) date (N) - value (NI) ]	++ :: no (DT) legs (N)  :: leg (NM) redemption (NM) date (N) 
BASE_VERB:CLAS:Container void clear(): clear (V)  | container (NI) 	++
SPECIAL:NAME:MLocatorLookup void loadComplete(): load (V)  | complete (N) 	++ :: M (NM) locator (NM) lookup (N) 
CONSTRUCTOR:NAME:DimCombo DimCombo DimCombo():  | dim (NM) combo (N) 	++
BASE_VERB:NAME:ScenarioManager void stopScenario(Plugin plugin, String scenarioName): stop (VI)  | EQUIV[scenario (N) , [ string (NI) - scenario (NM) name (NI) ]]	++ :: [ plugin (N) - plugin (N) ] :: scenario (NM) manager (N) 
BASE_VERB:NAME:Deflate void send_code(int c, short tree): send (V)  | code (NI) 	++ :: [ int (N) - c (N) ] :: [ short (N) - tree (NI) ] :: deflate (N) 
SPECIAL:NAME:Forum List getThreads(): get (V)  | threads (N) 	++ :: list (N)  :: forum (N) 
BASE_VERB:NAME:NapkinFormattedTextFieldUI void installUI(JComponent c): install (V)  | UI (N) 	++ :: [ J (NM) component (N) - c (N) ] :: napkin (NM) formatted (NM) text (NM) field (NM) UI (N) 
SPECIAL:NAME:RelationalStorageTechnology String getAssociationRoleReferentialConstraintNameSuffix(): get (V)  | association (NM) role (NM) referential (NM) constraint (NM) name (NM) suffix (N) 	++ :: string (NI)  :: relational (NM) storage (NM) technology (N) 
SPECIAL:NAME:VLocatorDialog void enableNew(): enable (VI)  | new (NI) 	++ :: V (NM) locator (NM) dialog (N) 
SPECIAL:NAME:Compiled ElementSource runNonDet(Object input, RBContext context): run (VI)  | non (NM) det (N) 	++ :: [ object (NI) - input (NI) ] :: [ RB (NM) context (N) - context (N) ] :: element (NM) source (NI)  :: compiled (N) 
SPECIAL:NAME:BorderLayoutContainer void setEastComponent(Component comp): set (V)  | east (NM) component (N) 	++ :: [ component (N) - comp (N) ] :: border (NM) layout (NM) container (NI) 
SPECIAL:NAME:MielModPanel int getFormDimension(): get (V)  | form (NM) dimension (N) 	++ :: int (N)  :: miel (NM) mod (NM) panel (N) 
SPECIAL:NAME:SINU void setZulassung(String s): set (V)  | zulassung (N) 	++ :: [ string (NI) - s (N) ] :: SINU (N) 
SPECIAL:FORM:SegmentList Segment get(int idx): get (V)  | [ int (N) - idx (N) ]	++ :: segment (NM) list (N)  :: segment (N) 
CONSTRUCTOR:NAME:SpellAbility SpellAbility SpellAbility(String n, int c, int r):  | spell (NM) ability (N) 	++ :: [ string (NI) - n (N) ] :: [ int (N) - c (N) ] :: [ int (N) - r (N) ]
SPECIAL:NAME:MailEngine static Session getSession(): get (V)  | session (N) 	++ :: session (N)  :: mail (NM) engine (N) 
SPECIAL:NAME:NewProperyDialog JOptionPane getOptionPane(): get (V)  | option (NM) pane (N) 	++ :: J (NM) option (NM) pane (N)  :: new (NM) propery (NM) dialog (N) 
SPECIAL:NAME:TemplateNode void setChild(TemplateNode inChild, int relation): set (V)  | child (N) 	++ :: [ template (NM) node (NI) - in (NM) child (N) ] :: [ int (N) - relation (N) ] :: template (NM) node (NI) 
SPECIAL:CLAS:Object doInHibernate(Session arg0): do (VI)  | ANONYMOUS (N) -- in (P) hibernate (N) 	++ :: [ session (N) - arg (NM) 0 (N) ] :: object (NI) 
PREP:NAME:TriggerFiredEvent String toString(): convert (V) | to (P) string (NI) 	++ :: trigger (NM) fired (NM) event (NI)  :: string (NI) 
SPECIAL:NAME:Node boolean setPocketToTurnAcross(int p, int timestamp, Object source): set (V)  | pocket (N) -- to (P) turn (NM) across (N) 	++ :: [ int (N) - p (NI) ] :: [ int (N) - timestamp (N) ] :: [ object (NI) - source (NI) ] :: boolean (N)  :: node (NI) 
BASE_VERB:NAME:ObjRelationshipInfoModel void breakChain(int index): break (V)  | chain (N) 	++ :: [ int (N) - index (NI) ] :: obj (NM) relationship (NM) info (NM) model (NI) 
SPECIAL:NAME:FT_FeatureCollection void addUniqueCollection(FT_FeatureCollection value): add (V)  | EQUIV[unique (NM) collection (N) , [ FT (NM) feature (NM) collection (N) - value (NI) ]]	++ :: FT (NM) feature (NM) collection (N) 
V_3PS:NAME:ArrayUtil static boolean containsAllTrueElements(boolean arra, boolean arrb): contains (V)  | all (DT) true (NM) elements (N) 	++ :: [ boolean (N) - arra (N) ] :: [ boolean (N) - arrb (N) ] :: boolean (N)  :: array (NM) util (N) 
SPECIAL:NAME:AbstractConsumerEndpoint String getPersistentId(): get (V)  | persistent (NM) id (NI) 	++ :: string (NI)  :: abstract (NM) consumer (NM) endpoint (N) 
CONSTRUCTOR:NAME:SetOnlineException SetOnlineException SetOnlineException():  | set (NM) online (NM) exception (N) 	++
BASE_VERB:NAME:MessagesDlMsg static boolean reloadDlMessengerCache(): reload (V)  | dl (NM) messenger (NM) cache (N) 	++ :: boolean (N)  :: messages (NM) dl (NM) msg (NI) 
SPECIAL:NAME:Page1 Body getBody1(): get (V)  | body (N) 1 (D) 	++ :: body (N)  :: page (NM) 1 (N) 
SPECIAL:FORM:SerialZip void add(String fileName, String xml): add (V)  | [ string (NI) - file (NM) name (NI) ]	++ :: [ string (NI) - xml (N) ] :: serial (NM) zip (N) 
CONSTRUCTOR:NAME:BuffBitstream BuffBitstream BuffBitstream(String filename, int _type, int _buf_len):  | buff (NM) bitstream (N) 	++ :: [ string (NI) - filename (N) ] :: [ int (N) - type (N) ] :: [ int (N) - buf (NM) len (N) ]
SPECIAL:CLAS:DefaultStandardPersonSsnFactory Object clone(): clone (V)  | default (NM) standard (NM) person (NM) ssn (NM) factory (N) 	++ :: object (NI) 
SPECIAL:NAME:BDDSolver Relation createLessThanRelation(Domain fd1, Domain fd2): create (V)  | less (DT) than (NM) relation (N) 	++ :: [ domain (N) - fd (NM) 1 (N) ] :: [ domain (N) - fd (NM) 2 (N) ] :: relation (N)  :: BDD (NM) solver (N) 
CONSTRUCTOR:NAME:CollectUtils CollectUtils CollectUtils(String name):  | collect (NM) utils (N) 	++ :: [ string (NI) - name (NI) ]
SPECIAL:CLAS:TSPAnt Ant clone(): clone (V)  | TSP (NM) ant (N) 	++ :: ant (N) 
SPECIAL:NAME:TransactionReportPanel void findButton_mouseExited(MouseEvent e): find (V)  | button (NM) mouse (NM) exited (N) 	++ :: [ mouse (NM) event (NI) - e (N) ] :: transaction (NM) report (NM) panel (N) 
SPECIAL:NAME:TestSortWindowIterator void testTwoSeparateEntryElement(): test (VI)  | two (NM) separate (NM) entry (NM) element (NI) 	++ :: test (NM) sort (NM) window (NM) iterator (N) 
BASE_VERB:FORM:Factory static DeriverPropsDocument parse(File f, XmlOptions options): parse (V)  | [ file (NI) - f (N) ]	++ :: [ xml (NM) options (N) - options (N) ] :: factory (N)  :: deriver (NM) props (NM) document (NI) 
SPECIAL:NAME:PlayTypePlayerStat int getAttempts(): get (V)  | attempts (N) 	++ :: int (N)  :: play (NM) type (NM) player (NM) stat (N) 
SPECIAL:NAME:AbstractStandardProcessExecutionState String getNameHTML(): get (V)  | name (NM) HTML (N) 	++ :: string (NI)  :: abstract (NM) standard (NM) process (NM) execution (NM) state (N) 
V_3P_IRR:NAME:DayDescriptor boolean isWorking(): is (V)  | working (N) 	++ :: boolean (N)  :: day (NM) descriptor (NI) 
SPECIAL:NAME:Solver double getSolutionValue(): get (V)  | solution (NM) value (NI) 	++ :: double (N)  :: solver (N) 
BASE_VERB:CLAS:WCMSActionServlet void setbackaddr(): setbackaddr (V)  | WCMS (NM) action (NM) servlet (N) 	++
SPECIAL:NAME:PublicKeyAuthenticationConfig String getKeyfile(): get (V)  | keyfile (N) 	++ :: string (NI)  :: public (NM) key (NM) authentication (NM) config (NI) 
SPECIAL:NAME:IBatchInstance String getMovableType(): get (V)  | movable (NM) type (N) 	++ :: string (NI)  :: I (NM) batch (NM) instance (NI) 
BASE_VERB:NAME:DisplayHeaderAttributeImpl Boolean xgetDisplayHeader(): xget (V)  | display (NM) header (N) 	++ :: boolean (N)  :: display (NM) header (NM) attribute (NM) impl (NI) 
BASE_VERB:NAME:FOrayFont int extractBaseline(AbsoluteAxis writingMode, Baseline baselineType, int fontSize): extract (V)  | EQUIV[baseline (N) , [ baseline (N) - baseline (NM) type (N) ]]	++ :: [ absolute (NM) axis (N) - writing (NM) mode (N) ] :: [ int (N) - font (NM) size (N) ] :: int (N)  :: F (NM) oray (NM) font (N) 
SPECIAL:NAME:FileChooserTemplate FileFilter getChoosableFileFilters(): get (V)  | choosable (NM) file (NM) filters (N) 	++ :: file (NM) filter (N)  :: file (NM) chooser (NM) template (N) 
SPECIAL:NAME:FileLanguageDAO ArrayList getLanguages(ChatServer instance): get (V)  | languages (N) 	++ :: [ chat (NM) server (N) - instance (NI) ] :: array (NM) list (N)  :: file (NM) language (NM) DAO (N) 
SPECIAL:NAME:Cluster List<Cluster> getAdjacentVertices(): get (V)  | adjacent (NM) vertices (N) 	++ :: list (NM) cluster (N)  :: cluster (N) 
SPECIAL:NAME:Envelope String getTo(): get (V)  | to (NM) 	++ :: string (NI)  :: envelope (N) 
SPECIAL:NAME:SimpleReader LispList readLists(): read (V)  | lists (N) 	++ :: lisp (NM) list (N)  :: simple (NM) reader (N) 
SPECIAL:NAME:CP113_SchemaControllerTest void testCopySchemaFilesToFolder1(): test (VI) copy (V)  | schema (NM) files (N) -- to (P) folder (N) 1 (D) 	++ :: CP (NM) 113 (NM) schema (NM) controller (NM) test (N) 
SPECIAL:NAME:JEANCatalogCellRenderer void setCategoryForegroundColor(int which, Color color): set (V)  | category (NM) foreground (NM) color (N) 	++ :: [ int (N) - which (DT) ] :: [ color (N) - color (N) ] :: JEAN (NM) catalog (NM) cell (NM) renderer (N) 
V_3PS:FORM:AuxDependencyFile boolean equals(Object obj): equals (V)  | [ object (NI) - obj (NI) ]	++ :: aux (NM) dependency (NM) file (NI)  :: boolean (N) 
CONSTRUCTOR:NAME:MimeMessage MimeMessage MimeMessage(Session session):  | mime (NM) message (NI) 	++ :: [ session (N) - session (N) ]
VOID_NP:NAME:IES void engineInit(AlgorithmParameterSpec paramSpec): handle (V) | engine (NM) init (N) 	++ :: [ algorithm (NM) parameter (NM) spec (NI) - param (NM) spec (NI) ] :: IES (N)  :: void (N) 
SPECIAL:NAME:Object getValue(): get (V)  | value (NI) 	++ :: object (NI)  :: ANONYMOUS (N) 
BASE_VERB:NAME:EnumChangesetsTask void verifyParameters(): verify (VI)  | parameters (N) 	++ :: enum (NM) changesets (NM) task (N) 
BASE_VERB:NAME:void paintVerticalPartOfLeg(Graphics g, Rectangle clipBounds, Insets insets, TreePath path): paint (V)  | vertical (NM) part (N) -- of (P) leg (N) 	++ :: [ graphics (N) - g (N) ] :: [ rectangle (N) - clip (NM) bounds (N) ] :: [ insets (N) - insets (N) ] :: [ tree (NM) path (NI) - path (NI) ] :: ANONYMOUS (N) 
SPECIAL:NAME:ProteinFilter String getDescription(): get (V)  | description (NI) 	++ :: string (NI)  :: protein (NM) filter (N) 
BASE_VERB:CLAS:PyArrayDerived PyString __hex__(): hex (V)  | py (NM) array (NM) derived (N) 	++ :: py (NM) string (NI) 
CONSTRUCTOR:NAME:SubSalesRep SubSalesRep SubSalesRep(PosPanel posPanel):  | sub (NM) sales (NM) rep (N) 	++ :: [ pos (NM) panel (N) - pos (NM) panel (N) ]
CONSTRUCTOR:NAME:OrderQueryBond OrderQueryBond OrderQueryBond(IQueryAtom atom1, IQueryAtom atom2, double order):  | order (NM) query (NM) bond (N) 	++ :: [ I (NM) query (NM) atom (N) - atom (NM) 1 (N) ] :: [ I (NM) query (NM) atom (N) - atom (NM) 2 (N) ] :: [ double (N) - order (N) ]
V_3PS:FORM:InputCovariant3 boolean equals(Object aObject): equals (V)  | [ object (NI) - a (NM) object (NI) ]	++ :: input (NM) covariant (NM) 3 (N)  :: boolean (N) 
SPECIAL:NAME:MoveDelegateTest void testAirCanLandOnLand(): test (VI)  | air (NM) can (NM) land (N) -- on (P) land (N) 	++ :: move (NM) delegate (NM) test (N) 
CONSTRUCTOR:NAME:MultithreadedPrivilegedCharacterChannelAdapter MultithreadedPrivilegedCharacterChannelAdapter MultithreadedPrivilegedCharacterChannelAdapter(IMultithreadedCharacterChannel channel, String uid):  | multithreaded (NM) privileged (NM) character (NM) channel (NM) adapter (NI) 	++ :: [ I (NM) multithreaded (NM) character (NM) channel (N) - channel (N) ] :: [ string (NI) - uid (N) ]
SPECIAL:NAME:DoublePTH Object createClone(Object aFromObject): create (V)  | clone (N) 	++ :: [ object (NI) - a (NM) from (NM) object (NI) ] :: object (NI)  :: double (NM) PTH (N) 
BASE_VERB:NAME:GtkTabbedPaneUI void paintTabBackground(Graphics g, int tabPlacement, int tabIndex, int x, int y, int w, int h, boolean isSelected): paint (V)  | tab (NM) background (N) 	++ :: [ graphics (N) - g (N) ] :: [ int (N) - tab (NM) placement (N) ] :: [ int (N) - tab (NM) index (NI) ] :: [ int (N) - x (N) ] :: [ int (N) - y (N) ] :: [ int (N) - w (N) ] :: [ int (N) - h (N) ] :: [ boolean (N) - is (NM) selected (N) ] :: gtk (NM) tabbed (NM) pane (NM) UI (N) 
SPECIAL:NAME:AbstractContainerKeyFilter String getKeyValues(ServletRequest request, ServletResponse response, FilterChain chain): get (V)  | key (NM) values (N) 	++ :: [ servlet (NM) request (N) - request (N) ] :: [ servlet (NM) response (N) - response (N) ] :: [ filter (NM) chain (N) - chain (N) ] :: string (NI)  :: abstract (NM) container (NM) key (NM) filter (N) 
V_3P_IRR:NAME:RemoveConsiderAction boolean isLegal(): is (V)  | legal (N) 	++ :: boolean (N)  :: remove (NM) consider (NM) action (N) 
BASE_VERB:FORM:TelnetProtocolHandler void transpose(byte buf): transpose (V)  | [ byte (N) - buf (N) ]	++ :: telnet (NM) protocol (NM) handler (N) 
SPECIAL:CLAS:TMLogViewer void run(): run (VI)  | TM (NM) log (NM) viewer (N) 	++
SPECIAL:NAME:AbstractStandardAccountFactory List<PrimaryKey> findEnabledPrimaryKeysByFirstName(String name): find (V)  | enabled (NM) primary (NM) keys (N) -- by (P) EQUIV[first (NM) name (NI) , [ string (NI) - name (NI) ]]	++ :: list (NM) primary (NM) key (NI)  :: abstract (NM) standard (NM) account (NM) factory (N) 
BASE_VERB:CLAS:Arrays static String arrayToDelimitedString(String pastrData, String pstrDelimeter): array (V)  | arrays (N) -- to (P) EQUIV[delimited (NM) string (NI) , [ string (NI) - pastr (NM) data (NI) ], [ string (NI) - pstr (NM) delimeter (N) ]]	++ :: string (NI) 
SPECIAL:NAME:CMethodContext void addStoreField(JFieldDeclaration field): add (V)  | EQUIV[store (NM) field (N) , [ J (NM) field (NM) declaration (NI) - field (N) ]]	++ :: C (NM) method (NM) context (N) 
SPECIAL:NAME:XMLStatementBase NodeIterator getRows(Element element): get (V)  | rows (N) 	++ :: [ element (NI) - element (NI) ] :: node (NM) iterator (N)  :: XML (NM) statement (NM) base (N) 
V_3P_IRR:CLAS:MPeriod boolean isInPeriod(Timestamp date): is (V)  | M (NM) period (N) -- in (P) period (N) 	++ :: [ timestamp (N) - date (N) ] :: boolean (N) 
SPECIAL:FORM:AbstractViewlet String render(WebContext context): render (V)  | [ web (NM) context (N) - context (N) ]	++ :: abstract (NM) viewlet (N)  :: string (NI) 
SPECIAL:FORM:PhotonMapRayProcessor void initialize(PixelwiseRenderer renderer, Scene scene): initialize (V)  | [ pixelwise (NM) renderer (N) - renderer (N) ]	++ :: [ scene (N) - scene (N) ] :: photon (NM) map (NM) ray (NM) processor (N) 
SPECIAL:NAME:ParseTest void testParsing(): test (VI)  | parsing (N) 	++ :: parse (NM) test (N) 
BASE_VERB:FORM:FloatHashMap V put(float key, V value): put (V)  | [ float (N) - key (NI) ]	++ :: [ V (N) - value (NI) ] :: float (NM) hash (NM) map (N)  :: V (N) 
SPECIAL:NAME:HTMLDocument String getTitle(): get (V)  | title (N) 	++ :: string (NI)  :: HTML (NM) document (NI) 
SPECIAL:NAME:Parser void addMessageListener(MessageListener l): add (V)  | EQUIV[message (NM) listener (N) , [ message (NM) listener (N) - l (N) ]]	++ :: parser (N) 
SPECIAL:NAME:H4AnnotationManager H4File getH4File(): get (V)  | H (NM) 4 (D) file (NI) 	++ :: H (NM) 4 (NM) file (NI)  :: H (NM) 4 (NM) annotation (NM) manager (N) 
V_3P_IRR:NAME:ResState boolean isRemoved(): is (V)  | removed (N) 	++ :: boolean (N)  :: res (NM) state (N) 
SPECIAL:NAME:ValidationConfiguration void setAuthFailedUrl(String authFailedUrl): set (V)  | auth (NM) failed (NM) url (NI) 	++ :: [ string (NI) - auth (NM) failed (NM) url (NI) ] :: validation (NM) configuration (NI) 
SPECIAL:NAME:DSM06E35mTest void testResult10(): test (VI)  | result (N) 10 (D) 	++ :: DSM (NM) 06 (NM) E (NM) 35 (NM) m (NM) test (N) 
SPECIAL:NAME:PlayerClass int getWisBonus(): get (V)  | wis (NM) bonus (N) 	++ :: int (N)  :: player (NM) class (NI) 
ENDS_WITH_ED:NAME:void childrenRemoved(ICompoundContentElement parent, int indexes, IContentElement children): handle (V) | children (NM) removed (N) 	++ :: [ I (NM) compound (NM) content (NM) element (NI) - parent (N) ] :: [ int (N) - indexes (N) ] :: [ I (NM) content (NM) element (NI) - children (N) ] :: ANONYMOUS (N)  :: void (N) 
CONSTRUCTOR:NAME:MemberDaoIbatisTest MemberDaoIbatisTest MemberDaoIbatisTest():  | member (NM) dao (NM) ibatis (NM) test (N) 	++
SPECIAL:FORM:RowsDefault void render(Component comp, Writer out): render (V)  | [ component (N) - comp (N) ]	++ :: [ writer (N) - out (N) ] :: rows (NM) default (N) 
BASE_VERB:NAME:TableUtils static void modifyTableHeader(JTableHeader head, Vector columnNames): modify (V)  | EQUIV[table (NM) header (N) , [ J (NM) table (NM) header (N) - head (N) ]]	++ :: [ vector (N) - column (NM) names (N) ] :: table (NM) utils (N) 
BASE_VERB:NAME:AnnotationsWriter void classInfoIndex(String name): class (V)  | info (NM) index (NI) 	++ :: [ string (NI) - name (NI) ] :: annotations (NM) writer (N) 
CONSTRUCTOR:NAME:DphrmEvalatorLibDAO DphrmEvalatorLibDAO DphrmEvalatorLibDAO():  | dphrm (NM) evalator (NM) lib (NM) DAO (N) 	++
SPECIAL:NAME:Annotation void setLinkedItem(ItemID linkedItem): set (V)  | linked (NM) item (NI) 	++ :: [ item (NM) ID (NI) - linked (NM) item (NI) ] :: annotation (N) 
SPECIAL:NAME:Q_Subtract String getFun(): get (V)  | fun (N) 	++ :: string (NI)  :: Q (NM) subtract (N) 
SPECIAL:NAME:ExpressionArithmetic static int getOperationFromToken(int value): get (V)  | operation (N) -- from (P) token (N) 	++ :: [ int (N) - value (NI) ] :: int (N)  :: expression (NM) arithmetic (N) 
SPECIAL:NAME:BezierCurve2D Curve2D getSubCurve(double t0, double t1): get (V)  | sub (NM) curve (N) 	++ :: [ double (N) - t (NM) 0 (N) ] :: [ double (N) - t (NM) 1 (N) ] :: curve (NM) 2 (NM) D (N)  :: bezier (NM) curve (NM) 2 (NM) D (N) 
SPECIAL:NAME:DataStreamList void pop_front(): pop (V)  | front (N) 	++ :: data (NM) stream (NM) list (N) 
BASE_VERB:NAME:IEDAOOracle void putPhotoOnDisk(long blobId, String table, OutputStream photoFileStream): put (V)  | photo (N) -- on (P) disk (N) 	++ :: [ long (N) - blob (NM) id (NI) ] :: [ string (NI) - table (N) ] :: [ output (NM) stream (NI) - photo (NM) file (NM) stream (NI) ] :: IEDAO (NM) oracle (N) 
BASE_VERB:NAME:Renderer2DModel void clearHighlightedAtoms(): clear (V)  | highlighted (NM) atoms (N) 	++ :: renderer (NM) 2 (NM) D (NM) model (NI) 
SPECIAL:NAME:GrammarInfoImpl Class getRootElement(String uri, String local): get (V)  | root (NM) element (NI) 	++ :: [ string (NI) - uri (NI) ] :: [ string (NI) - local (N) ] :: class (NI)  :: grammar (NM) info (NM) impl (NI) 
SPECIAL:NAME:SiteInfoTableModel List<SiteInfo> getData(): get (V)  | data (NI) 	++ :: list (NM) site (NM) info (NI)  :: site (NM) info (NM) table (NM) model (NI) 
BASE_VERB:NAME:HypersonicDialect boolean disallowNullsInExpressions(): disallow (V)  | nulls (N) -- in (P) expressions (N) 	++ :: boolean (N)  :: hypersonic (NM) dialect (N) 
BASE_VERB:NAME:AXJLDocumentWalker void walk_simpleNameObjectUid(IXOLElement $IXOLElement): walk (V)  | simple (NM) name (NM) object (NM) uid (N) 	++ :: [ IXOL (NM) element (NI) - IXOL (NM) element (NI) ] :: AXJL (NM) document (NM) walker (N) 
CONSTRUCTOR:NAME:DomProcessingInstruction DomProcessingInstruction DomProcessingInstruction(DomDocument owner, String target, String data):  | dom (NM) processing (NM) instruction (N) 	++ :: [ dom (NM) document (NI) - owner (N) ] :: [ string (NI) - target (N) ] :: [ string (NI) - data (NI) ]
SPECIAL:NAME:ObjectFactory CriteriaFields createCriteriaFields(): create (V)  | criteria (NM) fields (N) 	++ :: criteria (NM) fields (N)  :: object (NM) factory (N) 
BASE_VERB:NAME:TblpPrElt YAlignType xgetTblpYSpec(): xget (V)  | tblp (NM) Y (NM) spec (NI) 	++ :: Y (NM) align (NM) type (N)  :: tblp (NM) pr (NM) elt (NI) 
SPECIAL:NAME:QueryStringGetMsg String getQueryString(): get (V)  | query (NM) string (NI) 	++ :: string (NI)  :: query (NM) string (NM) get (NM) msg (NI) 
SPECIAL:NAME:CalendarTag String getTheme(): get (V)  | theme (N) 	++ :: string (NI)  :: calendar (NM) tag (NI) 
SPECIAL:FORM:TestModelSlider static void main(String args): main (V)  | [ string (NI) - args (N) ]	++ :: test (NM) model (NM) slider (N) 
CONSTRUCTOR:NAME:AbstractPresenter AbstractPresenter AbstractPresenter():  | abstract (NM) presenter (N) 	++
CONSTRUCTOR:NAME:Param Param Param():  | param (N) 	++
SPECIAL:NAME:ConcurrentVersionsSystemValidationTest void testLocalWorkingCopyAndCvsrootModuleAreMutuallyExclusive(): test (VI)  | local (NM) working (NM) copy (NM) and (NM) cvsroot (NM) module (NM) are (NM) mutually (NM) exclusive (N) 	++ :: concurrent (NM) versions (NM) system (NM) validation (NM) test (N) 
BASE_VERB:NAME:FeatureLocking int lockFeatures(Query query): lock (V)  | features (N) 	++ :: [ query (N) - query (N) ] :: int (N)  :: feature (NM) locking (N) 
V_3P_IRR:NAME:QueryRuntime boolean isDefaultQueryRange(Attribute attr): is (V)  | default (NM) query (NM) range (N) 	++ :: [ attribute (N) - attr (N) ] :: boolean (N)  :: query (NM) runtime (N) 
SPECIAL:NAME:LdapSearchRequest String getSearchBase(): get (V)  | search (NM) base (N) 	++ :: string (NI)  :: ldap (NM) search (NM) request (N) 
SPECIAL:NAME:SwingUtilities static void setMenuBarForeground(JMenuBar menuBar, Color color): set (V)  | menu (NM) bar (NM) foreground (N) 	++ :: [ J (NM) menu (NM) bar (N) - menu (NM) bar (N) ] :: [ color (N) - color (N) ] :: swing (NM) utilities (N) 
V_3P_IRR:NAME:NoLegs boolean isSet(LegSecurityID field): is (V)  | set (N) 	++ :: [ leg (NM) security (NM) ID (NI) - field (N) ] :: boolean (N)  :: no (DT) legs (N) 
SPECIAL:NAME:Session void startRTPThread(): start (V)  | RTP (NM) thread (N) 	++ :: session (N) 
SPECIAL:CLAS:CmdPlayMode void delete(): delete (V)  | cmd (NM) play (NM) mode (N) 	++
NOUN_PHRASE:NAME:UserConfigurations Iterator properties(): get (V) | properties (N) 	++ :: user (NM) configurations (N)  :: iterator (N) 
CONSTRUCTOR:NAME:SearchManagerImpl SearchManagerImpl SearchManagerImpl(CspVariableFactory varFact, ConstraintStore store):  | search (NM) manager (NM) impl (NI) 	++ :: [ csp (NM) variable (NM) factory (N) - var (NM) fact (N) ] :: [ constraint (NM) store (N) - store (N) ]
ENDS_WITH_ING:NAME:WindowHandler void windowClosing(WindowEvent e): handle (V) | window (NM) closing (N) 	++ :: [ window (NM) event (NI) - e (N) ] :: window (NM) handler (N)  :: void (N) 
BASE_VERB:FORM:ItemRadio void update(String name, String text, String fore, String back, int x, int y, int sx, int sy, String relTo, Container parent): update (V)  | [ string (NI) - name (NI) ]	++ :: [ string (NI) - text (NI) ] :: [ string (NI) - fore (N) ] :: [ string (NI) - back (N) ] :: [ int (N) - x (N) ] :: [ int (N) - y (N) ] :: [ int (N) - sx (N) ] :: [ int (N) - sy (N) ] :: [ string (NI) - rel (NM) to (N) ] :: [ container (NI) - parent (N) ] :: item (NM) radio (N) 
SPECIAL:NAME:MiniHttpServer String getHtmlStats(): get (V)  | html (NM) stats (N) 	++ :: string (NI)  :: mini (NM) http (NM) server (N) 
PREP:NAME:SpringUnitTransactionalTest void onTearDownAfterTransaction(): handle (V) | on (NM) tear (NM) down (NM) after (NM) transaction (N) 	++ :: spring (NM) unit (NM) transactional (NM) test (N)  :: void (N) 
V_3PS:FORM:ViewLeaseHandlerImpl boolean recognizes(SpaceUID aUID): recognizes (V)  | [ space (NM) UID (N) - a (NM) UID (N) ]	++ :: view (NM) lease (NM) handler (NM) impl (NI)  :: boolean (N) 
CONSTRUCTOR:NAME:XMLAttributeValue XMLAttributeValue XMLAttributeValue(int begin, int len, int hash):  | XML (NM) attribute (NM) value (NI) 	++ :: [ int (N) - begin (N) ] :: [ int (N) - len (N) ] :: [ int (N) - hash (N) ]
SPECIAL:NAME:Pagetemplate String getTEMPLATEFILE(): get (V)  | TEMPLATEFILE (N) 	++ :: string (NI)  :: pagetemplate (N) 
BASE_VERB:FORM:Synchronizer void merge(DcObject dco1, DcObject dco2): merge (V)  | [ dc (NM) object (NI) - dco (NM) 1 (N) ]	++ :: [ dc (NM) object (NI) - dco (NM) 2 (N) ] :: synchronizer (N) 
ENDS_WITH_ED:NAME:XithMapRenderer void moveLeft(): handle (V) | move (NM) left (N) 	++ :: xith (NM) map (NM) renderer (N)  :: void (N) 
BASE_VERB:NAME:MethodTagsHandler void ifReturnsVoid(String template, Properties attributes): if (V)  | returns (NM) void (N) 	++ :: [ string (NI) - template (N) ] :: [ properties (N) - attributes (N) ] :: method (NM) tags (NM) handler (N) 
CONSTRUCTOR:NAME:JxtProgressBar JxtProgressBar JxtProgressBar():  | jxt (NM) progress (NM) bar (N) 	++
SPECIAL:NAME:CommandBean IQueue mainQueue(): main (V)  | queue (N) 	++ :: I (NM) queue (N)  :: command (NM) bean (NI) 
BASE_VERB:FORM:AudioPlayer void play(String filepath): play (V)  | [ string (NI) - filepath (N) ]	++ :: audio (NM) player (N) 
ENDS_WITH_ED:NAME:StateGraphNode void preNodeRenamed(String oldName, String newName): handle (V) | pre (NM) node (NM) renamed (N) 	++ :: [ string (NI) - old (NM) name (NI) ] :: [ string (NI) - new (NM) name (NI) ] :: state (NM) graph (NM) node (NI)  :: void (N) 
BASE_VERB:NAME:BreakupImpl void serializeElements(XMLSerializer context): serialize (V)  | elements (N) 	++ :: [ XML (NM) serializer (N) - context (N) ] :: breakup (NM) impl (NI) 
SPECIAL:NAME:Plugin String getName(): get (V)  | name (NI) 	++ :: string (NI)  :: plugin (N) 
ENDS_WITH_ED:NAME:void mousePressed(MouseEvent evt): handle (V) | mouse (NM) pressed (N) 	++ :: [ mouse (NM) event (NI) - evt (N) ] :: ANONYMOUS (N)  :: void (N) 
SPECIAL:NAME:JavaCharStream int getTabSize(int i): get (V)  | tab (NM) size (N) 	++ :: [ int (N) - i (N) ] :: int (N)  :: java (NM) char (NM) stream (NI) 
SPECIAL:NAME:TabbedPanel void removeAllTabbedPanelCallbacks(): remove (V)  | all (DT) tabbed (NM) panel (NM) callbacks (N) 	++ :: tabbed (NM) panel (N) 
CONSTRUCTOR:NAME:TagMetamodelElementAstTest TagMetamodelElementAstTest TagMetamodelElementAstTest(String name):  | tag (NM) metamodel (NM) element (NM) ast (NM) test (N) 	++ :: [ string (NI) - name (NI) ]
NOUN_PHRASE:NAME:DynFixedHelper static DynFixed unchecked_narrow(Object obj): get (V) | unchecked (NM) narrow (N) 	++ :: [ object (NI) - obj (NI) ] :: dyn (NM) fixed (NM) helper (N)  :: dyn (NM) fixed (N) 
NOUN_PHRASE:NAME:ReferenceImpl EClass eStaticClass(): get (V) | e (PRE) static (NM) class (NI) 	++ :: reference (NM) impl (NI)  :: E (NM) class (NI) 
V_3P_IRR:NAME:GlobalManagerImpl boolean isPaused(DownloadManager manager): is (V)  | paused (N) 	++ :: [ download (NM) manager (N) - manager (N) ] :: boolean (N)  :: global (NM) manager (NM) impl (NI) 
SPECIAL:NAME:umlClass void set_FundamentalType(boolean FundamentalType): set (V)  | fundamental (NM) type (N) 	++ :: [ boolean (N) - fundamental (NM) type (N) ] :: uml (NM) class (NI) 
SPECIAL:NAME:JTextArea boolean getWrapStyleWord(): get (V)  | wrap (NM) style (NM) word (N) 	++ :: boolean (N)  :: J (NM) text (NM) area (N) 
SPECIAL:NAME:AbstractSection String getTitle(): get (V)  | title (N) 	++ :: string (NI)  :: abstract (NM) section (N) 
SPECIAL:FORM:Test static void main(String args): main (V)  | [ string (NI) - args (N) ]	++ :: test (N) 
SPECIAL:CLAS:IntegerGraphicsState Object clone(): clone (V)  | integer (NM) graphics (NM) state (N) 	++ :: object (NI) 
CONSTRUCTOR:NAME:babylonMessagingDialog babylonMessagingDialog babylonMessagingDialog(babylonPanel panel):  | babylon (NM) messaging (NM) dialog (N) 	++ :: [ babylon (NM) panel (N) - panel (N) ]
CONSTRUCTOR:NAME:Array Array Array(long n, double fill):  | array (N) 	++ :: [ long (N) - n (N) ] :: [ double (N) - fill (N) ]
BASE_VERB:NAME:UserInterfaceCallback void askPatientUpdate(int patientid, ZISListener listener): ask (V)  | patient (NM) update (N) 	++ :: [ int (N) - patientid (N) ] :: [ ZIS (NM) listener (N) - listener (N) ] :: user (NM) interface (NM) callback (N) 
SPECIAL:NAME:UCProperties String loadConvert(String theString): load (V)  | convert (N) 	++ :: [ string (NI) - the (DT) string (NI) ] :: string (NI)  :: UC (NM) properties (N) 
V_3PS:FORM:ParameterType boolean exists(Parameter parameter, Classifier type): exists (V)  | [ parameter (N) - parameter (N) ]	++ :: [ classifier (N) - type (N) ] :: parameter (NM) type (N)  :: boolean (N) 
SPECIAL:NAME:DataAccessObject String getSql(): get (V)  | sql (N) 	++ :: string (NI)  :: data (NM) access (NM) object (NI) 
SPECIAL:NAME:IDLJavaSerializationInputStream void setIndex(int value): set (V)  | index (NI) 	++ :: [ int (N) - value (NI) ] :: IDL (NM) java (NM) serialization (NM) input (NM) stream (NI) 
SPECIAL:NAME:ExtendedAttributeTypeImpl BigInteger getValueID(): get (V)  | value (NM) ID (NI) 	++ :: big (NM) integer (N)  :: extended (NM) attribute (NM) type (NM) impl (NI) 
SPECIAL:NAME:CoreXSLTStylesheetDescription void setChannelAttributeWordDescription(String attributeName, String wordDescription): set (V)  | channel (NM) attribute (NM) word (NM) description (NI) 	++ :: [ string (NI) - attribute (NM) name (NI) ] :: [ string (NI) - word (NM) description (NI) ] :: core (NM) XSLT (NM) stylesheet (NM) description (NI) 
SPECIAL:FORM:MySQLDatabaseMetaDataTest static void main(String args): main (V)  | [ string (NI) - args (N) ]	++ :: my (PR) SQL (NM) database (NM) meta (NM) data (NM) test (N) 
CONSTRUCTOR:NAME:VPFDate VPFDate VPFDate(String date):  | VPF (NM) date (N) 	++ :: [ string (NI) - date (N) ]
CONSTRUCTOR:NAME:GridException GridException GridException():  | grid (NM) exception (N) 	++
SPECIAL:NAME:GeoreferenceableImpl void setOrientationParameterDescription(InternationalString newValue): set (V)  | orientation (NM) parameter (NM) description (NI) 	++ :: [ international (NM) string (NI) - new (NM) value (NI) ] :: georeferenceable (NM) impl (NI) 
V_3P_IRR:NAME:IAAWizard boolean isSpanMatcherSelected(): is (V)  | span (NM) matcher (NM) selected (N) 	++ :: boolean (N)  :: IAA (NM) wizard (N) 
SPECIAL:NAME:SQLOutput void writeRef(Ref x): write (V)  | EQUIV[ref (NI) , [ ref (NI) - x (N) ]]	++ :: SQL (NM) output (N) 
SPECIAL:NAME:PDFJob Dimension getPageDimension(): get (V)  | page (NM) dimension (N) 	++ :: dimension (N)  :: PDF (NM) job (N) 
SPECIAL:NAME:Figure void setAttribute(FigureAttributeConstant attributeConstant, Object value): set (V)  | attribute (N) 	++ :: [ figure (NM) attribute (NM) constant (N) - attribute (NM) constant (N) ] :: [ object (NI) - value (NI) ] :: figure (N) 
CONSTRUCTOR:NAME:ColumnDescription ColumnDescription ColumnDescription(String name, String display, Class classe):  | column (NM) description (NI) 	++ :: [ string (NI) - name (NI) ] :: [ string (NI) - display (N) ] :: [ class (NI) - classe (N) ]
SPECIAL:NAME:MielMap void setScrollbars(Scrollbar h, Scrollbar v): set (V)  | scrollbars (N) 	++ :: [ scrollbar (N) - h (N) ] :: [ scrollbar (N) - v (N) ] :: miel (NM) map (N) 
CONSTRUCTOR:NAME:DocumentUpdater DocumentUpdater DocumentUpdater(ServerDocument document):  | document (NM) updater (N) 	++ :: [ server (NM) document (NI) - document (NI) ]
SPECIAL:NAME:PasswordEditForm void setPasswordOld(String passwordOld): set (V)  | password (NM) old (N) 	++ :: [ string (NI) - password (NM) old (N) ] :: password (NM) edit (NM) form (N) 
SPECIAL:NAME:SitecolumntemplateDescriptor Class getJavaClass(): get (V)  | java (NM) class (NI) 	++ :: class (NI)  :: sitecolumntemplate (NM) descriptor (NI) 
SPECIAL:NAME:MutationEvent String getAttrName(): get (V)  | attr (NM) name (NI) 	++ :: string (NI)  :: mutation (NM) event (NI) 
SPECIAL:NAME:StateAdaptor void setAttribute(String name, Object value): set (V)  | attribute (N) 	++ :: [ string (NI) - name (NI) ] :: [ object (NI) - value (NI) ] :: state (NM) adaptor (N) 
SPECIAL:NAME:TXT2BINDataFilter String getDescription(): get (V)  | description (NI) 	++ :: string (NI)  :: TXT (NM) 2 (NM) BIN (NM) data (NM) filter (N) 
BASE_VERB:NAME:MemberResolver CtClass lookupClassByJvmName(String jvmName): lookup (V)  | class (NI) -- by (P) EQUIV[jvm (NM) name (NI) , [ string (NI) - jvm (NM) name (NI) ]]	++ :: ct (NM) class (NI)  :: member (NM) resolver (N) 
SPECIAL:NAME:SimpleRPCHttpServlet void doPost(HttpServletRequest req, HttpServletResponse resp): do (VI)  | post (N) 	++ :: [ http (NM) servlet (NM) request (N) - req (N) ] :: [ http (NM) servlet (NM) response (N) - resp (N) ] :: simple (NM) RPC (NM) http (NM) servlet (N) 
CONSTRUCTOR:NAME:LexiconAttributes LexiconAttributes LexiconAttributes(RQMLFirstClass fc):  | lexicon (NM) attributes (N) 	++ :: [ RQML (NM) first (NM) class (NI) - fc (N) ]
NOUN_PHRASE:NAME:XSqlcParser OuterJoin sOuterJoin(): get (V) | s (PRE) outer (NM) join (N) 	++ :: X (NM) sqlc (NM) parser (N)  :: outer (NM) join (N) 
BASE_VERB:FORM:ArraysUtil static float resize(float buffer, int newSize): resize (V)  | [ float (N) - buffer (NI) ]	++ :: [ int (N) - new (NM) size (N) ] :: arrays (NM) util (N)  :: float (N) 
SPECIAL:NAME:DODSException String getProgramSource(): get (V)  | program (NM) source (NI) 	++ :: string (NI)  :: DODS (NM) exception (N) 
SPECIAL:NAME:TestInferenceEngine12 int getExpectedNumber(): get (V)  | expected (NM) number (NI) 	++ :: int (N)  :: test (NM) inference (NM) engine (NM) 12 (N) 
VOID_NP:NAME:VirtualTable void virtualSave(Record rec): handle (V) | virtual (NM) save (N) 	++ :: [ record (N) - rec (N) ] :: virtual (NM) table (N)  :: void (N) 
SPECIAL:NAME:ABTExtendedAttributeList int getMaxKey(): get (V)  | max (NM) key (NI) 	++ :: int (N)  :: ABT (NM) extended (NM) attribute (NM) list (N) 
SPECIAL:NAME:DeliveryRuleType void setConfirmation(boolean confirmation): set (V)  | confirmation (N) 	++ :: [ boolean (N) - confirmation (N) ] :: delivery (NM) rule (NM) type (N) 
V_3P_IRR:NAME:StringTerm boolean isScalarValued(VariableScope scope): is (V)  | scalar (NM) valued (N) 	++ :: [ variable (NM) scope (N) - scope (N) ] :: boolean (N)  :: string (NM) term (N) 
ENDS_WITH_ED:NAME:ChannelListener void openFailed(): handle (V) | open (NM) failed (N) 	++ :: channel (NM) listener (N)  :: void (N) 
SPECIAL:NAME:DelegatingMessageSource String getMessage(String code, Object args, Locale locale): get (V)  | message (NI) 	++ :: [ string (NI) - code (NI) ] :: [ object (NI) - args (N) ] :: [ locale (N) - locale (N) ] :: string (NI)  :: delegating (NM) message (NM) source (NI) 
BASE_VERB:CLAS:GetFile void close(): close (V)  | get (NM) file (NI) 	++
PREP:NAME:PosEvent String toString(): convert (V) | to (P) string (NI) 	++ :: pos (NM) event (NI)  :: string (NI) 
ENDS_WITH_ED:NAME:EmulatedTextField void keyPressed(KeyEvent ke): handle (V) | key (NM) pressed (N) 	++ :: [ key (NM) event (NI) - ke (N) ] :: emulated (NM) text (NM) field (N)  :: void (N) 
CONSTRUCTOR:NAME:X_AD_Field X_AD_Field X_AD_Field(Properties ctx, int AD_Field_ID, String trxName):  | X (NM) AD (NM) field (N) 	++ :: [ properties (N) - ctx (N) ] :: [ int (N) - AD (NM) field (NM) ID (NI) ] :: [ string (NI) - trx (NM) name (NI) ]
ENDS_WITH_ED:NAME:void messageSent(): handle (V) | message (NM) sent (N) 	++ :: ANONYMOUS (N)  :: void (N) 
SPECIAL:NAME:PaymentEntityBean void setPayout(PartnerPayoutEntityLocal payout): set (V)  | payout (N) 	++ :: [ partner (NM) payout (NM) entity (NM) local (N) - payout (N) ] :: payment (NM) entity (NM) bean (NI) 
SPECIAL:NAME:Comboitem Object getValue(): get (V)  | value (NI) 	++ :: object (NI)  :: comboitem (N) 
SPECIAL:NAME:Calibration void setCTable(float table, String unit): set (V)  | C (NM) table (N) 	++ :: [ float (N) - table (N) ] :: [ string (NI) - unit (N) ] :: calibration (N) 
CONSTRUCTOR:NAME:DictClient DictClient DictClient(String host):  | dict (NM) client (N) 	++ :: [ string (NI) - host (N) ]
SPECIAL:NAME:MSAccessDatabaseMeta int getDatabaseType(): get (V)  | database (NM) type (N) 	++ :: int (N)  :: MS (NM) access (NM) database (NM) meta (N) 
SPECIAL:NAME:PoolHelper void setPoolAttributeAndFlush(String attName, Object attValue): set (V)  | pool (NM) attribute (NM) and (NM) flush (N) 	++ :: [ string (NI) - att (NM) name (NI) ] :: [ object (NI) - att (NM) value (NI) ] :: pool (NM) helper (N) 
CONSTRUCTOR:NAME:PdfDashPattern PdfDashPattern PdfDashPattern(float dash, float gap, float phase):  | pdf (NM) dash (NM) pattern (N) 	++ :: [ float (N) - dash (N) ] :: [ float (N) - gap (N) ] :: [ float (N) - phase (N) ]
SPECIAL:NAME:Grid void setHeight(int newValue): set (V)  | height (N) 	++ :: [ int (N) - new (NM) value (NI) ] :: grid (N) 
V_3P_IRR:NAME:ManyType boolean isList(): is (V)  | list (N) 	++ :: boolean (N)  :: many (DT) type (N) 
SPECIAL:FORM:StringComparator int compare(String s1, String s2): compare (V)  | [ string (NI) - s (NM) 1 (N) ]	++ :: [ string (NI) - s (NM) 2 (N) ] :: string (NM) comparator (N)  :: int (N) 
SPECIAL:CLAS:MeasuringInputStream void reset(): reset (V)  | measuring (NM) input (NM) stream (NI) 	++
BASE_VERB:CLAS:ChooseServicePanel void show(): show (V)  | choose (NM) service (NM) panel (N) 	++
SPECIAL:NAME:RoleRemote ProjectRemote getProject(): get (V)  | project (N) 	++ :: project (NM) remote (N)  :: role (NM) remote (N) 
V_3P_IRR:NAME:GraphLayoutCache boolean isVisible(Object cell): is (V)  | visible (N) 	++ :: [ object (NI) - cell (N) ] :: boolean (N)  :: graph (NM) layout (NM) cache (N) 
SPECIAL:NAME:JkCoyoteHandler Object getAttribute(String name): get (V)  | attribute (N) 	++ :: [ string (NI) - name (NI) ] :: object (NI)  :: jk (NM) coyote (NM) handler (N) 
SPECIAL:NAME:ServiceLocationHeader static String getBytesString(byte pBuffer, String pEncoding): get (V)  | EQUIV[bytes (NM) string (NI) , [ string (NI) - p (NM) encoding (N) ]]	++ :: [ byte (N) - p (NM) buffer (NI) ] :: string (NI)  :: service (NM) location (NM) header (N) 
SPECIAL:NAME:DateFormatManager String getOutputFormat(): get (V)  | output (NM) format (NI) 	++ :: string (NI)  :: date (NM) format (NM) manager (N) 
SPECIAL:CLAS:RemoteQueryServer void run(): run (VI)  | remote (NM) query (NM) server (N) 	++
SPECIAL:FORM:IJarDescriptionWriter void write(JarPackageData jarPackage): write (V)  | [ jar (NM) package (NM) data (NI) - jar (NM) package (N) ]	++ :: I (NM) jar (NM) description (NM) writer (N) 
BASE_VERB:NAME:OutputDataExporter SVGDocument exportChartToSVG(JFreeChart chart, Integer width, Integer height): export (V)  | EQUIV[chart (N) , [ J (NM) free (NM) chart (N) - chart (N) ]]-- to (P) SVG (N) 	++ :: [ integer (N) - width (N) ] :: [ integer (N) - height (N) ] :: SVG (NM) document (NI)  :: output (NM) data (NM) exporter (N) 
SPECIAL:NAME:Viewer void setCameraDepth(float percent): set (V)  | camera (NM) depth (N) 	++ :: [ float (N) - percent (N) ] :: viewer (N) 
CONSTRUCTOR:NAME:WhileStatementImpl WhileStatementImpl WhileStatementImpl(AST ast, LanguageElementImpl parent):  | while (NM) statement (NM) impl (NI) 	++ :: [ AST (N) - ast (N) ] :: [ language (NM) element (NM) impl (NI) - parent (N) ]
NOUN_PHRASE:NAME:ConfigurationManager static Enumeration propertyNames(): get (V) | property (NM) names (N) 	++ :: configuration (NM) manager (N)  :: enumeration (N) 
BASE_VERB:NAME:ResultSet void updateObject(int columnIndex, Object x): update (V)  | EQUIV[object (NI) , [ object (NI) - x (N) ]]	++ :: [ int (N) - column (NM) index (NI) ] :: result (NM) set (N) 
SPECIAL:NAME:TokenWindow void initComponents(): init (V)  | components (N) 	++ :: token (NM) window (N) 
SPECIAL:CLAS:pointPart valuePart duplicate(): duplicate (V)  | point (NM) part (N) 	++ :: value (NM) part (N) 
SPECIAL:NAME:BloggerBlogSystem String getTitle(): get (V)  | title (N) 	++ :: string (NI)  :: blogger (NM) blog (NM) system (N) 
BASE_VERB:FORM:ShowPropertyProfileDispatchAction ActionForward display(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response): display (V)  | [ action (NM) mapping (N) - mapping (N) ]	++ :: [ action (NM) form (N) - form (N) ] :: [ http (NM) servlet (NM) request (N) - request (N) ] :: [ http (NM) servlet (NM) response (N) - response (N) ] :: show (NM) property (NM) profile (NM) dispatch (NM) action (N)  :: action (NM) forward (N) 
SPECIAL:NAME:ETC3 void test_ETC3_euler_logfacts(): test (VI)  | ETC (NM) 3 (D) euler (NM) logfacts (N) 	++ :: ETC (NM) 3 (N) 
SPECIAL:CLAS:CollectionClass void create(): create (V)  | collection (NM) class (NI) 	++
CONSTRUCTOR:NAME:ModelMBeanOperationInfo ModelMBeanOperationInfo ModelMBeanOperationInfo(String description, Method method):  | model (NM) M (NM) bean (NM) operation (NM) info (NI) 	++ :: [ string (NI) - description (NI) ] :: [ method (N) - method (N) ]
SPECIAL:NAME:StyleGraphicPropertiesContentStrictImpl List getBorderLineWidthLeft(): get (V)  | border (NM) line (NM) width (NM) left (N) 	++ :: list (N)  :: style (NM) graphic (NM) properties (NM) content (NM) strict (NM) impl (NI) 
NOUN_PHRASE:NAME:PyClass String safeRepr(): get (V) | safe (NM) repr (N) 	++ :: py (NM) class (NI)  :: string (NI) 
SPECIAL:NAME:StyledText int getVerticalIncrement(): get (V)  | vertical (NM) increment (N) 	++ :: int (N)  :: styled (NM) text (NI) 
PREP:NAME:XmlElement IXmlObject toObject(String packageName, IXmlObject parent): convert (V) | to (P) object (NI) 	++ :: [ string (NI) - package (NM) name (NI) ] :: [ I (NM) xml (NM) object (NI) - parent (N) ] :: xml (NM) element (NI)  :: I (NM) xml (NM) object (NI) 
VOID_NP:NAME:Event void mkSelectionNotify(int time, int requestor, int selection, int target, int property): handle (V) | mk (PRE) selection (NM) notify (N) 	++ :: [ int (N) - time (N) ] :: [ int (N) - requestor (N) ] :: [ int (N) - selection (N) ] :: [ int (N) - target (N) ] :: [ int (N) - property (N) ] :: event (NI)  :: void (N) 
SPECIAL:NAME:SynPoint void setQuadraticRefPts(SynPoint startPt, SynPoint endPt): set (V)  | quadratic (NM) ref (NM) pts (N) 	++ :: [ syn (NM) point (N) - start (NM) pt (N) ] :: [ syn (NM) point (N) - end (NM) pt (N) ] :: syn (NM) point (N) 
NOUN_PHRASE:NAME:PyType static PyObject classic_mro(PyClass classic_cl): get (V) | classic (NM) mro (N) 	++ :: [ py (NM) class (NI) - classic (NM) cl (N) ] :: py (NM) type (N)  :: py (NM) object (NI) 
SPECIAL:NAME:SQLForm String getFilter(String table): get (V)  | filter (N) 	++ :: [ string (NI) - table (N) ] :: string (NI)  :: SQL (NM) form (N) 
CONSTRUCTOR:NAME:ZipEntrySerializedCollection ZipEntrySerializedCollection ZipEntrySerializedCollection():  | zip (NM) entry (NM) serialized (NM) collection (N) 	++
BASE_VERB:NAME:ContentPersister boolean contentExists(String nodeId, String contentId): content (V)  | exists (N) 	++ :: [ string (NI) - node (NM) id (NI) ] :: [ string (NI) - content (NM) id (NI) ] :: boolean (N)  :: content (NM) persister (N) 
CONSTRUCTOR:NAME:Grid Grid Grid():  | grid (N) 	++
ENDS_WITH_ED:NAME:void windowClosed(WindowEvent evt): handle (V) | window (NM) closed (N) 	++ :: [ window (NM) event (NI) - evt (N) ] :: ANONYMOUS (N)  :: void (N) 
BASE_VERB:FORM:ListAction ActionForward perform(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response): perform (VI)  | [ action (NM) mapping (N) - mapping (N) ]	++ :: [ action (NM) form (N) - form (N) ] :: [ http (NM) servlet (NM) request (N) - request (N) ] :: [ http (NM) servlet (NM) response (N) - response (N) ] :: list (NM) action (N)  :: action (NM) forward (N) 
SPECIAL:NAME:CombinedDomainXYPlot void setOrientation(PlotOrientation orientation): set (V)  | orientation (N) 	++ :: [ plot (NM) orientation (N) - orientation (N) ] :: combined (NM) domain (NM) XY (NM) plot (N) 
SPECIAL:CLAS:IfElseTag int doAfterBody(): do (VI)  | if (NM) else (NM) tag (NI) -- after (P) body (N) 	++ :: int (N) 
SPECIAL:NAME:HTMLAnchorElementImpl String getTarget(): get (V)  | target (N) 	++ :: string (NI)  :: HTML (NM) anchor (NM) element (NM) impl (NI) 
BASE_VERB:FORM:Str static String dat(String str, String tag, String lim): dat (V)  | [ string (NI) - str (NI) ]	++ :: [ string (NI) - tag (NI) ] :: [ string (NI) - lim (N) ] :: str (NI)  :: string (NI) 
SPECIAL:CLAS:GumManagerEntryTest void setUp(): set (V) up (VP)  | gum (NM) manager (NM) entry (NM) test (N) 	++
SPECIAL:NAME:ParseException String getMessage(): get (V)  | message (NI) 	++ :: string (NI)  :: parse (NM) exception (N) 
BASE_VERB:CLAS:Entry void finalize(): finalize (VI)  | entry (NI) 	++
SPECIAL:NAME:TestService void deleteDirectory(): delete (V)  | directory (N) 	++ :: test (NM) service (N) 
SPECIAL:NAME:UMLField Summary getSourceSummary(): get (V)  | source (NM) summary (N) 	++ :: summary (N)  :: UML (NM) field (N) 
ENDS_WITH_ED:NAME:BooleanNotConstraint boolean violated(): handle (V) | violated (N) 	++ :: boolean (NM) not (DT) constraint (N)  :: boolean (N) 
BASE_VERB:NAME:PreparedDocuments void putPreparedDocument(int id, VariantKey documentKey, SaxBuffer content): put (V)  | EQUIV[prepared (NM) document (NI) , [ variant (NM) key (NI) - document (NM) key (NI) ]]	++ :: [ int (N) - id (NI) ] :: [ sax (NM) buffer (NI) - content (N) ] :: prepared (NM) documents (N) 
VOID_NP:NAME:Search void indexPage(IRevision rev): handle (V) | index (NM) page (N) 	++ :: [ I (NM) revision (N) - rev (N) ] :: search (N)  :: void (N) 
SPECIAL:NAME:AbstractSimulationEngine void startSimulation(ProjectModel pmodel, IStateChar stc): start (V)  | simulation (N) 	++ :: [ project (NM) model (NI) - pmodel (N) ] :: [ I (NM) state (NM) char (N) - stc (N) ] :: abstract (NM) simulation (NM) engine (N) 
BASE_VERB:NAME:BasicBaseTableUI void paintCell(Graphics g, Rectangle cellRect, int row, int column): paint (V)  | cell (N) 	++ :: [ graphics (N) - g (N) ] :: [ rectangle (N) - cell (NM) rect (N) ] :: [ int (N) - row (N) ] :: [ int (N) - column (N) ] :: basic (NM) base (NM) table (NM) UI (N) 
PREP:NAME:NewsgroupRecord String toFormattedString(): convert (V) | to (P) formatted (NM) string (NI) 	++ :: newsgroup (NM) record (N)  :: string (NI) 
SPECIAL:NAME:PropertyFactoryImpl PropertyFactory createPostalcodeFactory(): create (V)  | postalcode (NM) factory (N) 	++ :: property (NM) factory (N)  :: property (NM) factory (NM) impl (NI) 
CONSTRUCTOR:NAME:NotImplementedFrame NotImplementedFrame NotImplementedFrame(ShowContext context):  | not (DT) implemented (NM) frame (N) 	++ :: [ show (NM) context (N) - context (N) ]
V_3PS:NAME:jdbcDatabaseMetaData boolean supportsGroupBy(): supports (V)  | group (N) by (NM) 	++ :: boolean (N)  :: jdbc (NM) database (NM) meta (NM) data (NI) 
SPECIAL:NAME:ExecutionReport String getTextJ(): get (V)  | text (NM) J (N) 	++ :: string (NI)  :: execution (NM) report (N) 
BASE_VERB:NAME:Global static void logMessage(String message, String type, String location): log (V)  | EQUIV[message (NI) , [ string (NI) - message (NI) ]]	++ :: [ string (NI) - type (N) ] :: [ string (NI) - location (NI) ] :: global (N) 
SPECIAL:NAME:ThemedScoreTableConfiguration void setGuessRowIncrement(Point rowInc): set (V)  | guess (NM) row (NM) increment (N) 	++ :: [ point (N) - row (NM) inc (N) ] :: themed (NM) score (NM) table (NM) configuration (NI) 
BASE_VERB:NAME:MyEntity1DaoImpl void saveMyEntity1(MyEntity1 myEntity1): save (V)  | EQUIV[my (PR) entity (N) 1 (D) , [ my (PR) entity (NM) 1 (N) - my (PR) entity (NM) 1 (N) ]]	++ :: my (PR) entity (NM) 1 (NM) dao (NM) impl (NI) 
SPECIAL:NAME:ParameterListResource XmlStringBuffer constructParameterListResult(Map params): construct (V)  | parameter (NM) list (NM) result (N) 	++ :: [ map (N) - params (N) ] :: xml (NM) string (NM) buffer (NI)  :: parameter (NM) list (NM) resource (N) 
SPECIAL:NAME:StatisticsSummary Hashtable getStatusCodeDistribution(): get (V)  | status (NM) code (NM) distribution (N) 	++ :: hashtable (N)  :: statistics (NM) summary (N) 
SPECIAL:NAME:XMLParser void startElement(String uri, String localName, String qname, Attributes attributes): start (V)  | element (NI) 	++ :: [ string (NI) - uri (NI) ] :: [ string (NI) - local (NM) name (NI) ] :: [ string (NI) - qname (N) ] :: [ attributes (N) - attributes (N) ] :: XML (NM) parser (N) 
SPECIAL:NAME:ControlAlarmEvent String getMessage(): get (V)  | message (NI) 	++ :: string (NI)  :: control (NM) alarm (NM) event (NI) 
EVENT_PARAM:NAME:Multicaster void keyEvent(XI5250FieldEvent e): handle (V) | key (NM) event (NI) 	++ :: [ XI (NM) 5250 (NM) field (NM) event (NI) - e (N) ] :: multicaster (N)  :: void (N) 
SPECIAL:NAME:JPanelNave void setTitle(String titulo): set (V)  | title (N) 	++ :: [ string (NI) - titulo (N) ] :: J (NM) panel (NM) nave (N) 
NOUN_PHRASE:NAME:PresentationFormatIdSeqHolder TypeCode _type(): get (V) | type (N) 	++ :: presentation (NM) format (NM) id (NM) seq (NM) holder (NI)  :: type (NM) code (NI) 
SPECIAL:NAME:EFHSSFListener void processRecord(Record record): process (VI)  | EQUIV[record (N) , [ record (N) - record (N) ]]	++ :: EFHSSF (NM) listener (N) 
BASE_VERB:NAME:XercesXMLStream Map buildMap(Attributes attributes): build (V)  | map (N) 	++ :: [ attributes (N) - attributes (N) ] :: map (N)  :: xerces (NM) XML (NM) stream (NI) 
BASE_VERB:NAME:PersistenceContext void registerListener(PersistenceContextListener listener): register (V)  | EQUIV[listener (N) , [ persistence (NM) context (NM) listener (N) - listener (N) ]]	++ :: persistence (NM) context (N) 
BASE_VERB:NAME:String visitPackage(PackageElement e, Void ignore): visit (V)  | EQUIV[package (N) , [ package (NM) element (NI) - e (N) ]]	++ :: [ void (N) - ignore (N) ] :: string (NI)  :: ANONYMOUS (N) 
SPECIAL:NAME:Form String getStringIfIsNotValid(String a_String): get (V)  | string (NM) if (NM) is (NM) not (DT) valid (N) 	++ :: [ string (NI) - a (NM) string (NI) ] :: string (NI)  :: form (N) 
SPECIAL:NAME:GetDetailsRequest static TypeDesc getTypeDesc(): get (V)  | type (NM) desc (NI) 	++ :: type (NM) desc (NI)  :: get (NM) details (NM) request (N) 
CONSTRUCTOR:NAME:PrioritySemaphore PrioritySemaphore PrioritySemaphore(long initialPermits):  | priority (NM) semaphore (N) 	++ :: [ long (N) - initial (NM) permits (N) ]
CONSTRUCTOR:NAME:MidiPlayer MidiPlayer MidiPlayer(String sound):  | midi (NM) player (N) 	++ :: [ string (NI) - sound (N) ]
SPECIAL:NAME:TableSorter void addMouseListenerToHeaderInTable(JTable table): add (V)  | mouse (NM) listener (N) -- to (P) EQUIV[header (NM) in (NM) table (N) , [ J (NM) table (N) - table (N) ]]	++ :: table (NM) sorter (N) 
SPECIAL:NAME:SAXBuilder DTDHandler getDTDHandler(): get (V)  | DTD (NM) handler (N) 	++ :: DTD (NM) handler (N)  :: SAX (NM) builder (N) 
BASE_VERB:NAME:CacheManager void updateFileList(): update (V)  | file (NM) list (N) 	++ :: cache (NM) manager (N) 
BASE_VERB:CLAS:FontDialog FontData open(): open (V)  | font (NM) dialog (N) 	++ :: font (NM) data (NI) 
SPECIAL:FORM:KeySet boolean remove(int v): remove (V)  | [ int (N) - v (N) ]	++ :: key (NM) set (N)  :: boolean (N) 
SPECIAL:NAME:HomeController void setSiteManager(SiteManager siteManager): set (V)  | site (NM) manager (N) 	++ :: [ site (NM) manager (N) - site (NM) manager (N) ] :: home (NM) controller (N) 
BASE_VERB:CLAS:ZipURLConnection void connect(): connect (V)  | zip (NM) URL (NM) connection (N) 	++
BASE_VERB:NAME:TransferFromXmiRoseMetamodel Object visitAttribute(XMIObject attr, Object arg): visit (V)  | attribute (N) 	++ :: [ XMI (NM) object (NI) - attr (N) ] :: [ object (NI) - arg (N) ] :: object (NI)  :: transfer (NM) from (NM) xmi (NM) rose (NM) metamodel (N) 
CONSTRUCTOR:NAME:MinFunction MinFunction MinFunction():  | min (NM) function (N) 	++
SPECIAL:NAME:RemoteTodo void setPriority(int priority): set (V)  | priority (N) 	++ :: [ int (N) - priority (N) ] :: remote (NM) todo (N) 
SPECIAL:NAME:ZebraReport PageFormat initPageFormat(Node node): init (V)  | page (NM) format (NI) 	++ :: [ node (NI) - node (NI) ] :: page (NM) format (NI)  :: zebra (NM) report (N) 
SPECIAL:NAME:ArgumentsDecorator IArguments getArguments(): get (V)  | arguments (N) 	++ :: I (NM) arguments (N)  :: arguments (NM) decorator (N) 
V_3P_IRR:NAME:SourceContainerAdapter boolean hasChildren(TreeListDialogField field, Object element): has (V)  | children (N) 	++ :: [ tree (NM) list (NM) dialog (NM) field (N) - field (N) ] :: [ object (NI) - element (NI) ] :: boolean (N)  :: source (NM) container (NM) adapter (NI) 
SPECIAL:NAME:NxWheelShapeDesc float getSteerAngle(): get (V)  | steer (NM) angle (N) 	++ :: float (N)  :: nx (NM) wheel (NM) shape (NM) desc (NI) 
CONSTRUCTOR:NAME:Mediator Mediator Mediator():  | mediator (N) 	++
SPECIAL:NAME:RhiDocument String getInputEncoding(): get (V)  | input (NM) encoding (N) 	++ :: string (NI)  :: rhi (NM) document (NI) 
SPECIAL:NAME:MAssignmentSlot String getInfoTimeFrom(): get (V)  | info (NM) time (N) from (NM) 	++ :: string (NI)  :: M (NM) assignment (NM) slot (N) 
PREP:NAME:Service String toString(): convert (V) | to (P) string (NI) 	++ :: service (N)  :: string (NI) 
BASE_VERB:NAME:TestPhone void connEtoC4(): conn (V)  | eto (NM) C (N) 4 (D) 	++ :: test (NM) phone (N) 
SPECIAL:NAME:DiveLogPage boolean getExploring_site(): get (V)  | exploring (NM) site (N) 	++ :: boolean (N)  :: dive (NM) log (NM) page (N) 
BASE_VERB:NAME:CapContextManager static void putCapContext(Object key, CapContext value): put (V)  | EQUIV[cap (NM) context (N) , [ cap (NM) context (N) - value (NI) ]]	++ :: [ object (NI) - key (NI) ] :: cap (NM) context (NM) manager (N) 
SPECIAL:NAME:Resource String getDirectory(): get (V)  | directory (N) 	++ :: string (NI)  :: resource (N) 
SPECIAL:NAME:ServiceRegistry Iterator getServiceProviders(Class category, Filter filter, boolean useOrdering): get (V)  | service (NM) providers (N) 	++ :: [ class (NI) - category (N) ] :: [ filter (N) - filter (N) ] :: [ boolean (N) - use (NM) ordering (N) ] :: iterator (N)  :: service (NM) registry (N) 
SPECIAL:NAME:BasicColorChooserUI AbstractColorChooserPanel createDefaultChoosers(): create (V)  | default (NM) choosers (N) 	++ :: abstract (NM) color (NM) chooser (NM) panel (N)  :: basic (NM) color (NM) chooser (NM) UI (N) 
SPECIAL:NAME:BeanUtil static void setSimpleProperty(Object bean, String property, Object value, boolean suppressSecurity): set (V)  | simple (NM) property (N) 	++ :: [ object (NI) - bean (NI) ] :: [ string (NI) - property (N) ] :: [ object (NI) - value (NI) ] :: [ boolean (N) - suppress (NM) security (N) ] :: bean (NM) util (N) 
VOID_NP:NAME:HeaderParser void description(): handle (V) | description (NI) 	++ :: header (NM) parser (N)  :: void (N) 
EMPTY:NONE:GenZip static boolean s106(CleanVM vm):  | s (PRE) 106 (D) 
SPECIAL:FORM:QuoteStatusReport void set(ExDestination value): set (V)  | [ ex (NM) destination (N) - value (NI) ]	++ :: quote (NM) status (NM) report (N) 
V_3P_IRR:NAME:tp boolean isTCP(): is (V)  | TCP (N) 	++ :: boolean (N)  :: tp (N) 
BASE_VERB:FORM:Factory static StyleParagraphPropertiesElements parse(Node node): parse (V)  | [ node (NI) - node (NI) ]	++ :: factory (N)  :: style (NM) paragraph (NM) properties (NM) elements (N) 
VOID_NP:NAME:MockListener void Listener39(IPage page, Object component, Long cycle): handle (V) | listener (N) 39 (D) 	++ :: [ I (NM) page (N) - page (N) ] :: [ object (NI) - component (N) ] :: [ long (N) - cycle (N) ] :: mock (NM) listener (N)  :: void (N) 
V_3P_IRR:NAME:ExpressionFunctionRight boolean isNull(): is (V)  | null (N) 	++ :: boolean (N)  :: expression (NM) function (NM) right (N) 
BASE_VERB:NAME:_DynStructStub void insert_string(String value): insert (V)  | EQUIV[string (NI) , [ string (NI) - value (NI) ]]	++ :: dyn (NM) struct (NM) stub (N) 
SPECIAL:NAME:_XAccessibleTable void _getAccessibleRowExtentAt(): get (V)  | accessible (NM) row (NM) extent (N) at (NM) 	++ :: X (NM) accessible (NM) table (N) 
BASE_VERB:FORM:DirectoryFileFilter boolean accept(File pathname): accept (VI)  | [ file (NI) - pathname (N) ]	++ :: directory (NM) file (NM) filter (N)  :: boolean (N) 
SPECIAL:NAME:ReactionSetTransactionSession void setData(Identifier id, ReactionSetFacade mech, String mName, int rSet, ReactionFacade rxns, String com): set (V)  | data (NI) 	++ :: [ identifier (NI) - id (NI) ] :: [ reaction (NM) set (NM) facade (NI) - mech (N) ] :: [ string (NI) - m (NM) name (NI) ] :: [ int (N) - r (NM) set (N) ] :: [ reaction (NM) facade (NI) - rxns (N) ] :: [ string (NI) - com (N) ] :: reaction (NM) set (NM) transaction (NM) session (N) 
SPECIAL:NAME:XPluginContext XPluginManager getPluginManager(): get (V)  | plugin (NM) manager (N) 	++ :: X (NM) plugin (NM) manager (N)  :: X (NM) plugin (NM) context (N) 
SPECIAL:NAME:BFSVisitor void initializeVertex(int vertex): initialize (V)  | EQUIV[vertex (N) , [ int (N) - vertex (N) ]]	++ :: BFS (NM) visitor (N) 
VOID_NP:NAME:TrImplementationEditorAbstract void activePostFrame(File _f): handle (V) | active (NM) post (NM) frame (N) 	++ :: [ file (NI) - f (N) ] :: tr (NM) implementation (NM) editor (NM) abstract (N)  :: void (N) 
BASE_VERB:NAME:BinaryMessageEvent void fireEvent(CVSListener listener): fire (V)  | event (NI) 	++ :: [ CVS (NM) listener (N) - listener (N) ] :: binary (NM) message (NM) event (NI) 
BASE_VERB:CLAS:CircularCharBufferWriter void flush(): flush (V)  | circular (NM) char (NM) buffer (NM) writer (N) 	++
PREP:NAME:NsAndLocal String toString(): convert (V) | to (P) string (NI) 	++ :: ns (NM) and (NM) local (N)  :: string (NI) 
SPECIAL:NAME:AbstractLinkGroupSubscriptionRemoveBlock void initStandardBlock(AnyLogicContext alc): init (V)  | standard (NM) block (N) 	++ :: [ any (DT) logic (NM) context (N) - alc (N) ] :: abstract (NM) link (NM) group (NM) subscription (NM) remove (NM) block (N) 
SPECIAL:NAME:TextAreaPainter void setEOLMarkersPainted(boolean eolMarkers): set (V)  | EOL (NM) markers (NM) painted (N) 	++ :: [ boolean (N) - eol (NM) markers (N) ] :: text (NM) area (NM) painter (N) 
SPECIAL:NAME:VersionNumber int getPatch(): get (V)  | patch (N) 	++ :: int (N)  :: version (NM) number (NI) 
SPECIAL:NAME:GradientColor Gradient getGradient(): get (V)  | gradient (N) 	++ :: gradient (N)  :: gradient (NM) color (N) 
SPECIAL:NAME:Digester Locator getDocumentLocator(): get (V)  | document (NM) locator (N) 	++ :: locator (N)  :: digester (N) 
SPECIAL:NAME:Node void addEventOut(String name, ConstField field): add (V)  | event (NM) out (N) 	++ :: [ string (NI) - name (NI) ] :: [ const (NM) field (N) - field (N) ] :: node (NI) 
NOUN_PHRASE:NAME:ERPCategoryChart String yName(): get (V) | y (PRE) name (NI) 	++ :: ERP (NM) category (NM) chart (N)  :: string (NI) 
SPECIAL:FORM:AllTests static void main(String args): main (V)  | [ string (NI) - args (N) ]	++ :: all (DT) tests (N) 
BASE_VERB:FORM:DateFormatter String format(Date date): format (V)  | [ date (N) - date (N) ]	++ :: date (NM) formatter (N)  :: string (NI) 
BASE_VERB:CLAS:ReviewsCommentDAO ReviewsComments selectByPk(int cid): select (V)  | reviews (NM) comment (NM) DAO (N) -- by (P) pk (NI) 	++ :: [ int (N) - cid (N) ] :: reviews (NM) comments (N) 
NOUN_PHRASE:NAME:VectorUtilsTest static Test suite(): get (V) | suite (N) 	++ :: vector (NM) utils (NM) test (N)  :: test (N) 
SPECIAL:FORM:LibTxtfl static void println(String dispTxt, Text textDisp, boolean networking, PrintWriter netOut): println (V)  | [ string (NI) - disp (NM) txt (N) ]	++ :: [ text (NI) - text (NM) disp (N) ] :: [ boolean (N) - networking (N) ] :: [ print (NM) writer (N) - net (NM) out (N) ] :: lib (NM) txtfl (N) 
SPECIAL:NAME:BCFigure void setUseLocalCoordinates(boolean useLocalCoordinates): set (V)  | use (NM) local (NM) coordinates (N) 	++ :: [ boolean (N) - use (NM) local (NM) coordinates (N) ] :: BC (NM) figure (N) 
BASE_VERB:FORM:Factory static PlacingAttribute parse(String xmlAsString, XmlOptions options): parse (V)  | [ string (NI) - xml (NM) as (NM) string (NI) ]	++ :: [ xml (NM) options (N) - options (N) ] :: factory (N)  :: placing (NM) attribute (N) 
SPECIAL:NAME:DXFWriter void writeLineTable(): write (V)  | line (NM) table (N) 	++ :: DXF (NM) writer (N) 
SPECIAL:FORM:Play static void main(String args): main (V)  | [ string (NI) - args (N) ]	++ :: play (N) 
CONSTRUCTOR:NAME:UniversalString UniversalString UniversalString():  | universal (NM) string (NI) 	++
BASE_VERB:NAME:StatesController void registerListener(VirtualEnvironmentStateChangedListener listener): register (V)  | EQUIV[listener (N) , [ virtual (NM) environment (NM) state (NM) changed (NM) listener (N) - listener (N) ]]	++ :: states (NM) controller (N) 
PREP:NAME:MyDate String toString(): convert (V) | to (P) string (NI) 	++ :: my (PR) date (N)  :: string (NI) 
SPECIAL:NAME:Session void startNextTimedRound(): start (V)  | next (DT) timed (NM) round (N) 	++ :: session (N) 
NOUN_PHRASE:NAME:ValueBaseHolder TypeCode _type(): get (V) | type (N) 	++ :: value (NM) base (NM) holder (NI)  :: type (NM) code (NI) 
BASE_VERB:NAME:JournalRecord Date computeDate(): compute (V)  | date (N) 	++ :: date (N)  :: journal (NM) record (N) 
SPECIAL:NAME:_AccessBridge void addEventListener(XEventListener listener): add (V)  | EQUIV[event (NM) listener (N) , [ X (NM) event (NM) listener (N) - listener (N) ]]	++ :: access (NM) bridge (N) 
BASE_VERB:NAME:AppInvocationHandler void handleAbout(Object event): handle (VI)  | about (N) 	++ :: [ object (NI) - event (NI) ] :: app (NM) invocation (NM) handler (N) 
CONSTRUCTOR:NAME:ExtensionFileFilter ExtensionFileFilter ExtensionFileFilter(String extension):  | extension (NM) file (NM) filter (N) 	++ :: [ string (NI) - extension (N) ]
SPECIAL:NAME:AbstractStandardResourceRuleType String getMatchNameEncoded(AnyLogicContext alc): get (V)  | match (NM) name (NM) encoded (N) 	++ :: [ any (DT) logic (NM) context (N) - alc (N) ] :: string (NI)  :: abstract (NM) standard (NM) resource (NM) rule (NM) type (N) 
CONSTRUCTOR:NAME:Node Node Node(Row r, int id):  | node (NI) 	++ :: [ row (N) - r (N) ] :: [ int (N) - id (NI) ]
BASE_VERB:NAME:MiniETL void disconnectTo(): disconnect (V)  | to (NM) 	++ :: mini (NM) ETL (N) 
BASE_VERB:NAME:WindowManager void showHelpApi(): show (V)  | help (NM) api (N) 	++ :: window (NM) manager (N) 
SPECIAL:NAME:Gui4jComponentFactory String getName(): get (V)  | name (NI) 	++ :: string (NI)  :: gui (NM) 4 (NM) j (NM) component (NM) factory (N) 
BASE_VERB:NAME:DatabaseCommunicator String insertRecordName(String xmlMessage, String recordName): insert (V)  | EQUIV[record (NM) name (NI) , [ string (NI) - record (NM) name (NI) ]]	++ :: [ string (NI) - xml (NM) message (NI) ] :: string (NI)  :: database (NM) communicator (N) 
SPECIAL:NAME:RsolverCommunicator void setValuesRead(boolean b): set (V)  | values (NM) read (N) 	++ :: [ boolean (N) - b (N) ] :: rsolver (NM) communicator (N) 
SPECIAL:NAME:CrosstabEditorPanel int getTotalColumnLeftIndex(String columnTotalGroup): get (V)  | total (NM) column (NM) left (NM) index (NI) 	++ :: [ string (NI) - column (NM) total (NM) group (N) ] :: int (N)  :: crosstab (NM) editor (NM) panel (N) 
SPECIAL:NAME:Account void setLastName(String lastName): set (V)  | last (DT) name (NI) 	++ :: [ string (NI) - last (DT) name (NI) ] :: account (N) 
SPECIAL:NAME:Argument static void assertNotLessThan(int value, int constant, String valueName): assert (VI)  | not (DT) less (DT) than (N) 	++ :: [ int (N) - value (NI) ] :: [ int (N) - constant (N) ] :: [ string (NI) - value (NM) name (NI) ] :: argument (N) 
SPECIAL:NAME:ClassDispatcher static void set_param_DISPATCH_TRACE(boolean value): set (V)  | param (NM) DISPATCH (NM) TRACE (N) 	++ :: [ boolean (N) - value (NI) ] :: class (NM) dispatcher (N) 
CONSTRUCTOR:NAME:VFloorSimple VFloorSimple VFloorSimple(int floorNumber):  | V (NM) floor (NM) simple (N) 	++ :: [ int (N) - floor (NM) number (NI) ]
SPECIAL:NAME:MoveData void setTerritorialValue(float val): set (V)  | territorial (NM) value (NI) 	++ :: [ float (N) - val (NI) ] :: move (NM) data (NI) 
SPECIAL:NAME:SATFlow int getFlowID(): get (V)  | flow (NM) ID (NI) 	++ :: int (N)  :: SAT (NM) flow (N) 
BASE_VERB:NAME:FFTComplex static int gsl_fft_complex_radix2_dif_inverse(DoublePtr1 arg0, Integer2 arg1, Integer2 arg2): gsl (PRE) fft (V)  | complex (NM) radix (NM) 2 (D) dif (NM) inverse (N) 	++ :: [ double (NM) ptr (NM) 1 (N) - arg (NM) 0 (N) ] :: [ integer (NM) 2 (N) - arg (NM) 1 (N) ] :: [ integer (NM) 2 (N) - arg (NM) 2 (N) ] :: int (N)  :: FFT (NM) complex (N) 
SPECIAL:NAME:X_M_MatchInv POInfo initPO(Properties ctx): init (V)  | PO (N) 	++ :: [ properties (N) - ctx (N) ] :: PO (NM) info (NI)  :: X (NM) M (NM) match (NM) inv (N) 
BASE_VERB:FORM:MyBaseRootDAO void update(Object obj): update (V)  | [ object (NI) - obj (NI) ]	++ :: my (PR) base (NM) root (NM) DAO (N) 
SPECIAL:NAME:ActivityIteratorCondExprBldr ActivityIteratorExpressionBuilder addPriorityEquals(int i): add (V)  | priority (NM) equals (N) 	++ :: [ int (N) - i (N) ] :: activity (NM) iterator (NM) expression (NM) builder (N)  :: activity (NM) iterator (NM) cond (NM) expr (NM) bldr (N) 
SPECIAL:NAME:RunStateTest void testRunStateRunInfoOfE(): test (VI) run (VI)  | state (NM) run (NM) info (NI) -- of (P) E (N) 	++ :: run (NM) state (NM) test (N) 
SPECIAL:NAME:EngineProcess void getEngineOutput(Process engine): get (V)  | engine (NM) output (N) 	++ :: [ process (N) - engine (N) ] :: engine (NM) process (N) 
SPECIAL:NAME:MartusServer Vector getServerCompliance(): get (V)  | server (NM) compliance (N) 	++ :: vector (N)  :: martus (NM) server (N) 
SPECIAL:NAME:PerspectiveManager static IPerspective getPerspective(String sID): get (V)  | perspective (N) 	++ :: [ string (NI) - s (NM) ID (NI) ] :: I (NM) perspective (N)  :: perspective (NM) manager (N) 
BASE_VERB:CLAS:DescribeHandler void finish(): finish (V)  | describe (NM) handler (N) 	++
V_3P_IRR:NAME:DirectGraphicsImp static boolean isBitSet(byte b, int pos): is (V)  | bit (NM) set (N) 	++ :: [ byte (N) - b (N) ] :: [ int (N) - pos (N) ] :: boolean (N)  :: direct (NM) graphics (NM) imp (N) 
SPECIAL:NAME:GlobalPreferencesServiceProxy void setWindowHeight(int height): set (V)  | window (NM) height (N) 	++ :: [ int (N) - height (N) ] :: global (NM) preferences (NM) service (NM) proxy (NI) 
SPECIAL:NAME:epp_ContactTransferReq void setCmd(epp_Command value): set (V)  | cmd (N) 	++ :: [ epp (NM) command (N) - value (NI) ] :: epp (NM) contact (NM) transfer (NM) req (N) 
SPECIAL:NAME:SIPMessage ContentEncodingHeader getContentEncoding(): get (V)  | content (NM) encoding (N) 	++ :: content (NM) encoding (NM) header (N)  :: SIP (NM) message (NI) 
SPECIAL:CLAS:void setAsText(String text): set (V)  | ANONYMOUS (N) -- as (P) text (NI) 	++ :: [ string (NI) - text (NI) ]
PREP:NAME:Group Object toArray(Object array): convert (V) | to (P) array (N) 	++ :: [ object (NI) - array (N) ] :: group (N)  :: object (NI) 
SPECIAL:NAME:DynamicTest void setNumber(long value): set (V)  | number (NI) 	++ :: [ long (N) - value (NI) ] :: dynamic (NM) test (N) 
SPECIAL:NAME:Hash int getSize(): get (V)  | size (N) 	++ :: int (N)  :: hash (N) 
SPECIAL:NAME:If FunctionDescription getDescription(): get (V)  | description (NI) 	++ :: function (NM) description (NI)  :: if (NI) 
BASE_VERB:NAME:Statement void clearWarnings(): clear (V)  | warnings (N) 	++ :: statement (NI) 
SPECIAL:NAME:ozKB int getNumberOfAssertions(): get (V)  | number (NI) -- of (P) assertions (N) 	++ :: int (N)  :: oz (NM) KB (N) 
SPECIAL:NAME:XSLTScript boolean checkCommand(Node node, OutputStream report): check (VI)  | command (N) 	++ :: [ node (NI) - node (NI) ] :: [ output (NM) stream (NI) - report (N) ] :: boolean (N)  :: XSLT (NM) script (N) 
SPECIAL:NAME:Param void setMf_db_site(byte mf_db_site): set (V)  | mf (NM) db (NM) site (N) 	++ :: [ byte (N) - mf (NM) db (NM) site (N) ] :: param (N) 
BASE_VERB:NAME:Helper static UiFrameLocationAndSize filterLocationAndSize(UiFrameLocationAndSize pUiFrameLocationAndSize): filter (V)  | EQUIV[location (NM) and (NM) size (N) , [ ui (NM) frame (NM) location (NM) and (NM) size (N) - p (NM) ui (NM) frame (NM) location (NM) and (NM) size (N) ]]	++ :: ui (NM) frame (NM) location (NM) and (NM) size (N)  :: helper (N) 
CONSTRUCTOR:NAME:SequencedHashMap SequencedHashMap SequencedHashMap():  | sequenced (NM) hash (NM) map (N) 	++
SPECIAL:NAME:LARSInSer void setZone(int zone): set (V)  | zone (N) 	++ :: [ int (N) - zone (N) ] :: LARS (NM) in (NM) ser (N) 
SPECIAL:NAME:RunCheckstyleOnFilesJob Map getFilesSortedToProject(List filesToCheck): get (V)  | files (NM) sorted (N) -- to (P) project (N) 	++ :: [ list (N) - files (NM) to (NM) check (N) ] :: map (N)  :: run (NM) checkstyle (NM) on (NM) files (NM) job (N) 
SPECIAL:NAME:TableTuple long getLong(String field): get (V)  | long (N) 	++ :: [ string (NI) - field (N) ] :: long (N)  :: table (NM) tuple (N) 
SPECIAL:NAME:User void setPassword(String password): set (V)  | password (N) 	++ :: [ string (NI) - password (N) ] :: user (N) 
SPECIAL:NAME:MMClassifier void setIncomplete(String b): set (V)  | incomplete (N) 	++ :: [ string (NI) - b (N) ] :: MM (NM) classifier (N) 
SPECIAL:NAME:UndrCurrency void setTagValue(String s): set (V)  | tag (NM) value (NI) 	++ :: [ string (NI) - s (N) ] :: undr (NM) currency (N) 
ENDS_WITH_ING:NAME:Xerces01Parser void warning(SAXParseException e): handle (V) | warning (N) 	++ :: [ SAX (NM) parse (NM) exception (N) - e (N) ] :: xerces (NM) 01 (NM) parser (N)  :: void (N) 
SPECIAL:NAME:CodeSetConverter int getWChar_Conversions(): get (V)  | W (NM) char (NM) conversions (N) 	++ :: int (N)  :: code (NM) set (NM) converter (N) 
SPECIAL:NAME:TableTableCellContentImpl void setCircleArray(int i, Circle circle): set (V)  | circle (NM) array (N) 	++ :: [ int (N) - i (N) ] :: [ circle (N) - circle (N) ] :: table (NM) table (NM) cell (NM) content (NM) impl (NI) 
SPECIAL:NAME:XMLSignature static XMLSignature getUnverified(Node a_node): get (V)  | unverified (N) 	++ :: [ node (NI) - a (NM) node (NI) ] :: XML (NM) signature (N)  :: XML (NM) signature (N) 
BASE_VERB:NAME:LicenseContext void validateAvailableKey(String viewInputField, String licenseKey): validate (VI)  | EQUIV[available (NM) key (NI) , [ string (NI) - license (NM) key (NI) ]]	++ :: [ string (NI) - view (NM) input (NM) field (N) ] :: license (NM) context (N) 
ENDS_WITH_ED:NAME:void widgetSelected(SelectionEvent e): handle (V) | widget (NM) selected (N) 	++ :: [ selection (NM) event (NI) - e (N) ] :: ANONYMOUS (N)  :: void (N) 
BASE_VERB:CLAS:JInterfaceDeclaration String ident(): ident (V)  | J (NM) interface (NM) declaration (NI) 	++ :: string (NI) 
SPECIAL:NAME:Scene void addTexture(Texture tex): add (V)  | EQUIV[texture (N) , [ texture (N) - tex (N) ]]	++ :: scene (N) 
PREP:NAME:TPM_KEY_PARMS void fromBytes(byte source, int offset): convert (V) | from (P) bytes (NI) 	++ :: [ byte (N) - source (NI) ] :: [ int (N) - offset (N) ] :: TPM (NM) KEY (NM) PARMS (N)  :: void (N) 
SPECIAL:NAME:MockPageContext JspWriter getOut(): get (V)  | out (N) 	++ :: jsp (NM) writer (N)  :: mock (NM) page (NM) context (N) 
BASE_VERB:FORM:Order3 double refine(double a, double b, double c, double target, double t): refine (V)  | [ double (N) - a (N) ]	++ :: [ double (N) - b (N) ] :: [ double (N) - c (N) ] :: [ double (N) - target (N) ] :: [ double (N) - t (N) ] :: order (NM) 3 (N)  :: double (N) 
V_3P_IRR:NAME:SignedDistancePointCurve2D boolean isDefined(): is (V)  | defined (N) 	++ :: boolean (N)  :: signed (NM) distance (NM) point (NM) curve (NM) 2 (NM) D (N) 
SPECIAL:FORM:StoredEntrySet boolean add(Object mapEntry): add (V)  | [ object (NI) - map (NM) entry (NI) ]	++ :: stored (NM) entry (NM) set (N)  :: boolean (N) 
SPECIAL:NAME:GeneralOperationsJdbcDirectoryTests void testListWithinTransaction(): test (VI)  | list (N) -- within (P) transaction (N) 	++ :: general (NM) operations (NM) jdbc (NM) directory (NM) tests (N) 
SPECIAL:NAME:Edge void pushRing(Stack stack, Hashtable seen): push (V)  | ring (N) 	++ :: [ stack (N) - stack (N) ] :: [ hashtable (N) - seen (N) ] :: edge (N) 
SPECIAL:NAME:LogBrokerMonitor JMenuItem createResetLogLevelColorMenuItem(): create (V)  | reset (NM) log (NM) level (NM) color (NM) menu (NM) item (NI) 	++ :: J (NM) menu (NM) item (NI)  :: log (NM) broker (NM) monitor (N) 
SPECIAL:NAME:IBoard void initializeAround(int x, int y): initialize (V)  | around (N) 	++ :: [ int (N) - x (N) ] :: [ int (N) - y (N) ] :: I (NM) board (N) 
BASE_VERB:NAME:EvaluationShuttle Statement evaluateDown(ExpressionStatement p): evaluate (V)  | down (N) 	++ :: [ expression (NM) statement (NI) - p (NI) ] :: statement (NI)  :: evaluation (NM) shuttle (N) 
SPECIAL:NAME:FileViewer FileViewerData getDataFromRequest(HttpServletRequest request, ApiFileSystem apiFileSystem): get (V)  | data (NI) -- from (P) EQUIV[request (N) , [ http (NM) servlet (NM) request (N) - request (N) ]]	++ :: [ api (NM) file (NM) system (N) - api (NM) file (NM) system (N) ] :: file (NM) viewer (NM) data (NI)  :: file (NM) viewer (N) 
SPECIAL:NAME:jdom static String getTextAttr(Element inElement, String item, String def, int itemPos, String splitParam): get (V)  | text (NM) attr (N) 	++ :: [ element (NI) - in (NM) element (NI) ] :: [ string (NI) - item (NI) ] :: [ string (NI) - def (NI) ] :: [ int (N) - item (NM) pos (N) ] :: [ string (NI) - split (NM) param (N) ] :: string (NI)  :: jdom (N) 
PREP:NAME:NmdcLogedInCommand String toString(): convert (V) | to (P) string (NI) 	++ :: nmdc (NM) loged (NM) in (NM) command (N)  :: string (NI) 
BASE_VERB:NAME:ProjectManagementImpl boolean delGlobalOutArtefactBean(String pArtName, String pType, long pIdSuperAct): del (V)  | global (NM) out (NM) artefact (NM) bean (NI) 	++ :: [ string (NI) - p (NM) art (NM) name (NI) ] :: [ string (NI) - p (NM) type (N) ] :: [ long (N) - p (NM) id (NM) super (NM) act (N) ] :: boolean (N)  :: project (NM) management (NM) impl (NI) 
CONSTRUCTOR:NAME:ImportAdapterMergeException ImportAdapterMergeException ImportAdapterMergeException(String message, Throwable t):  | import (NM) adapter (NM) merge (NM) exception (N) 	++ :: [ string (NI) - message (NI) ] :: [ throwable (N) - t (N) ]
V_3P_IRR:NAME:PositioningStep boolean isAction(): is (V)  | action (N) 	++ :: boolean (N)  :: positioning (NM) step (N) 
ENDS_WITH_ED:NAME:mainFrame_this_componentAdapter void componentResized(ComponentEvent e): handle (V) | component (NM) resized (N) 	++ :: [ component (NM) event (NI) - e (N) ] :: main (NM) frame (NM) this (PR) component (NM) adapter (NI)  :: void (N) 
VOID_NP:NAME:ProteinPocketFinder void gridToPmesh(String outPutFileName): handle (V) | grid (NM) to (NM) pmesh (N) 	++ :: [ string (NI) - out (NM) put (NM) file (NM) name (NI) ] :: protein (NM) pocket (NM) finder (N)  :: void (N) 
BASE_VERB:NAME:SnippetReader void releaseConnectionIDLock(): release (V)  | connection (NM) ID (NM) lock (N) 	++ :: snippet (NM) reader (N) 
SPECIAL:CLAS:AbstractStandardMenuFactory List<StandardReadBean> findByEnabledFlag(String enabledFlag): find (V)  | abstract (NM) standard (NM) menu (NM) factory (N) -- by (P) EQUIV[enabled (NM) flag (N) , [ string (NI) - enabled (NM) flag (N) ]]	++ :: list (NM) standard (NM) read (NM) bean (NI) 
SPECIAL:FORM:LispArgList boolean Compare(int aIndex, String aString): compare (V)  | [ int (N) - a (NM) index (NI) ]	++ :: [ string (NI) - a (NM) string (NI) ] :: lisp (NM) arg (NM) list (N)  :: boolean (N) 
SPECIAL:NAME:ModelManager String getElementSymbol(int i): get (V)  | element (NM) symbol (N) 	++ :: [ int (N) - i (N) ] :: string (NI)  :: model (NM) manager (N) 
SPECIAL:NAME:NodeWrapper NamedTyped getPath(): get (V)  | path (NI) 	++ :: named (NM) typed (N)  :: node (NM) wrapper (NI) 
BASE_VERB:NAME:GameXMLReader void handleRow(ResultSet res): handle (VI)  | row (N) 	++ :: [ result (NM) set (N) - res (N) ] :: game (NM) XML (NM) reader (N) 
BASE_VERB:FORM:ModCategory ActionForward exec(HttpServletRequest request, HttpServletResponse response, VelocityContext vc, IModuleInfo info, String op, IUserInfo ui, IAdminInfo ai): exec (V)  | [ http (NM) servlet (NM) request (N) - request (N) ]	++ :: [ http (NM) servlet (NM) response (N) - response (N) ] :: [ velocity (NM) context (N) - vc (N) ] :: [ I (NM) module (NM) info (NI) - info (NI) ] :: [ string (NI) - op (N) ] :: [ I (NM) user (NM) info (NI) - ui (N) ] :: [ I (NM) admin (NM) info (NI) - ai (N) ] :: mod (NM) category (N)  :: action (NM) forward (N) 
V_3PS:FORM:DefaultNamingStrategy String spaces(int depth): spaces (V)  | [ int (N) - depth (N) ]	++ :: default (NM) naming (NM) strategy (N)  :: string (NI) 
SPECIAL:FORM:UIDefaults Object get(Object key): get (V)  | [ object (NI) - key (NI) ]	++ :: UI (NM) defaults (N)  :: object (NI) 
CONSTRUCTOR:NAME:MouseDragGestureRecognizer MouseDragGestureRecognizer MouseDragGestureRecognizer(DragSource ds, Component c, int act):  | mouse (NM) drag (NM) gesture (NM) recognizer (N) 	++ :: [ drag (NM) source (NI) - ds (N) ] :: [ component (N) - c (N) ] :: [ int (N) - act (N) ]
SPECIAL:NAME:ShapetypeEltImpl String getCoordsize(): get (V)  | coordsize (N) 	++ :: string (NI)  :: shapetype (NM) elt (NM) impl (NI) 
SPECIAL:FORM:SubmitDocumentsForm void reset(ActionMapping mapping, HttpServletRequest request): reset (V)  | [ action (NM) mapping (N) - mapping (N) ]	++ :: [ http (NM) servlet (NM) request (N) - request (N) ] :: submit (NM) documents (NM) form (N) 
V_3P_IRR:CLAS:boolean isOnTop(): is (V)  | ANONYMOUS (N) -- on (P) top (N) 	++ :: boolean (N) 
CONSTRUCTOR:NAME:TextTable TextTable TextTable(Database db, HsqlName name, int type, int sessionid):  | text (NM) table (N) 	++ :: [ database (N) - db (N) ] :: [ hsql (NM) name (NI) - name (NI) ] :: [ int (N) - type (N) ] :: [ int (N) - sessionid (N) ]
CONSTRUCTOR:NAME:Sash Sash Sash(Composite parent, int style):  | sash (N) 	++ :: [ composite (N) - parent (N) ] :: [ int (N) - style (N) ]
BASE_VERB:NAME:EpsGraphics2D void drawGlyphVector(GlyphVector g, float x, float y): draw (V)  | EQUIV[glyph (NM) vector (N) , [ glyph (NM) vector (N) - g (N) ]]	++ :: [ float (N) - x (N) ] :: [ float (N) - y (N) ] :: eps (NM) graphics (NM) 2 (NM) D (N) 
BASE_VERB:NAME:TestGJMonthOfYearField long roundFloor(long millis): round (V)  | floor (N) 	++ :: [ long (N) - millis (N) ] :: long (N)  :: test (NM) GJ (NM) month (NM) of (NM) year (NM) field (N) 
SPECIAL:NAME:EXTPalettedTexture static void glGetColorTableEXT(int target, int format, int type, ShortBuffer data): gl (PRE) get (V)  | color (NM) table (NM) EXT (N) 	++ :: [ int (N) - target (N) ] :: [ int (N) - format (NI) ] :: [ int (N) - type (N) ] :: [ short (NM) buffer (NI) - data (NI) ] :: EXT (NM) paletted (NM) texture (N) 
BASE_VERB:NAME:HtmlTemplate String stripSpecialChars(String s): strip (V)  | special (NM) chars (N) 	++ :: [ string (NI) - s (N) ] :: string (NI)  :: html (NM) template (N) 
BASE_VERB:NAME:EvaluatorBase void parseImportDeclarations(CompilationUnit compilationUnit, Scanner scanner): parse (V)  | import (NM) declarations (N) 	++ :: [ compilation (NM) unit (N) - compilation (NM) unit (N) ] :: [ scanner (N) - scanner (N) ] :: evaluator (NM) base (N) 
SPECIAL:NAME:SpreadSheetRowHeaderRenderer Component getComponent(Object value, GraphicNode node, Field field, SpreadSheetParams params): get (V)  | component (N) 	++ :: [ object (NI) - value (NI) ] :: [ graphic (NM) node (NI) - node (NI) ] :: [ field (N) - field (N) ] :: [ spread (NM) sheet (NM) params (N) - params (N) ] :: component (N)  :: spread (NM) sheet (NM) row (NM) header (NM) renderer (N) 
V_3P_IRR:NAME:JInternalFrame boolean isResizable(): is (V)  | resizable (N) 	++ :: boolean (N)  :: J (NM) internal (NM) frame (N) 
SPECIAL:NAME:BasicComboPopup MouseListener createListMouseListener(): create (V)  | list (NM) mouse (NM) listener (N) 	++ :: mouse (NM) listener (N)  :: basic (NM) combo (NM) popup (N) 
PREP:NAME:QuoteSetID String toFIXMessage(): convert (V) | to (P) FIX (NM) message (NI) 	++ :: quote (NM) set (NM) ID (NI)  :: string (NI) 
CONSTRUCTOR:NAME:RuleBox RuleBox RuleBox(Shell parent, Image image, String title, Rule rule, String label):  | rule (NM) box (N) 	++ :: [ shell (N) - parent (N) ] :: [ image (N) - image (N) ] :: [ string (NI) - title (N) ] :: [ rule (N) - rule (N) ] :: [ string (NI) - label (NI) ]
BASE_VERB:NAME:PixFlowEditFrame void commandExit(): command (V)  | exit (N) 	++ :: pix (NM) flow (NM) edit (NM) frame (N) 
SPECIAL:NAME:SQLTableVO void setDirtyFlag(boolean newVal): set (V)  | dirty (NM) flag (N) 	++ :: [ boolean (N) - new (NM) val (NI) ] :: SQL (NM) table (NM) VO (NI) 
SPECIAL:NAME:Invoice Vector getItems(): get (V)  | items (N) 	++ :: vector (N)  :: invoice (N) 
CONSTRUCTOR:NAME:AbstractLookupWriter AbstractLookupWriter AbstractLookupWriter():  | abstract (NM) lookup (NM) writer (N) 	++
BASE_VERB:FORM:Factory static PresetClassAttribute parse(Reader r): parse (V)  | [ reader (N) - r (N) ]	++ :: factory (N)  :: preset (NM) class (NM) attribute (N) 
SPECIAL:NAME:LaexFXChat String getParameterName(int arg0): get (V)  | parameter (NM) name (NI) 	++ :: [ int (N) - arg (NM) 0 (N) ] :: string (NI)  :: laex (NM) FX (NM) chat (N) 
SPECIAL:NAME:DisplayUtils int getNumberOfFields(int nBucketId, int nLayoutId): get (V)  | number (NI) -- of (P) fields (N) 	++ :: [ int (N) - n (NM) bucket (NM) id (NI) ] :: [ int (N) - n (NM) layout (NM) id (NI) ] :: int (N)  :: display (NM) utils (N) 
SPECIAL:NAME:BouncyCastleNotaryFactory X509Certificate findNotaryCertByIndex(String responderCN, int idx): find (V)  | notary (NM) cert (N) -- by (P) index (NI) 	++ :: [ string (NI) - responder (NM) CN (N) ] :: [ int (N) - idx (N) ] :: X (NM) 509 (NM) certificate (N)  :: bouncy (NM) castle (NM) notary (NM) factory (N) 
BASE_VERB:FORM:SarsaAgent int argmax(int s): argmax (V)  | [ int (N) - s (N) ]	++ :: sarsa (NM) agent (N)  :: int (N) 
SPECIAL:NAME:ImageCategory int getLastPageNumber(): get (V)  | last (DT) page (NM) number (NI) 	++ :: int (N)  :: image (NM) category (N) 
BASE_VERB:NAME:TSMenuTypes int hashCode(): hash (V)  | code (NI) 	++ :: int (N)  :: TS (NM) menu (NM) types (N) 
SPECIAL:FORM:NameComponentHolder void _write(OutputStream o): write (V)  | [ output (NM) stream (NI) - o (N) ]	++ :: name (NM) component (NM) holder (NI) 
CONSTRUCTOR:NAME:TestLogDisseminationService TestLogDisseminationService TestLogDisseminationService(String aName):  | test (NM) log (NM) dissemination (NM) service (N) 	++ :: [ string (NI) - a (NM) name (NI) ]
SPECIAL:NAME:MExpressionbase void deleteReferenceableElement(IMReferenceableElement elem): delete (V)  | EQUIV[referenceable (NM) element (NI) , [ IM (NM) referenceable (NM) element (NI) - elem (NI) ]]	++ :: M (NM) expressionbase (N) 
SPECIAL:NAME:Environment void initJacaretoSystemClassLoader(): init (V)  | jacareto (NM) system (NM) class (NM) loader (N) 	++ :: environment (N) 
V_3P_IRR:NAME:IFigure boolean isFocusTraversable(): is (V)  | focus (NM) traversable (N) 	++ :: boolean (N)  :: I (NM) figure (N) 
PREP:NAME:JEANAPI Document toXML(Node nodes, Node selectedNodes, String transformerName, String key): convert (V) | to (P) XML (N) 	++ :: [ node (NI) - nodes (N) ] :: [ node (NI) - selected (NM) nodes (N) ] :: [ string (NI) - transformer (NM) name (NI) ] :: [ string (NI) - key (NI) ] :: JEANAPI (N)  :: document (NI) 
SPECIAL:FORM:MassSpecInterface static void main(String args): main (V)  | [ string (NI) - args (N) ]	++ :: mass (NM) spec (NM) interface (NI) 
V_3PS:FORM:DoubleInterval boolean intersects(AxisInterval i): intersects (V)  | [ axis (NM) interval (N) - i (N) ]	++ :: double (NM) interval (N)  :: boolean (N) 
ENDS_WITH_ED:NAME:FileQuitAction void actionPerformed(ActionEvent ae): handle (V) | action (NM) performed (N) 	++ :: [ action (NM) event (NI) - ae (N) ] :: file (NM) quit (NM) action (N)  :: void (N) 
SPECIAL:NAME:AbstractOperation OperationOutputField getOutputField(String pFieldName): get (V)  | EQUIV[output (NM) field (N) , [ string (NI) - p (NM) field (NM) name (NI) ]]	++ :: operation (NM) output (NM) field (N)  :: abstract (NM) operation (N) 
SPECIAL:FORM:ComparatorStringArray int compare(Object o1, Object o2): compare (V)  | [ object (NI) - o (NM) 1 (N) ]	++ :: [ object (NI) - o (NM) 2 (N) ] :: comparator (NM) string (NM) array (N)  :: int (N) 
BASE_VERB:FORM:JavaExpressionGenerator Object visit(ELEqualityExpression node, Object data): visit (V)  | [ EL (NM) equality (NM) expression (N) - node (NI) ]	++ :: [ object (NI) - data (NI) ] :: java (NM) expression (NM) generator (N)  :: object (NI) 
BASE_VERB:NAME:Unmarshaller void enterElement(String ___uri, String ___local, String ___qname, Attributes __atts): enter (V)  | element (NI) 	++ :: [ string (NI) - uri (NI) ] :: [ string (NI) - local (N) ] :: [ string (NI) - qname (N) ] :: [ attributes (N) - atts (N) ] :: unmarshaller (N) 
V_MODAL:FORM:boolean canModify(Object obj, String s): can (VI) modify (V)  | [ object (NI) - obj (NI) ]	++ :: [ string (NI) - s (N) ] :: ANONYMOUS (N)  :: boolean (N) 
SPECIAL:NAME:BaseSongInGroup void setPrimaryKey(int songGroupId, int songId): set (V)  | primary (NM) key (NI) 	++ :: [ int (N) - song (NM) group (NM) id (NI) ] :: [ int (N) - song (NM) id (NI) ] :: base (NM) song (NM) in (NM) group (N) 
SPECIAL:NAME:JINX static void setErr(PrintStream e): set (V)  | err (N) 	++ :: [ print (NM) stream (NI) - e (N) ] :: JINX (N) 
CONSTRUCTOR:NAME:ObjectReferenceTemplateHolder ObjectReferenceTemplateHolder ObjectReferenceTemplateHolder(ObjectReferenceTemplate initialValue):  | object (NM) reference (NM) template (NM) holder (NI) 	++ :: [ object (NM) reference (NM) template (N) - initial (NM) value (NI) ]
VOID_NP:NAME:ServerGame void serverEseguiMossa(String mossaArrivo): handle (V) | server (NM) esegui (NM) mossa (N) 	++ :: [ string (NI) - mossa (NM) arrivo (N) ] :: server (NM) game (N)  :: void (N) 
SPECIAL:NAME:Comms void setServer_hmac_key(String x): set (V)  | server (NM) hmac (NM) key (NI) 	++ :: [ string (NI) - x (N) ] :: comms (N) 
BASE_VERB:NAME:DeviceBindingsImpl Key reconstituteKey(Hashtable hash): reconstitute (V)  | key (NI) 	++ :: [ hashtable (N) - hash (N) ] :: key (NI)  :: device (NM) bindings (NM) impl (NI) 
SPECIAL:NAME:Pedigree String get_class(): get (V)  | class (NI) 	++ :: string (NI)  :: pedigree (N) 
SPECIAL:NAME:GameBoard JPanel createGameStatePanel(): create (V)  | game (NM) state (NM) panel (N) 	++ :: J (NM) panel (N)  :: game (NM) board (N) 
CONSTRUCTOR:NAME:SnmpV2PartyClock SnmpV2PartyClock SnmpV2PartyClock(Long value):  | snmp (NM) V (NM) 2 (NM) party (NM) clock (N) 	++ :: [ long (N) - value (NI) ]
BASE_VERB:FORM:Token static BitSet bsSelect(Token token, int n): bs (PRE) select (V)  | [ token (N) - token (N) ]	++ :: [ int (N) - n (N) ] :: token (N)  :: bit (NM) set (N) 
BASE_VERB:NAME:DTriangle double perimetreXY(): perimetre (V)  | XY (N) 	++ :: double (N)  :: D (NM) triangle (N) 
SPECIAL:FORM:NoNestedPartyIDs NestedPartyRole get(NestedPartyRole value): get (V)  | [ nested (NM) party (NM) role (N) - value (NI) ]	++ :: no (DT) nested (NM) party (NM) I (NM) ds (N)  :: nested (NM) party (NM) role (N) 
SPECIAL:NAME:ScheduleSupport Date getNextDateAfter(Date afterTime): get (V)  | EQUIV[next (DT) date (N) , [ date (N) - after (NM) time (N) ]]-- after (P) [ date (N) - after (NM) time (N) ]	++ :: date (N)  :: schedule (NM) support (N) 
SPECIAL:NAME:ServerHistoryDataBean void setIpaddress(String ipaddress): set (V)  | ipaddress (N) 	++ :: [ string (NI) - ipaddress (N) ] :: server (NM) history (NM) data (NM) bean (NI) 
SPECIAL:NAME:Thinlet void checkOffset(Object component): check (VI)  | offset (N) 	++ :: [ object (NI) - component (N) ] :: thinlet (N) 
NOUN_PHRASE:NAME:BlockSim int direction(int position): get (V) | direction (N) 	++ :: [ int (N) - position (N) ] :: block (NM) sim (N)  :: int (N) 
SPECIAL:NAME:XYItemRenderer void setItemLabelsVisible(boolean visible): set (V)  | item (NM) labels (NM) visible (N) 	++ :: [ boolean (N) - visible (N) ] :: XY (NM) item (NM) renderer (N) 
NOUN_PHRASE:NAME:RequestHandler static ID ServerUassignIDUN2(FeRangeElement arg1, ID arg2): get (V) | server (NM) uassign (NM) IDUN (N) 2 (D) 	++ :: [ fe (NM) range (NM) element (NI) - arg (NM) 1 (N) ] :: [ ID (NI) - arg (NM) 2 (N) ] :: request (NM) handler (N)  :: ID (NI) 
NOUN_PHRASE:NAME:SimpleTrigger int executionComplete(JobExecutionContext context, JobExecutionException result): get (V) | execution (NM) complete (N) 	++ :: [ job (NM) execution (NM) context (N) - context (N) ] :: [ job (NM) execution (NM) exception (N) - result (N) ] :: simple (NM) trigger (N)  :: int (N) 
SPECIAL:NAME:DQLQueryLabelProvider Image getColumnImage(Object element, int columnIndex): get (V)  | column (NM) image (N) 	++ :: [ object (NI) - element (NI) ] :: [ int (N) - column (NM) index (NI) ] :: image (N)  :: DQL (NM) query (NM) label (NM) provider (N) 
SPECIAL:NAME:DBToggleButton String getComponentValue(): get (V)  | component (NM) value (NI) 	++ :: string (NI)  :: DB (NM) toggle (NM) button (N) 
BASE_VERB:NAME:Point2D double distanceSq(Point2D point): distance (V)  | sq (N) 	++ :: [ point (NM) 2 (NM) D (N) - point (N) ] :: double (N)  :: point (NM) 2 (NM) D (N) 
BASE_VERB:CLAS:Server void close(): close (V)  | server (N) 	++
SPECIAL:NAME:Tan Expression createInstanceOfMe_AlwaysUseExisting(Expression expression, ExpressionSpace expressionSpace): create (V)  | instance (NI) -- of (P) me (PR) always (NM) use (NM) existing (N) 	++ :: [ expression (N) - expression (N) ] :: [ expression (NM) space (N) - expression (NM) space (N) ] :: expression (N)  :: tan (N) 
BASE_VERB:NAME:NxMat33 void rotY(float angle): rot (V)  | Y (N) 	++ :: [ float (N) - angle (N) ] :: nx (NM) mat (NM) 33 (N) 
SPECIAL:NAME:FileContainer void removeEntry(String name): remove (V)  | entry (NI) 	++ :: [ string (NI) - name (NI) ] :: file (NM) container (NI) 
SPECIAL:NAME:LanguageClassPanel void addListeners(): add (V)  | listeners (N) 	++ :: language (NM) class (NM) panel (N) 
SPECIAL:NAME:XProjectConfig Iterator getCookieSerializers(): get (V)  | cookie (NM) serializers (N) 	++ :: iterator (N)  :: X (NM) project (NM) config (NI) 
SPECIAL:NAME:X_I_Order String getCity(): get (V)  | city (N) 	++ :: string (NI)  :: X (NM) I (NM) order (N) 
PREP:NAME:Rectangle boolean near(Circle c):  | near (P) 	++ :: [ circle (N) - c (N) ] :: rectangle (N)  :: boolean (N) 
BASE_VERB:FORM:Translator int decode(byte in, int inOff, int length, byte out, int outOff): decode (V)  | [ byte (N) - in (NI) ]	++ :: [ int (N) - in (NM) off (N) ] :: [ int (N) - length (N) ] :: [ byte (N) - out (N) ] :: [ int (N) - out (NM) off (N) ] :: translator (N)  :: int (N) 
V_3P_IRR:NAME:FrameWork boolean isShowFPS(): is (V)  | show (NM) FPS (N) 	++ :: boolean (N)  :: frame (NM) work (N) 
SPECIAL:NAME:DatasetUtilities static PieDataset createPieDatasetForColumn(CategoryDataset dataset, int column): create (V)  | EQUIV[pie (NM) dataset (N) , [ category (NM) dataset (N) - dataset (N) ]]-- for (P) EQUIV[column (N) , [ int (N) - column (N) ]]	++ :: [ category (NM) dataset (N) - dataset (N) ] :: pie (NM) dataset (N)  :: dataset (NM) utilities (N) 
BASE_VERB:NAME:ECSimulationCanvas void showRuntimeStats(): show (V)  | runtime (NM) stats (N) 	++ :: EC (NM) simulation (NM) canvas (N) 
SPECIAL:NAME:ModuleImportItemProvider String getText(Object object): get (V)  | text (NI) 	++ :: [ object (NI) - object (NI) ] :: string (NI)  :: module (NM) import (NM) item (NM) provider (N) 
SPECIAL:NAME:GLightweightPeer Dimension getPreferredSize(): get (V)  | preferred (NM) size (N) 	++ :: dimension (N)  :: G (NM) lightweight (NM) peer (N) 
SPECIAL:NAME:MultiServer boolean start_server(String server_name): start (V)  | EQUIV[server (N) , [ string (NI) - server (NM) name (NI) ]]	++ :: boolean (N)  :: multi (NM) server (N) 
SPECIAL:NAME:JoinPointMeasurements1_aj void testSpecialMethod_LongO(): test (VI)  | special (NM) method (NM) long (NM) O (N) 	++ :: join (NM) point (NM) measurements (NM) 1 (NM) aj (N) 
BASE_VERB:NAME:NameMap static void putNameMap(String headerName, String className): put (V)  | name (NM) map (N) 	++ :: [ string (NI) - header (NM) name (NI) ] :: [ string (NI) - class (NM) name (NI) ] :: name (NM) map (N) 
SPECIAL:NAME:X10Walloutlet void setScenes(boolean scenes): set (V)  | scenes (N) 	++ :: [ boolean (N) - scenes (N) ] :: X (NM) 10 (NM) walloutlet (N) 
CONSTRUCTOR:NAME:MessageOption MessageOption MessageOption():  | message (NM) option (N) 	++
BASE_VERB:CLAS:Toolkit void sync(): sync (V)  | toolkit (N) 	++
BASE_VERB:NAME:StableVector void chainFreelist(): chain (V)  | freelist (N) 	++ :: stable (NM) vector (N) 
V_3P_IRR:NAME:Mounted boolean isSplit(): is (V)  | split (N) 	++ :: boolean (N)  :: mounted (N) 
SPECIAL:NAME:JspDisplayBox int getBorder(): get (V)  | border (N) 	++ :: int (N)  :: jsp (NM) display (NM) box (N) 
CONSTRUCTOR:NAME:AbstractPersonPhoneXref AbstractPersonPhoneXref AbstractPersonPhoneXref():  | abstract (NM) person (NM) phone (NM) xref (N) 	++
NOUN_PHRASE:NAME:StatusHolder TypeCode _type(): get (V) | type (N) 	++ :: status (NM) holder (NI)  :: type (NM) code (NI) 
BASE_VERB:NAME:AnalysisTote void updateToteMembers(): update (V)  | tote (NM) members (N) 	++ :: analysis (NM) tote (N) 
V_3P_IRR:NAME:PropertyPolicy String isSetPropertyAuthorized(OperationContext op): is (V)  | set (NM) property (NM) authorized (N) 	++ :: [ operation (NM) context (N) - op (N) ] :: string (NI)  :: property (NM) policy (N) 
BASE_VERB:NAME:SQLServerHandler String updateDataType(String dataType0): update (V)  | data (NM) type (N) 	++ :: [ string (NI) - data (NM) type (NM) 0 (N) ] :: string (NI)  :: SQL (NM) server (NM) handler (N) 
CONSTRUCTOR:NAME:DocumentStatisticImpl DocumentStatisticImpl DocumentStatisticImpl(SchemaType sType):  | document (NM) statistic (NM) impl (NI) 	++ :: [ schema (NM) type (N) - s (NM) type (N) ]
SPECIAL:NAME:DoubleMapper Object getValueFromResultSet(ResultSet rs, MetaField field): get (V)  | value (NI) -- from (P) EQUIV[result (NM) set (N) , [ result (NM) set (N) - rs (N) ]]	++ :: [ meta (NM) field (N) - field (N) ] :: object (NI)  :: double (NM) mapper (N) 
CONSTRUCTOR:NAME:MKStack MKStack MKStack():  | MK (NM) stack (N) 	++
SPECIAL:NAME:Dimension getPreferredSize(): get (V)  | preferred (NM) size (N) 	++ :: dimension (N)  :: ANONYMOUS (N) 
BASE_VERB:CLAS:StringSet void clear(): clear (V)  | string (NM) set (N) 	++
BASE_VERB:NAME:SimpleTest Promise<Integer> callRecursive(int i, int sum): call (V)  | recursive (N) 	++ :: [ int (N) - i (N) ] :: [ int (N) - sum (N) ] :: promise (NM) integer (N)  :: simple (NM) test (N) 
SPECIAL:CLAS:BSHAllocationExpression Object constructWithInterfaceBody(Class type, Object args, BSHBlock body, CallStack callstack, Interpreter interpreter): construct (V)  | BSH (NM) allocation (NM) expression (N) -- with (P) EQUIV[interface (NM) body (N) , [ BSH (NM) block (N) - body (N) ]]	++ :: [ class (NI) - type (N) ] :: [ object (NI) - args (N) ] :: [ call (NM) stack (N) - callstack (N) ] :: [ interpreter (N) - interpreter (N) ] :: object (NI) 
SPECIAL:NAME:CallData Object getResult(): get (V)  | result (N) 	++ :: object (NI)  :: call (NM) data (NI) 
V_3P_IRR:NAME:Enum boolean hasMoreElements(): has (V)  | more (DT) elements (N) 	++ :: boolean (N)  :: enum (NI) 
SPECIAL:NAME:GtpTerminal void setCurrentNode(ConstNode node): set (V)  | current (NM) node (NI) 	++ :: [ const (NM) node (NI) - node (NI) ] :: gtp (NM) terminal (N) 
SPECIAL:NAME:Dates static String getWeekID(long date): get (V)  | week (NM) ID (NI) 	++ :: [ long (N) - date (N) ] :: string (NI)  :: dates (N) 
BASE_VERB:CLAS:mfvec2d int howmany(): howmany (V)  | mfvec (NM) 2 (NM) d (N) 	++ :: int (N) 
SPECIAL:NAME:PipelineBuilderModel static void createNewPipeline(String pipeline, String type): create (V)  | EQUIV[new (NM) pipeline (N) , [ string (NI) - pipeline (N) ]]	++ :: [ string (NI) - type (N) ] :: pipeline (NM) builder (NM) model (NI) 
BASE_VERB:FORM:CSGUnion boolean intersect(Ray ray): intersect (V)  | [ ray (N) - ray (N) ]	++ :: CSG (NM) union (N)  :: boolean (N) 
SPECIAL:NAME:LongDomainWrapper void setChoicePointStack(ChoicePointStack cps): set (V)  | choice (NM) point (NM) stack (N) 	++ :: [ choice (NM) point (NM) stack (N) - cps (N) ] :: long (NM) domain (NM) wrapper (NI) 
SPECIAL:NAME:BasicDescription int getNumSignLanguages(): get (V)  | num (NM) sign (NM) languages (N) 	++ :: int (N)  :: basic (NM) description (NI) 
VOID_NP:NAME:QPoint void newQPoint(int xpos, int ypos): handle (V) | new (NM) Q (NM) point (N) 	++ :: [ int (N) - xpos (N) ] :: [ int (N) - ypos (N) ] :: Q (NM) point (N)  :: void (N) 
CONSTRUCTOR:NAME:ValueChangedEvent ValueChangedEvent ValueChangedEvent(Object eventSource, String oldValues, String newValues):  | value (NM) changed (NM) event (NI) 	++ :: [ object (NI) - event (NM) source (NI) ] :: [ string (NI) - old (NM) values (N) ] :: [ string (NI) - new (NM) values (N) ]
NOUN_PHRASE:NAME:JirrJNI static long ISceneManager_addDummyTransformationSceneNode__SWIG_2(long jarg1): get (V) | I (PRE) scene (NM) manager (NM) add (NM) dummy (NM) transformation (NM) scene (NM) node (NM) SWIG (N) 2 (D) 	++ :: [ long (N) - jarg (NM) 1 (N) ] :: jirr (NM) JNI (N)  :: long (N) 
SPECIAL:NAME:BooleanType int getTypeId(): get (V)  | type (NM) id (NI) 	++ :: int (N)  :: boolean (NM) type (N) 
BASE_VERB:FORM:InsertDeParser void visit(ExpressionList expressionList): visit (V)  | [ expression (NM) list (N) - expression (NM) list (N) ]	++ :: insert (NM) de (NM) parser (N) 
SPECIAL:NAME:Range int getEndOffset(): get (V)  | end (NM) offset (N) 	++ :: int (N)  :: range (N) 
SPECIAL:NAME:MsgIssLoadReqResp void checkParams(): check (VI)  | params (N) 	++ :: msg (NM) iss (NM) load (NM) req (NM) resp (N) 
SPECIAL:NAME:MessageBean void setExpiredTime(Date expiredTime): set (V)  | expired (NM) time (N) 	++ :: [ date (N) - expired (NM) time (N) ] :: message (NM) bean (NI) 
SPECIAL:NAME:Range2D double getMaxY(): get (V)  | max (NM) Y (N) 	++ :: double (N)  :: range (NM) 2 (NM) D (N) 
VOID_NP:NAME:CodeBuffer void tabInAndAppendLine(String text, boolean includeNewline): handle (V) | tab (NM) in (NM) and (NM) append (NM) line (N) 	++ :: [ string (NI) - text (NI) ] :: [ boolean (N) - include (NM) newline (N) ] :: code (NM) buffer (NI)  :: void (N) 
SPECIAL:NAME:InfoServiceHolder MixInfo getMixInfo(String mixId): get (V)  | mix (NM) info (NI) 	++ :: [ string (NI) - mix (NM) id (NI) ] :: mix (NM) info (NI)  :: info (NM) service (NM) holder (NI) 
BASE_VERB:NAME:AppView void waitCursorBegin(): wait (V)  | cursor (NM) begin (N) 	++ :: app (NM) view (NI) 
BASE_VERB:NAME:DailyPurgeDuplicateEntryLogBatch void answerExecution(): answer (V)  | execution (N) 	++ :: daily (NM) purge (NM) duplicate (NM) entry (NM) log (NM) batch (N) 
BASE_VERB:NAME:DungeonLevel boolean placeRandomItem(): place (V)  | random (NM) item (NI) 	++ :: boolean (N)  :: dungeon (NM) level (N) 
SPECIAL:CLAS:void run(): run (VI)  | ANONYMOUS (N) 	++
SPECIAL:CLAS:TestIChatIRCGateService void setUp(): set (V) up (VP)  | test (NM) I (NM) chat (NM) IRC (NM) gate (NM) service (N) 	++
V_3P_IRR:NAME:MultiLineText boolean isOpaque(): is (V)  | opaque (N) 	++ :: boolean (N)  :: multi (NM) line (NM) text (NI) 
SPECIAL:CLAS:MDIVIANetDisplay void addOnFormKill(EventHandler value): add (V)  | MDIVIA (NM) net (NM) display (N) -- on (P) form (NM) kill (N) 	++ :: [ event (NM) handler (N) - value (NI) ]
SPECIAL:FORM:ShapeAction void add(Predicate p, int shape): add (V)  | [ predicate (N) - p (NI) ]	++ :: [ int (N) - shape (N) ] :: shape (NM) action (N) 
BASE_VERB:NAME:MonitoringAspect void configAction(SchemaAction iAction, Annotation iAnnotation, XmlConfigActionType iXmlNode): config (V)  | EQUIV[action (N) , [ schema (NM) action (N) - i (NM) action (N) ]]	++ :: [ annotation (N) - i (NM) annotation (N) ] :: [ xml (NM) config (NM) action (NM) type (N) - i (NM) xml (NM) node (NI) ] :: monitoring (NM) aspect (N) 
SPECIAL:FORM:TableSorter void sort(Object sender): sort (V)  | [ object (NI) - sender (N) ]	++ :: table (NM) sorter (N) 
BASE_VERB:NAME:ListUsersAction List<UserData> handleNoRolesFilter(UsersFilter filter): handle (VI)  | EQUIV[no (DT) roles (NM) filter (N) , [ users (NM) filter (N) - filter (N) ]]	++ :: list (NM) user (NM) data (NI)  :: list (NM) users (NM) action (N) 
SPECIAL:NAME:UserAdministrationImplTest UserAdministration createAdmin(): create (V)  | admin (N) 	++ :: user (NM) administration (N)  :: user (NM) administration (NM) impl (NM) test (N) 
SPECIAL:NAME:_ret void setParametersWide(Parameters params): set (V)  | parameters (NM) wide (N) 	++ :: [ parameters (N) - params (N) ] :: ret (N) 
BASE_VERB:NAME:PredictorDescription Collection listDependencies(): list (V)  | dependencies (N) 	++ :: collection (N)  :: predictor (NM) description (NI) 
NOUN_PHRASE:NAME:kXMLElement XMLParseException invalidValue(String key, String value, int lineNr): get (V) | invalid (NM) value (NI) 	++ :: [ string (NI) - key (NI) ] :: [ string (NI) - value (NI) ] :: [ int (N) - line (NM) nr (N) ] :: k (NM) XML (NM) element (NI)  :: XML (NM) parse (NM) exception (N) 
PREP:NAME:Enum static Enum forInt(int i):  | for (P) int (N) 	++ :: [ int (N) - i (N) ] :: enum (NI)  :: enum (NI) 
CONSTRUCTOR:NAME:DomainQuery DomainQuery DomainQuery():  | domain (NM) query (N) 	++
BASE_VERB:NAME:DefaultPropertyDefinition String formatAttributeValue(Object value): format (V)  | EQUIV[attribute (NM) value (NI) , [ object (NI) - value (NI) ]]	++ :: string (NI)  :: default (NM) property (NM) definition (NI) 
SPECIAL:NAME:CBHelpSystem void addHelpSet(String pluginHelpSet, ClassLoader loader): add (V)  | EQUIV[help (NM) set (N) , [ string (NI) - plugin (NM) help (NM) set (N) ]]	++ :: [ class (NM) loader (N) - loader (N) ] :: CB (NM) help (NM) system (N) 
SPECIAL:CLAS:AbstractStandardNativeGroupFactory List<StandardReadBean> findByEnabledFlag(String enabledFlag): find (V)  | abstract (NM) standard (NM) native (NM) group (NM) factory (N) -- by (P) EQUIV[enabled (NM) flag (N) , [ string (NI) - enabled (NM) flag (N) ]]	++ :: list (NM) standard (NM) read (NM) bean (NI) 
SPECIAL:NAME:AdminDatabaseUserDAO int checkPassword(String strAccessCode, String strPassword): check (VI)  | EQUIV[password (N) , [ string (NI) - str (NM) password (N) ]]	++ :: [ string (NI) - str (NM) access (NM) code (NI) ] :: int (N)  :: admin (NM) database (NM) user (NM) DAO (N) 
BASE_VERB:FORM:ServiceUtils static void bind(String jndiName, Object obj): bind (V)  | [ string (NI) - jndi (NM) name (NI) ]	++ :: [ object (NI) - obj (NI) ] :: service (NM) utils (N) 
ED_VERB:NAME:MRAnnoDiff boolean allowed_hunk(change hunk): allowed (V)  | EQUIV[hunk (N) , [ change (N) - hunk (N) ]]	++ :: boolean (N)  :: MR (NM) anno (NM) diff (N) 
BASE_VERB:NAME:SaveController void closeFile(): close (V)  | file (NI) 	++ :: save (NM) controller (N) 
BASE_VERB:NAME:MainFrame void showViews(boolean flag): show (V)  | views (N) 	++ :: [ boolean (N) - flag (N) ] :: [ boolean (N) - flag (N) ] :: main (NM) frame (N) 
SPECIAL:NAME:AWTSwingWrapper void removeFocusListener(FocusListener l): remove (V)  | EQUIV[focus (NM) listener (N) , [ focus (NM) listener (N) - l (N) ]]	++ :: AWT (NM) swing (NM) wrapper (NI) 
BASE_VERB:CLAS:DesignerPropertyEditor void handleDestroy(): handle (VI) destroy (V)  | designer (NM) property (NM) editor (N) 	++
SPECIAL:FORM:ResourcePredicate void check(Object ob): check (VI)  | [ object (NI) - ob (N) ]	++ :: resource (NM) predicate (N) 
SPECIAL:NAME:MessageBody MimeType getMimeType(): get (V)  | mime (NM) type (N) 	++ :: mime (NM) type (N)  :: message (NM) body (N) 
CONSTRUCTOR:NAME:HibernateObjectRetrievalFailureException HibernateObjectRetrievalFailureException HibernateObjectRetrievalFailureException(UnresolvableObjectException ex):  | hibernate (NM) object (NM) retrieval (NM) failure (NM) exception (N) 	++ :: [ unresolvable (NM) object (NM) exception (N) - ex (N) ]
CONSTRUCTOR:NAME:GeneratorData GeneratorData GeneratorData():  | generator (NM) data (NI) 	++
NOUN_PHRASE:NAME:Primitive static boolean booleanUnaryOperation(Boolean B, int kind): get (V) | boolean (NM) unary (NM) operation (N) 	++ :: [ boolean (N) - B (N) ] :: [ int (N) - kind (N) ] :: primitive (N)  :: boolean (N) 
ENDS_WITH_ING:NAME:QueryErrorHandler void warning(SAXParseException ex): handle (V) | warning (N) 	++ :: [ SAX (NM) parse (NM) exception (N) - ex (N) ] :: query (NM) error (NM) handler (N)  :: void (N) 
SPECIAL:NAME:ResponseParserHandler void endElement(String uri, String localName, String qName): end (V)  | element (NI) 	++ :: [ string (NI) - uri (NI) ] :: [ string (NI) - local (NM) name (NI) ] :: [ string (NI) - q (NM) name (NI) ] :: response (NM) parser (NM) handler (N) 
SPECIAL:NAME:ScrollableResultSetTableModel int getRowCount(): get (V)  | row (NM) count (N) 	++ :: int (N)  :: scrollable (NM) result (NM) set (NM) table (NM) model (NI) 
CONSTRUCTOR:NAME:Contact2 Contact2 Contact2():  | contact (NM) 2 (N) 	++
SPECIAL:NAME:ForwardCommandTest void testForewardWithAttachment(): test (VI)  | foreward (N) -- with (P) attachment (N) 	++ :: forward (NM) command (NM) test (N) 
NOUN_PHRASE:NAME:ValueBoxDefPOA ValueBoxDef _this(ORB orb): get (V) | this (PR) 	++ :: [ ORB (N) - orb (N) ] :: value (NM) box (NM) def (NM) POA (N)  :: value (NM) box (NM) def (NI) 
BASE_VERB:NAME:PrintMDCBuilder CartoucheInterface buildCartouche(int type, int leftPart, BasicItemListInterface e, int rightPart): build (V)  | cartouche (N) 	++ :: [ int (N) - type (N) ] :: [ int (N) - left (NM) part (N) ] :: [ basic (NM) item (NM) list (NM) interface (NI) - e (N) ] :: [ int (N) - right (NM) part (N) ] :: cartouche (NM) interface (NI)  :: print (NM) MDC (NM) builder (N) 
V_3P_IRR:NAME:AbstractSQLChange boolean isSplittingStatements(): is (V)  | splitting (NM) statements (N) 	++ :: boolean (N)  :: abstract (NM) SQL (NM) change (N) 
PREP:NAME:PlotAttributes String xToText(): convert (V) | x (PRE) to (P) text (NI) 	++ :: plot (NM) attributes (N)  :: string (NI) 
SPECIAL:NAME:AnnotationSourceChooser List getDataSetsForServer(String serverURL, String portString): get (V)  | data (NM) sets (N) -- for (P) EQUIV[server (N) , [ string (NI) - server (NM) URL (NI) ]]	++ :: [ string (NI) - port (NM) string (NI) ] :: list (N)  :: annotation (NM) source (NM) chooser (N) 
CONSTRUCTOR:NAME:VFreeBusy VFreeBusy VFreeBusy(VFreeBusy request, ComponentList components):  | V (NM) free (NM) busy (N) 	++ :: [ V (NM) free (NM) busy (N) - request (N) ] :: [ component (NM) list (N) - components (N) ]
CONSTRUCTOR:NAME:MapperPanel MapperPanel MapperPanel():  | mapper (NM) panel (N) 	++
VOID_NP:NAME:RealVitesseModel void internalSetValue(int _i, double _newV): handle (V) | internal (NM) set (NM) value (NI) 	++ :: [ int (N) - i (N) ] :: [ double (N) - new (NM) V (N) ] :: real (NM) vitesse (NM) model (NI)  :: void (N) 
SPECIAL:NAME:NotEqualsTestPackageTest void testNotIgnoringWhitespace(): test (VI)  | not (DT) ignoring (NM) whitespace (N) 	++ :: not (DT) equals (NM) test (NM) package (NM) test (N) 
NOUN_PHRASE:NAME:Matrix static long gsl_matrix_complex_float_view_vector(long arg0, int arg1, int arg2): get (V) | gsl (PRE) matrix (NM) complex (NM) float (NM) view (NM) vector (N) 	++ :: [ long (N) - arg (NM) 0 (N) ] :: [ int (N) - arg (NM) 1 (N) ] :: [ int (N) - arg (NM) 2 (N) ] :: matrix (N)  :: long (N) 
V_3P_IRR:NAME:NoUnderlyings boolean isSetUnderlyingSymbolSfx(): is (V)  | set (NM) underlying (NM) symbol (NM) sfx (N) 	++ :: boolean (N)  :: no (DT) underlyings (N) 
BASE_VERB:FORM:DefaultExpandeableTreeModel Object normalize(Object node): normalize (V)  | [ object (NI) - node (NI) ]	++ :: default (NM) expandeable (NM) tree (NM) model (NI)  :: object (NI) 
SPECIAL:FORM:ReplyMessage_1_0 void write(OutputStream ostream): write (V)  | [ output (NM) stream (NI) - ostream (N) ]	++ :: reply (NM) message (NM) 1 (NM) 0 (N) 
SPECIAL:NAME:Logger void setLogLevel(int severity): set (V)  | log (NM) level (N) 	++ :: [ int (N) - severity (N) ] :: logger (N) 
SPECIAL:NAME:MkFileTask File getEffectivePath(): get (V)  | effective (NM) path (NI) 	++ :: file (NI)  :: mk (NM) file (NM) task (N) 
SPECIAL:NAME:LucenePathIndexRetrievalEngine List<Graph> getExpandedGraphsFromResults(List<List<Node>> nodeResults, List<Relation> relations, int depth): get (V)  | expanded (NM) graphs (N) -- from (P) EQUIV[results (N) , [ list (NM) list (NM) node (NI) - node (NM) results (N) ]]	++ :: [ list (NM) relation (N) - relations (N) ] :: [ int (N) - depth (N) ] :: list (NM) graph (N)  :: lucene (NM) path (NM) index (NM) retrieval (NM) engine (N) 
SPECIAL:NAME:Material void setAmbientIntensity(float intensity): set (V)  | ambient (NM) intensity (N) 	++ :: [ float (N) - intensity (N) ] :: material (N) 
SPECIAL:NAME:RepositorySupport Object getParent(): get (V)  | parent (N) 	++ :: object (NI)  :: repository (NM) support (N) 
PREP:NAME:AccountImpl String toString(): convert (V) | to (P) string (NI) 	++ :: account (NM) impl (NI)  :: string (NI) 
BASE_VERB:FORM:Marshaller byte marshal(Object obj, MarshallingContext context): marshal (V)  | [ object (NI) - obj (NI) ]	++ :: [ marshalling (NM) context (N) - context (N) ] :: marshaller (N)  :: byte (N) 
SPECIAL:NAME:InvoiceEntityBean Date getCreateDateTime(): get (V)  | create (NM) date (NM) time (N) 	++ :: date (N)  :: invoice (NM) entity (NM) bean (NI) 
BASE_VERB:FORM:boolean accept(File pathname): accept (VI)  | [ file (NI) - pathname (N) ]	++ :: ANONYMOUS (N)  :: boolean (N) 
BASE_VERB:CLAS:XMLDocument String stylesheet(): stylesheet (V)  | XML (NM) document (NI) 	++ :: string (NI) 
SPECIAL:NAME:NonPositiveIntegerDatatype Datatype getSupertype(): get (V)  | supertype (N) 	++ :: datatype (N)  :: non (NM) positive (NM) integer (NM) datatype (N) 
CONSTRUCTOR:NAME:EmptyTrash EmptyTrash EmptyTrash(File delList, BoundedRangeModel range):  | empty (NM) trash (N) 	++ :: [ file (NI) - del (NM) list (N) ] :: [ bounded (NM) range (NM) model (NI) - range (N) ]
SPECIAL:NAME:CWebProxyXHTMLURLFilter void endElement(String uri, String localName, String qName): end (V)  | element (NI) 	++ :: [ string (NI) - uri (NI) ] :: [ string (NI) - local (NM) name (NI) ] :: [ string (NI) - q (NM) name (NI) ] :: C (NM) web (NM) proxy (NM) XHTMLURL (NM) filter (N) 
BASE_VERB:NAME:DeskletWidgetContext void shutdownThread(): shutdown (V)  | thread (N) 	++ :: desklet (NM) widget (NM) context (N) 
SPECIAL:NAME:Method void setInterf(String interf): set (V)  | interf (N) 	++ :: [ string (NI) - interf (N) ] :: method (N) 
SPECIAL:FORM:PageflowStepConditionRule void end(String namespace, String name): end (V)  | [ string (NI) - namespace (N) ]	++ :: [ string (NI) - name (NI) ] :: pageflow (NM) step (NM) condition (NM) rule (N) 
BASE_VERB:FORM:XPathToBPATranslator ExpressionBoolean translate(Equals o): translate (V)  | [ equals (N) - o (N) ]	++ :: X (NM) path (NM) to (NM) BPA (NM) translator (N)  :: expression (NM) boolean (N) 
SPECIAL:NAME:SecUpdateCredentialsRequest rawDef getCredArg(): get (V)  | cred (NM) arg (N) 	++ :: raw (NM) def (NI)  :: sec (NM) update (NM) credentials (NM) request (N) 
V_3P_IRR:NAME:ThumbView boolean isSortReverse(): is (V)  | sort (NM) reverse (N) 	++ :: boolean (N)  :: thumb (NM) view (NI) 
ENDS_WITH_ED:NAME:void actionPerformed(ActionEvent e): handle (V) | action (NM) performed (N) 	++ :: [ action (NM) event (NI) - e (N) ] :: ANONYMOUS (N)  :: void (N) 
CONSTRUCTOR:NAME:GOST3410Parameters GOST3410Parameters GOST3410Parameters(BigInteger p, BigInteger q, BigInteger a, GOST3410ValidationParameters params):  | GOST (NM) 3410 (NM) parameters (N) 	++ :: [ big (NM) integer (N) - p (NI) ] :: [ big (NM) integer (N) - q (N) ] :: [ big (NM) integer (N) - a (N) ] :: [ GOST (NM) 3410 (NM) validation (NM) parameters (N) - params (N) ]
NOUN_PHRASE:NAME:IntCopyList int binarySearchFirst(int fromIndex, int toIndex, int e): get (V) | binary (NM) search (NM) first (N) 	++ :: [ int (N) - from (NM) index (NI) ] :: [ int (N) - to (NM) index (NI) ] :: [ int (N) - e (N) ] :: int (NM) copy (NM) list (N)  :: int (N) 
SPECIAL:NAME:HandlerPool void addHandlerForMimeType(String mimetype, String className): add (V)  | handler (N) -- for (P) mime (NM) type (N) 	++ :: [ string (NI) - mimetype (N) ] :: [ string (NI) - class (NM) name (NI) ] :: handler (NM) pool (N) 
SPECIAL:FORM:CmdColourBottom void __delete(long _pointer_): delete (V)  | [ long (N) - pointer (N) ]	++ :: cmd (NM) colour (NM) bottom (N) 
SPECIAL:NAME:Userfile void setChildCount(int new_child_count): set (V)  | child (NM) count (N) 	++ :: [ int (N) - new (NM) child (NM) count (N) ] :: userfile (N) 
BASE_VERB:NAME:MenuItem void adjustImageOffsetY(int anInt): adjust (V)  | image (NM) offset (NM) Y (N) 	++ :: [ int (N) - an (DT) int (N) ] :: menu (NM) item (NI) 
CONSTRUCTOR:NAME:Unmarshaller Unmarshaller Unmarshaller(UnmarshallingContext context, int startState):  | unmarshaller (N) 	++ :: [ unmarshalling (NM) context (N) - context (N) ] :: [ int (N) - start (NM) state (N) ]
UNKOWN: :StdOverloadedList static boolean e_StdOverloadedList_nIsMember$semicolon258(CleanVM vm):
BASE_VERB:NAME:CalendarExporter void exportSingleEvent(File file, IComponentInfo component, ICalendarStore store): export (V)  | single (NM) event (NI) 	++ :: [ file (NI) - file (NI) ] :: [ I (NM) component (NM) info (NI) - component (N) ] :: [ I (NM) calendar (NM) store (N) - store (N) ] :: calendar (NM) exporter (N) 
NOUN_PHRASE:NAME:Object caseAssertStatement(AssertStatement object): get (V) | case (NM) assert (NM) statement (NI) 	++ :: [ assert (NM) statement (NI) - object (NI) ] :: ANONYMOUS (N)  :: object (NI) 
SPECIAL:NAME:SimpleGrapherApp void initializeGUIComponents(): initialize (V)  | GUI (NM) components (N) 	++ :: simple (NM) grapher (NM) app (N) 
ENDS_WITH_ED:NAME:Client void deviceDiscovered(RemoteDevice btDevice, DeviceClass cod): handle (V) | device (NM) discovered (N) 	++ :: [ remote (NM) device (N) - bt (NM) device (N) ] :: [ device (NM) class (NI) - cod (N) ] :: client (N)  :: void (N) 
BASE_VERB:CLAS:CodeEmitter void newarray(): newarray (V)  | code (NM) emitter (N) 	++
SPECIAL:NAME:JarJarDiff void setLevel(String level): set (V)  | level (N) 	++ :: [ string (NI) - level (N) ] :: jar (NM) jar (NM) diff (N) 
SPECIAL:CLAS:RemoveFromPlan void run(): run (VI)  | remove (NM) from (NM) plan (N) 	++
BASE_VERB:NAME:SpringServiceLocator Object locateService(Class serviceClass): locate (V)  | EQUIV[service (N) , [ class (NI) - service (NM) class (NI) ]]	++ :: object (NI)  :: spring (NM) service (NM) locator (N) 
SPECIAL:FORM:Void execute(Database database, ResultSet resultSet): execute (VI)  | [ database (N) - database (N) ]	++ :: [ result (NM) set (N) - result (NM) set (N) ] :: ANONYMOUS (N)  :: void (N) 
SPECIAL:NAME:ManMode JPopupMenu getContextMenu(Editor editor): get (V)  | context (NM) menu (N) 	++ :: [ editor (N) - editor (N) ] :: J (NM) popup (NM) menu (N)  :: man (NM) mode (N) 
BASE_VERB:NAME:StrutsResponseWrapper String encodeUrl(String url): encode (V)  | EQUIV[url (NI) , [ string (NI) - url (NI) ]]	++ :: string (NI)  :: struts (NM) response (NM) wrapper (NI) 
BASE_VERB:FORM:TextAtom Ret accept(SExpVisitor<Ret> v): accept (VI)  | [ S (NM) exp (NM) visitor (NM) ret (N) - v (N) ]	++ :: text (NM) atom (N)  :: ret (N) 
CONSTRUCTOR:NAME:Segment Segment Segment(char type, int start, int end):  | segment (N) 	++ :: [ char (N) - type (N) ] :: [ int (N) - start (N) ] :: [ int (N) - end (N) ]
SPECIAL:NAME:BBQNature void setProject(IProject project): set (V)  | project (N) 	++ :: [ I (NM) project (N) - project (N) ] :: BBQ (NM) nature (N) 
SPECIAL:CLAS:Value get(): get (V)  | ANONYMOUS (N) 	++ :: value (NI) 
ENDS_WITH_ED:NAME:void columnMarginChanged(ChangeEvent event): handle (V) | column (NM) margin (NM) changed (N) 	++ :: [ change (NM) event (NI) - event (NI) ] :: ANONYMOUS (N)  :: void (N) 
SPECIAL:NAME:SelectAccessControlResult int getInsertNamedGraph(): get (V)  | insert (NM) named (NM) graph (N) 	++ :: int (N)  :: select (NM) access (NM) control (NM) result (N) 
SPECIAL:NAME:SPTypedLiteralRegistry static void initTypeURIToFactoryMap(): init (V)  | type (NM) URI (NI) -- to (P) factory (NM) map (N) 	++ :: SP (NM) typed (NM) literal (NM) registry (N) 
CONSTRUCTOR:NAME:DelayAbortedException DelayAbortedException DelayAbortedException():  | delay (NM) aborted (NM) exception (N) 	++
SPECIAL:NAME:HttpClientConfiguration String getAuthenticationType(): get (V)  | authentication (NM) type (N) 	++ :: string (NI)  :: http (NM) client (NM) configuration (NI) 
SPECIAL:CLAS:RevenueCategoryMapBuilder void doBuild(): do (VI) build (V)  | revenue (NM) category (NM) map (NM) builder (N) 	++
BASE_VERB:NAME:TerminalManagerAnimator void setupLayout(Component c): setup (V)  | layout (N) 	++ :: [ component (N) - c (N) ] :: terminal (NM) manager (NM) animator (N) 
BASE_VERB:FORM:Judge boolean up(Field f): up (V)  | [ field (N) - f (N) ]	++ :: judge (N)  :: boolean (N) 
SPECIAL:NAME:AboutDialog GridBagConstraints getConstraints(GridBagConstraints c): get (V)  | EQUIV[constraints (N) , [ grid (NM) bag (NM) constraints (N) - c (N) ]]	++ :: grid (NM) bag (NM) constraints (N)  :: about (NM) dialog (N) 
SPECIAL:CLAS:Matrix4d void setFromQuat(double x, double y, double z, double w): set (V)  | matrix (NM) 4 (NM) d (N) -- from (P) quat (N) 	++ :: [ double (N) - x (N) ] :: [ double (N) - y (N) ] :: [ double (N) - z (N) ] :: [ double (N) - w (N) ]
SPECIAL:NAME:AttributeTag void setScope(String scope): set (V)  | scope (N) 	++ :: [ string (NI) - scope (N) ] :: attribute (NM) tag (NI) 
CONSTRUCTOR:NAME:OptionVisibility OptionVisibility OptionVisibility(SelectVisibility parent, Type visibility):  | option (NM) visibility (N) 	++ :: [ select (NM) visibility (N) - parent (N) ] :: [ type (N) - visibility (N) ]
ENDS_WITH_ING:NAME:ObjectController BindingInfo infoForBinding(String binding): handle (V) | info (NM) for (NM) binding (N) 	++ :: [ string (NI) - binding (N) ] :: object (NM) controller (N)  :: binding (NM) info (NI) 
BASE_VERB:FORM:Agency void serialise(Model model, boolean toFile): serialise (V)  | [ model (NI) - model (NI) ]	++ :: agency (N)  :: [ boolean (N) - to (NM) file (NI) ]
BASE_VERB:FORM:PLStream void star(int nx, int ny): star (V)  | [ int (N) - nx (N) ]	++ :: [ int (N) - ny (N) ] :: PL (NM) stream (NI) 
BASE_VERB:FORM:DummyEncryptor String decrypt(String encryptedBase64String): decrypt (V)  | [ string (NI) - encrypted (NM) base (NM) 64 (NM) string (NI) ]	++ :: dummy (NM) encryptor (N)  :: string (NI) 
SPECIAL:NAME:GenbankSeqWriter void writeRecordEnd(): write (V)  | record (NM) end (N) 	++ :: genbank (NM) seq (NM) writer (N) 
BASE_VERB:NAME:RequestHandler static FeClub ClubUmakeUN1(FeEdition arg1): club (V)  | EQUIV[umake (NM) UN (N) 1 (D) , [ fe (NM) edition (N) - arg (NM) 1 (N) ]]	++ :: fe (NM) club (N)  :: request (NM) handler (N) 
SPECIAL:NAME:TaskMutator void setIsolationLevel(int level): set (V)  | isolation (NM) level (N) 	++ :: [ int (N) - level (N) ] :: task (NM) mutator (N) 
SPECIAL:NAME:ReflectFinder Constructor findConstructors(Class p_class): find (V)  | constructors (N) 	++ :: [ class (NI) - p (NM) class (NI) ] :: constructor (N)  :: reflect (NM) finder (N) 
SPECIAL:NAME:BasicMvtForInvoicePlugin JournalData getJournalData(SocieteLocal sl): get (V)  | journal (NM) data (NI) 	++ :: [ societe (NM) local (N) - sl (N) ] :: journal (NM) data (NI)  :: basic (NM) mvt (NM) for (NM) invoice (NM) plugin (N) 
V_3PS:NAME:DatabaseMetaData boolean supportsSubqueriesInIns(): supports (V)  | subqueries (N) -- in (P) ins (N) 	++ :: boolean (N)  :: database (NM) meta (NM) data (NI) 
V_3P_IRR:NAME:Holder boolean isStarted(): is (V)  | started (N) 	++ :: boolean (N)  :: holder (NI) 
ING_VERB:NAME:TopNodeTracker void exitingTopNode(Node node): exiting (V)  | EQUIV[top (NM) node (NI) , [ node (NI) - node (NI) ]]	++ :: top (NM) node (NM) tracker (N) 
V_3P_IRR:NAME:BumpBuffer boolean hasSameConfiguration(GraphicsConfiguration gc, Color aTopColor, Color aShadowColor, Color aBackColor): has (V)  | EQUIV[same (NM) configuration (NI) , [ graphics (NM) configuration (NI) - gc (N) ]]	++ :: [ color (N) - a (NM) top (NM) color (N) ] :: [ color (N) - a (NM) shadow (NM) color (N) ] :: [ color (N) - a (NM) back (NM) color (N) ] :: boolean (N)  :: bump (NM) buffer (NI) 
SPECIAL:NAME:MapPanel MapPanelDataModel getModel(): get (V)  | model (NI) 	++ :: map (NM) panel (NM) data (NM) model (NI)  :: map (NM) panel (N) 
SPECIAL:NAME:SQLSelectStatement void removeListener(SQLSelectStatementListener l): remove (V)  | EQUIV[listener (N) , [ SQL (NM) select (NM) statement (NM) listener (N) - l (N) ]]	++ :: SQL (NM) select (NM) statement (NI) 
BASE_VERB:FORM:JavascriptFlexScanner void yypushback(int number): yypushback (V)  | [ int (N) - number (NI) ]	++ :: javascript (NM) flex (NM) scanner (N) 
CONSTRUCTOR:NAME:SearchValidator SearchValidator SearchValidator(SearchAsset asset):  | search (NM) validator (N) 	++ :: [ search (NM) asset (N) - asset (N) ]
SPECIAL:NAME:TableCellRenderer getCellRenderer(int row, int column): get (V)  | cell (NM) renderer (N) 	++ :: [ int (N) - row (N) ] :: [ int (N) - column (N) ] :: table (NM) cell (NM) renderer (N)  :: ANONYMOUS (N) 
CONSTRUCTOR:NAME:HostImplIn HostImplIn HostImplIn():  | host (NM) impl (NM) in (NI) 	++
SPECIAL:NAME:BankStatementLoaderInterface boolean loadLines(): load (V)  | lines (N) 	++ :: boolean (N)  :: bank (NM) statement (NM) loader (NM) interface (NI) 
CONSTRUCTOR:NAME:DenseGraph DenseGraph DenseGraph(int nodesNum):  | dense (NM) graph (N) 	++ :: [ int (N) - nodes (NM) num (NI) ]
V_3P_IRR:NAME:LicenseConstants static boolean hasDRMLicense(String type): has (V)  | DRM (NM) license (N) 	++ :: [ string (NI) - type (N) ] :: boolean (N)  :: license (NM) constants (N) 
BASE_VERB:NAME:X86BytecodeVisitor void visit_putfield(VmConstFieldRef fieldRef): visit (V)  | putfield (N) 	++ :: [ vm (NM) const (NM) field (NM) ref (NI) - field (NM) ref (NI) ] :: X (NM) 86 (NM) bytecode (NM) visitor (N) 
ENDS_WITH_ED:NAME:GHCActionMenu void targetStarted(GHCTarget target): handle (V) | target (NM) started (N) 	++ :: [ GHC (NM) target (N) - target (N) ] :: GHC (NM) action (NM) menu (N)  :: void (N) 
PREP:NAME:BoundIdentifier void toString(StringBuilder builder, boolean isRightChild, int parentTag, String boundNames, boolean withTypes): convert (V) | to (P) string (NI) 	++ :: [ string (NM) builder (N) - builder (N) ] :: [ boolean (N) - is (NM) right (NM) child (N) ] :: [ int (N) - parent (NM) tag (NI) ] :: [ string (NI) - bound (NM) names (N) ] :: [ boolean (N) - with (NM) types (N) ] :: bound (NM) identifier (NI)  :: void (N) 
SPECIAL:NAME:SourceCodeImpl Variant LoadSourceCode(Variant TextObj): load (V)  | source (NM) code (NI) 	++ :: [ variant (N) - text (NM) obj (NI) ] :: variant (N)  :: source (NM) code (NM) impl (NI) 
BASE_VERB:FORM:Main Object restore(String key): restore (V)  | [ string (NI) - key (NI) ]	++ :: main (N)  :: object (NI) 
SPECIAL:NAME:ImageTag void setHspace(String hspace): set (V)  | hspace (N) 	++ :: [ string (NI) - hspace (N) ] :: image (NM) tag (NI) 
SPECIAL:FORM:NoMiscFees MiscFeeAmt get(MiscFeeAmt value): get (V)  | [ misc (NM) fee (NM) amt (N) - value (NI) ]	++ :: no (DT) misc (NM) fees (N)  :: misc (NM) fee (NM) amt (N) 
SPECIAL:NAME:ConfiguratorImpl void processConfigFile(String base, Element element, Object component, ConfigureCommand command): process (VI)  | config (NM) file (NI) 	++ :: [ string (NI) - base (N) ] :: [ element (NI) - element (NI) ] :: [ object (NI) - component (N) ] :: [ configure (NM) command (N) - command (N) ] :: configurator (NM) impl (NI) 
SPECIAL:NAME:PropertyStore String getString(String name): get (V)  | EQUIV[string (NI) , [ string (NI) - name (NI) ]]	++ :: string (NI)  :: property (NM) store (N) 
VOID_NP:NAME:ContentHandlerAdaptor void ignorableWhitespace(char ch, int start, int length): handle (V) | ignorable (NM) whitespace (N) 	++ :: [ char (N) - ch (N) ] :: [ int (N) - start (N) ] :: [ int (N) - length (N) ] :: content (NM) handler (NM) adaptor (N)  :: void (N) 
CONSTRUCTOR:NAME:RuleBasedCollator RuleBasedCollator RuleBasedCollator(String rules):  | rule (NM) based (NM) collator (N) 	++ :: [ string (NI) - rules (N) ]
BASE_VERB:NAME:SFDeployDisplay static LogSF sfLogStatic(): sf (PRE) log (V)  | static (N) 	++ :: log (NM) SF (N)  :: SF (NM) deploy (NM) display (N) 
SPECIAL:FORM:ForEach static void main(String args): main (V)  | [ string (NI) - args (N) ]	++ :: for (NM) each (DT) 
ENDS_WITH_ED:NAME:UncommentAction void nodeSelected(Node node): handle (V) | node (NM) selected (N) 	++ :: [ node (NI) - node (NI) ] :: uncomment (NM) action (N)  :: void (N) 
BASE_VERB:CLAS:GetAcMth Variant Show(): show (V)  | get (NM) ac (NM) mth (N) 	++ :: variant (N) 
SPECIAL:FORM:MCRMetaLangText void set(String set_lang, String set_type, String set_form, String set_text): set (V)  | [ string (NI) - set (NM) lang (N) ]	++ :: [ string (NI) - set (NM) type (N) ] :: [ string (NI) - set (NM) form (N) ] :: [ string (NI) - set (NM) text (NI) ] :: MCR (NM) meta (NM) lang (NM) text (NI) 
BASE_VERB:NAME:EJBQLNodeToSqlExp Object arriveParenNode(ParenNode node, Object msg): arrive (V)  | EQUIV[paren (NM) node (NI) , [ paren (NM) node (NI) - node (NI) ]]	++ :: [ object (NI) - msg (NI) ] :: object (NI)  :: EJBQL (NM) node (NM) to (NM) sql (NM) exp (N) 
SPECIAL:NAME:Plasma void initAttributes(IContext context): init (V)  | attributes (N) 	++ :: [ I (NM) context (N) - context (N) ] :: plasma (N) 
SPECIAL:NAME:RecoverableIOException StackTraceElement getStackTrace(): get (V)  | stack (NM) trace (N) 	++ :: stack (NM) trace (NM) element (NI)  :: recoverable (NM) IO (NM) exception (N) 
CONSTRUCTOR:NAME:Tab Tab Tab(LayoutManager layout):  | tab (N) 	++ :: [ layout (NM) manager (N) - layout (N) ]
BASE_VERB:NAME:ViewTree void refreshView(): refresh (V)  | view (NI) 	++ :: view (NM) tree (NI) 
SPECIAL:FORM:LIRCMap void add(String button, String remote, int repeat, String values): add (V)  | [ string (NI) - button (N) ]	++ :: [ string (NI) - remote (N) ] :: [ int (N) - repeat (N) ] :: [ string (NI) - values (N) ] :: LIRC (NM) map (N) 
SPECIAL:NAME:MockRepositoryItem String getItemDisplayName(): get (V)  | item (NM) display (NM) name (NI) 	++ :: string (NI)  :: mock (NM) repository (NM) item (NI) 
VOID_NP:NAME:Vector3Double void unmarshal(DataInputStream dis): handle (V) | unmarshal (N) 	++ :: [ data (NM) input (NM) stream (NI) - dis (N) ] :: vector (NM) 3 (NM) double (N)  :: void (N) 
SPECIAL:NAME:ScheduleTimeQuantityTest void testUpConvert(): test (VI)  | up (NM) convert (N) 	++ :: schedule (NM) time (NM) quantity (NM) test (N) 
V_3P_IRR:NAME:MultiPanelFormTag boolean isValidationMode(HttpServletRequest request): is (V)  | validation (NM) mode (N) 	++ :: [ http (NM) servlet (NM) request (N) - request (N) ] :: boolean (N)  :: multi (NM) panel (NM) form (NM) tag (NI) 
SPECIAL:NAME:Range void setRangeMin(long min): set (V)  | range (NM) min (N) 	++ :: [ long (N) - min (N) ] :: range (N) 
SPECIAL:NAME:ObjectFactory VectorType createVectorType(): create (V)  | vector (NM) type (N) 	++ :: vector (NM) type (N)  :: object (NM) factory (N) 
SPECIAL:NAME:QuestionAnswerView void setCombinedAnswer(String answer): set (V)  | combined (NM) answer (N) 	++ :: [ string (NI) - answer (N) ] :: question (NM) answer (NM) view (NI) 
SPECIAL:NAME:ServiceBinding ServiceBinding getTargetBinding(): get (V)  | target (NM) binding (N) 	++ :: service (NM) binding (N)  :: service (NM) binding (N) 
NOUN_PHRASE:NAME:AdvancedSubStation int directionToInt(Direction dir): get (V) | direction (NM) to (NM) int (N) 	++ :: [ direction (N) - dir (NI) ] :: advanced (NM) sub (NM) station (N)  :: int (N) 
CONSTRUCTOR:NAME:DefaultTableModel DefaultTableModel DefaultTableModel(int numRows, int numColumns):  | default (NM) table (NM) model (NI) 	++ :: [ int (N) - num (NM) rows (N) ] :: [ int (N) - num (NM) columns (N) ]
SPECIAL:NAME:JdbcJavaTypeMapping void setConverterFactory(JdbcConverterFactory converterFactory): set (V)  | converter (NM) factory (N) 	++ :: [ jdbc (NM) converter (NM) factory (N) - converter (NM) factory (N) ] :: jdbc (NM) java (NM) type (NM) mapping (N) 
BASE_VERB:FORM:Base64 static String decode(String string): decode (V)  | [ string (NI) - string (NI) ]	++ :: base (NM) 64 (N)  :: string (NI) 
VOID_NP:NAME:FormImpl void unsetDatasource(): handle (V) | unset (NM) datasource (N) 	++ :: form (NM) impl (NI)  :: void (N) 
BASE_VERB:NAME:ScopesCompiler Object exec_stmt(SimpleNode node): exec (V)  | stmt (N) 	++ :: [ simple (NM) node (NI) - node (NI) ] :: object (NI)  :: scopes (NM) compiler (N) 
SPECIAL:NAME:AGreaterThanCondition void setRight(PExpression node): set (V)  | right (N) 	++ :: [ P (NM) expression (N) - node (NI) ] :: A (NM) greater (NM) than (NM) condition (N) 
BASE_VERB:CLAS:StreamingMSDataSourceInformation void dispose(): dispose (V)  | streaming (NM) MS (NM) data (NM) source (NM) information (N) 	++
SPECIAL:FORM:TemplateTag void write(String val): write (V)  | [ string (NI) - val (NI) ]	++ :: template (NM) tag (NI) 
SPECIAL:NAME:UploadThemeForm String getAuthor(): get (V)  | author (N) 	++ :: string (NI)  :: upload (NM) theme (NM) form (N) 
BASE_VERB:FORM:charmaps static void maperror(int indx, int line, String errmsg): maperror (V)  | [ int (N) - indx (N) ]	++ :: [ int (N) - line (N) ] :: [ string (NI) - errmsg (N) ] :: charmaps (N) 
SPECIAL:NAME:ComponentView void setParent(View p): set (V)  | parent (N) 	++ :: [ view (NI) - p (NI) ] :: component (NM) view (NI) 
BASE_VERB:FORM:StringBuilderList char cut(int index): cut (V)  | [ int (N) - index (NI) ]	++ :: string (NM) builder (NM) list (N)  :: char (N) 
BASE_VERB:FORM:ArrayUtil static Object merge(Object one, Object two, Object arrType): merge (V)  | [ object (NI) - one (N) ]	++ :: [ object (NI) - two (N) ] :: [ object (NI) - arr (NM) type (N) ] :: array (NM) util (N)  :: object (NI) 
SPECIAL:FORM:Rectangle void add(Rectangle r): add (V)  | [ rectangle (N) - r (N) ]	++ :: rectangle (N) 
SPECIAL:NAME:cSequence String setMaxSeqLen(String v): set (V)  | max (NM) seq (NM) len (N) 	++ :: [ string (NI) - v (N) ] :: string (NI)  :: c (NM) sequence (N) 
SPECIAL:NAME:CodeAttr int getMaxStack(): get (V)  | max (NM) stack (N) 	++ :: int (N)  :: code (NM) attr (N) 
SPECIAL:NAME:NonBlockingConnection String readStringByDelimiter(String delimiter, int maxLength): read (V)  | string (NI) -- by (P) delimiter (N) 	++ :: [ string (NI) - delimiter (N) ] :: [ int (N) - max (NM) length (N) ] :: string (NI)  :: non (NM) blocking (NM) connection (N) 
EMPTY:NONE:PythonGrammar boolean jj_3R_121():  | jj (PRE) 3 (D) R (PRE) 121 (D) 
SPECIAL:NAME:XData void doAcceptEnds_(IDataVisitor aVisitor): do (VI) accept (VI)  | ends (N) 	++ :: [ I (NM) data (NM) visitor (N) - a (NM) visitor (N) ] :: X (NM) data (NI) 
SPECIAL:NAME:IdGenerator int createNewID(): create (V)  | new (NM) ID (NI) 	++ :: int (N)  :: id (NM) generator (N) 
ENDS_WITH_ED:NAME:PEPeerManagerStatsImpl void protocolBytesSent(PEPeer peer, int length): handle (V) | protocol (NM) bytes (NM) sent (N) 	++ :: [ PE (NM) peer (N) - peer (N) ] :: [ int (N) - length (N) ] :: PE (NM) peer (NM) manager (NM) stats (NM) impl (NI)  :: void (N) 
SPECIAL:NAME:IChannelRegistryStore ChannelType getChannelTypes(): get (V)  | channel (NM) types (N) 	++ :: channel (NM) type (N)  :: I (NM) channel (NM) registry (NM) store (N) 
SPECIAL:CLAS:OPLCachedRowSet void execute(): execute (VI)  | OPL (NM) cached (NM) row (NM) set (N) 	++
BASE_VERB:FORM:MultiDurationDisplay void display(Date time): display (V)  | [ date (N) - time (N) ]	++ :: multi (NM) duration (NM) display (N) 
CONSTRUCTOR:NAME:ResourcePK ResourcePK ResourcePK(String repository):  | resource (NM) PK (NI) 	++ :: [ string (NI) - repository (N) ]
SPECIAL:NAME:GenericValueWidget Object getValues(): get (V)  | values (N) 	++ :: object (NI)  :: generic (NM) value (NM) widget (N) 
BASE_VERB:NAME:AccountSumReport void ClearReport(): clear (V)  | report (N) 	++ :: account (NM) sum (NM) report (N) 
V_3P_IRR:NAME:TransitionManager Collection isStartable(ExtTransitionLocal toTrans, ExtActivityLocal act): is (V)  | startable (N) 	++ :: [ ext (NM) transition (NM) local (N) - to (NM) trans (N) ] :: [ ext (NM) activity (NM) local (N) - act (N) ] :: collection (N)  :: transition (NM) manager (N) 
NOUN_PHRASE:NAME:Link static LinkPair newLinkPair(Link forward, Link backward): get (V) | new (NM) link (NM) pair (N) 	++ :: [ link (N) - forward (N) ] :: [ link (N) - backward (N) ] :: link (N)  :: link (NM) pair (N) 
CONSTRUCTOR:NAME:OptionsPane OptionsPane OptionsPane(ScriptOptions import_options, ScriptOptions build_options):  | options (NM) pane (N) 	++ :: [ script (NM) options (N) - import (NM) options (N) ] :: [ script (NM) options (N) - build (NM) options (N) ]
SPECIAL:NAME:TestGenericFieldDescriptor void testDefaultValuesText(): test (VI)  | default (NM) values (NM) text (NI) 	++ :: test (NM) generic (NM) field (NM) descriptor (NI) 
SPECIAL:NAME:IconTabEvent String getName(): get (V)  | name (NI) 	++ :: string (NI)  :: icon (NM) tab (NM) event (NI) 
SPECIAL:NAME:Inst void setNext(Inst next): set (V)  | next (DT) 	++ :: [ inst (N) - next (DT) ] :: inst (N) 
SPECIAL:NAME:LogEntry String getTimeStampStr(): get (V)  | time (NM) stamp (NM) str (NI) 	++ :: string (NI)  :: log (NM) entry (NI) 
SPECIAL:NAME:NLPLogicalOperation int getNoArcs(): get (V)  | no (DT) arcs (N) 	++ :: int (N)  :: NLP (NM) logical (NM) operation (N) 
CONSTRUCTOR:NAME:AjaxLinkTest AjaxLinkTest AjaxLinkTest(String name):  | ajax (NM) link (NM) test (N) 	++ :: [ string (NI) - name (NI) ]
V_3P_IRR:NAME:I2cTranslator void isEnabled(McuContext context): is (V)  | enabled (N) 	++ :: [ mcu (NM) context (N) - context (N) ] :: I (NM) 2 (NM) c (NM) translator (N) 
SPECIAL:CLAS:ByteHeap int get(): get (V)  | byte (NM) heap (N) 	++ :: int (N) 
SPECIAL:NAME:A Date addNewDate(): add (V)  | new (NM) date (N) 	++ :: date (N)  :: A (N) 
PREP:NAME:LDOldScriptExport void toScript(LDItem item, Vector v, int cnt): convert (V) | to (P) script (N) 	++ :: [ LD (NM) item (NI) - item (NI) ] :: [ vector (N) - v (N) ] :: [ int (N) - cnt (N) ] :: LD (NM) old (NM) script (NM) export (N)  :: void (N) 
BASE_VERB:NAME:DUsine IMatriceComplexe creeMathematiquesMatriceComplexe(): cree (PRE) mathematiques (V)  | matrice (NM) complexe (N) 	++ :: I (NM) matrice (NM) complexe (N)  :: D (NM) usine (N) 
SPECIAL:NAME:QMenuBar void setProjectOpen(boolean value): set (V)  | project (NM) open (N) 	++ :: [ boolean (N) - value (NI) ] :: Q (NM) menu (NM) bar (N) 
BASE_VERB:NAME:NodeVisitor Object arriveEqualNode(EqualNode node, Object msg): arrive (V)  | EQUIV[equal (NM) node (NI) , [ equal (NM) node (NI) - node (NI) ]]	++ :: [ object (NI) - msg (NI) ] :: object (NI)  :: node (NM) visitor (N) 
SPECIAL:NAME:AbstractNetpbmImage int getMaxVal(): get (V)  | max (NM) val (NI) 	++ :: int (N)  :: abstract (NM) netpbm (NM) image (N) 
BASE_VERB:FORM:Treebolic void umount(INode thisNode): umount (V)  | [ I (NM) node (NI) - this (PR) node (NI) ]	++ :: treebolic (N) 
V_3PS:FORM:Table boolean equals(Object o): equals (V)  | [ object (NI) - o (N) ]	++ :: table (N)  :: boolean (N) 
BASE_VERB:NAME:IBugSystem List<ProjectMilestone> listMilestones(Project project): list (V)  | milestones (N) 	++ :: [ project (N) - project (N) ] :: list (NM) project (NM) milestone (N)  :: I (NM) bug (NM) system (N) 
VOID_NP:NAME:JaxoGraph void background(JaxoObject object): handle (V) | background (N) 	++ :: [ jaxo (NM) object (NI) - object (NI) ] :: jaxo (NM) graph (N)  :: void (N) 
EMPTY:NONE:StdOverloadedList static boolean n1380(CleanVM vm):  | n (PRE) 1380 (D) 
SPECIAL:NAME:TalkingAboutResponseImpl PhraseType getTalkingAboutPhrase(): get (V)  | talking (NM) about (NM) phrase (N) 	++ :: phrase (NM) type (N)  :: talking (NM) about (NM) response (NM) impl (NI) 
CONSTRUCTOR:NAME:ThinClientCallbackHandler ThinClientCallbackHandler ThinClientCallbackHandler():  | thin (NM) client (NM) callback (NM) handler (N) 	++
CONSTRUCTOR:NAME:BSHUnaryExpression BSHUnaryExpression BSHUnaryExpression(int id):  | BSH (NM) unary (NM) expression (N) 	++ :: [ int (N) - id (NI) ]
V_3P_IRR:NAME:FileSystemView boolean isHiddenFile(File f): is (V)  | EQUIV[hidden (NM) file (NI) , [ file (NI) - f (N) ]]	++ :: boolean (N)  :: file (NM) system (NM) view (NI) 
SPECIAL:CLAS:AnnotationCreatorInfoCommandTest void setUp(): set (V) up (VP)  | annotation (NM) creator (NM) info (NM) command (NM) test (N) 	++
SPECIAL:NAME:GraphConstants static void setChildrenSelectable(Map map, boolean flag): set (V)  | children (NM) selectable (N) 	++ :: [ map (N) - map (N) ] :: [ boolean (N) - flag (N) ] :: graph (NM) constants (N) 
CONSTRUCTOR:NAME:CheckInOutStateException CheckInOutStateException CheckInOutStateException(int iResource):  | check (NM) in (NM) out (NM) state (NM) exception (N) 	++ :: [ int (N) - i (NM) resource (N) ]
SPECIAL:NAME:ParameterDataModel void setParameterRef(DisplayModel parameterRef): set (V)  | parameter (NM) ref (NI) 	++ :: [ display (NM) model (NI) - parameter (NM) ref (NI) ] :: parameter (NM) data (NM) model (NI) 
BASE_VERB:FORM:MD5 int FF(int a, int b, int c, int d, int x, int s, int ac): FF (V)  | [ int (N) - a (N) ]	++ :: [ int (N) - b (N) ] :: [ int (N) - c (N) ] :: [ int (N) - d (N) ] :: [ int (N) - x (N) ] :: [ int (N) - s (N) ] :: [ int (N) - ac (N) ] :: MD (NM) 5 (N)  :: int (N) 
SPECIAL:NAME:SwitchPosAction void setDeclaringTeam(int declaringTeam): set (V)  | declaring (NM) team (N) 	++ :: [ int (N) - declaring (NM) team (N) ] :: switch (NM) pos (NM) action (N) 
SPECIAL:NAME:ParseContext ParsecError getSysUnexpected(): get (V)  | sys (NM) unexpected (N) 	++ :: parsec (NM) error (N)  :: parse (NM) context (N) 
SPECIAL:NAME:SSLTransportJCE InputStream getInputStream(): get (V)  | input (NM) stream (NI) 	++ :: input (NM) stream (NI)  :: SSL (NM) transport (NM) JCE (N) 
EMPTY:NONE:csParser boolean jj_3R_369():  | jj (PRE) 3 (D) R (PRE) 369 (D) 
BASE_VERB:FORM:TerrainContainer void generate(double x, double z): generate (V)  | [ double (N) - x (N) ]	++ :: [ double (N) - z (N) ] :: terrain (NM) container (NI) 
SPECIAL:FORM:LodDistanceList void __delete(long _pointer_): delete (V)  | [ long (N) - pointer (N) ]	++ :: lod (NM) distance (NM) list (N) 
NOUN_PHRASE:NAME:IdToClassNameValidator Object primToObj(Object o): get (V) | prim (NM) to (NM) obj (NI) 	++ :: [ object (NI) - o (N) ] :: id (NM) to (NM) class (NM) name (NM) validator (N)  :: object (NI) 
SPECIAL:NAME:SQLDialog void setSQL(String string): set (V)  | SQL (N) 	++ :: [ string (NI) - string (NI) ] :: SQL (NM) dialog (N) 
SPECIAL:NAME:X509CRLSelectorImpl void addIssuerName(X500Name issuerName): add (V)  | EQUIV[issuer (NM) name (NI) , [ X (NM) 500 (NM) name (NI) - issuer (NM) name (NI) ]]	++ :: X (NM) 509 (NM) CRL (NM) selector (NM) impl (NI) 
SPECIAL:NAME:XYItemRenderer void setStroke(Stroke stroke): set (V)  | stroke (N) 	++ :: [ stroke (N) - stroke (N) ] :: XY (NM) item (NM) renderer (N) 
SPECIAL:NAME:Resolve Symbol findType(Env<AttrContext> env, Name name): find (V)  | type (N) 	++ :: [ env (NM) attr (NM) context (N) - env (N) ] :: [ name (NI) - name (NI) ] :: symbol (N)  :: resolve (N) 
ENDS_WITH_ING:NAME:Long_term static void Long_term_analysis_filtering(short bc, short Nc, short dp, short d, int d_index, short dpp, short e, int dp_dpp_index): handle (V) | long (NM) term (NM) analysis (NM) filtering (N) 	++ :: [ short (N) - bc (N) ] :: [ short (N) - nc (N) ] :: [ short (N) - dp (N) ] :: [ short (N) - d (N) ] :: [ int (N) - d (NM) index (NI) ] :: [ short (N) - dpp (N) ] :: [ short (N) - e (N) ] :: [ int (N) - dp (NM) dpp (NM) index (NI) ] :: long (NM) term (N)  :: void (N) 
CONSTRUCTOR:NAME:TzUrl TzUrl TzUrl(ParameterList aList, URI aUri):  | tz (NM) url (NI) 	++ :: [ parameter (NM) list (N) - a (NM) list (N) ] :: [ URI (NI) - a (NM) uri (NI) ]
ENDS_WITH_ED:NAME:void mouseEntered(MouseEvent e): handle (V) | mouse (NM) entered (N) 	++ :: [ mouse (NM) event (NI) - e (N) ] :: ANONYMOUS (N)  :: void (N) 
ENDS_WITH_ED:NAME:void actionPerformed(ActionEvent e): handle (V) | action (NM) performed (N) 	++ :: [ action (NM) event (NI) - e (N) ] :: ANONYMOUS (N)  :: void (N) 
CONSTRUCTOR:NAME:NetcdfFile NetcdfFile NetcdfFile(String path, boolean ro):  | netcdf (NM) file (NI) 	++ :: [ string (NI) - path (NI) ] :: [ boolean (N) - ro (N) ]
SPECIAL:NAME:BibliographySource BibliographyEntryTemplate getBibliographyEntryTemplateArray(): get (V)  | bibliography (NM) entry (NM) template (NM) array (N) 	++ :: bibliography (NM) entry (NM) template (N)  :: bibliography (NM) source (NI) 
SPECIAL:NAME:ContextType String getJndiName(): get (V)  | jndi (NM) name (NI) 	++ :: string (NI)  :: context (NM) type (N) 
SPECIAL:FORM:SyntaxStatistics static void main(String args): main (V)  | [ string (NI) - args (N) ]	++ :: syntax (NM) statistics (N) 
SPECIAL:NAME:HistogramDataset double getMinimum(double values): get (V)  | minimum (N) 	++ :: [ double (N) - values (N) ] :: double (N)  :: histogram (NM) dataset (N) 
PREP:NAME:Cons SExpression fromArray(SExpression sarray, int off): convert (V) | from (P) array (N) 	++ :: [ S (NM) expression (N) - sarray (N) ] :: [ int (N) - off (N) ] :: cons (N)  :: S (NM) expression (N) 
BASE_VERB:NAME:ScreenHandler void swapScreens(): swap (V)  | screens (N) 	++ :: screen (NM) handler (N) 
BASE_VERB:NAME:ManageOptionReq Vector listOptionAll(): list (V)  | option (NM) all (DT) 	++ :: vector (N)  :: manage (NM) option (NM) req (N) 
CONSTRUCTOR:NAME:DefineToken DefineToken DefineToken():  | define (NM) token (N) 	++
SPECIAL:NAME:OpeningBookList void removeSelected(): remove (V)  | selected (N) 	++ :: opening (NM) book (NM) list (N) 
BASE_VERB:CLAS:AspCollection int Count(): count (V)  | asp (NM) collection (N) 	++ :: int (N) 
SPECIAL:NAME:AbstractArray void checkMatrixOrder(): check (VI)  | matrix (NM) order (N) 	++ :: abstract (NM) array (N) 
SPECIAL:NAME:SearchFormSettings void setSearchIn(int searchIn): set (V)  | search (N) -- in (P) [ int (N) - search (NM) in (NI) ]	++ :: [ int (N) - search (NM) in (NI) ] :: search (NM) form (NM) settings (N) 
NOUN_PHRASE:NAME:RelatedObjectDeletorImpl static Class PRIMARY_INTERFACE_CLASS(): get (V) | PRIMARY (NM) INTERFACE (NM) CLASS (NI) 	++ :: related (NM) object (NM) deletor (NM) impl (NI)  :: class (NI) 
SPECIAL:NAME:CardMatchFrame JToggleButton createCardButton(Card card): create (V)  | card (NM) button (N) 	++ :: [ card (N) - card (N) ] :: J (NM) toggle (NM) button (N)  :: card (NM) match (NM) frame (N) 
SPECIAL:NAME:PluginPreferenceStore double getDefaultDouble(String name): get (V)  | default (NM) double (N) 	++ :: [ string (NI) - name (NI) ] :: double (N)  :: plugin (NM) preference (NM) store (N) 
BASE_VERB:NAME:MachineEventVariableModule void patchTypeEnvironment(): patch (V)  | type (NM) environment (N) 	++ :: machine (NM) event (NM) variable (NM) module (N) 
SPECIAL:NAME:User void setEvents(List<Event> events): set (V)  | events (N) 	++ :: [ list (NM) event (NI) - events (N) ] :: user (N) 
BASE_VERB:NAME:ExceptionBean void possiblyThrowException(): possibly (VI) throw (V)  | exception (N) 	++ :: exception (NM) bean (NI) 
SPECIAL:NAME:WorkflowTemplate Workflow createWorkflow(List datasets): create (V)  | workflow (N) 	++ :: [ list (N) - datasets (N) ] :: workflow (N)  :: workflow (NM) template (N) 
SPECIAL:NAME:CollectionPanel boolean addChapterpoint(String value): add (V)  | chapterpoint (N) 	++ :: [ string (NI) - value (NI) ] :: boolean (N)  :: collection (NM) panel (N) 
SPECIAL:NAME:BoxGroupRights int getEtat(): get (V)  | etat (N) 	++ :: int (N)  :: box (NM) group (NM) rights (N) 
SPECIAL:NAME:Ecrit String getNom(): get (V)  | nom (N) 	++ :: string (NI)  :: ecrit (N) 
SPECIAL:NAME:FileRenameFrame void initText(): init (V)  | text (NI) 	++ :: file (NM) rename (NM) frame (N) 
NOUN_PHRASE:NAME:Bits static float newOrZero2DFloatArray(float faa, int iLength1, int iLength2): get (V) | new (NM) or (NM) zero (PR) 2 (D) D (NM) float (NM) array (N) 	++ :: [ float (N) - faa (N) ] :: [ int (N) - i (NM) length (NM) 1 (N) ] :: [ int (N) - i (NM) length (NM) 2 (N) ] :: bits (N)  :: float (N) 
SPECIAL:NAME:PerformanceVector String getFileDescription(): get (V)  | file (NM) description (NI) 	++ :: string (NI)  :: performance (NM) vector (N) 
SPECIAL:NAME:SubmitThread void loadDocument(): load (V)  | document (NI) 	++ :: submit (NM) thread (N) 
CONSTRUCTOR:NAME:DeleteConflictException DeleteConflictException DeleteConflictException(Throwable cause):  | delete (NM) conflict (NM) exception (N) 	++ :: [ throwable (N) - cause (N) ]
SPECIAL:NAME:DefaultIoFuture IoFuture removeListener(IoFutureListener listener): remove (V)  | EQUIV[listener (N) , [ io (NM) future (NM) listener (N) - listener (N) ]]	++ :: io (NM) future (N)  :: default (NM) io (NM) future (N) 
SPECIAL:NAME:FtsMidiConfig void setInput(int index, String input): set (V)  | input (NI) 	++ :: [ int (N) - index (NI) ] :: [ string (NI) - input (NI) ] :: fts (NM) midi (NM) config (NI) 
CONSTRUCTOR:NAME:Universe Universe Universe():  | universe (N) 	++
NOUN_PHRASE:NAME:SchemaNode List<SchemaNode> schemaList(): get (V) | schema (NM) list (N) 	++ :: schema (NM) node (NI)  :: list (NM) schema (NM) node (NI) 
ED_VERB:CLAS:ContactGroup void addedToGroup(ContactGroup parent): added (V)  | contact (NM) group (N) -- to (P) EQUIV[group (N) , [ contact (NM) group (N) - parent (N) ]]	++
SPECIAL:CLAS:FileConversionPlugin void doImport(): do (VI) import (V)  | file (NM) conversion (NM) plugin (N) 	++
SPECIAL:NAME:EventLog void setEducation(Integer education): set (V)  | education (N) 	++ :: [ integer (N) - education (N) ] :: event (NM) log (N) 
CONSTRUCTOR:NAME:XBeanReader XBeanReader XBeanReader():  | X (NM) bean (NM) reader (N) 	++
ED_VERB:NAME:Tokenizer boolean wasValue(): was (V)  | value (NI) 	++ :: boolean (N)  :: tokenizer (N) 
CONSTRUCTOR:NAME:Eye3D Eye3D Eye3D(double t, double p):  | eye (NM) 3 (NM) D (N) 	++ :: [ double (N) - t (N) ] :: [ double (N) - p (NI) ]
SPECIAL:NAME:ADFConverterConfiguration static Hashtable getPropertyTypeList(): get (V)  | property (NM) type (NM) list (N) 	++ :: hashtable (N)  :: ADF (NM) converter (NM) configuration (NI) 
V_3P_IRR:NAME:NoUnderlyings boolean isSet(UnderlyingSecuritySubType field): is (V)  | set (N) 	++ :: [ underlying (NM) security (NM) sub (NM) type (N) - field (N) ] :: boolean (N)  :: no (DT) underlyings (N) 
SPECIAL:NAME:UserInputPanel boolean readCheckBox(Object field): read (V)  | check (NM) box (N) 	++ :: [ object (NI) - field (N) ] :: boolean (N)  :: user (NM) input (NM) panel (N) 
SPECIAL:CLAS:ApplicationControlModel int compareTo(Object o): compare (V)  | application (NM) control (NM) model (NI) -- to (P) [ object (NI) - o (N) ]	++ :: [ object (NI) - o (N) ] :: int (N) 
SPECIAL:NAME:GroupItem void setBuddies(int buddies): set (V)  | buddies (N) 	++ :: [ int (N) - buddies (N) ] :: group (NM) item (NI) 
SPECIAL:NAME:BlankIcon int getIconWidth(): get (V)  | icon (NM) width (N) 	++ :: int (N)  :: blank (NM) icon (N) 
SPECIAL:NAME:Object getKey(Object listObject): get (V)  | key (NI) 	++ :: [ object (NI) - list (NM) object (NI) ] :: object (NI)  :: ANONYMOUS (N) 
SPECIAL:NAME:AlignViewport int getCharWidth(): get (V)  | char (NM) width (N) 	++ :: int (N)  :: align (NM) viewport (N) 
BASE_VERB:CLAS:RequestParser void uri(): uri (V)  | request (NM) parser (N) 	++
NOUN_PHRASE:NAME:DbManager IScriptAlterTableAddPrimaryKey newScriptAlterTableAddPrimaryKey(): get (V) | new (NM) script (NM) alter (NM) table (NM) add (NM) primary (NM) key (NI) 	++ :: db (NM) manager (N)  :: I (NM) script (NM) alter (NM) table (NM) add (NM) primary (NM) key (NI) 
SPECIAL:NAME:PIN_I07 PIN_I07_GUARANTOR_INSURANCE getGUARANTOR_INSURANCE(): get (V)  | GUARANTOR (NM) INSURANCE (N) 	++ :: PIN (NM) I (NM) 07 (NM) GUARANTOR (NM) INSURANCE (N)  :: PIN (NM) I (NM) 07 (N) 
ENDS_WITH_ED:NAME:void widgetSelected(SelectionEvent event): handle (V) | widget (NM) selected (N) 	++ :: [ selection (NM) event (NI) - event (NI) ] :: ANONYMOUS (N)  :: void (N) 
ENDS_WITH_ED:NAME:VDate void keyReleased(KeyEvent e): handle (V) | key (NM) released (N) 	++ :: [ key (NM) event (NI) - e (N) ] :: V (NM) date (N)  :: void (N) 
BASE_VERB:NAME:testRecorder void changeLife(Player player, int newValue): change (V)  | life (N) 	++ :: [ player (N) - player (N) ] :: [ int (N) - new (NM) value (NI) ] :: test (NM) recorder (N) 
SPECIAL:NAME:Param Collection<String> getAttributeNames(): get (V)  | attribute (NM) names (N) 	++ :: collection (NM) string (NI)  :: param (N) 
ENDS_WITH_ED:NAME:void widgetSelected(SelectionEvent e): handle (V) | widget (NM) selected (N) 	++ :: [ selection (NM) event (NI) - e (N) ] :: ANONYMOUS (N)  :: void (N) 
BASE_VERB:CLAS:MoveTopicButtonView Element button(): button (V)  | move (NM) topic (NM) button (NM) view (NI) 	++ :: element (NI) 
SPECIAL:FORM:TitleParams static void main(String argv): main (V)  | [ string (NI) - argv (N) ]	++ :: title (NM) params (N) 
BASE_VERB:CLAS:LinkDataItem void close(): close (V)  | link (NM) data (NM) item (NI) 	++
BASE_VERB:FORM:XExecInsertExpression JExpression analyse(CExpressionContext context): analyse (V)  | [ C (NM) expression (NM) context (N) - context (N) ]	++ :: X (NM) exec (NM) insert (NM) expression (N)  :: J (NM) expression (N) 
CONSTRUCTOR:NAME:Configuration Configuration Configuration(String name, Configuration other):  | configuration (NI) 	++ :: [ string (NI) - name (NI) ] :: [ configuration (NI) - other (DT) ]
BASE_VERB:FORM:FormletHelper void configure(Object target, Attributes attrs): configure (V)  | [ object (NI) - target (N) ]	++ :: [ attributes (N) - attrs (N) ] :: formlet (NM) helper (N) 
BASE_VERB:FORM:PasswordService String encrypt(String plaintext): encrypt (V)  | [ string (NI) - plaintext (N) ]	++ :: password (NM) service (N)  :: string (NI) 
CONSTRUCTOR:NAME:JenaApiTest JenaApiTest JenaApiTest(String name):  | jena (NM) api (NM) test (N) 	++ :: [ string (NI) - name (NI) ]
SPECIAL:NAME:void enableUI(): enable (VI)  | UI (N) 	++ :: ANONYMOUS (N) 
BASE_VERB:FORM:Factory static MarkerEndAttribute parse(String xmlAsString, XmlOptions options): parse (V)  | [ string (NI) - xml (NM) as (NM) string (NI) ]	++ :: [ xml (NM) options (N) - options (N) ] :: factory (N)  :: marker (NM) end (NM) attribute (N) 
V_3P_IRR:NAME:ShapeElt boolean isSetAllowincell(): is (V)  | set (NM) allowincell (N) 	++ :: boolean (N)  :: shape (NM) elt (NI) 
SPECIAL:NAME:JournalBrowserCellRenderer Component getTreeCellRendererComponent(JTree tree, Object value, boolean selected, boolean expanded, boolean leaf, int row, boolean hasFocus): get (V)  | tree (NM) cell (NM) renderer (NM) component (N) 	++ :: [ J (NM) tree (NI) - tree (NI) ] :: [ object (NI) - value (NI) ] :: [ int (N) - row (N) ] :: [ boolean (N) - selected (N) ] :: [ boolean (N) - expanded (N) ] :: [ boolean (N) - leaf (N) ] :: [ boolean (N) - has (NM) focus (N) ] :: component (N)  :: journal (NM) browser (NM) cell (NM) renderer (N) 
SPECIAL:CLAS:Cron void run(): run (VI)  | cron (N) 	++
V_3P_IRR:NAME:PreferencesForm boolean isAuthorized(RunData data): is (V)  | authorized (N) 	++ :: [ run (NM) data (NI) - data (NI) ] :: boolean (N)  :: preferences (NM) form (N) 
SPECIAL:NAME:RegistryFactory Registry createRegistry(String typeName): create (V)  | registry (N) 	++ :: [ string (NI) - type (NM) name (NI) ] :: registry (N)  :: registry (NM) factory (N) 
EVENT_PARAM:NAME:QHGroupBoxEventHandling void timerEvent(QTimerEvent arg1): handle (V) | timer (NM) event (NI) 	++ :: [ Q (NM) timer (NM) event (NI) - arg (NM) 1 (N) ] :: QH (NM) group (NM) box (NM) event (NM) handling (N)  :: void (N) 
SPECIAL:NAME:Node void setRunnableType(int type): set (V)  | runnable (NM) type (N) 	++ :: [ int (N) - type (N) ] :: node (NI) 
NOUN_PHRASE:NAME:ProxySupplierHelper static String id(): get (V) | id (NI) 	++ :: proxy (NM) supplier (NM) helper (N)  :: string (NI) 
SPECIAL:NAME:Link String getId(): get (V)  | id (NI) 	++ :: string (NI)  :: link (N) 
SPECIAL:NAME:WorkflowDetailEJB void setWorkflowDetailInfo(WorkflowDetailInfo info): set (V)  | workflow (NM) detail (NM) info (NI) 	++ :: [ workflow (NM) detail (NM) info (NI) - info (NI) ] :: workflow (NM) detail (NM) EJB (N) 
SPECIAL:NAME:BasePassivationManager void setRotationRate(int rotationRate): set (V)  | rotation (NM) rate (N) 	++ :: [ int (N) - rotation (NM) rate (N) ] :: base (NM) passivation (NM) manager (N) 
SPECIAL:NAME:RDQLParserTokenManager void ReInitRounds(): re (PRE) init (V)  | rounds (N) 	++ :: RDQL (NM) parser (NM) token (NM) manager (N) 
BASE_VERB:NAME:BoundedSizesExample JComponent buildJumping2Panel(): build (V)  | jumping (NM) 2 (D) panel (N) 	++ :: J (NM) component (N)  :: bounded (NM) sizes (NM) example (N) 
BASE_VERB:NAME:BBDDRespuestas void aniadeRegistro(Vector _vector): aniade (V)  | registro (N) 	++ :: [ vector (N) - vector (N) ] :: BBDD (NM) respuestas (N) 
CONSTRUCTOR:NAME:GeographicBoundingBoxImpl GeographicBoundingBoxImpl GeographicBoundingBoxImpl(double westBoundLongitude, double eastBoundLongitude, double southBoundLatitude, double northBoundLatitude):  | geographic (NM) bounding (NM) box (NM) impl (NI) 	++ :: [ double (N) - west (NM) bound (NM) longitude (N) ] :: [ double (N) - east (NM) bound (NM) longitude (N) ] :: [ double (N) - south (NM) bound (NM) latitude (N) ] :: [ double (N) - north (NM) bound (NM) latitude (N) ]
PREP:NAME:Clone static String toStatus(Presence p): convert (V) | to (P) status (N) 	++ :: [ presence (N) - p (NI) ] :: clone (N)  :: string (NI) 
BASE_VERB:NAME:SaveAction void updateLabels(): update (V)  | labels (N) 	++ :: save (NM) action (N) 
SPECIAL:NAME:XYZSeriesCollectionChartDefinition void setDomainTickFormat(NumberFormat domainTickFormat): set (V)  | domain (NM) tick (NM) format (NI) 	++ :: [ number (NM) format (NI) - domain (NM) tick (NM) format (NI) ] :: XYZ (NM) series (NM) collection (NM) chart (NM) definition (NI) 
BASE_VERB:FORM:StorableCodec S instantiate(RawSupport<S> support): instantiate (V)  | [ raw (NM) support (NM) S (N) - support (N) ]	++ :: storable (NM) codec (N)  :: S (N) 
VOID_NP:NAME:RCX static void backward(int n): handle (V) | backward (N) 	++ :: [ int (N) - n (N) ] :: RCX (N)  :: void (N) 
BASE_VERB:NAME:Browser void updatePhenotypeTable(): update (V)  | phenotype (NM) table (N) 	++ :: browser (N) 
SPECIAL:NAME:GridOutput Icon getIcon(int row, int col): get (V)  | icon (N) 	++ :: [ int (N) - row (N) ] :: [ int (N) - col (N) ] :: icon (N)  :: grid (NM) output (N) 
SPECIAL:NAME:View EventList getSourceList(): get (V)  | source (NM) list (N) 	++ :: event (NM) list (N)  :: view (NI) 
BASE_VERB:CLAS:XBOFormParser void destroy(): destroy (V)  | XBO (NM) form (NM) parser (N) 	++
SPECIAL:NAME:CollectionNode void setCriterion(Criterion criterion): set (V)  | criterion (N) 	++ :: [ criterion (N) - criterion (N) ] :: collection (NM) node (NI) 
SPECIAL:CLAS:XANodePoolImplTest void testPersist(): test (VI) persist (V)  | XA (NM) node (NM) pool (NM) impl (NM) test (N) 	++
BASE_VERB:NAME:ASN1Null int hashCode(): hash (V)  | code (NI) 	++ :: int (N)  :: ASN (NM) 1 (NM) null (N) 
SPECIAL:NAME:StackMenuItem void startSetup(Attributes atts): start (V)  | setup (N) 	++ :: [ attributes (N) - atts (N) ] :: stack (NM) menu (NM) item (NI) 
SPECIAL:NAME:URLFetch void setPOSTData(String newPostData): set (V)  | POST (NM) data (NI) 	++ :: [ string (NI) - new (NM) post (NM) data (NI) ] :: URL (NM) fetch (N) 
SPECIAL:NAME:NestedFtpAddrT void setArray(ftp_addr_tRef a): set (V)  | array (N) 	++ :: [ ftp (NM) addr (NM) t (NM) ref (NI) - a (N) ] :: nested (NM) ftp (NM) addr (NM) T (N) 
SPECIAL:NAME:ControlEditor Control getEditor(): get (V)  | editor (N) 	++ :: control (N)  :: control (NM) editor (N) 
BASE_VERB:NAME:Flow boolean resolveBreaks(JCTree tree, ListBuffer<PendingExit> oldPendingExits): resolve (V)  | breaks (N) 	++ :: [ JC (NM) tree (NI) - tree (NI) ] :: [ list (NM) buffer (NM) pending (NM) exit (N) - old (NM) pending (NM) exits (N) ] :: boolean (N)  :: flow (N) 
SPECIAL:NAME:JndiRealm String getUsernamePattern(): get (V)  | username (NM) pattern (N) 	++ :: string (NI)  :: jndi (NM) realm (N) 
CONSTRUCTOR:NAME:ObjectTagArray ObjectTagArray ObjectTagArray(int length):  | object (NM) tag (NM) array (N) 	++ :: [ int (N) - length (N) ]
BASE_VERB:NAME:WsmlCoreExpressionValidator void visitCompoundMolecule(CompoundMolecule expr): visit (V)  | EQUIV[compound (NM) molecule (N) , [ compound (NM) molecule (N) - expr (NI) ]]	++ :: wsml (NM) core (NM) expression (NM) validator (N) 
SPECIAL:NAME:Command void setArgs(String args): set (V)  | args (N) 	++ :: [ string (NI) - args (N) ] :: command (N) 
V_3PS:NAME:JirrJNI static void IAttributes_setAttribute__SWIG_3(long jarg1, int jarg2, float jarg3): I (PRE) attributes (V)  | EQUIV[set (NM) attribute (NM) SWIG (N) 3 (D) , [ float (N) - jarg (NM) 3 (N) ]]	++ :: [ long (N) - jarg (NM) 1 (N) ] :: [ int (N) - jarg (NM) 2 (N) ] :: jirr (NM) JNI (N) 
CONSTRUCTOR:NAME:RMIComServer RMIComServer RMIComServer():  | RMI (NM) com (NM) server (N) 	++
SPECIAL:NAME:ClassInfo String getName(): get (V)  | name (NI) 	++ :: string (NI)  :: class (NM) info (NI) 
SPECIAL:FORM:MyPrintWriter void write(char ac, int i, int j): write (V)  | [ char (N) - ac (N) ]	++ :: [ int (N) - i (N) ] :: [ int (N) - j (N) ] :: my (PR) print (NM) writer (N) 
SPECIAL:NAME:EndpointReferenceType ServiceNameType addNewServiceName(): add (V)  | new (NM) service (NM) name (NI) 	++ :: service (NM) name (NM) type (N)  :: endpoint (NM) reference (NM) type (N) 
CONSTRUCTOR:NAME:StorageData StorageData StorageData(RoleData roleToSynchWith):  | storage (NM) data (NI) 	++ :: [ role (NM) data (NI) - role (NM) to (NM) synch (NM) with (N) ]
SPECIAL:FORM:Test38 static void main(String args): main (V)  | [ string (NI) - args (N) ]	++ :: test (NM) 38 (N) 
ENDS_WITH_ED:NAME:LabelTypesAction void actionPerformed(ActionEvent e): handle (V) | action (NM) performed (N) 	++ :: [ action (NM) event (NI) - e (N) ] :: label (NM) types (NM) action (N)  :: void (N) 
BASE_VERB:NAME:NonSpanningComparisonDisplay void showTree(NOMElement source_element, NTreeNode tree_node): show (V)  | EQUIV[tree (NI) , [ N (NM) tree (NM) node (NI) - tree (NM) node (NI) ]]	++ :: [ NOM (NM) element (NI) - source (NM) element (NI) ] :: non (NM) spanning (NM) comparison (NM) display (N) 
SPECIAL:NAME:VARIANT void set_lVal(int v): set (V)  | l (NM) val (NI) 	++ :: [ int (N) - v (N) ] :: VARIANT (N) 
SPECIAL:NAME:PlatformAutoDiscoveryForm void setServerTypesLB(ArrayList serverTypesLB): set (V)  | server (NM) types (NM) LB (N) 	++ :: [ array (NM) list (N) - server (NM) types (NM) LB (N) ] :: platform (NM) auto (NM) discovery (NM) form (N) 
BASE_VERB:NAME:SchemaTextFormatter void handleColumnDataTypesStart(): handle (VI)  | column (NM) data (NM) types (NM) start (N) 	++ :: schema (NM) text (NM) formatter (N) 
NOUN_PHRASE:NAME:UpdatableResultSet boolean previous(): get (V) | previous (N) 	++ :: updatable (NM) result (NM) set (N)  :: boolean (N) 
SPECIAL:NAME:ConfigurationData String getJavaHome(): get (V)  | java (NM) home (N) 	++ :: string (NI)  :: configuration (NM) data (NI) 
SPECIAL:NAME:JMenuItem MenuKeyListener getMenuKeyListeners(): get (V)  | menu (NM) key (NM) listeners (N) 	++ :: menu (NM) key (NM) listener (N)  :: J (NM) menu (NM) item (NI) 
ENDS_WITH_ED:NAME:PdfRectangle float left(): handle (V) | left (N) 	++ :: pdf (NM) rectangle (N)  :: float (N) 
BASE_VERB:CLAS:SubtractState Object build(): build (V)  | subtract (NM) state (N) 	++ :: object (NI) 
SPECIAL:NAME:LinkedData String getElement(int elementnum): get (V)  | element (NI) 	++ :: [ int (N) - elementnum (N) ] :: string (NI)  :: linked (NM) data (NI) 
BASE_VERB:FORM:SAXReader void comment(char ch, int start, int length): comment (V)  | [ char (N) - ch (N) ]	++ :: [ int (N) - start (N) ] :: [ int (N) - length (N) ] :: SAX (NM) reader (N) 
CONSTRUCTOR:NAME:HrExpenseLineElement HrExpenseLineElement HrExpenseLineElement():  | hr (NM) expense (NM) line (NM) element (NI) 	++
SPECIAL:NAME:CrontabEntryBean void setId(int id): set (V)  | id (NI) 	++ :: [ int (N) - id (NI) ] :: crontab (NM) entry (NM) bean (NI) 
SPECIAL:NAME:JavadocOptionsManager String createArgumentArray(): create (V)  | argument (NM) array (N) 	++ :: string (NI)  :: javadoc (NM) options (NM) manager (N) 
SPECIAL:CLAS:CommittingCvs12Test void setUp(): set (V) up (VP)  | committing (NM) cvs (NM) 12 (NM) test (N) 	++
CONSTRUCTOR:NAME:BaseHashIterator BaseHashIterator BaseHashIterator():  | base (NM) hash (NM) iterator (N) 	++
SPECIAL:NAME:PanelBeanForm void setBean(Class c): set (V)  | bean (NI) 	++ :: [ class (NI) - c (N) ] :: panel (NM) bean (NM) form (N) 
SPECIAL:NAME:MockService MockOperation getMockOperationByName(String name): get (V)  | mock (NM) operation (N) -- by (P) EQUIV[name (NI) , [ string (NI) - name (NI) ]]	++ :: mock (NM) operation (N)  :: mock (NM) service (N) 
SPECIAL:NAME:SMILESGenerator void findClosureBonds(Molecule mol): find (V)  | closure (NM) bonds (N) 	++ :: [ molecule (N) - mol (N) ] :: SMILES (NM) generator (N) 
SPECIAL:NAME:ResourceTypeImpl void setHyperlink(String value): set (V)  | hyperlink (N) 	++ :: [ string (NI) - value (NI) ] :: resource (NM) type (NM) impl (NI) 
SPECIAL:NAME:DelegatedDateTimeField DurationField getRangeDurationField(): get (V)  | range (NM) duration (NM) field (N) 	++ :: duration (NM) field (N)  :: delegated (NM) date (NM) time (NM) field (N) 
SPECIAL:NAME:PropertiesLoaderSupport void setLocation(Resource location): set (V)  | location (NI) 	++ :: [ resource (N) - location (NI) ] :: properties (NM) loader (NM) support (N) 
CONSTRUCTOR:NAME:TilePalettePanel TilePalettePanel TilePalettePanel(MapEditor mapEditor, TileSet set):  | tile (NM) palette (NM) panel (N) 	++ :: [ map (NM) editor (N) - map (NM) editor (N) ] :: [ tile (NM) set (N) - set (N) ]
BASE_VERB:FORM:ConstExpr Typeable simplify(HasClModule mod, boolean isArg): simplify (V)  | [ has (NM) cl (NM) module (N) - mod (N) ]	++ :: const (NM) expr (NI)  :: [ boolean (N) - is (NM) arg (N) ] :: typeable (N) 
SPECIAL:NAME:Sequence void setColorist(String sColorist): set (V)  | colorist (N) 	++ :: [ string (NI) - s (NM) colorist (N) ] :: sequence (N) 
CONSTRUCTOR:NAME:Bits Bits Bits(byte b):  | bits (N) 	++ :: [ byte (N) - b (N) ]
ENDS_WITH_ED:NAME:TrainingViewLocations void actionPerformed(ActionEvent e): handle (V) | action (NM) performed (N) 	++ :: [ action (NM) event (NI) - e (N) ] :: training (NM) view (NM) locations (N)  :: void (N) 
SPECIAL:NAME:PiceaAbies void setHBon100(Length length): set (V)  | H (NM) bon (N) 100 (D) 	++ :: [ length (N) - length (N) ] :: picea (NM) abies (N) 
SPECIAL:CLAS:WithdrawDisposeWindow void init(): init (V)  | withdraw (NM) dispose (NM) window (N) 	++
SPECIAL:NAME:OptionProcessor Vector getInvalidOptions(): get (V)  | invalid (NM) options (N) 	++ :: vector (N)  :: option (NM) processor (N) 
SPECIAL:FORM:sendrecv_rep static void main(String args): main (V)  | [ string (NI) - args (N) ]	++ :: sendrecv (NM) rep (N) 
SPECIAL:NAME:TheTubeConnection void removeRecording(Program prg): remove (V)  | recording (N) 	++ :: [ program (N) - prg (N) ] :: the (DT) tube (NM) connection (N) 
SPECIAL:NAME:AbstractEditorPage void setFocus(): set (V)  | focus (N) 	++ :: abstract (NM) editor (NM) page (N) 
ENDS_WITH_ED:NAME:AddFileTypesTab void tabSelected(): handle (V) | tab (NM) selected (N) 	++ :: add (NM) file (NM) types (NM) tab (N)  :: void (N) 
SPECIAL:NAME:EnumObjectsTask String getCommand(): get (V)  | command (N) 	++ :: string (NI)  :: enum (NM) objects (NM) task (N) 
SPECIAL:NAME:Test12JTextComponent Color getJtcDisabledTextColor(): get (V)  | jtc (NM) disabled (NM) text (NM) color (N) 	++ :: color (N)  :: test (NM) 12 (NM) J (NM) text (NM) component (N) 
CONSTRUCTOR:NAME:ProductFare ProductFare ProductFare():  | product (NM) fare (N) 	++
SPECIAL:CLAS:VMXState Return executeInFrame(Executable e, int staticLink, int jfp): execute (VI)  | VMX (NM) state (N) -- in (P) frame (N) 	++ :: [ executable (N) - e (N) ] :: [ int (N) - static (NM) link (N) ] :: [ int (N) - jfp (N) ] :: return (N) 
SPECIAL:NAME:TargetFileImpl UnmarshallingEventHandler createUnmarshaller(UnmarshallingContext context): create (V)  | unmarshaller (N) 	++ :: [ unmarshalling (NM) context (N) - context (N) ] :: unmarshalling (NM) event (NM) handler (N)  :: target (NM) file (NM) impl (NI) 
BASE_VERB:NAME:DataTransferer Object concatData(Object obj1, Object obj2): concat (V)  | data (NI) 	++ :: [ object (NI) - obj (NM) 1 (N) ] :: [ object (NI) - obj (NM) 2 (N) ] :: object (NI)  :: data (NM) transferer (N) 
CONSTRUCTOR:NAME:ExecutableGraphViewer ExecutableGraphViewer ExecutableGraphViewer(String name, File pathToExecutable, String argument, String preferredFormat):  | executable (NM) graph (NM) viewer (N) 	++ :: [ string (NI) - name (NI) ] :: [ file (NI) - path (NM) to (NM) executable (N) ] :: [ string (NI) - argument (N) ] :: [ string (NI) - preferred (NM) format (NI) ]
BASE_VERB:NAME:HtmlParser void parseChildWidgets(HtmlContainerWidget objContainerWidget, Element objParentElement): parse (V)  | child (NM) widgets (N) 	++ :: [ html (NM) container (NM) widget (N) - obj (NM) container (NM) widget (N) ] :: [ element (NI) - obj (NM) parent (NM) element (NI) ] :: html (NM) parser (N) 
SPECIAL:NAME:BufferedImage Object getProperty(String string, ImageObserver imageobserver): get (V)  | property (N) 	++ :: [ string (NI) - string (NI) ] :: [ image (NM) observer (N) - imageobserver (N) ] :: object (NI)  :: buffered (NM) image (N) 
SPECIAL:NAME:Properties void setGuileLinkage(String value): set (V)  | guile (NM) linkage (N) 	++ :: [ string (NI) - value (NI) ] :: properties (N) 
SPECIAL:NAME:Component String getInteractorAc(): get (V)  | interactor (NM) ac (N) 	++ :: string (NI)  :: component (N) 
BASE_VERB:NAME:FileType void insertMd5(int i, String md5): insert (V)  | EQUIV[md (N) 5 (D) , [ string (NI) - md (NM) 5 (N) ]]	++ :: [ int (N) - i (N) ] :: file (NM) type (N) 
SPECIAL:NAME:FxOptionPremium Reference getPayerPartyReference(): get (V)  | payer (NM) party (NM) reference (NI) 	++ :: reference (NI)  :: fx (NM) option (NM) premium (N) 
CONSTRUCTOR:NAME:OpenBookmarkInNewPageAction OpenBookmarkInNewPageAction OpenBookmarkInNewPageAction():  | open (NM) bookmark (NM) in (NM) new (NM) page (NM) action (N) 	++
V_3P_IRR:NAME:boolean isParseable(String value): is (V)  | parseable (N) 	++ :: [ string (NI) - value (NI) ] :: boolean (N)  :: ANONYMOUS (N) 
BASE_VERB:NAME:BinConverter static int longLo32(long lVal): long (V)  | lo (N) 32 (D) 	++ :: [ long (N) - l (NM) val (NI) ] :: int (N)  :: bin (NM) converter (N) 
BASE_VERB:NAME:PdfDefinitionType void clearPdf(): clear (V)  | pdf (N) 	++ :: pdf (NM) definition (NM) type (N) 
CONSTRUCTOR:NAME:SQLForeignKeyVO SQLForeignKeyVO SQLForeignKeyVO():  | SQL (NM) foreign (NM) key (NM) VO (NI) 	++
SPECIAL:NAME:Additive String getDeleteStatement(): get (V)  | delete (NM) statement (NI) 	++ :: string (NI)  :: additive (N) 
NOUN_PHRASE:NAME:Object next(): get (V) | next (DT) 	++ :: ANONYMOUS (N)  :: object (NI) 
SPECIAL:NAME:OpenInterfaceIF_invokeEvent_RequestStruct void setString_2(String string_2): set (V)  | string (NI) 2 (D) 	++ :: [ string (NI) - string (NM) 2 (N) ] :: open (NM) interface (NM) IF (NM) invoke (NM) event (NM) request (NM) struct (N) 
SPECIAL:NAME:ApplicationHttpResponse String getInfo(): get (V)  | info (NI) 	++ :: string (NI)  :: application (NM) http (NM) response (N) 
V_3P_IRR:NAME:ReadCSV boolean isUsingSubCommand(): is (V)  | using (NM) sub (NM) command (N) 	++ :: boolean (N)  :: read (NM) CSV (N) 
SPECIAL:NAME:LocalDevice static String getProperty(String property): get (V)  | EQUIV[property (N) , [ string (NI) - property (N) ]]	++ :: string (NI)  :: local (NM) device (N) 
BASE_VERB:NAME:UnificationEnv UResult unifyVariableSignature(VariableSignature vSig, Signature sigB): unify (V)  | EQUIV[variable (NM) signature (N) , [ variable (NM) signature (N) - v (NM) sig (N) ], [ signature (N) - sig (NM) B (N) ]]	++ :: U (NM) result (N)  :: unification (NM) env (N) 
SPECIAL:NAME:SQLService static Object getSingleRowNoException(Connection a_Connection, String aS_SQL): get (V)  | single (NM) row (NM) no (DT) exception (N) 	++ :: [ connection (N) - a (NM) connection (N) ] :: [ string (NI) - a (NM) S (NM) SQL (N) ] :: object (NI)  :: SQL (NM) service (N) 
SPECIAL:NAME:WaveSideView void setStroke(Stroke stroke): set (V)  | stroke (N) 	++ :: [ stroke (N) - stroke (N) ] :: wave (NM) side (NM) view (NI) 
BASE_VERB:FORM:Factory static SmartTagTypeDocument parse(Reader r, XmlOptions options): parse (V)  | [ reader (N) - r (N) ]	++ :: [ xml (NM) options (N) - options (N) ] :: factory (N)  :: smart (NM) tag (NM) type (NM) document (NI) 
ENDS_WITH_ED:NAME:DirectionPanel void actionPerformed(ActionEvent e): handle (V) | action (NM) performed (N) 	++ :: [ action (NM) event (NI) - e (N) ] :: direction (NM) panel (N)  :: void (N) 
CONSTRUCTOR:NAME:ChessMove ChessMove ChessMove(ChessPiece piece, Square destination):  | chess (NM) move (N) 	++ :: [ chess (NM) piece (N) - piece (N) ] :: [ square (N) - destination (N) ]
SPECIAL:NAME:SelectorContext String getNameInNamespace(): get (V)  | name (NI) -- in (P) namespace (N) 	++ :: string (NI)  :: selector (NM) context (N) 
BASE_VERB:CLAS:HTTPDialog void ok(): ok (V)  | HTTP (NM) dialog (N) 	++
BASE_VERB:CLAS:Join Runner prepareForAbort(Runner runners): prepare (V)  | join (N) -- for (P) abort (N) 	++ :: [ runner (N) - runners (N) ] :: runner (N) 
SPECIAL:NAME:Visual int getGreenMask(): get (V)  | green (NM) mask (N) 	++ :: int (N)  :: visual (N) 
SPECIAL:NAME:AbstractMyEntityFBIDefDisabled void setField3(String field3): set (V)  | field (N) 3 (D) 	++ :: [ string (NI) - field (NM) 3 (N) ] :: abstract (NM) my (PR) entity (NM) FBI (NM) def (NM) disabled (N) 
SPECIAL:NAME:AccountBuilder void setWotCharacterClass(String data): set (V)  | wot (NM) character (NM) class (NI) 	++ :: [ string (NI) - data (NI) ] :: account (NM) builder (N) 
SPECIAL:NAME:ProcessStateImpl void readProcessData(XmlElement xmlElement, CreationContext creationContext): read (V)  | process (NM) data (NI) 	++ :: [ xml (NM) element (NI) - xml (NM) element (NI) ] :: [ creation (NM) context (N) - creation (NM) context (N) ] :: process (NM) state (NM) impl (NI) 
SPECIAL:NAME:String void getBytes(int srcBegin, int srcEnd, byte dst, int dstBegin): get (V)  | bytes (NI) 	++ :: [ int (N) - src (NM) begin (N) ] :: [ int (N) - src (NM) end (N) ] :: [ byte (N) - dst (N) ] :: [ int (N) - dst (NM) begin (N) ] :: string (NI) 
SPECIAL:FORM:CombinedXYPlotDemo2 static void main(String args): main (V)  | [ string (NI) - args (N) ]	++ :: combined (NM) XY (NM) plot (NM) demo (NM) 2 (N) 
SPECIAL:NAME:XMLInputFactoryImpl XMLStreamReader createXMLStreamReader(String systemId, Reader reader): create (V)  | EQUIV[XML (NM) stream (NM) reader (N) , [ reader (N) - reader (N) ]]	++ :: [ string (NI) - system (NM) id (NI) ] :: XML (NM) stream (NM) reader (N)  :: XML (NM) input (NM) factory (NM) impl (NI) 
CONSTRUCTOR:NAME:DoubleECD DoubleECD DoubleECD(String name, double min, double max, boolean minInclusive, boolean maxInclusive):  | double (NM) ECD (N) 	++ :: [ string (NI) - name (NI) ] :: [ double (N) - min (N) ] :: [ double (N) - max (N) ] :: [ boolean (N) - min (NM) inclusive (N) ] :: [ boolean (N) - max (NM) inclusive (N) ]
SPECIAL:NAME:PriceIndex Rational getMonthlyValue(Date aDate): get (V)  | monthly (NM) value (NI) 	++ :: [ date (N) - a (NM) date (N) ] :: rational (N)  :: price (NM) index (NI) 
SPECIAL:NAME:PendingBuffer void writeInt(int s): write (V)  | EQUIV[int (N) , [ int (N) - s (N) ]]	++ :: pending (NM) buffer (NI) 
CONSTRUCTOR:NAME:NotFound NotFound NotFound():  | not (DT) found (N) 	++
EMPTY:NONE:BentoParser boolean jj_3R_324():  | jj (PRE) 3 (D) R (PRE) 324 (D) 
SPECIAL:NAME:KeyBehavior void printStat(): print (V)  | stat (N) 	++ :: key (NM) behavior (N) 
BASE_VERB:FORM:SystemFlag boolean match(SystemFlag other): match (V)  | [ system (NM) flag (N) - other (DT) ]	++ :: system (NM) flag (N)  :: boolean (N) 
BASE_VERB:CLAS:BorderConverter Border stringToBorder(String b, int thickness, Color color): string (V)  | border (NM) converter (N) -- to (P) border (N) 	++ :: [ string (NI) - b (N) ] :: [ int (N) - thickness (N) ] :: [ color (N) - color (N) ] :: border (N) 
SPECIAL:NAME:ConsoleControllerTest void testBasicConsoleInput(): test (VI)  | basic (NM) console (NM) input (NI) 	++ :: console (NM) controller (NM) test (N) 
V_3PS:NAME:MultiOptionPaneUI boolean containsCustomComponents(JOptionPane pane): contains (V)  | custom (NM) components (N) 	++ :: [ J (NM) option (NM) pane (N) - pane (N) ] :: boolean (N)  :: multi (NM) option (NM) pane (NM) UI (N) 
SPECIAL:NAME:TestClone void doCall(): do (VI)  | call (N) 	++ :: test (NM) clone (N) 
BASE_VERB:FORM:DefaultLogger void warn(String txt, Throwable e): warn (V)  | [ string (NI) - txt (N) ]	++ :: [ throwable (N) - e (N) ] :: default (NM) logger (N) 
BASE_VERB:NAME:EdicionIconosGUI void adeStringIcono(IconoEditable i): ade (V)  | string (NM) icono (N) 	++ :: [ icono (NM) editable (N) - i (N) ] :: edicion (NM) iconos (NM) GUI (N) 
CONSTRUCTOR:NAME:DTMNamedNodeMap DTMNamedNodeMap DTMNamedNodeMap(DTM dtm, int element):  | DTM (NM) named (NM) node (NM) map (N) 	++ :: [ DTM (N) - dtm (N) ] :: [ int (N) - element (NI) ]
BASE_VERB:NAME:RhinoAssert void jsFunction_equal(String xpath1, String xpath2): js (PRE) function (V)  | equal (N) 	++ :: [ string (NI) - xpath (NM) 1 (N) ] :: [ string (NI) - xpath (NM) 2 (N) ] :: rhino (NM) assert (N) 
BASE_VERB:FORM:Service static String string(int type): string (V)  | [ int (N) - type (N) ]	++ :: service (N)  :: string (NI) 
V_MODAL:FORM:Tuple boolean canGet(String field, Class type): can (VI) get (V)  | [ string (NI) - field (N) ]	++ :: [ class (NI) - type (N) ] :: tuple (N)  :: boolean (N) 
SPECIAL:NAME:AddressBeanInfo void setCountryVisible(boolean visible): set (V)  | country (NM) visible (N) 	++ :: [ boolean (N) - visible (N) ] :: address (NM) bean (NM) info (NI) 
NOUN_PHRASE:NAME:NavigationControl String name(): get (V) | name (NI) 	++ :: navigation (NM) control (N)  :: string (NI) 
SPECIAL:NAME:ErlTextHover static String getHoverTextForOffset(int offset, ErlangEditor editor): get (V)  | hover (NM) text (NI) -- for (P) EQUIV[offset (N) , [ int (N) - offset (N) ]]	++ :: [ erlang (NM) editor (N) - editor (N) ] :: string (NI)  :: erl (NM) text (NM) hover (N) 
SPECIAL:NAME:OutlineFont String getEncoding(): get (V)  | encoding (N) 	++ :: string (NI)  :: outline (NM) font (N) 
SPECIAL:NAME:SDLJoyBallEvent int getXRelative(): get (V)  | X (NM) relative (N) 	++ :: int (N)  :: SDL (NM) joy (NM) ball (NM) event (NI) 
BASE_VERB:NAME:DepthFirstAdapter void outABagCollectionTypeIdentifierCs(ABagCollectionTypeIdentifierCs node): out (V)  | EQUIV[A (NM) bag (NM) collection (NM) type (NM) identifier (NM) cs (N) , [ A (NM) bag (NM) collection (NM) type (NM) identifier (NM) cs (N) - node (NI) ]]	++ :: depth (NM) first (NM) adapter (NI) 
SPECIAL:NAME:AidaResource String getAvailableLanguages(): get (V)  | available (NM) languages (N) 	++ :: string (NI)  :: aida (NM) resource (N) 
PREP:NAME:TableListener void onCellSelection(int rowx, int column): handle (V) | on (NM) cell (NM) selection (N) 	++ :: [ int (N) - rowx (N) ] :: [ int (N) - column (N) ] :: table (NM) listener (N)  :: void (N) 
BASE_VERB:NAME:VoltageSwitch T defaultCase(EObject object): default (V)  | case (N) 	++ :: [ E (NM) object (NI) - object (NI) ] :: T (N)  :: voltage (NM) switch (N) 
SPECIAL:NAME:SSHClientConfig String getExitString(): get (V)  | exit (NM) string (NI) 	++ :: string (NI)  :: SSH (NM) client (NM) config (NI) 
V_3P_IRR:NAME:ShapetypeElt boolean isSetStroked(): is (V)  | set (NM) stroked (N) 	++ :: boolean (N)  :: shapetype (NM) elt (NI) 
SPECIAL:NAME:ValueMap String getStringArray(String key): get (V)  | string (NM) array (N) 	++ :: [ string (NI) - key (NI) ] :: string (NI)  :: value (NM) map (N) 
BASE_VERB:FORM:ChannelTopicMessage void parse(QuotedStringTokenizer t): parse (V)  | [ quoted (NM) string (NM) tokenizer (N) - t (N) ]	++ :: channel (NM) topic (NM) message (NI) 
ENDS_WITH_ED:NAME:PaintPanel void mouseReleased(MouseEvent mouseEvent): handle (V) | mouse (NM) released (N) 	++ :: [ mouse (NM) event (NI) - mouse (NM) event (NI) ] :: paint (NM) panel (N)  :: void (N) 
NOUN_PHRASE:NAME:ConfigOption InvalidOptionValueException invalidOption(String msg): get (V) | invalid (NM) option (N) 	++ :: [ string (NI) - msg (NI) ] :: config (NM) option (N)  :: invalid (NM) option (NM) value (NM) exception (N) 
SPECIAL:NAME:GlobalConfiguration boolean getEnableKeyRecovery(): get (V)  | enable (NM) key (NM) recovery (N) 	++ :: boolean (N)  :: global (NM) configuration (NI) 
ENDS_WITH_ED:NAME:TestDetailViewer void valueChanged(ListSelectionEvent e): handle (V) | value (NM) changed (N) 	++ :: [ list (NM) selection (NM) event (NI) - e (N) ] :: test (NM) detail (NM) viewer (N)  :: void (N) 
CONSTRUCTOR:NAME:ExternalizedImcmsAuthenticatorAndUserRegistry ExternalizedImcmsAuthenticatorAndUserRegistry ExternalizedImcmsAuthenticatorAndUserRegistry(ImcmsAuthenticatorAndUserAndRoleMapper imcmsAndRole, Authenticator externalAuthenticator, UserAndRoleRegistry externalUserRegistry, String defaultLanguage):  | externalized (NM) imcms (NM) authenticator (NM) and (NM) user (NM) registry (N) 	++ :: [ imcms (NM) authenticator (NM) and (NM) user (NM) and (NM) role (NM) mapper (N) - imcms (NM) and (NM) role (N) ] :: [ authenticator (N) - external (NM) authenticator (N) ] :: [ user (NM) and (NM) role (NM) registry (N) - external (NM) user (NM) registry (N) ] :: [ string (NI) - default (NM) language (N) ]
BASE_VERB:NAME:FormatFieldWidget void insertText(String text): insert (V)  | EQUIV[text (NI) , [ string (NI) - text (NI) ]]	++ :: format (NM) field (NM) widget (N) 
SPECIAL:FORM:NoNested3PartySubIDs void set(Nested3PartySubIDType value): set (V)  | [ nested (NM) 3 (NM) party (NM) sub (NM) ID (NM) type (N) - value (NI) ]	++ :: no (DT) nested (NM) 3 (NM) party (NM) sub (NM) I (NM) ds (N) 
SPECIAL:NAME:JLabel String getUIClassID(): get (V)  | UI (NM) class (NM) ID (NI) 	++ :: string (NI)  :: J (NM) label (NI) 
BASE_VERB:NAME:ParameterizedServlet String parseRequiredStringParameter(HttpServletRequest request, String paramName): parse (V)  | required (NM) string (NM) parameter (N) 	++ :: [ http (NM) servlet (NM) request (N) - request (N) ] :: [ string (NI) - param (NM) name (NI) ] :: string (NI)  :: parameterized (NM) servlet (N) 
SPECIAL:NAME:HLAPlatformController int getObjectHandle(): get (V)  | object (NM) handle (NI) 	++ :: int (N)  :: HLA (NM) platform (NM) controller (N) 
BASE_VERB:FORM:GLX boolean support(int major, int minor): support (V)  | [ int (N) - major (N) ]	++ :: [ int (N) - minor (N) ] :: GLX (N)  :: boolean (N) 
CONSTRUCTOR:NAME:JavaFilter JavaFilter JavaFilter(FilterItem item, ReaderSource source):  | java (NM) filter (N) 	++ :: [ filter (NM) item (NI) - item (NI) ] :: [ reader (NM) source (NI) - source (NI) ]
CONSTRUCTOR:NAME:ShadowTextureCameraList ShadowTextureCameraList ShadowTextureCameraList(InstancePointer p, boolean remote):  | shadow (NM) texture (NM) camera (NM) list (N) 	++ :: [ instance (NM) pointer (N) - p (NI) ] :: [ boolean (N) - remote (N) ]
SPECIAL:NAME:WptType void setSat(int value): set (V)  | sat (N) 	++ :: [ int (N) - value (NI) ] :: wpt (NM) type (N) 
SPECIAL:NAME:Activity String getResourceUsername(): get (V)  | resource (NM) username (N) 	++ :: string (NI)  :: activity (N) 
PREP:NAME:NolliConvert void beforeRows(ResultSet rs): handle (V) | before (NM) rows (N) 	++ :: [ result (NM) set (N) - rs (N) ] :: nolli (NM) convert (N)  :: void (N) 
NOUN_PHRASE:NAME:SwitchCandleOhlcAction boolean asynchronous(): get (V) | asynchronous (N) 	++ :: switch (NM) candle (NM) ohlc (NM) action (N)  :: boolean (N) 
CONSTRUCTOR:NAME:PGPSecretKeyRingCollection PGPSecretKeyRingCollection PGPSecretKeyRingCollection(byte encoding):  | PGP (NM) secret (NM) key (NM) ring (NM) collection (N) 	++ :: [ byte (N) - encoding (N) ]
SPECIAL:NAME:LayoutSetLocalService LayoutSet getLayoutSet(long groupId, boolean privateLayout): get (V)  | layout (NM) set (N) 	++ :: [ long (N) - group (NM) id (NI) ] :: [ boolean (N) - private (NM) layout (N) ] :: layout (NM) set (N)  :: layout (NM) set (NM) local (NM) service (N) 
SPECIAL:NAME:IntervalCategoryDataset Number getStartValue(int series, Object category): get (V)  | start (NM) value (NI) 	++ :: [ int (N) - series (N) ] :: [ object (NI) - category (N) ] :: number (NI)  :: interval (NM) category (NM) dataset (N) 
SPECIAL:NAME:AbbreviatedDerivation IModelGroup getModelGroup(): get (V)  | model (NM) group (N) 	++ :: I (NM) model (NM) group (N)  :: abbreviated (NM) derivation (N) 
SPECIAL:NAME:BingoCard void setBackgroundColour(Component parent, Color colour): set (V)  | background (NM) colour (N) 	++ :: [ component (N) - parent (N) ] :: [ color (N) - colour (N) ] :: bingo (NM) card (N) 
SPECIAL:NAME:NNNode int getPositionY(): get (V)  | position (NM) Y (N) 	++ :: int (N)  :: NN (NM) node (NI) 
CONSTRUCTOR:NAME:CountID CountID CountID(ErrorID id):  | count (NM) ID (NI) 	++ :: [ error (NM) ID (NI) - id (NI) ]
BASE_VERB:FORM:SFVec2f void sub(float value): sub (V)  | [ float (N) - value (NI) ]	++ :: SF (NM) vec (NM) 2 (NM) f (N) 
SPECIAL:NAME:Protocol ProtocolState getState(String state_id): get (V)  | EQUIV[state (N) , [ string (NI) - state (NM) id (NI) ]]	++ :: protocol (NM) state (N)  :: protocol (N) 
CONSTRUCTOR:NAME:DefinitionsDocument DefinitionsDocument DefinitionsDocument(GlobalEventNotifier notifier):  | definitions (NM) document (NI) 	++ :: [ global (NM) event (NM) notifier (N) - notifier (N) ]
SPECIAL:NAME:TextEntryTag String getErrorStyleClass(): get (V)  | error (NM) style (NM) class (NI) 	++ :: string (NI)  :: text (NM) entry (NM) tag (NI) 
SPECIAL:FORM:FlowFigure void add(IFigure child, Object constraint, int index): add (V)  | [ I (NM) figure (N) - child (N) ]	++ :: [ object (NI) - constraint (N) ] :: [ int (N) - index (NI) ] :: flow (NM) figure (N) 
SPECIAL:NAME:InstanceGeneratorBase static void writeEnumintConsts(PrintStream out, FieldTagEnumint ftes): write (V)  | enumint (NM) consts (N) 	++ :: [ print (NM) stream (NI) - out (N) ] :: [ field (NM) tag (NM) enumint (N) - ftes (N) ] :: instance (NM) generator (NM) base (N) 
BASE_VERB:FORM:boolean visit(FieldDeclaration node): visit (V)  | [ field (NM) declaration (NI) - node (NI) ]	++ :: ANONYMOUS (N)  :: boolean (N) 
SPECIAL:NAME:FailureTest void testUnsubscribeNullEBusId(): test (VI) unsubscribe (V)  | null (NM) E (NM) bus (NM) id (NI) 	++ :: failure (NM) test (N) 
SPECIAL:NAME:EppResponseDataTransfer String getTransferStatus(): get (V)  | transfer (NM) status (N) 	++ :: string (NI)  :: epp (NM) response (NM) data (NM) transfer (N) 
CONSTRUCTOR:NAME:LineToolbar LineToolbar LineToolbar():  | line (NM) toolbar (N) 	++
SPECIAL:NAME:String getName(): get (V)  | name (NI) 	++ :: string (NI)  :: ANONYMOUS (N) 
SPECIAL:NAME:IPerson String getMiddlename(): get (V)  | middlename (N) 	++ :: string (NI)  :: I (NM) person (N) 
ENDS_WITH_ED:NAME:CreateUpdateAccountPanel void okPressed(): handle (V) | ok (PRE) pressed (N) 	++ :: create (NM) update (NM) account (NM) panel (N)  :: void (N) 
BASE_VERB:FORM:MathTools static float sign(float a, double b): sign (V)  | [ float (N) - a (N) ]	++ :: [ double (N) - b (N) ] :: math (NM) tools (N)  :: float (N) 
BASE_VERB:NAME:SwingTest void dumpInfo(): dump (V)  | info (NI) 	++ :: swing (NM) test (N) 
SPECIAL:FORM:sfvec3f void add(sfvec3d other): add (V)  | [ sfvec (NM) 3 (NM) d (N) - other (DT) ]	++ :: sfvec (NM) 3 (NM) f (N) 
SPECIAL:NAME:X_C_Task void setName(String Name): set (V)  | name (NI) 	++ :: [ string (NI) - name (NI) ] :: X (NM) C (NM) task (N) 
SPECIAL:NAME:HosDialog void setControl(HosControl hc, UpdateStatus us): set (V)  | control (N) 	++ :: [ hos (NM) control (N) - hc (N) ] :: [ update (NM) status (N) - us (PR) ] :: hos (NM) dialog (N) 
SPECIAL:NAME:LuceneMethods Hits initSearch(String queryString): init (V)  | search (N) 	++ :: [ string (NI) - query (NM) string (NI) ] :: hits (N)  :: lucene (NM) methods (N) 
ENDS_WITH_ED:NAME:AcqFormInternalFrame void jButtonDelActionPerformed(ActionEvent evt): handle (V) | j (PRE) button (NM) del (NM) action (NM) performed (N) 	++ :: [ action (NM) event (NI) - evt (N) ] :: acq (NM) form (NM) internal (NM) frame (N)  :: void (N) 
V_3P_IRR:NAME:DoubleDV boolean isIdentical(Object value1, Object value2): is (V)  | identical (N) 	++ :: [ object (NI) - value (NM) 1 (N) ] :: [ object (NI) - value (NM) 2 (N) ] :: boolean (N)  :: double (NM) DV (N) 
CONSTRUCTOR:NAME:AlbumAlbumImageSizesBean AlbumAlbumImageSizesBean AlbumAlbumImageSizesBean(ArrayList objectListBean, int userHostId):  | album (NM) album (NM) image (NM) sizes (NM) bean (NI) 	++ :: [ array (NM) list (N) - object (NM) list (NM) bean (NI) ] :: [ int (N) - user (NM) host (NM) id (NI) ]
CONSTRUCTOR:NAME:Memory Memory Memory(int size, int address):  | memory (N) 	++ :: [ int (N) - size (N) ] :: [ int (N) - address (NI) ]
SPECIAL:NAME:VersantPersistenceManagerImp PCStateMan getStateManagerById(Object oid): get (V)  | state (NM) manager (N) -- by (P) id (NI) 	++ :: [ object (NI) - oid (N) ] :: PC (NM) state (NM) man (N)  :: versant (NM) persistence (NM) manager (NM) imp (N) 
CONSTRUCTOR:NAME:Literal Literal Literal(Object value, Field field, LitTable litTable):  | literal (N) 	++ :: [ object (NI) - value (NI) ] :: [ field (N) - field (N) ] :: [ lit (NM) table (N) - lit (NM) table (N) ]
SPECIAL:NAME:Graph boolean addTransition(Object nodeKey, Object targetNodeKey, Object transitionData): add (V)  | EQUIV[transition (N) , [ object (NI) - transition (NM) data (NI) ]]	++ :: [ object (NI) - node (NM) key (NI) ] :: [ object (NI) - target (NM) node (NM) key (NI) ] :: boolean (N)  :: graph (N) 
V_3P_IRR:NAME:CliOptionsValuesImpl boolean isOptionExist(CliOption option): is (V)  | option (NM) exist (N) 	++ :: [ cli (NM) option (N) - option (N) ] :: boolean (N)  :: cli (NM) options (NM) values (NM) impl (NI) 
SPECIAL:NAME:SymkeysHistoryBean void setSymkeynsid(Long symkeynsid): set (V)  | symkeynsid (N) 	++ :: [ long (N) - symkeynsid (N) ] :: symkeys (NM) history (NM) bean (NI) 
SPECIAL:NAME:AlbumDescriptor String getXMLName(): get (V)  | XML (NM) name (NI) 	++ :: string (NI)  :: album (NM) descriptor (NI) 
BASE_VERB:NAME:Unmarshaller void eatText2(String value): eat (V)  | text (NI) 2 (D) 	++ :: [ string (NI) - value (NI) ] :: unmarshaller (N) 
SPECIAL:NAME:DomainTriggerMgmtForm String getDomain(): get (V)  | domain (N) 	++ :: string (NI)  :: domain (NM) trigger (NM) mgmt (NM) form (N) 
CONSTRUCTOR:NAME:AboutResources AboutResources AboutResources():  | about (NM) resources (N) 	++
SPECIAL:NAME:WorkflowEngineEJB void doTerminateLocal(ExtApplication appl, Activity act): do (VI) terminate (V)  | local (N) 	++ :: [ ext (NM) application (N) - appl (N) ] :: [ activity (N) - act (N) ] :: workflow (NM) engine (NM) EJB (N) 
V_3PS:FORM:Charset boolean equals(Object ob): equals (V)  | [ object (NI) - ob (N) ]	++ :: charset (N)  :: boolean (N) 
SPECIAL:NAME:EventChannel void removeListener(EventListener listener): remove (V)  | EQUIV[listener (N) , [ event (NM) listener (N) - listener (N) ]]	++ :: event (NM) channel (N) 
SPECIAL:NAME:Interface int getNumOperations(): get (V)  | num (NM) operations (N) 	++ :: int (N)  :: interface (NI) 
SPECIAL:NAME:CIM_SystemSetting String get_SettingID(): get (V)  | setting (NM) ID (NI) 	++ :: string (NI)  :: CIM (NM) system (NM) setting (N) 
SPECIAL:NAME:TypeType String getName(): get (V)  | name (NI) 	++ :: string (NI)  :: type (NM) type (N) 
CONSTRUCTOR:NAME:ClassMetaDataValidationRuntimeException ClassMetaDataValidationRuntimeException ClassMetaDataValidationRuntimeException(String msg):  | class (NM) meta (NM) data (NM) validation (NM) runtime (NM) exception (N) 	++ :: [ string (NI) - msg (NI) ]
NOUN_PHRASE:NAME:JirrJNI static long new_SMD3QuaterionTag__SWIG_0(): get (V) | new (NM) SMD (NM) 3 (D) quaterion (NM) tag (NM) SWIG (N) 0 (D) 	++ :: jirr (NM) JNI (N)  :: long (N) 
PREP:NAME:LDAPCertStoreParameters String toString(): convert (V) | to (P) string (NI) 	++ :: LDAP (NM) cert (NM) store (NM) parameters (N)  :: string (NI) 
SPECIAL:NAME:BaseClass void setSkipSql(boolean pSkipSql): set (V)  | skip (NM) sql (N) 	++ :: [ boolean (N) - p (NM) skip (NM) sql (N) ] :: base (NM) class (NI) 
SPECIAL:NAME:FrameDisplayScrollbarAttribute Enum getFrameDisplayScrollbar(): get (V)  | frame (NM) display (NM) scrollbar (N) 	++ :: enum (NI)  :: frame (NM) display (NM) scrollbar (NM) attribute (N) 
BASE_VERB:NAME:GrundySequence short grundyValue(int heapSize): grundy (V)  | value (NI) 	++ :: [ int (N) - heap (NM) size (N) ] :: short (N)  :: grundy (NM) sequence (N) 
V_3P_IRR:NAME:SymtabManager static boolean IsFullyScopedTypeName(String name): is (V)  | EQUIV[fully (NM) scoped (NM) type (NM) name (NI) , [ string (NI) - name (NI) ]]	++ :: boolean (N)  :: symtab (NM) manager (N) 
SPECIAL:NAME:SpamServiceProvider int endContext(String context): end (V)  | EQUIV[context (N) , [ string (NI) - context (N) ]]	++ :: int (N)  :: spam (NM) service (NM) provider (N) 
SPECIAL:NAME:EnvironmentHelper void setCurrentEnvironment(Environment entity): set (V)  | current (NM) environment (N) 	++ :: [ environment (N) - entity (N) ] :: environment (NM) helper (N) 
SPECIAL:NAME:RequestHandler void setStructure(Structure stru): set (V)  | structure (N) 	++ :: [ structure (N) - stru (N) ] :: request (NM) handler (N) 
SPECIAL:CLAS:StatusPanel void initialize(): initialize (V)  | status (NM) panel (N) 	++
BASE_VERB:NAME:Transformer static void preprareTranslets(): preprare (V)  | translets (N) 	++ :: transformer (N) 
SPECIAL:NAME:CommandLineParser void setOptionsToDefaults(): set (V)  | options (N) -- to (P) defaults (N) 	++ :: command (NM) line (NM) parser (N) 
SPECIAL:CLAS:NotImplementedPanel void jbInit(): jb (PRE) init (V)  | not (DT) implemented (NM) panel (N) 	++
SPECIAL:NAME:Address void setArea(String area): set (V)  | area (N) 	++ :: [ string (NI) - area (N) ] :: address (NI) 
SPECIAL:NAME:TrainingViewTeachers void getData(Training t): get (V)  | data (NI) 	++ :: [ training (N) - t (N) ] :: training (NM) view (NM) teachers (N) 
V_3PS:NAME:CustomerI18n String addressesTitle(): addresses (V)  | title (N) 	++ :: string (NI)  :: customer (NM) I (NM) 18 (NM) n (N) 
SPECIAL:CLAS:PowerUpR void reset(): reset (V)  | power (NM) up (NM) R (N) 	++
BASE_VERB:NAME:Database void updateRow(): update (V)  | row (N) 	++ :: database (N) 
BASE_VERB:FORM:Impl void combine(Point3 point): combine (V)  | [ point (NM) 3 (N) - point (N) ]	++ :: impl (NI) 
SPECIAL:NAME:SqlAbstractObjectRepresentationBuilder String getSuggestedName(): get (V)  | suggested (NM) name (NI) 	++ :: string (NI)  :: sql (NM) abstract (NM) object (NM) representation (NM) builder (N) 
BASE_VERB:NAME:SymEltImpl HexNumberType xgetChar(): xget (V)  | char (N) 	++ :: hex (NM) number (NM) type (N)  :: sym (NM) elt (NM) impl (NI) 
SPECIAL:NAME:MCRRESUMPTIONTOKEN void setHitByteArray(byte hitByte): set (V)  | hit (NM) byte (NM) array (N) 	++ :: [ byte (N) - hit (NM) byte (N) ] :: MCRRESUMPTIONTOKEN (N) 
BASE_VERB:NAME:DataCollectionVisitor void completeDataCollectionConfig(DatacollectionConfig dataCollectionConfig): complete (V)  | EQUIV[data (NM) collection (NM) config (NI) , [ datacollection (NM) config (NI) - data (NM) collection (NM) config (NI) ]]	++ :: data (NM) collection (NM) visitor (N) 
ED_VERB:NAME:DiscardPolicy void rejectedExecution(Runnable r, ThreadPoolExecutor e): rejected (V)  | execution (N) 	++ :: [ runnable (N) - r (N) ] :: [ thread (NM) pool (NM) executor (N) - e (N) ] :: discard (NM) policy (N) 
CONSTRUCTOR:NAME:ListLayout ListLayout ListLayout(int hgap, int vgap, int alignment):  | list (NM) layout (N) 	++ :: [ int (N) - hgap (N) ] :: [ int (N) - vgap (N) ] :: [ int (N) - alignment (N) ]
SPECIAL:NAME:OS static int SetWindowModality(int inWindow, int inModalKind, int inUnavailableWindow): set (V)  | window (NM) modality (N) 	++ :: [ int (N) - in (NM) window (N) ] :: [ int (N) - in (NM) modal (NM) kind (N) ] :: [ int (N) - in (NM) unavailable (NM) window (N) ] :: int (N)  :: OS (N) 
ENDS_WITH_ED:NAME:JDialog_Doublons void onItemStateChanged(): handle (V) | on (NM) item (NM) state (NM) changed (N) 	++ :: J (NM) dialog (NM) doublons (N)  :: void (N) 
BASE_VERB:NAME:StringUtil static String joinList(ArrayList<String> stringList, String delimiter): join (V)  | EQUIV[list (N) , [ array (NM) list (NM) string (NI) - string (NM) list (N) ]]	++ :: [ string (NI) - delimiter (N) ] :: string (NI)  :: string (NM) util (N) 
SPECIAL:NAME:DateList List<XMLGregorianCalendar> getDate(): get (V)  | date (N) 	++ :: list (NM) XML (NM) gregorian (NM) calendar (N)  :: date (NM) list (N) 
BASE_VERB:NAME:Unmarshaller void leaveAttribute(String ___uri, String ___local, String ___qname): leave (V)  | attribute (N) 	++ :: [ string (NI) - uri (NI) ] :: [ string (NI) - local (N) ] :: [ string (NI) - qname (N) ] :: unmarshaller (N) 
PREP:NAME:CurationSet String toString(): convert (V) | to (P) string (NI) 	++ :: curation (NM) set (N)  :: string (NI) 
VOID_NP:NAME:CoreJNI static void Window_refresh__SWIG_0(long jarg1, Window jarg1_, boolean jarg2, long jarg3, Rect jarg3_): handle (V) | window (NM) refresh (NM) SWIG (N) 0 (D) 	++ :: [ long (N) - jarg (NM) 1 (N) ] :: [ window (N) - jarg (NM) 1 (N) ] :: [ boolean (N) - jarg (NM) 2 (N) ] :: [ long (N) - jarg (NM) 3 (N) ] :: [ rect (N) - jarg (NM) 3 (N) ] :: core (NM) JNI (N)  :: void (N) 
SPECIAL:NAME:SwingDndEvent DragDropTree getDropTree(): get (V)  | drop (NM) tree (NI) 	++ :: drag (NM) drop (NM) tree (NI)  :: swing (NM) dnd (NM) event (NI) 
SPECIAL:NAME:TestHtmlStringToWikiTranslator void testParagraphs(): test (VI)  | paragraphs (N) 	++ :: test (NM) html (NM) string (NM) to (NM) wiki (NM) translator (N) 
SPECIAL:FORM:OWLWriter void write(Ontology ontology, String uri): write (V)  | [ ontology (N) - ontology (N) ]	++ :: [ string (NI) - uri (NI) ] :: OWL (NM) writer (N) 
BASE_VERB:NAME:JBlogger boolean editPost(String postID, String username, String password, String text, int publish): edit (V)  | EQUIV[post (N) , [ string (NI) - post (NM) ID (NI) ]]	++ :: [ string (NI) - username (N) ] :: [ string (NI) - password (N) ] :: [ string (NI) - text (NI) ] :: [ int (N) - publish (N) ] :: boolean (N)  :: J (NM) blogger (N) 
V_3P_IRR:NAME:ThresholdIf boolean isSupported(): is (V)  | supported (N) 	++ :: boolean (N)  :: threshold (NM) if (NI) 
SPECIAL:NAME:SiphonTable Object getValueAt(int _rowIndex, int _column): get (V)  | value (NI) -- at (P) [ int (N) - row (NM) index (NI) ]	++ :: [ int (N) - row (NM) index (NI) ] :: [ int (N) - column (N) ] :: object (NI)  :: siphon (NM) table (N) 
NOUN_PHRASE:NAME:RS boolean absolute(int c): get (V) | absolute (N) 	++ :: [ int (N) - c (N) ] :: RS (N)  :: boolean (N) 
CONSTRUCTOR:NAME:CheckedInputStream CheckedInputStream CheckedInputStream(InputStream in, Checksum sum):  | checked (NM) input (NM) stream (NI) 	++ :: [ input (NM) stream (NI) - in (NI) ] :: [ checksum (N) - sum (N) ]
SPECIAL:CLAS:TableSorter void n2sort(): n (PRE) 2 (D) sort (V)  | table (NM) sorter (N) 	++
SPECIAL:NAME:MessagePropertyFilterTestCase void testMessagePropertyFilterDodgyValues(): test (VI)  | message (NM) property (NM) filter (NM) dodgy (NM) values (N) 	++ :: message (NM) property (NM) filter (NM) test (NM) case (N) 
V_3P_IRR:NAME:ConvertAnonymousToNestedRefactoring static boolean isNestedType(BodyDeclaration each): is (V)  | nested (NM) type (N) 	++ :: [ body (NM) declaration (NI) - each (DT) ] :: boolean (N)  :: convert (NM) anonymous (NM) to (NM) nested (NM) refactoring (N) 
SPECIAL:NAME:StyleType void addName(String value): add (V)  | name (NI) 	++ :: [ string (NI) - value (NI) ] :: style (NM) type (N) 
SPECIAL:FORM:AWTEventMulticaster static TextListener remove(TextListener l, TextListener oldl): remove (V)  | [ text (NM) listener (N) - l (N) ]	++ :: [ text (NM) listener (N) - oldl (N) ] :: AWT (NM) event (NM) multicaster (N)  :: text (NM) listener (N) 
SPECIAL:NAME:BlogThisPlugin PluginInfo getInfo(): get (V)  | info (NI) 	++ :: plugin (NM) info (NI)  :: blog (NM) this (PR) plugin (N) 
EVENT_PARAM:NAME:SingleModelTest void applyChange(ChangeEvent event): handle (V) | apply (NM) change (N) 	++ :: [ change (NM) event (NI) - event (NI) ] :: single (NM) model (NM) test (N)  :: void (N) 
SPECIAL:NAME:ListTest void test_subList(): test (VI)  | sub (NM) list (N) 	++ :: list (NM) test (N) 
CONSTRUCTOR:NAME:SelectionGroup SelectionGroup SelectionGroup(SingleSelectionModel model, boolean clearable):  | selection (NM) group (N) 	++ :: [ single (NM) selection (NM) model (NI) - model (NI) ] :: [ boolean (N) - clearable (N) ]
BASE_VERB:NAME:ChordParser int look_for_num(): look (V) for (VP)  | num (NI) 	++ :: int (N)  :: chord (NM) parser (N) 
SPECIAL:NAME:DbBaseHandlerTag String getFormFieldValue(): get (V)  | form (NM) field (NM) value (NI) 	++ :: string (NI)  :: db (NM) base (NM) handler (NM) tag (NI) 
EVENT_PARAM:NAME:SyntaxDocument void fireRemoveUpdate(DocumentEvent evt): handle (V) | fire (NM) remove (NM) update (N) 	++ :: [ document (NM) event (NI) - evt (N) ] :: syntax (NM) document (NI)  :: void (N) 
PREP:NAME:FinalizerHandlerImpl String toString(): convert (V) | to (P) string (NI) 	++ :: finalizer (NM) handler (NM) impl (NI)  :: string (NI) 
BASE_VERB:NAME:AbstractImageBuilder void storeTasksFor(SourceFile sourceFile, CategorizedProblem tasks): store (V)  | EQUIV[tasks (N) , [ categorized (NM) problem (N) - tasks (N) ]]-- for (P) [ source (NM) file (NI) - source (NM) file (NI) ]	++ :: [ source (NM) file (NI) - source (NM) file (NI) ] :: abstract (NM) image (NM) builder (N) 
SPECIAL:NAME:JSWrapper JSWrapper getWrapper(): get (V)  | wrapper (NI) 	++ :: JS (NM) wrapper (NI)  :: JS (NM) wrapper (NI) 
NOUN_PHRASE:NAME:Parameters Iterator iterator(String parameterName): get (V) | iterator (N) 	++ :: [ string (NI) - parameter (NM) name (NI) ] :: parameters (N)  :: iterator (N) 
PREP:NAME:RPCClientTestImpl void onFailure(String messageId, String correllationId, Throwable caught): handle (V) | on (NM) failure (N) 	++ :: [ string (NI) - message (NM) id (NI) ] :: [ string (NI) - correllation (NM) id (NI) ] :: [ throwable (N) - caught (N) ] :: RPC (NM) client (NM) test (NM) impl (NI)  :: void (N) 
BASE_VERB:NAME:RawRead long skipBytes(int filehandle, long skipbytes): skip (V)  | bytes (NI) 	++ :: [ int (N) - filehandle (N) ] :: [ long (N) - skipbytes (N) ] :: long (N)  :: raw (NM) read (N) 
BASE_VERB:CLAS:CSecurityVeNCrypt void finalize(): finalize (VI)  | C (NM) security (NM) ve (NM) N (NM) crypt (N) 	++
CONSTRUCTOR:NAME:PossibleMasses PossibleMasses PossibleMasses():  | possible (NM) masses (N) 	++
SPECIAL:CLAS:XMLWriterTest void testDecode(): test (VI) decode (V)  | XML (NM) writer (NM) test (N) 	++
PREP:NAME:TslDate String toString(String format): convert (V) | to (P) string (NI) 	++ :: [ string (NI) - format (NI) ] :: tsl (NM) date (N)  :: string (NI) 
CONSTRUCTOR:NAME:QoSAdminHolder QoSAdminHolder QoSAdminHolder():  | qo (NM) S (NM) admin (NM) holder (NI) 	++
SPECIAL:FORM:G19990310_01 static void main(String args): main (V)  | [ string (NI) - args (N) ]	++ :: G (NM) 19990310 (NM) 01 (N) 
BASE_VERB:NAME:PanelSponsoringType void refreshCurrentContract(): refresh (V)  | current (NM) contract (N) 	++ :: panel (NM) sponsoring (NM) type (N) 
BASE_VERB:CLAS:OracleOnlineTestCase void connect(): connect (V)  | oracle (NM) online (NM) test (NM) case (N) 	++
SPECIAL:NAME:XMLJPopupMenuTestConverter Hashtable getAttributeTable(Hashtable table, StructureElement element): get (V)  | EQUIV[attribute (NM) table (N) , [ hashtable (N) - table (N) ]]	++ :: [ structure (NM) element (NI) - element (NI) ] :: hashtable (N)  :: XMLJ (NM) popup (NM) menu (NM) test (NM) converter (N) 
SPECIAL:NAME:MouseTrapModel Schedule getSchedule(): get (V)  | schedule (N) 	++ :: schedule (N)  :: mouse (NM) trap (NM) model (NI) 
SPECIAL:NAME:PL String getTodayString(): get (V)  | today (NM) string (NI) 	++ :: string (NI)  :: PL (N) 
SPECIAL:CLAS:RunAsWithRolesMDB void ejbCreate(): ejb (PRE) create (V)  | run (NM) as (NM) with (NM) roles (NM) MDB (N) 	++
SPECIAL:NAME:FlowLayout int getAlignment(): get (V)  | alignment (N) 	++ :: int (N)  :: flow (NM) layout (N) 
V_3P_IRR:NAME:RenderableImage boolean isDynamic(): is (V)  | dynamic (N) 	++ :: boolean (N)  :: renderable (NM) image (N) 
BASE_VERB:FORM:TagDictionary Entry lookup(int tag): lookup (V)  | [ int (N) - tag (NI) ]	++ :: tag (NM) dictionary (N)  :: entry (NI) 
SPECIAL:NAME:BufferedBlockCipher int doFinal(byte out, int outOff): do (VI)  | final (N) 	++ :: [ byte (N) - out (N) ] :: [ int (N) - out (NM) off (N) ] :: int (N)  :: buffered (NM) block (NM) cipher (N) 
SPECIAL:NAME:ModelPropertyAccessorException void setPropertyDataType(int javaDataType): set (V)  | property (NM) data (NM) type (N) 	++ :: [ int (N) - java (NM) data (NM) type (N) ] :: model (NM) property (NM) accessor (NM) exception (N) 
SPECIAL:NAME:SessionWrapper Object getAttribute(String name): get (V)  | attribute (N) 	++ :: [ string (NI) - name (NI) ] :: object (NI)  :: session (NM) wrapper (NI) 
SPECIAL:NAME:TreeTool int getLevel(): get (V)  | level (N) 	++ :: int (N)  :: tree (NM) tool (N) 
SPECIAL:CLAS:HelpFile void removeFrom(Buildable b): remove (V)  | help (NM) file (NI) -- from (P) [ buildable (N) - b (N) ]	++ :: [ buildable (N) - b (N) ]
SPECIAL:NAME:IssueOwnerHistoryDTO void setChangerId(Long changerId): set (V)  | changer (NM) id (NI) 	++ :: [ long (N) - changer (NM) id (NI) ] :: issue (NM) owner (NM) history (NM) DTO (NI) 
V_3P_IRR:NAME:PatternValidator boolean isEqual(Token tk, Term term): is (V)  | equal (N) 	++ :: [ token (N) - tk (N) ] :: [ term (N) - term (N) ] :: boolean (N)  :: pattern (NM) validator (N) 
CONSTRUCTOR:NAME:EZFrame EZFrame EZFrame():  | EZ (NM) frame (N) 	++
SPECIAL:NAME:Parentes int getInersta(): get (V)  | inersta (N) 	++ :: int (N)  :: parentes (N) 
SPECIAL:CLAS:RunEntityBean void ejbLoad(): ejb (PRE) load (V)  | run (NM) entity (NM) bean (NI) 	++
SPECIAL:NAME:DefaultComponentModel StageModel getStageModel(StageDescriptor stage): get (V)  | stage (NM) model (NI) 	++ :: [ stage (NM) descriptor (NI) - stage (N) ] :: stage (NM) model (NI)  :: default (NM) component (NM) model (NI) 
PREP:NAME:Editor AspectualView<?> toView(): convert (V) | to (P) view (NI) 	++ :: editor (N)  :: aspectual (NM) view (NI) 
SPECIAL:NAME:ABTDynamicValue void setKey(String key_): set (V)  | key (NI) 	++ :: [ string (NI) - key (NI) ] :: ABT (NM) dynamic (NM) value (NI) 
SPECIAL:NAME:ActivityContextInterfaceInterceptor ActivityContextInterface getActivityContextInterface(): get (V)  | activity (NM) context (NM) interface (NI) 	++ :: activity (NM) context (NM) interface (NI)  :: activity (NM) context (NM) interface (NM) interceptor (N) 
SPECIAL:NAME:FetchResult void setHaveRow(boolean haveRow): set (V)  | have (NM) row (N) 	++ :: [ boolean (N) - have (NM) row (N) ] :: fetch (NM) result (N) 
VOID_NP:NAME:TreeView static void gtk_tree_view_expand_all(int treeView): handle (V) | gtk (PRE) tree (NM) view (NM) expand (NM) all (DT) 	++ :: [ int (N) - tree (NM) view (NI) ] :: tree (NM) view (NI)  :: void (N) 
BASE_VERB:NAME:MailServiceImpl void sendMessage(String templateName, VelocityContext context): send (V)  | message (NI) 	++ :: [ string (NI) - template (NM) name (NI) ] :: [ velocity (NM) context (N) - context (N) ] :: mail (NM) service (NM) impl (NI) 
ENDS_WITH_ED:NAME:FTPClientObserver void commandSent(String command): handle (V) | command (NM) sent (N) 	++ :: [ string (NI) - command (N) ] :: FTP (NM) client (NM) observer (N)  :: void (N) 
NOUN_PHRASE:NAME:DisplayHack int random_int(int n): get (V) | random (NM) int (N) 	++ :: [ int (N) - n (N) ] :: display (NM) hack (N)  :: int (N) 
SPECIAL:NAME:MCRClassificationItem String getClassificationID(): get (V)  | classification (NM) ID (NI) 	++ :: string (NI)  :: MCR (NM) classification (NM) item (NI) 
V_3P_IRR:NAME:SNRBlock boolean isBarrycenter(): is (V)  | barrycenter (N) 	++ :: boolean (N)  :: SNR (NM) block (N) 
V_3P_IRR:NAME:CIM_UnixProcessStatisticalInformationHelper static boolean isValid_CPUTime(UnsignedInt32 CPUTime): is (V)  | EQUIV[valid (NM) CPU (NM) time (N) , [ unsigned (NM) int (NM) 32 (N) - CPU (NM) time (N) ]]	++ :: boolean (N)  :: CIM (NM) unix (NM) process (NM) statistical (NM) information (NM) helper (N) 
NOUN_PHRASE:NAME:RampUtil static Color inverseColor(Color color): get (V) | inverse (NM) color (N) 	++ :: [ color (N) - color (N) ] :: ramp (NM) util (N)  :: color (N) 
BASE_VERB:FORM:Md5 int HH(int a, int b, int c, int d, int x, int s, int ac): HH (V)  | [ int (N) - a (N) ]	++ :: [ int (N) - b (N) ] :: [ int (N) - c (N) ] :: [ int (N) - d (N) ] :: [ int (N) - x (N) ] :: [ int (N) - s (N) ] :: [ int (N) - ac (N) ] :: md (NM) 5 (N)  :: int (N) 
SPECIAL:NAME:PageChangeEvent String getDeletedBlocks(): get (V)  | deleted (NM) blocks (N) 	++ :: string (NI)  :: page (NM) change (NM) event (NI) 
SPECIAL:NAME:TAlbumImageNoViewedBean void setStatus(int status): set (V)  | status (N) 	++ :: [ int (N) - status (N) ] :: T (NM) album (NM) image (NM) no (DT) viewed (NM) bean (NI) 
SPECIAL:NAME:CollateralResponse LegRedemptionDate getLegRedemptionDate(): get (V)  | leg (NM) redemption (NM) date (N) 	++ :: leg (NM) redemption (NM) date (N)  :: collateral (NM) response (N) 
SPECIAL:NAME:DirChecker void setCompletedir(String completedir): set (V)  | completedir (N) 	++ :: [ string (NI) - completedir (N) ] :: dir (NM) checker (N) 
SPECIAL:NAME:DefaultXFormsSessionManagerImpl int getSessionCount(): get (V)  | session (NM) count (N) 	++ :: int (N)  :: default (NM) X (NM) forms (NM) session (NM) manager (NM) impl (NI) 
SPECIAL:NAME:FieldData String getLabel(): get (V)  | label (NI) 	++ :: string (NI)  :: field (NM) data (NI) 
BASE_VERB:CLAS:SearchContainer void insertToSearchList(Search search, int position): insert (V)  | search (NM) container (NI) -- to (P) search (NM) list (N) 	++ :: [ search (N) - search (N) ] :: [ int (N) - position (N) ]
SPECIAL:NAME:OrderBeanAuto void setBeanHome(BeanHome _home): set (V)  | bean (NM) home (N) 	++ :: [ bean (NM) home (N) - home (N) ] :: order (NM) bean (NM) auto (N) 
NOUN_PHRASE:NAME:TagsTypeImpl static Class PRIMARY_INTERFACE_CLASS(): get (V) | PRIMARY (NM) INTERFACE (NM) CLASS (NI) 	++ :: tags (NM) type (NM) impl (NI)  :: class (NI) 
BASE_VERB:NAME:CMChannels void restoreInvalidSnoopers(Session mySession, Vector invalid): restore (V)  | invalid (NM) snoopers (N) 	++ :: [ session (N) - my (PR) session (N) ] :: [ vector (N) - invalid (N) ] :: CM (NM) channels (N) 
SPECIAL:FORM:BasicAdminHandler void execute(HttpServletRequest request, HttpServletResponse response): execute (VI)  | [ http (NM) servlet (NM) request (N) - request (N) ]	++ :: [ http (NM) servlet (NM) response (N) - response (N) ] :: basic (NM) admin (NM) handler (N) 
EVENT_PARAM:NAME:BBoxSelectionPanelController void itemStateChanged_srsCB(ItemEvent e): handle (V) | item (NM) state (NM) changed (NM) srs (NM) CB (N) 	++ :: [ item (NM) event (NI) - e (N) ] :: B (NM) box (NM) selection (NM) panel (NM) controller (N)  :: void (N) 
SPECIAL:NAME:TemplateConfiguration InputStream getInputStream(String fileName): get (V)  | input (NM) stream (NI) 	++ :: [ string (NI) - file (NM) name (NI) ] :: input (NM) stream (NI)  :: template (NM) configuration (NI) 
BASE_VERB:NAME:InfoEquipment void updateSilver(): update (V)  | silver (N) 	++ :: info (NM) equipment (N) 
CONSTRUCTOR:NAME:LinkTargetAction LinkTargetAction LinkTargetAction(String name):  | link (NM) target (NM) action (N) 	++ :: [ string (NI) - name (NI) ]
BASE_VERB:NAME:DirectoryList_DirectoryList void rebuildList(File directory): rebuild (V)  | list (N) 	++ :: [ file (NI) - directory (N) ] :: directory (NM) list (NM) directory (NM) list (N) 
EVENT_PARAM:NAME:RowSetHelperPopup void popupMenuWillBecomeInvisible(PopupMenuEvent e): handle (V) | popup (NM) menu (NM) will (NM) become (NM) invisible (N) 	++ :: [ popup (NM) menu (NM) event (NI) - e (N) ] :: row (NM) set (NM) helper (NM) popup (N)  :: void (N) 
V_3PS:FORM:CategoryNode boolean equals(Object obj): equals (V)  | [ object (NI) - obj (NI) ]	++ :: category (NM) node (NI)  :: boolean (N) 
BASE_VERB:NAME:IUserDataServicePOATie POA _default_POA(): default (V)  | POA (N) 	++ :: POA (N)  :: I (NM) user (NM) data (NM) service (NM) POA (NM) tie (N) 
BASE_VERB:NAME:BasicComboBoxUI void paintCurrentValueBackground(Graphics g, Rectangle bounds, boolean hasFocus): paint (V)  | current (NM) value (NM) background (N) 	++ :: [ graphics (N) - g (N) ] :: [ rectangle (N) - bounds (N) ] :: [ boolean (N) - has (NM) focus (N) ] :: basic (NM) combo (NM) box (NM) UI (N) 
SPECIAL:NAME:CompteModGui static JTextField getEmailField(): get (V)  | email (NM) field (N) 	++ :: J (NM) text (NM) field (N)  :: compte (NM) mod (NM) gui (N) 
SPECIAL:NAME:WsdlMockResponse String getResponseHttpStatus(): get (V)  | response (NM) http (NM) status (N) 	++ :: string (NI)  :: wsdl (NM) mock (NM) response (N) 
BASE_VERB:CLAS:ArchteaWebUtilTest void tearDown(): tear (V) down (VP)  | archtea (NM) web (NM) util (NM) test (N) 	++
SPECIAL:CLAS:PagingDatabaseViewerDialog void start(): start (V)  | paging (NM) database (NM) viewer (NM) dialog (N) 	++
SPECIAL:NAME:TestClassA void setValue3(int value3): set (V)  | value (NI) 3 (D) 	++ :: [ int (N) - value (NM) 3 (N) ] :: test (NM) class (NM) A (N) 
BASE_VERB:NAME:CreatePrivatePageWizard void inputAvailable(String id, Object input): input (V)  | available (N) 	++ :: [ string (NI) - id (NI) ] :: [ object (NI) - input (NI) ] :: create (NM) private (NM) page (NM) wizard (N) 
CONSTRUCTOR:NAME:CDCover CDCover CDCover(CDoxFrame cdoxFrame, Cover cover, int cdKonst, Font f, boolean bold, boolean italic, boolean underline, Color tColor):  | CD (NM) cover (N) 	++ :: [ C (NM) dox (NM) frame (N) - cdox (NM) frame (N) ] :: [ cover (N) - cover (N) ] :: [ int (N) - cd (NM) konst (N) ] :: [ font (N) - f (N) ] :: [ boolean (N) - bold (N) ] :: [ boolean (N) - italic (N) ] :: [ boolean (N) - underline (N) ] :: [ color (N) - t (NM) color (N) ]
SPECIAL:NAME:JDBCPooledConnection void setTransactionIsolation(int level): set (V)  | transaction (NM) isolation (N) 	++ :: [ int (N) - level (N) ] :: JDBC (NM) pooled (NM) connection (N) 
SPECIAL:NAME:PropertiesLoaderTest void testUrlPropertiesLoader(): test (VI)  | url (NM) properties (NM) loader (N) 	++ :: properties (NM) loader (NM) test (N) 
BASE_VERB:NAME:DacsConfReplyImpl void xsetUri(XmlString uri): xset (V)  | EQUIV[uri (NI) , [ xml (NM) string (NI) - uri (NI) ]]	++ :: dacs (NM) conf (NM) reply (NM) impl (NI) 
CONSTRUCTOR:NAME:RadioMenuEntry RadioMenuEntry RadioMenuEntry(String l, ActionListener lis, char key, int mod, boolean select):  | radio (NM) menu (NM) entry (NI) 	++ :: [ string (NI) - l (N) ] :: [ action (NM) listener (N) - lis (N) ] :: [ char (N) - key (NI) ] :: [ int (N) - mod (N) ] :: [ boolean (N) - select (N) ]
SPECIAL:NAME:NdbOperationImpl void getValue(String columnName): get (V)  | value (NI) 	++ :: [ string (NI) - column (NM) name (NI) ] :: ndb (NM) operation (NM) impl (NI) 
SPECIAL:NAME:BendPointCommand Line getLine(): get (V)  | line (N) 	++ :: line (N)  :: bend (NM) point (NM) command (N) 
V_MODAL:NAME:Disease_Carrier int canAffectCode(): can (VI) affect (V)  | code (NI) 	++ :: int (N)  :: disease (NM) carrier (N) 
SPECIAL:CLAS:HighScoreScreen void start(): start (V)  | high (NM) score (NM) screen (N) 	++
SPECIAL:NAME:DB_PostgreSQL RowSet getRowSet(ResultSet rs): get (V)  | EQUIV[row (NM) set (N) , [ result (NM) set (N) - rs (N) ]]	++ :: row (NM) set (N)  :: DB (NM) postgre (NM) SQL (N) 
SPECIAL:NAME:CSVString int getNoOfSections(): get (V)  | no (DT) -- of (P) sections (N) 	++ :: int (N)  :: CSV (NM) string (NI) 
BASE_VERB:NAME:Tuple CoordinateSpace coordinateSpace(): coordinate (V)  | space (N) 	++ :: coordinate (NM) space (N)  :: tuple (N) 
BASE_VERB:NAME:VFSClassLoader FileObject lookupFileObject(String name): lookup (V)  | file (NM) object (NI) 	++ :: [ string (NI) - name (NI) ] :: file (NM) object (NI)  :: VFS (NM) class (NM) loader (N) 
V_3PS:CLAS:FloatKeyShortMapToMapAdapter Collection values(): values (V)  | float (NM) key (NM) short (NM) map (NM) to (NM) map (NM) adapter (NI) 	++ :: collection (N) 
BASE_VERB:FORM:Logger void trace(Object message): trace (V)  | [ object (NI) - message (NI) ]	++ :: logger (N) 
SPECIAL:NAME:EasyX509TrustManager void checkServerTrusted(X509Certificate certificates, String type): check (VI)  | server (NM) trusted (N) 	++ :: [ X (NM) 509 (NM) certificate (N) - certificates (N) ] :: [ string (NI) - type (N) ] :: easy (NM) X (NM) 509 (NM) trust (NM) manager (N) 
SPECIAL:NAME:myPod static AbstractAction getPlayClipsAddAction(int mode): get (V)  | play (NM) clips (NM) add (NM) action (N) 	++ :: [ int (N) - mode (N) ] :: abstract (NM) action (N)  :: my (PR) pod (N) 
SPECIAL:NAME:MD4Digest int getDigestSize(): get (V)  | digest (NM) size (N) 	++ :: int (N)  :: MD (NM) 4 (NM) digest (N) 
BASE_VERB:CLAS:Matrix Matrix transpose(): transpose (V)  | matrix (N) 	++ :: matrix (N) 
SPECIAL:NAME:Compiler static String getMARFSourceCodeRevision(): get (V)  | MARF (NM) source (NM) code (NM) revision (N) 	++ :: string (NI)  :: compiler (N) 
V_3P_IRR:NAME:propertiesBean boolean IsMailerRunning(): is (V)  | mailer (NM) running (N) 	++ :: boolean (N)  :: properties (NM) bean (NI) 
SPECIAL:NAME:GLNavigateUI void setUpEdgePopup(): set (V) up (VP)  | edge (NM) popup (N) 	++ :: GL (NM) navigate (NM) UI (N) 
SPECIAL:NAME:JMSConfigImpl String getServiceName(): get (V)  | service (NM) name (NI) 	++ :: string (NI)  :: JMS (NM) config (NM) impl (NI) 
SPECIAL:NAME:LikeExpression void setIgnoreCase(boolean v): set (V)  | ignore (NM) case (N) 	++ :: [ boolean (N) - v (N) ] :: like (NM) expression (N) 
SPECIAL:NAME:page_footer void executeLast(Hashtable _tagLibrary, Hashtable _beanLibrary): execute (VI)  | last (DT) 	++ :: [ hashtable (N) - tag (NM) library (N) ] :: [ hashtable (N) - bean (NM) library (N) ] :: page (NM) footer (N) 
CONSTRUCTOR:NAME:NetworkDisplayProducer NetworkDisplayProducer NetworkDisplayProducer():  | network (NM) display (NM) producer (N) 	++
SPECIAL:NAME:XsltInfoSpaceOperator void setXslt(Source xsltSrc): set (V)  | xslt (N) 	++ :: [ source (NI) - xslt (NM) src (N) ] :: xslt (NM) info (NM) space (NM) operator (N) 
V_3P_IRR:NAME:StdAbility boolean isAutoInvoked(): is (V)  | auto (NM) invoked (N) 	++ :: boolean (N)  :: std (NM) ability (N) 
CONSTRUCTOR:NAME:TMAContactWrapper TMAContactWrapper TMAContactWrapper(String sensorName, String trackName, HiResDate DTG, double rangeYds, double bearingDegs, double courseDegs, double speedKts, double depthMetres, Color color, String label, EllipseShape theEllipse, String theSymbol):  | TMA (NM) contact (NM) wrapper (NI) 	++ :: [ string (NI) - sensor (NM) name (NI) ] :: [ string (NI) - track (NM) name (NI) ] :: [ hi (NM) res (NM) date (N) - DTG (N) ] :: [ double (N) - range (NM) yds (N) ] :: [ double (N) - bearing (NM) degs (N) ] :: [ double (N) - course (NM) degs (N) ] :: [ double (N) - speed (NM) kts (N) ] :: [ double (N) - depth (NM) metres (N) ] :: [ color (N) - color (N) ] :: [ string (NI) - label (NI) ] :: [ ellipse (NM) shape (N) - the (DT) ellipse (N) ] :: [ string (NI) - the (DT) symbol (N) ]
SPECIAL:NAME:SelectTag String getValue(): get (V)  | value (NI) 	++ :: string (NI)  :: select (NM) tag (NI) 
CONSTRUCTOR:NAME:SoftValueHashMap SoftValueHashMap SoftValueHashMap(int hardReferencesCount):  | soft (NM) value (NM) hash (NM) map (N) 	++ :: [ int (N) - hard (NM) references (NM) count (N) ]
NOUN_PHRASE:NAME:HashXMap Iterator<K> keyIterator(): get (V) | key (NM) iterator (N) 	++ :: hash (NM) X (NM) map (N)  :: iterator (NM) K (N) 
CONSTRUCTOR:NAME:JnettopStream JnettopStream JnettopStream(JnettopSession session):  | jnettop (NM) stream (NI) 	++ :: [ jnettop (NM) session (N) - session (N) ]
BASE_VERB:NAME:VolcanoPlanner RelOptPlanner chooseDelegate(): choose (V)  | delegate (N) 	++ :: rel (NM) opt (NM) planner (N)  :: volcano (NM) planner (N) 
ENDS_WITH_ED:NAME:TimeSeriesModel void clockTicked(ClockEvent event): handle (V) | clock (NM) ticked (N) 	++ :: [ clock (NM) event (NI) - event (NI) ] :: time (NM) series (NM) model (NI)  :: void (N) 
BASE_VERB:CLAS:JSONObject static String doubleToString(double d): double (V)  | JSON (NM) object (NI) -- to (P) string (NI) 	++ :: [ double (N) - d (N) ] :: string (NI) 
SPECIAL:NAME:MimeContainer DataHandler getAttachment(String contentId): get (V)  | attachment (N) 	++ :: [ string (NI) - content (NM) id (NI) ] :: data (NM) handler (N)  :: mime (NM) container (NI) 
SPECIAL:NAME:MyStorage void initCurrencies(): init (V)  | currencies (N) 	++ :: my (PR) storage (N) 
CONSTRUCTOR:NAME:_i2b _i2b _i2b():  | i (NM) 2 (NM) b (N) 	++
SPECIAL:NAME:Input void setComment(String comment): set (V)  | comment (N) 	++ :: [ string (NI) - comment (N) ] :: input (NI) 
BASE_VERB:NAME:YEngine void clearCaseDelegate(YPersistenceManager pmgr, YIdentifier id): clear (V)  | case (NM) delegate (N) 	++ :: [ Y (NM) persistence (NM) manager (N) - pmgr (N) ] :: [ Y (NM) identifier (NI) - id (NI) ] :: Y (NM) engine (N) 
SPECIAL:NAME:ObjectDelegateTest void testCommand(): test (VI)  | command (N) 	++ :: object (NM) delegate (NM) test (N) 
SPECIAL:NAME:ObjectMapperTestCase void addMockRef(Object key, Ref ref): add (V)  | EQUIV[mock (NM) ref (NI) , [ ref (NI) - ref (NI) ]]	++ :: [ object (NI) - key (NI) ] :: object (NM) mapper (NM) test (NM) case (N) 
SPECIAL:NAME:LabTFLabTFPanel boolean checkValue2(): check (VI)  | value (NI) 2 (D) 	++ :: boolean (N)  :: lab (NM) TF (NM) lab (NM) TF (NM) panel (N) 
BASE_VERB:NAME:VisitorContainsCheck void visitNegation(Negation expr): visit (V)  | EQUIV[negation (N) , [ negation (N) - expr (NI) ]]	++ :: visitor (NM) contains (NM) check (N) 
BASE_VERB:NAME:TestDataStructures boolean objectEquals(Object lObject, Object aObject, Object vObject): object (V)  | equals (N) 	++ :: [ object (NI) - l (NM) object (NI) ] :: [ object (NI) - a (NM) object (NI) ] :: [ object (NI) - v (NM) object (NI) ] :: boolean (N)  :: test (NM) data (NM) structures (N) 
SPECIAL:NAME:SpinnerMonthModel void setValue(Object obj): set (V)  | value (NI) 	++ :: [ object (NI) - obj (NI) ] :: spinner (NM) month (NM) model (NI) 
SPECIAL:NAME:PDFXFormEps AffineTransform getUserSpaceTransform(): get (V)  | user (NM) space (NM) transform (N) 	++ :: affine (NM) transform (N)  :: PDFX (NM) form (NM) eps (N) 
SPECIAL:NAME:RiemannSlice void setLineWidth(int width): set (V)  | line (NM) width (N) 	++ :: [ int (N) - width (N) ] :: riemann (NM) slice (N) 
SPECIAL:NAME:Apolda int addAnnotation(AnnotationSet annotationSet, Set lookupSet, Region matchedRegion): add (V)  | annotation (N) 	++ :: [ annotation (NM) set (N) - annotation (NM) set (N) ] :: [ set (N) - lookup (NM) set (N) ] :: [ region (N) - matched (NM) region (N) ] :: int (N)  :: apolda (N) 
CONSTRUCTOR:NAME:JViewportCleaner JViewportCleaner JViewportCleaner():  | J (NM) viewport (NM) cleaner (N) 	++
SPECIAL:NAME:SelectedCoursesList String getColumnName(int column): get (V)  | column (NM) name (NI) 	++ :: [ int (N) - column (N) ] :: string (NI)  :: selected (NM) courses (NM) list (N) 
BASE_VERB:NAME:StackHeightCounter void visit_pop(Instruction inst): visit (V)  | pop (N) 	++ :: [ instruction (N) - inst (N) ] :: stack (NM) height (NM) counter (N) 
V_3PS:FORM:Agent_typeTYPE boolean equals(Object obj): equals (V)  | [ object (NI) - obj (NI) ]	++ :: agent (NM) type (NM) TYPE (N)  :: boolean (N) 
BASE_VERB:CLAS:JavaSearchResultLabelProvider void dispose(): dispose (V)  | java (NM) search (NM) result (NM) label (NM) provider (N) 	++
CONSTRUCTOR:NAME:CacheElement CacheElement CacheElement(Object o):  | cache (NM) element (NI) 	++ :: [ object (NI) - o (N) ]
SPECIAL:NAME:JxList void setSelectedIndices(int indices): set (V)  | selected (NM) indices (N) 	++ :: [ int (N) - indices (N) ] :: jx (NM) list (N) 
SPECIAL:NAME:KMushDoc void setEnableEnter(boolean value): set (V)  | enable (NM) enter (N) 	++ :: [ boolean (N) - value (NI) ] :: K (NM) mush (NM) doc (NI) 
SPECIAL:NAME:UnmarshallingContext void addPatcher(Runnable job): add (V)  | patcher (N) 	++ :: [ runnable (N) - job (N) ] :: unmarshalling (NM) context (N) 
CONSTRUCTOR:NAME:SiteDialog SiteDialog SiteDialog(ObservationManager om, ISite editableSite):  | site (NM) dialog (N) 	++ :: [ observation (NM) manager (N) - om (N) ] :: [ I (NM) site (N) - editable (NM) site (N) ]
SPECIAL:NAME:blueBrowseForFilename String getName(): get (V)  | name (NI) 	++ :: string (NI)  :: blue (NM) browse (NM) for (NM) filename (N) 
CONSTRUCTOR:NAME:AbstractDoneDialog AbstractDoneDialog AbstractDoneDialog(String title, boolean modality, boolean showCancelButton):  | abstract (NM) done (NM) dialog (N) 	++ :: [ string (NI) - title (N) ] :: [ boolean (N) - modality (N) ] :: [ boolean (N) - show (NM) cancel (NM) button (N) ]
CONSTRUCTOR:NAME:STTableModel STTableModel STTableModel():  | ST (NM) table (NM) model (NI) 	++
CONSTRUCTOR:NAME:JRMLWriter JRMLWriter JRMLWriter(Writer w):  | JRML (NM) writer (N) 	++ :: [ writer (N) - w (N) ]
SPECIAL:CLAS:EntryIterator void remove(): remove (V)  | entry (NM) iterator (N) 	++
SPECIAL:NAME:LoggingConversation void setStartDate(Date temp): set (V)  | start (NM) date (N) 	++ :: [ date (N) - temp (N) ] :: logging (NM) conversation (N) 
SPECIAL:NAME:ABTRuleUtility IABTValue setMakeUniqueInObjectSet(IABTUserSession session, IABTObject object, IABTAttribute property, IABTValue myValue, IABTValue newValue, String parentName, String arrayName): set (V)  | make (NM) unique (N) -- in (P) object (NM) set (N) 	++ :: [ IABT (NM) user (NM) session (N) - session (N) ] :: [ IABT (NM) object (NI) - object (NI) ] :: [ IABT (NM) attribute (N) - property (N) ] :: [ IABT (NM) value (NI) - my (PR) value (NI) ] :: [ IABT (NM) value (NI) - new (NM) value (NI) ] :: [ string (NI) - parent (NM) name (NI) ] :: [ string (NI) - array (NM) name (NI) ] :: IABT (NM) value (NI)  :: ABT (NM) rule (NM) utility (N) 
SPECIAL:NAME:JDBCTask void setUserid(String userId): set (V)  | userid (N) 	++ :: [ string (NI) - user (NM) id (NI) ] :: JDBC (NM) task (N) 
V_3P_IRR:NAME:TextEditor boolean isScalable(): is (V)  | scalable (N) 	++ :: boolean (N)  :: text (NM) editor (N) 
BASE_VERB:NAME:ArchitectureSpecification void parseGroupsFrom(String gs): parse (V)  | groups (N) -- from (P) [ string (NI) - gs (N) ]	++ :: [ string (NI) - gs (N) ] :: architecture (NM) specification (N) 
BASE_VERB:FORM:Prayer_Blindsight boolean invoke(MOB mob, Vector commands, Environmental givenTarget, boolean auto, int asLevel): invoke (VI)  | [ MOB (N) - mob (N) ]	++ :: [ vector (N) - commands (N) ] :: [ environmental (N) - given (NM) target (N) ] :: [ int (N) - as (NM) level (N) ] :: prayer (NM) blindsight (N)  :: [ boolean (N) - auto (N) ] :: boolean (N) 
NOUN_PHRASE:NAME:RowIdType Object deepCopy(Object value): get (V) | deep (NM) copy (N) 	++ :: [ object (NI) - value (NI) ] :: row (NM) id (NM) type (N)  :: object (NI) 
CONSTRUCTOR:NAME:ContextEnumerator ContextEnumerator ContextEnumerator(Context context):  | context (NM) enumerator (N) 	++ :: [ context (N) - context (N) ]
SPECIAL:NAME:ParagraphBuffer void readExternal(ObjectInput in): read (V)  | external (N) 	++ :: [ object (NM) input (NI) - in (NI) ] :: paragraph (NM) buffer (NI) 
BASE_VERB:NAME:ResourceAndContainerGroup boolean validateFullResourcePath(IPath resourcePath): validate (VI)  | EQUIV[full (NM) resource (NM) path (NI) , [ I (NM) path (NI) - resource (NM) path (NI) ]]	++ :: boolean (N)  :: resource (NM) and (NM) container (NM) group (N) 
SPECIAL:NAME:JTabbedPane String getToolTipTextAt(int index): get (V)  | tool (NM) tip (NM) text (NI) -- at (P) [ int (N) - index (NI) ]	++ :: [ int (N) - index (NI) ] :: string (NI)  :: J (NM) tabbed (NM) pane (N) 
SPECIAL:NAME:SRNCache static SRNCache getInstance(): get (V)  | instance (NI) 	++ :: SRN (NM) cache (N)  :: SRN (NM) cache (N) 
SPECIAL:NAME:ClasspathFontPeer int getStyle(Font font): get (V)  | style (N) 	++ :: [ font (N) - font (N) ] :: int (N)  :: classpath (NM) font (NM) peer (N) 
BASE_VERB:CLAS:Aggregate_Count void optimize(): optimize (V)  | aggregate (NM) count (N) 	++
NOUN_PHRASE:NAME:Skill_Recall String name(): get (V) | name (NI) 	++ :: skill (NM) recall (N)  :: string (NI) 
SPECIAL:NAME:Table static void initializeHash(): initialize (V)  | hash (N) 	++ :: table (N) 
BASE_VERB:NAME:IXholonClass void preOrderPrint(int level): pre (V)  | order (NM) print (N) 	++ :: [ int (N) - level (N) ] :: I (NM) xholon (NM) class (NI) 
BASE_VERB:CLAS:DefaultTableCellRenderer void validate(): validate (VI)  | default (NM) table (NM) cell (NM) renderer (N) 	++
BASE_VERB:NAME:XMLUtils static void importProperties(Properties props, Element propertiesElement): import (V)  | EQUIV[properties (N) , [ properties (N) - props (N) ], [ element (NI) - properties (NM) element (NI) ]]	++ :: XML (NM) utils (N) 
SPECIAL:NAME:ClientResultSet float getFloat(String columnName): get (V)  | float (N) 	++ :: [ string (NI) - column (NM) name (NI) ] :: float (N)  :: client (NM) result (NM) set (N) 
SPECIAL:CLAS:ExportAction void run(): run (VI)  | export (NM) action (N) 	++
ED_VERB:NAME:LeitnerListener void removedCard(Item item): removed (V)  | card (N) 	++ :: [ item (NI) - item (NI) ] :: leitner (NM) listener (N) 
SPECIAL:NAME:TrackerDataCache void setCacheRevision(RevisionNumber cacheRevision): set (V)  | cache (NM) revision (N) 	++ :: [ revision (NM) number (NI) - cache (NM) revision (N) ] :: tracker (NM) data (NM) cache (N) 
SPECIAL:NAME:TableCursor void setSelection(TableItem row, int column): set (V)  | selection (N) 	++ :: [ table (NM) item (NI) - row (N) ] :: [ int (N) - column (N) ] :: table (NM) cursor (N) 
SPECIAL:FORM:DatabaseObjectTypeComparator int compare(Object o1, Object o2): compare (V)  | [ object (NI) - o (NM) 1 (N) ]	++ :: [ object (NI) - o (NM) 2 (N) ] :: database (NM) object (NM) type (NM) comparator (N)  :: int (N) 
SPECIAL:NAME:Employee String getCode(): get (V)  | code (NI) 	++ :: string (NI)  :: employee (N) 
SPECIAL:NAME:MRequestUpdate String getCreatedByName(): get (V)  | created (N) -- by (P) name (NI) 	++ :: string (NI)  :: M (NM) request (NM) update (N) 
SPECIAL:NAME:OrderMassStatusRequest UnderlyingSecurityExchange getUnderlyingSecurityExchange(): get (V)  | underlying (NM) security (NM) exchange (N) 	++ :: underlying (NM) security (NM) exchange (N)  :: order (NM) mass (NM) status (NM) request (N) 
SPECIAL:NAME:SmartCallableStatement long getLong(int p0): get (V)  | long (N) 	++ :: [ int (N) - p (NM) 0 (N) ] :: long (N)  :: smart (NM) callable (NM) statement (NI) 
SPECIAL:NAME:UniChemXYZFormat String getMIMEType(): get (V)  | MIME (NM) type (N) 	++ :: string (NI)  :: uni (NM) chem (NM) XYZ (NM) format (NI) 
SPECIAL:NAME:DeliverTo SubID getSubID(): get (V)  | sub (NM) ID (NI) 	++ :: sub (NM) ID (NI)  :: deliver (NM) to (N) 
SPECIAL:NAME:DocumentActivity void setTool(String value): set (V)  | tool (N) 	++ :: [ string (NI) - value (NI) ] :: document (NM) activity (N) 
SPECIAL:NAME:Dependency String getArtifactDirectory(): get (V)  | artifact (NM) directory (N) 	++ :: string (NI)  :: dependency (N) 
BASE_VERB:NAME:GUIUtil static void centerDialog(Dialog dialog): center (V)  | EQUIV[dialog (N) , [ dialog (N) - dialog (N) ]]	++ :: GUI (NM) util (N) 
SPECIAL:NAME:ObjectFactory EquityAmericanExercise createEquityAmericanExercise(): create (V)  | equity (NM) american (NM) exercise (N) 	++ :: equity (NM) american (NM) exercise (N)  :: object (NM) factory (N) 
SPECIAL:NAME:Person static String getCostAtt(): get (V)  | cost (NM) att (N) 	++ :: string (NI)  :: person (N) 
SPECIAL:NAME:TableSorter void setSortingStatus(int column, int status): set (V)  | sorting (NM) status (N) 	++ :: [ int (N) - column (N) ] :: [ int (N) - status (N) ] :: table (NM) sorter (N) 
SPECIAL:NAME:OSR_Q06 OSR_Q06_RESPONSE getRESPONSE(): get (V)  | RESPONSE (N) 	++ :: OSR (NM) Q (NM) 06 (NM) RESPONSE (N)  :: OSR (NM) Q (NM) 06 (N) 
BASE_VERB:CLAS:Base64 static byte decodeFromFile(String filename): decode (V)  | base (NM) 64 (N) -- from (P) file (NI) 	++ :: [ string (NI) - filename (N) ] :: byte (N) 
SPECIAL:NAME:EmptyIcon int getIconHeight(): get (V)  | icon (NM) height (N) 	++ :: int (N)  :: empty (NM) icon (N) 
NOUN_PHRASE:NAME:Matrix static _gsl_vector_char_const_view gsl_matrix_char_const_superdiagonal(gsl_matrix_char arg0, int arg1): get (V) | gsl (PRE) matrix (NM) char (NM) const (NM) superdiagonal (N) 	++ :: [ gsl (NM) matrix (NM) char (N) - arg (NM) 0 (N) ] :: [ int (N) - arg (NM) 1 (N) ] :: matrix (N)  :: gsl (NM) vector (NM) char (NM) const (NM) view (NI) 
SPECIAL:NAME:ValuesTypeImpl Class getPrimaryInterface(): get (V)  | primary (NM) interface (NI) 	++ :: class (NI)  :: values (NM) type (NM) impl (NI) 
SPECIAL:NAME:ConflictList Conflict getConflict(int index): get (V)  | conflict (N) 	++ :: [ int (N) - index (NI) ] :: conflict (N)  :: conflict (NM) list (N) 
PREP:NAME:AttributeImpl String toString(): convert (V) | to (P) string (NI) 	++ :: attribute (NM) impl (NI)  :: string (NI) 
BASE_VERB:CLAS:FooMember void foom(): foom (V)  | foo (NM) member (N) 	++
ENDS_WITH_ED:NAME:ExplorerListener void treeNodesRemoved(TreeModelEvent tme): handle (V) | tree (NM) nodes (NM) removed (N) 	++ :: [ tree (NM) model (NM) event (NI) - tme (N) ] :: explorer (NM) listener (N)  :: void (N) 
BASE_VERB:FORM:PyXRange PyObject getslice(int start, int stop, int step): getslice (V)  | [ int (N) - start (N) ]	++ :: [ int (N) - stop (N) ] :: [ int (N) - step (N) ] :: py (NM) X (NM) range (N)  :: py (NM) object (NI) 
SPECIAL:NAME:MessageHistoryTableModel Object getValueAt(int row, int col): get (V)  | value (NI) -- at (P) [ int (N) - row (N) ]	++ :: [ int (N) - row (N) ] :: [ int (N) - col (N) ] :: object (NI)  :: message (NM) history (NM) table (NM) model (NI) 
ENDS_WITH_ED:NAME:void actionPerformed(ActionEvent e): handle (V) | action (NM) performed (N) 	++ :: [ action (NM) event (NI) - e (N) ] :: ANONYMOUS (N)  :: void (N) 
SPECIAL:NAME:ConstantsTag int getScope(String scopeName): get (V)  | EQUIV[scope (N) , [ string (NI) - scope (NM) name (NI) ]]	++ :: int (N)  :: constants (NM) tag (NI) 
SPECIAL:NAME:I18n JMenuItem createMenuItem(String i18nKey, Object textArgs): create (V)  | menu (NM) item (NI) 	++ :: [ string (NI) - i (NM) 18 (NM) n (NM) key (NI) ] :: [ object (NI) - text (NM) args (N) ] :: J (NM) menu (NM) item (NI)  :: I (NM) 18 (NM) n (N) 
BASE_VERB:NAME:Pair int hashCode(): hash (V)  | code (NI) 	++ :: int (N)  :: pair (N) 
SPECIAL:NAME:Matrix int getHeight(): get (V)  | height (N) 	++ :: int (N)  :: matrix (N) 
SPECIAL:NAME:AccessibleControlAdapter void getSelection(AccessibleControlEvent e): get (V)  | selection (N) 	++ :: [ accessible (NM) control (NM) event (NI) - e (N) ] :: accessible (NM) control (NM) adapter (NI) 
SPECIAL:NAME:BlackListManager int getRemainingBLFails(int jobID, GumID gumID): get (V)  | remaining (NM) BL (NM) fails (N) 	++ :: [ int (N) - job (NM) ID (NI) ] :: [ gum (NM) ID (NI) - gum (NM) ID (NI) ] :: int (N)  :: black (NM) list (NM) manager (N) 
SPECIAL:NAME:LPVariable double getUpperBound(): get (V)  | upper (NM) bound (N) 	++ :: double (N)  :: LP (NM) variable (N) 
SPECIAL:FORM:PrintBeanInfo static void print(Class c): print (V)  | [ class (NI) - c (N) ]	++ :: print (NM) bean (NM) info (NI) 
BASE_VERB:FORM:Like void normalize(String s, boolean b, char e): normalize (V)  | [ string (NI) - s (N) ]	++ :: [ char (N) - e (N) ] :: like (N)  :: [ boolean (N) - b (N) ]
BASE_VERB:NAME:PlateauObject void handleThrowable(Method method, Throwable thrw): handle (VI)  | EQUIV[throwable (N) , [ throwable (N) - thrw (N) ]]	++ :: [ method (N) - method (N) ] :: plateau (NM) object (NI) 
EMPTY:NONE:GenEq static boolean n45(CleanVM vm):  | n (PRE) 45 (D) 
ENDS_WITH_ED:NAME:SetTransitionStyle void actionPerformed(ActionEvent e): handle (V) | action (NM) performed (N) 	++ :: [ action (NM) event (NI) - e (N) ] :: set (NM) transition (NM) style (N)  :: void (N) 
PREP:NAME:RestrictedXCollection int forEach(Closure<? super E> procedure):  | for (P) each (DT) 	++ :: restricted (NM) X (NM) collection (N)  :: int (N) 
SPECIAL:NAME:ByteToCharCp775 String getCharacterEncoding(): get (V)  | character (NM) encoding (N) 	++ :: string (NI)  :: byte (NM) to (NM) char (NM) cp (NM) 775 (N) 
CONSTRUCTOR:NAME:PreferenceVOX PreferenceVOX PreferenceVOX(DynaActionForm form):  | preference (NM) VOX (N) 	++ :: [ dyna (NM) action (NM) form (N) - form (N) ]
V_3P_IRR:NAME:PopupListener boolean isArray(String refString): is (V)  | array (N) 	++ :: [ string (NI) - ref (NM) string (NI) ] :: boolean (N)  :: popup (NM) listener (N) 
V_3P_IRR:NAME:GenTVTask boolean isOverlapping(): is (V)  | overlapping (N) 	++ :: boolean (N)  :: gen (NM) TV (NM) task (N) 
SPECIAL:NAME:Citizen int setSurplus(): set (V)  | surplus (N) 	++ :: int (N)  :: citizen (N) 
BASE_VERB:FORM:UserProtocolInterpreter void cd(String directoryName): cd (V)  | [ string (NI) - directory (NM) name (NI) ]	++ :: user (NM) protocol (NM) interpreter (N) 
BASE_VERB:NAME:RteoEclipseManipulator static void refreshProject(IJavaProject $IJavaProject): refresh (V)  | EQUIV[project (N) , [ I (NM) java (NM) project (N) - I (NM) java (NM) project (N) ]]	++ :: rteo (NM) eclipse (NM) manipulator (N) 
BASE_VERB:NAME:Unmarshaller void eatText1(String value): eat (V)  | text (NI) 1 (D) 	++ :: [ string (NI) - value (NI) ] :: unmarshaller (N) 
BASE_VERB:NAME:MenuImageArea void paintComponent(Graphics gIn): paint (V)  | component (N) 	++ :: [ graphics (N) - g (NM) in (NI) ] :: menu (NM) image (NM) area (N) 
SPECIAL:NAME:StreamBlockCipher byte returnByte(byte in): return (V)  | EQUIV[byte (N) , [ byte (N) - in (NI) ]]	++ :: byte (N)  :: stream (NM) block (NM) cipher (N) 
VOID_NP:NAME:CommunicationThreadPool void taskReady(ServerThread s): handle (V) | task (NM) ready (N) 	++ :: [ server (NM) thread (N) - s (N) ] :: communication (NM) thread (NM) pool (N)  :: void (N) 
SPECIAL:FORM:AbstractErrorLog void add(Date timestamp, String className, String stackTrace, PrimaryKey entityPrimaryKey, PrimaryKey recordPrimaryKey): add (V)  | [ date (N) - timestamp (N) ]	++ :: [ string (NI) - class (NM) name (NI) ] :: [ string (NI) - stack (NM) trace (N) ] :: [ primary (NM) key (NI) - entity (NM) primary (NM) key (NI) ] :: [ primary (NM) key (NI) - record (NM) primary (NM) key (NI) ] :: abstract (NM) error (NM) log (N) 
CONSTRUCTOR:NAME:ColumnGroup ColumnGroup ColumnGroup(String text):  | column (NM) group (N) 	++ :: [ string (NI) - text (NI) ]
BASE_VERB:NAME:URLUtil static void redirectPost(HttpServletRequest req, HttpServletResponse res, UPFileSpec up, String ignoreParams, String charset): redirect (V)  | post (N) 	++ :: [ http (NM) servlet (NM) request (N) - req (N) ] :: [ http (NM) servlet (NM) response (N) - res (N) ] :: [ UP (NM) file (NM) spec (NI) - up (N) ] :: [ string (NI) - ignore (NM) params (N) ] :: [ string (NI) - charset (N) ] :: URL (NM) util (N) 
BASE_VERB:FORM:Repr void pickle(DataOutputStream ostream): pickle (V)  | [ data (NM) output (NM) stream (NI) - ostream (N) ]	++ :: repr (N) 
SPECIAL:NAME:ShortcutKeysPlugIn String removeHTMLTags(String s): remove (V)  | HTML (NM) tags (N) 	++ :: [ string (NI) - s (N) ] :: string (NI)  :: shortcut (NM) keys (NM) plug (NM) in (NI) 
SPECIAL:NAME:X_M_SerNoCtl POInfo initPO(Properties ctx): init (V)  | PO (N) 	++ :: [ properties (N) - ctx (N) ] :: PO (NM) info (NI)  :: X (NM) M (NM) ser (NM) no (DT) ctl (N) 
SPECIAL:NAME:NetRexxC void setSavelog(boolean savelog): set (V)  | savelog (N) 	++ :: [ boolean (N) - savelog (N) ] :: net (NM) rexx (NM) C (N) 
SPECIAL:NAME:BasicPrimary void setREcosphereOuter(double rEcosphereOuter): set (V)  | R (NM) ecosphere (NM) outer (N) 	++ :: [ double (N) - r (NM) ecosphere (NM) outer (N) ] :: basic (NM) primary (N) 
SPECIAL:NAME:J3DUserRenderable void setCapabilities(TransformGroup group): set (V)  | capabilities (N) 	++ :: [ transform (NM) group (N) - group (N) ] :: J (NM) 3 (NM) D (NM) user (NM) renderable (N) 
SPECIAL:NAME:Control void setEnabled(boolean enabled): set (V)  | enabled (N) 	++ :: [ boolean (N) - enabled (N) ] :: control (N) 
CONSTRUCTOR:NAME:StyledTextOutput StyledTextOutput StyledTextOutput(EnumSet<Style> styles, String text):  | styled (NM) text (NM) output (N) 	++ :: [ enum (NM) set (NM) style (N) - styles (N) ] :: [ string (NI) - text (NI) ]
SPECIAL:NAME:JspList void setCellSpacing(int value): set (V)  | cell (NM) spacing (N) 	++ :: [ int (N) - value (NI) ] :: jsp (NM) list (N) 
V_3P_IRR:NAME:PDDocument boolean isUserPassword(String password): is (V)  | EQUIV[user (NM) password (N) , [ string (NI) - password (N) ]]	++ :: boolean (N)  :: PD (NM) document (NI) 
SPECIAL:NAME:LabelJSPTag void setTextId(String textId): set (V)  | text (NM) id (NI) 	++ :: [ string (NI) - text (NM) id (NI) ] :: label (NM) JSP (NM) tag (NI) 
SPECIAL:NAME:RankingMemberFilter void setTop(int value): set (V)  | top (N) 	++ :: [ int (N) - value (NI) ] :: ranking (NM) member (NM) filter (N) 
SPECIAL:NAME:ProtRpcMessage rawDef getPayload(): get (V)  | payload (N) 	++ :: raw (NM) def (NI)  :: prot (NM) rpc (NM) message (NI) 
SPECIAL:NAME:ImagePanel Image getScaledImage(): get (V)  | scaled (NM) image (N) 	++ :: image (N)  :: image (NM) panel (N) 
CONSTRUCTOR:NAME:Factory Factory Factory():  | factory (N) 	++
SPECIAL:NAME:X_AD_Column String getHelp(): get (V)  | help (N) 	++ :: string (NI)  :: X (NM) AD (NM) column (N) 
SPECIAL:NAME:MainPanel TreeNodeImpl findPluginNode(String id): find (V)  | plugin (NM) node (NI) 	++ :: [ string (NI) - id (NI) ] :: tree (NM) node (NM) impl (NI)  :: main (NM) panel (N) 
CONSTRUCTOR:NAME:BTreeNode BTreeNode BTreeNode(BTreeNode parent):  | B (NM) tree (NM) node (NI) 	++ :: [ B (NM) tree (NM) node (NI) - parent (N) ]
SPECIAL:NAME:JEANInputPanel static JEANCatalogPanel getCatalogPanel(JEANAPI api, Border border, String selectionPath, boolean singleSelection): get (V)  | catalog (NM) panel (N) 	++ :: [ JEANAPI (N) - api (N) ] :: [ border (N) - border (N) ] :: [ string (NI) - selection (NM) path (NI) ] :: [ boolean (N) - single (NM) selection (N) ] :: JEAN (NM) catalog (NM) panel (N)  :: JEAN (NM) input (NM) panel (N) 
CONSTRUCTOR:NAME:IndyThread IndyThread IndyThread():  | indy (NM) thread (N) 	++
SPECIAL:NAME:HelperGUI void setVariableC(int value): set (V)  | variable (NM) C (N) 	++ :: [ int (N) - value (NI) ] :: helper (NM) GUI (N) 
BASE_VERB:NAME:RunnableQueue void handleInput(String input): handle (VI)  | EQUIV[input (NI) , [ string (NI) - input (NI) ]]	++ :: runnable (NM) queue (N) 
SPECIAL:NAME:KeyValidator void setObjectMember(ObjectMember p_member): set (V)  | object (NM) member (N) 	++ :: [ object (NM) member (N) - p (NM) member (N) ] :: key (NM) validator (N) 
SPECIAL:CLAS:TableDefinition void initForContext(Context context): init (V)  | table (NM) definition (NI) -- for (P) EQUIV[context (N) , [ context (N) - context (N) ]]	++
SPECIAL:NAME:gl_depthbuffer float get_pixel(int x, int y, short pixels): get (V)  | pixel (N) 	++ :: [ int (N) - x (N) ] :: [ int (N) - y (N) ] :: [ short (N) - pixels (N) ] :: float (N)  :: gl (NM) depthbuffer (N) 
BASE_VERB:NAME:HistoryMethodAdapter void visitJumpInsn(int i, Label label): visit (V)  | jump (NM) insn (N) 	++ :: [ int (N) - i (N) ] :: [ label (NI) - label (NI) ] :: history (NM) method (NM) adapter (NI) 
SPECIAL:FORM:NoRelatedSym EncodedIssuerLen get(EncodedIssuerLen value): get (V)  | [ encoded (NM) issuer (NM) len (N) - value (NI) ]	++ :: no (DT) related (NM) sym (N)  :: encoded (NM) issuer (NM) len (N) 
SPECIAL:NAME:CCharType void appendSignature(SimpleStringBuffer buffer): append (V)  | signature (N) 	++ :: [ simple (NM) string (NM) buffer (NI) - buffer (NI) ] :: C (NM) char (NM) type (N) 
CONSTRUCTOR:NAME:ConnectionPanel ConnectionPanel ConnectionPanel():  | connection (NM) panel (N) 	++
SPECIAL:NAME:Kernel void setCurrentProcessTicks(): set (V)  | current (NM) process (NM) ticks (N) 	++ :: kernel (N) 
CONSTRUCTOR:NAME:LessThanExpr LessThanExpr LessThanExpr(UsableInExpressions left, UsableInExpressions right):  | less (DT) than (NM) expr (NI) 	++ :: [ usable (NM) in (NM) expressions (N) - left (N) ] :: [ usable (NM) in (NM) expressions (N) - right (N) ]
BASE_VERB:FORM:CommentMapperASTVisitor boolean visit(Assignment node): visit (V)  | [ assignment (N) - node (NI) ]	++ :: comment (NM) mapper (NM) AST (NM) visitor (N)  :: boolean (N) 
SPECIAL:NAME:LightGrid void setGel(int i, Color c): set (V)  | gel (N) 	++ :: [ int (N) - i (N) ] :: [ color (N) - c (N) ] :: light (NM) grid (N) 
SPECIAL:NAME:CycleDetector Set<V> findCycles(): find (V)  | cycles (N) 	++ :: set (NM) V (N)  :: cycle (NM) detector (N) 
BASE_VERB:NAME:DefaultDesktopManager void iconifyFrame(JInternalFrame frame): iconify (V)  | EQUIV[frame (N) , [ J (NM) internal (NM) frame (N) - frame (N) ]]	++ :: default (NM) desktop (NM) manager (N) 
BASE_VERB:FORM:IndexedSetJoinLogic RdfBindingSet join(RdfBindingSet set1, RdfBindingSet set2, Collection filters): join (V)  | [ rdf (NM) binding (NM) set (N) - set (NM) 1 (N) ]	++ :: [ rdf (NM) binding (NM) set (N) - set (NM) 2 (N) ] :: [ collection (N) - filters (N) ] :: indexed (NM) set (NM) join (NM) logic (N)  :: rdf (NM) binding (NM) set (N) 
ENDS_WITH_ED:NAME:void actionPerformed(ActionEvent e): handle (V) | action (NM) performed (N) 	++ :: [ action (NM) event (NI) - e (N) ] :: ANONYMOUS (N)  :: void (N) 
V_3PS:NAME:AbstractStore boolean containsKey(Object key): contains (V)  | EQUIV[key (NI) , [ object (NI) - key (NI) ]]	++ :: boolean (N)  :: abstract (NM) store (N) 
CONSTRUCTOR:NAME:BasicMobileHydrogenGroupCollection BasicMobileHydrogenGroupCollection BasicMobileHydrogenGroupCollection():  | basic (NM) mobile (NM) hydrogen (NM) group (NM) collection (N) 	++
SPECIAL:NAME:FigureEditor Rectangle2D getDecoratedBounds(Diagram diagram, Figure figure, Rectangle2D rcBounds): get (V)  | EQUIV[decorated (NM) bounds (N) , [ rectangle (NM) 2 (NM) D (N) - rc (NM) bounds (N) ]]	++ :: [ diagram (N) - diagram (N) ] :: [ figure (N) - figure (N) ] :: rectangle (NM) 2 (NM) D (N)  :: figure (NM) editor (N) 
SPECIAL:NAME:TokenMgrError static String addEscapes(String str): add (V)  | escapes (N) 	++ :: [ string (NI) - str (NI) ] :: string (NI)  :: token (NM) mgr (NM) error (N) 
SPECIAL:NAME:DomToTreeModelAdapter int getChildCount(Object parent): get (V)  | child (NM) count (N) 	++ :: [ object (NI) - parent (N) ] :: int (N)  :: dom (NM) to (NM) tree (NM) model (NM) adapter (NI) 
SPECIAL:NAME:AppPropertiesDAO void writeL(Language language): write (V)  | L (N) 	++ :: [ language (N) - language (N) ] :: app (NM) properties (NM) DAO (N) 
ENDS_WITH_ED:NAME:TreeTableModelAdapter void delayedFireTableDataChanged(): handle (V) | delayed (NM) fire (NM) table (NM) data (NM) changed (N) 	++ :: tree (NM) table (NM) model (NM) adapter (NI)  :: void (N) 
EMPTY:NONE:JavaParser boolean jj_3R_213():  | jj (PRE) 3 (D) R (PRE) 213 (D) 
SPECIAL:CLAS:ContentStatisticsBatch Object clone(): clone (V)  | content (NM) statistics (NM) batch (N) 	++ :: object (NI) 
CONSTRUCTOR:NAME:X_W_CounterCount X_W_CounterCount X_W_CounterCount(Properties ctx, ResultSet rs, String trxName):  | X (NM) W (NM) counter (NM) count (N) 	++ :: [ properties (N) - ctx (N) ] :: [ result (NM) set (N) - rs (N) ] :: [ string (NI) - trx (NM) name (NI) ]
CONSTRUCTOR:NAME:DataIntegrityViolationException DataIntegrityViolationException DataIntegrityViolationException(String msg, Throwable ex):  | data (NM) integrity (NM) violation (NM) exception (N) 	++ :: [ string (NI) - msg (NI) ] :: [ throwable (N) - ex (N) ]
BASE_VERB:NAME:VariableFindExpression void majVariable(int _idx, Variable _varToUpdate): maj (V)  | EQUIV[variable (N) , [ variable (N) - var (NM) to (NM) update (N) ]]	++ :: [ int (N) - idx (N) ] :: variable (NM) find (NM) expression (N) 
SPECIAL:NAME:MielComponentServices String readForm(String fname, String server): read (V)  | form (N) 	++ :: [ string (NI) - fname (N) ] :: [ string (NI) - server (N) ] :: string (NI)  :: miel (NM) component (NM) services (N) 
CONSTRUCTOR:NAME:NoadList NoadList NoadList(int initCap, int capIncrement):  | noad (NM) list (N) 	++ :: [ int (N) - init (NM) cap (N) ] :: [ int (N) - cap (NM) increment (N) ]
BASE_VERB:FORM:PixelCanvas void paint(Graphics theGraphics): paint (V)  | [ graphics (N) - the (DT) graphics (N) ]	++ :: pixel (NM) canvas (N) 
SPECIAL:NAME:Client Set getAccounts(): get (V)  | accounts (N) 	++ :: set (N)  :: client (N) 
BASE_VERB:NAME:AdminDatabaseUserDAO Collection<AdminDatabaseUser> selectAllDatabaseUsers(String strLastName, String strFirstName, String strEmail, AdminAuthentication authenticationService): select (V)  | all (DT) database (NM) users (N) 	++ :: [ string (NI) - str (NM) last (DT) name (NI) ] :: [ string (NI) - str (NM) first (NM) name (NI) ] :: [ string (NI) - str (NM) email (N) ] :: [ admin (NM) authentication (N) - authentication (NM) service (N) ] :: collection (NM) admin (NM) database (NM) user (N)  :: admin (NM) database (NM) user (NM) DAO (N) 
NOUN_PHRASE:NAME:HeaderCard String hierarchToString(): get (V) | hierarch (NM) to (NM) string (NI) 	++ :: header (NM) card (N)  :: string (NI) 
SPECIAL:NAME:DatabaseConverter int getLengthOfTask(): get (V)  | length (N) -- of (P) task (N) 	++ :: int (N)  :: database (NM) converter (N) 
V_3PS:NAME:boolean supportsSubqueriesInQuantifieds(): supports (V)  | subqueries (N) -- in (P) quantifieds (N) 	++ :: boolean (N)  :: ANONYMOUS (N) 
SPECIAL:NAME:ActionBase String getTranslatedLine(int host, String str): get (V)  | translated (NM) line (N) 	++ :: [ int (N) - host (N) ] :: [ string (NI) - str (NI) ] :: string (NI)  :: action (NM) base (N) 
SPECIAL:CLAS:BusinessObjectHome BusinessObject create(): create (V)  | business (NM) object (NM) home (N) 	++ :: business (NM) object (NI) 
ENDS_WITH_ED:NAME:MDIIF_DisambiguatorTool void onEventReceived(EventObject event): handle (V) | on (NM) event (NM) received (N) 	++ :: [ event (NM) object (NI) - event (NI) ] :: MDIIF (NM) disambiguator (NM) tool (N)  :: void (N) 
BASE_VERB:NAME:ReportVariableBoard void reportValue(String varName, Object value): report (V)  | EQUIV[value (NI) , [ object (NI) - value (NI) ]]	++ :: [ string (NI) - var (NM) name (NI) ] :: report (NM) variable (NM) board (N) 
SPECIAL:NAME:ConstraintNameEditPart void removeSemanticListeners(): remove (V)  | semantic (NM) listeners (N) 	++ :: constraint (NM) name (NM) edit (NM) part (N) 
SPECIAL:NAME:DataAttributeType getDataAttributeTypes(): get (V)  | data (NM) attribute (NM) types (N) 	++ :: data (NM) attribute (NM) type (N)  :: ANONYMOUS (N) 
ENDS_WITH_ED:NAME:void actionPerformed(ActionEvent e): handle (V) | action (NM) performed (N) 	++ :: [ action (NM) event (NI) - e (N) ] :: ANONYMOUS (N)  :: void (N) 
SPECIAL:NAME:GenericState String getVersion(): get (V)  | version (N) 	++ :: string (NI)  :: generic (NM) state (N) 
V_3P_IRR:NAME:DatabaseModelEditor boolean isSaveAsAllowed(): is (V)  | save (N) -- as (P) allowed (N) 	++ :: boolean (N)  :: database (NM) model (NM) editor (N) 
CONSTRUCTOR:NAME:HelpBrowser HelpBrowser HelpBrowser(Component parent, String url, URL nohelp):  | help (NM) browser (N) 	++ :: [ component (N) - parent (N) ] :: [ string (NI) - url (NI) ] :: [ URL (NI) - nohelp (N) ]
CONSTRUCTOR:NAME:ASTDoctypeExternalId ASTDoctypeExternalId ASTDoctypeExternalId(int id):  | AST (NM) doctype (NM) external (NM) id (NI) 	++ :: [ int (N) - id (NI) ]
PREP:NAME:AbstractDGAction String toString(): convert (V) | to (P) string (NI) 	++ :: abstract (NM) DG (NM) action (N)  :: string (NI) 
CONSTRUCTOR:NAME:Entity Entity Entity(int xSize, int ySize, int xPosition, int yPosition, Main main, String file, MapCanvas map):  | entity (N) 	++ :: [ int (N) - x (NM) size (N) ] :: [ int (N) - y (NM) size (N) ] :: [ int (N) - x (NM) position (N) ] :: [ int (N) - y (NM) position (N) ] :: [ main (N) - main (N) ] :: [ string (NI) - file (NI) ] :: [ map (NM) canvas (N) - map (N) ]
PREP:NAME:FileConverter String toString(): convert (V) | to (P) string (NI) 	++ :: file (NM) converter (N)  :: string (NI) 
SPECIAL:NAME:Sub String getOnmouseup(): get (V)  | onmouseup (N) 	++ :: string (NI)  :: sub (N) 
BASE_VERB:NAME:Draw static void reqPolyFillRectangle(Client c, Drawable d, GC gc): req (PRE) poly (V)  | fill (NM) rectangle (N) 	++ :: [ client (N) - c (N) ] :: [ drawable (N) - d (N) ] :: [ GC (N) - gc (N) ] :: draw (N) 
SPECIAL:NAME:SimpleGenerator External createNewExternal(): create (V)  | new (NM) external (N) 	++ :: external (N)  :: simple (NM) generator (N) 
EVENT_PARAM:NAME:RssDropListener void dragExit(DropTargetEvent e): handle (V) | drag (NM) exit (N) 	++ :: [ drop (NM) target (NM) event (NI) - e (N) ] :: rss (NM) drop (NM) listener (N)  :: void (N) 
SPECIAL:NAME:DERUniversalString static DERUniversalString getInstance(Object obj): get (V)  | instance (NI) 	++ :: [ object (NI) - obj (NI) ] :: DER (NM) universal (NM) string (NI)  :: DER (NM) universal (NM) string (NI) 
SPECIAL:NAME:HtmlInputText void setStyle(String style): set (V)  | style (N) 	++ :: [ string (NI) - style (N) ] :: html (NM) input (NM) text (NI) 
SPECIAL:NAME:SimpleParser void addOrderBy(SelectionQuery query, String queryString, Map tables): add (V)  | order (N) -- by (P) [ selection (NM) query (N) - query (N) ]	++ :: [ selection (NM) query (N) - query (N) ] :: [ string (NI) - query (NM) string (NI) ] :: [ map (N) - tables (N) ] :: simple (NM) parser (N) 
PREP:NAME:AutoSaveInfoImpl String toString(): convert (V) | to (P) string (NI) 	++ :: auto (NM) save (NM) info (NM) impl (NI)  :: string (NI) 
SPECIAL:FORM:PrintStream void print(String str, boolean println): print (V)  | [ string (NI) - str (NI) ]	++ :: [ boolean (N) - println (N) ] :: print (NM) stream (NI) 
SPECIAL:NAME:HtmlDoclet void printClassMenuList(HtmlPage output, ClassDoc classDocs, boolean categorized): print (V)  | class (NM) menu (NM) list (N) 	++ :: [ html (NM) page (N) - output (N) ] :: [ class (NM) doc (NI) - class (NM) docs (N) ] :: [ boolean (N) - categorized (N) ] :: html (NM) doclet (N) 
BASE_VERB:NAME:PacketUtils static int calculatePadLength(int lengthOfUnpaddedPacket): calculate (V)  | pad (NM) length (N) 	++ :: [ int (N) - length (NM) of (NM) unpadded (NM) packet (N) ] :: int (N)  :: packet (NM) utils (N) 
CONSTRUCTOR:NAME:ExpressioInstruccio ExpressioInstruccio ExpressioInstruccio(byte _code, Object _param):  | expressio (NM) instruccio (N) 	++ :: [ byte (N) - code (NI) ] :: [ object (NI) - param (N) ]
BASE_VERB:FORM:Factory static XorType parse(String xmlAsString, XmlOptions options): parse (V)  | [ string (NI) - xml (NM) as (NM) string (NI) ]	++ :: [ xml (NM) options (N) - options (N) ] :: factory (N)  :: xor (NM) type (N) 
SPECIAL:NAME:EllipticalEndShape Image getIcon(): get (V)  | icon (N) 	++ :: image (N)  :: elliptical (NM) end (NM) shape (N) 
SPECIAL:NAME:FontDescriptorDecorator Object getPropertyValue(Object obj): get (V)  | property (NM) value (NI) 	++ :: [ object (NI) - obj (NI) ] :: object (NI)  :: font (NM) descriptor (NM) decorator (N) 
SPECIAL:NAME:TaxonParentGroup TaxonParentGroup getTaxonParentGroup(TaxonParentFilter filter): get (V)  | taxon (NM) parent (NM) group (N) 	++ :: [ taxon (NM) parent (NM) filter (N) - filter (N) ] :: taxon (NM) parent (NM) group (N)  :: taxon (NM) parent (NM) group (N) 
CONSTRUCTOR:NAME:HTTPOutputStream HTTPOutputStream HTTPOutputStream(OutputStream is):  | HTTP (NM) output (NM) stream (NI) 	++ :: [ output (NM) stream (NI) - is (N) ]
CONSTRUCTOR:NAME:BMPInfoHeader BMPInfoHeader BMPInfoHeader(ImageOutputStream out, IIOImage im, ImageWriteParam param):  | BMP (NM) info (NM) header (N) 	++ :: [ image (NM) output (NM) stream (NI) - out (N) ] :: [ IIO (NM) image (N) - im (N) ] :: [ image (NM) write (NM) param (N) - param (N) ]
NOUN_PHRASE:NAME:DeviceImpl static Class PRIMARY_INTERFACE_CLASS(): get (V) | PRIMARY (NM) INTERFACE (NM) CLASS (NI) 	++ :: device (NM) impl (NI)  :: class (NI) 
SPECIAL:NAME:ParserTest void testPattern11(): test (VI)  | pattern (N) 11 (D) 	++ :: parser (NM) test (N) 
BASE_VERB:CLAS:AssignmentNodeModel void finalize(): finalize (VI)  | assignment (NM) node (NM) model (NI) 	++
BASE_VERB:NAME:RegularPolygon StyleName xgetStyleName2(): xget (V)  | style (NM) name (NI) 2 (D) 	++ :: style (NM) name (NI)  :: regular (NM) polygon (N) 
SPECIAL:NAME:IppPrintService AttributeSet getUnsupportedAttributes(DocFlavor flavor, AttributeSet attributes): get (V)  | EQUIV[unsupported (NM) attributes (N) , [ attribute (NM) set (N) - attributes (N) ]]	++ :: [ doc (NM) flavor (N) - flavor (N) ] :: attribute (NM) set (N)  :: ipp (NM) print (NM) service (N) 
SPECIAL:FORM:PSGr Graphics create(int x, int y, int width, int height): create (V)  | [ int (N) - x (N) ]	++ :: [ int (N) - y (N) ] :: [ int (N) - width (N) ] :: [ int (N) - height (N) ] :: PS (NM) gr (N)  :: graphics (N) 
BASE_VERB:NAME:FrameControllerList static void centerWindowOnScreen(Window window): center (V)  | EQUIV[window (N) , [ window (N) - window (N) ]]-- on (P) screen (N) 	++ :: frame (NM) controller (NM) list (N) 
BASE_VERB:NAME:CmrMappingTests void validateOneToManyRelationship(): validate (VI)  | one (N) -- to (P) many (DT) relationship (N) 	++ :: cmr (NM) mapping (NM) tests (N) 
SPECIAL:NAME:CosmDataList int getMaxPressure(): get (V)  | max (NM) pressure (N) 	++ :: int (N)  :: cosm (NM) data (NM) list (N) 
NOUN_PHRASE:NAME:IconDefault String justBase(String pBaseIconLocation): get (V) | just (NM) base (N) 	++ :: [ string (NI) - p (NM) base (NM) icon (NM) location (NI) ] :: icon (NM) default (N)  :: string (NI) 
PREP:NAME:LnFunction double of(double d, int numParam):  | of (P) 	++ :: [ double (N) - d (N) ] :: [ int (N) - num (NM) param (N) ] :: ln (NM) function (N)  :: double (N) 
V_3P_IRR:NAME:ButtonGroup boolean isSelected(AbstractButton button_): is (V)  | selected (N) 	++ :: [ abstract (NM) button (N) - button (N) ] :: boolean (N)  :: button (NM) group (N) 
V_3P_IRR:NAME:CIM_TokenRingPortStatisticsHelper static boolean isValid_FrameCopiedErrors(UnsignedInt32 FrameCopiedErrors): is (V)  | EQUIV[valid (NM) frame (NM) copied (NM) errors (N) , [ unsigned (NM) int (NM) 32 (N) - frame (NM) copied (NM) errors (N) ]]	++ :: boolean (N)  :: CIM (NM) token (NM) ring (NM) port (NM) statistics (NM) helper (N) 
CONSTRUCTOR:NAME:WorldCalendar WorldCalendar WorldCalendar(int time):  | world (NM) calendar (N) 	++ :: [ int (N) - time (N) ]
SPECIAL:NAME:VersionData void setDownloadUrl(URL downloadUrl): set (V)  | download (NM) url (NI) 	++ :: [ URL (NI) - download (NM) url (NI) ] :: version (NM) data (NI) 
V_MODAL:NAME:InvocationInProgress boolean shouldSendResults(): should (VI) send (V)  | results (N) 	++ :: boolean (N)  :: invocation (NM) in (NM) progress (N) 
SPECIAL:NAME:PreparedStatementInvocationHandler void setDynamicParam(int parameterIndex, Object obj, Calendar calendar): set (V)  | dynamic (NM) param (N) 	++ :: [ int (N) - parameter (NM) index (NI) ] :: [ object (NI) - obj (NI) ] :: [ calendar (N) - calendar (N) ] :: prepared (NM) statement (NM) invocation (NM) handler (N) 
SPECIAL:NAME:PerformDataTasks void doBoth(HttpServletRequest request, HttpServletResponse response, HttpSession session, ServletParameters in, HTMLPrintWriter out): do (VI)  | both (DT) 	++ :: [ http (NM) servlet (NM) request (N) - request (N) ] :: [ http (NM) servlet (NM) response (N) - response (N) ] :: [ http (NM) session (N) - session (N) ] :: [ servlet (NM) parameters (N) - in (NI) ] :: [ HTML (NM) print (NM) writer (N) - out (N) ] :: perform (NM) data (NM) tasks (N) 
SPECIAL:CLAS:LeviathanBoard void loadFromFile(File f): load (V)  | leviathan (NM) board (N) -- from (P) EQUIV[file (NI) , [ file (NI) - f (N) ]]	++
BASE_VERB:FORM:Substr void link(TableFieldsMapper fm): link (V)  | [ table (NM) fields (NM) mapper (N) - fm (N) ]	++ :: substr (N) 
SPECIAL:FORM:CompareDialog void btnCompare(ActionEvent e): btn (PRE) compare (V)  | [ action (NM) event (NI) - e (N) ]	++ :: compare (NM) dialog (N) 
CONSTRUCTOR:NAME:LobUtil LobUtil LobUtil():  | lob (NM) util (N) 	++
CONSTRUCTOR:NAME:TypeCheckInstrumentor TypeCheckInstrumentor TypeCheckInstrumentor(String violationmacro):  | type (NM) check (NM) instrumentor (N) 	++ :: [ string (NI) - violationmacro (N) ]
CONSTRUCTOR:NAME:Multi_stage2 Multi_stage2 Multi_stage2(patInt a, patInt b, Pattern p):  | multi (NM) stage (NM) 2 (N) 	++ :: [ pat (NM) int (N) - a (N) ] :: [ pat (NM) int (N) - b (N) ] :: [ pattern (N) - p (NI) ]
SPECIAL:NAME:ConnectionExplorer Object readResolve(): read (V)  | resolve (N) 	++ :: object (NI)  :: connection (NM) explorer (N) 
V_3P_IRR:NAME:ValueTreeNode boolean isLeaf(): is (V)  | leaf (N) 	++ :: boolean (N)  :: value (NM) tree (NM) node (NI) 
CONSTRUCTOR:NAME:Version Version Version(String versionStr):  | version (N) 	++ :: [ string (NI) - version (NM) str (NI) ]
SPECIAL:NAME:CTabFolder void addCTabFolder2Listener(CTabFolder2Listener listener): add (V)  | EQUIV[C (NM) tab (NM) folder (NM) 2 (D) listener (N) , [ C (NM) tab (NM) folder (NM) 2 (NM) listener (N) - listener (N) ]]	++ :: C (NM) tab (NM) folder (N) 
CONSTRUCTOR:NAME:Entity Entity Entity(Identifier identifier, PortList ports):  | entity (N) 	++ :: [ identifier (NI) - identifier (NI) ] :: [ port (NM) list (N) - ports (N) ]
NOUN_PHRASE:NAME:Double static Double valueOf(String s): get (V) | value (NM) of (N) 	++ :: [ string (NI) - s (N) ] :: double (N)  :: double (N) 
NOUN_PHRASE:NAME:ActionLexer static long mk_tokenSet_12(): get (V) | mk (PRE) token (NM) set (N) 12 (D) 	++ :: action (NM) lexer (N)  :: long (N) 
EMPTY:NONE:GenReduce static boolean n61(CleanVM vm):  | n (PRE) 61 (D) 
SPECIAL:NAME:Header void setName(String name): set (V)  | name (NI) 	++ :: [ string (NI) - name (NI) ] :: header (N) 
SPECIAL:CLAS:AbstractServlet void init(): init (V)  | abstract (NM) servlet (N) 	++
SPECIAL:NAME:ParameterDefinition void setPossibleValues(List values): set (V)  | possible (NM) values (N) 	++ :: [ list (N) - values (N) ] :: parameter (NM) definition (NI) 
V_3P_IRR:NAME:OpenMBeanParameterInfoSupport boolean isValue(Object obj): is (V)  | value (NI) 	++ :: [ object (NI) - obj (NI) ] :: boolean (N)  :: open (NM) M (NM) bean (NM) parameter (NM) info (NM) support (N) 
ENDS_WITH_ED:NAME:CancelListener void actionPerformed(ActionEvent _e): handle (V) | action (NM) performed (N) 	++ :: [ action (NM) event (NI) - e (N) ] :: cancel (NM) listener (N)  :: void (N) 
SPECIAL:NAME:HIcon int getNavigationKeys(): get (V)  | navigation (NM) keys (N) 	++ :: int (N)  :: H (NM) icon (N) 
SPECIAL:FORM:void set(Object o): set (V)  | [ object (NI) - o (N) ]	++ :: ANONYMOUS (N) 
SPECIAL:NAME:DefaultSkin String getAttribute(String name): get (V)  | attribute (N) 	++ :: [ string (NI) - name (NI) ] :: string (NI)  :: default (NM) skin (N) 
BASE_VERB:NAME:RemoteMBeanServerConnection Set<ObjectName> queryNames(ObjectName name, QueryExp query): query (V)  | names (N) 	++ :: [ object (NM) name (NI) - name (NI) ] :: [ query (NM) exp (N) - query (N) ] :: set (NM) object (NM) name (NI)  :: remote (NM) M (NM) bean (NM) server (NM) connection (N) 
SPECIAL:NAME:Config Dimen getDimParam(int param): get (V)  | EQUIV[dim (NM) param (N) , [ int (N) - param (N) ]]	++ :: dimen (N)  :: config (NI) 
CONSTRUCTOR:NAME:MethodCondition MethodCondition MethodCondition(Method method, String condExpr, boolean staticCall):  | method (NM) condition (N) 	++ :: [ method (N) - method (N) ] :: [ string (NI) - cond (NM) expr (NI) ] :: [ boolean (N) - static (NM) call (N) ]
SPECIAL:NAME:HiddenFieldCheck void setIgnoreAbstractMethods(boolean aIgnoreAbstractMethods): set (V)  | ignore (NM) abstract (NM) methods (N) 	++ :: [ boolean (N) - a (NM) ignore (NM) abstract (NM) methods (N) ] :: hidden (NM) field (NM) check (N) 
SPECIAL:NAME:Town int getJudet_id(): get (V)  | judet (NM) id (NI) 	++ :: int (N)  :: town (N) 
CONSTRUCTOR:NAME:DecorationStylePanel DecorationStylePanel DecorationStylePanel(Layer layer, Collection choosableStyleClasses):  | decoration (NM) style (NM) panel (N) 	++ :: [ layer (N) - layer (N) ] :: [ collection (N) - choosable (NM) style (NM) classes (N) ]
CONSTRUCTOR:NAME:ForkedTestConfiguration ForkedTestConfiguration ForkedTestConfiguration(boolean filterTrace, boolean haltOnError, boolean haltOnFailure, String errorProperty, String failureProperty):  | forked (NM) test (NM) configuration (NI) 	++ :: [ boolean (N) - filter (NM) trace (N) ] :: [ boolean (N) - halt (NM) on (NM) error (N) ] :: [ boolean (N) - halt (NM) on (NM) failure (N) ] :: [ string (NI) - error (NM) property (N) ] :: [ string (NI) - failure (NM) property (N) ]
BASE_VERB:FORM:DuplicatingStyleVisitor void visit(Displacement dis): visit (V)  | [ displacement (N) - dis (N) ]	++ :: duplicating (NM) style (NM) visitor (N) 
BASE_VERB:NAME:HelpReportPanel void handleSelectable(String cmd, Component current): handle (VI)  | selectable (N) 	++ :: [ string (NI) - cmd (N) ] :: [ component (N) - current (N) ] :: help (NM) report (NM) panel (N) 
CONSTRUCTOR:NAME:InternalNode InternalNode InternalNode():  | internal (NM) node (NI) 	++
SPECIAL:NAME:JadOptions void setSafe(boolean safe): set (V)  | safe (N) 	++ :: [ boolean (N) - safe (N) ] :: jad (NM) options (N) 
PREP:NAME:StringUtils static String toStrings(Object objects_): convert (V) | to (P) strings (N) 	++ :: [ object (NI) - objects (N) ] :: string (NM) utils (N)  :: string (NI) 
SPECIAL:NAME:CurrentStateBean void setCurrentProgram(String argProgram): set (V)  | current (NM) program (N) 	++ :: [ string (NI) - arg (NM) program (N) ] :: current (NM) state (NM) bean (NI) 
SPECIAL:FORM:SecretBox void sort(int column): sort (V)  | [ int (N) - column (N) ]	++ :: secret (NM) box (N) 
CONSTRUCTOR:NAME:FatalDeliveryException FatalDeliveryException FatalDeliveryException(String in, Throwable e):  | fatal (NM) delivery (NM) exception (N) 	++ :: [ string (NI) - in (NI) ] :: [ throwable (N) - e (N) ]
CONSTRUCTOR:NAME:PowerPosIntegerExponent PowerPosIntegerExponent PowerPosIntegerExponent(Expression expr1, ConstPositive expr2):  | power (NM) pos (NM) integer (NM) exponent (N) 	++ :: [ expression (N) - expr (NM) 1 (N) ] :: [ const (NM) positive (N) - expr (NM) 2 (N) ]
SPECIAL:NAME:LinkTag void setRef(String ref): set (V)  | ref (NI) 	++ :: [ string (NI) - ref (NI) ] :: link (NM) tag (NI) 
SPECIAL:NAME:PopStateMachine TokenResult doPopReply(PopReply replyT): do (VI) pop (V)  | EQUIV[reply (N) , [ pop (NM) reply (N) - reply (NM) T (N) ]]	++ :: token (NM) result (N)  :: pop (NM) state (NM) machine (N) 
NOUN_PHRASE:NAME:NullCipherImpl AlgorithmParameters engineGetParameters(): get (V) | engine (NM) get (NM) parameters (N) 	++ :: null (NM) cipher (NM) impl (NI)  :: algorithm (NM) parameters (N) 
BASE_VERB:NAME:PShrimpNode void recomputeInnerBounds(): recompute (V)  | inner (NM) bounds (N) 	++ :: P (NM) shrimp (NM) node (NI) 
PREP:NAME:AbstractBlog String toString(): convert (V) | to (P) string (NI) 	++ :: abstract (NM) blog (N)  :: string (NI) 
SPECIAL:FORM:Demutex Object delete(String name): delete (V)  | [ string (NI) - name (NI) ]	++ :: demutex (N)  :: object (NI) 
CONSTRUCTOR:NAME:ConceptNotExpandableHolder ConceptNotExpandableHolder ConceptNotExpandableHolder(ConceptNotExpandable initial):  | concept (NM) not (DT) expandable (NM) holder (NI) 	++ :: [ concept (NM) not (DT) expandable (N) - initial (N) ]
SPECIAL:NAME:ProviderProcessor void setContext(ComponentContext context): set (V)  | context (N) 	++ :: [ component (NM) context (N) - context (N) ] :: provider (NM) processor (N) 
BASE_VERB:FORM:TextStemmer static void stem(IEText text): stem (V)  | [ IE (NM) text (NI) - text (NI) ]	++ :: text (NM) stemmer (N) 
SPECIAL:FORM:SearchLimit void init(SearchNode node): init (V)  | [ search (NM) node (NI) - node (NI) ]	++ :: search (NM) limit (N) 
SPECIAL:NAME:InclusionPanel int getBboxWidth(): get (V)  | bbox (NM) width (N) 	++ :: int (N)  :: inclusion (NM) panel (N) 
BASE_VERB:NAME:DrillDownDefinitions Enumeration enumerateDrillDownDefinition(): enumerate (V)  | drill (NM) down (NM) definition (NI) 	++ :: enumeration (N)  :: drill (NM) down (NM) definitions (N) 
SPECIAL:NAME:ExceptionConfig void setScope(String scope): set (V)  | scope (N) 	++ :: [ string (NI) - scope (N) ] :: exception (NM) config (NI) 
PREP:NAME:PlatformApplicationManager void onAfterLogin(): handle (V) | on (NM) after (NM) login (N) 	++ :: platform (NM) application (NM) manager (N)  :: void (N) 
SPECIAL:NAME:DataSet static StringBuffer removeFormat(StringBuffer value, String tag): remove (V)  | format (NI) 	++ :: [ string (NM) buffer (NI) - value (NI) ] :: [ string (NI) - tag (NI) ] :: string (NM) buffer (NI)  :: data (NM) set (N) 
EVENT_PARAM:NAME:BorderStyleChangeHandler void propertyChange(PropertyChangeEvent evt): handle (V) | property (NM) change (N) 	++ :: [ property (NM) change (NM) event (NI) - evt (N) ] :: border (NM) style (NM) change (NM) handler (N)  :: void (N) 
CONSTRUCTOR:NAME:AddClockCRIExperiment AddClockCRIExperiment AddClockCRIExperiment(ConfigurableRandomInputExperiment crie):  | add (NM) clock (NM) CRI (NM) experiment (N) 	++ :: [ configurable (NM) random (NM) input (NM) experiment (N) - crie (N) ]
BASE_VERB:NAME:CMLZMatrix void makeZMatrix(CMLElement element): make (V)  | Z (NM) matrix (N) 	++ :: [ CML (NM) element (NI) - element (NI) ] :: CMLZ (NM) matrix (N) 
CONSTRUCTOR:NAME:FooterRecord FooterRecord FooterRecord():  | footer (NM) record (N) 	++
SPECIAL:NAME:MZone void addTop(MCard card): add (V)  | top (N) 	++ :: [ M (NM) card (N) - card (N) ] :: M (NM) zone (N) 
SPECIAL:NAME:SetToken int getType(): get (V)  | type (N) 	++ :: int (N)  :: set (NM) token (N) 
SPECIAL:NAME:FavoritesVFS static void loadFavorites(): load (V)  | favorites (N) 	++ :: favorites (NM) VFS (N) 
SPECIAL:NAME:Encoder static char getSeparator(): get (V)  | separator (N) 	++ :: char (N)  :: encoder (N) 
SPECIAL:NAME:X_AD_PInstance_Log int getP_ID(): get (V)  | P (NM) ID (NI) 	++ :: int (N)  :: X (NM) AD (NM) P (NM) instance (NM) log (N) 
BASE_VERB:FORM:Factory static IdmapElt parse(XMLInputStream xis, XmlOptions options): parse (V)  | [ XML (NM) input (NM) stream (NI) - xis (N) ]	++ :: [ xml (NM) options (N) - options (N) ] :: factory (N)  :: idmap (NM) elt (NI) 
SPECIAL:NAME:User void setPassword(String password): set (V)  | password (N) 	++ :: [ string (NI) - password (N) ] :: user (N) 
BASE_VERB:NAME:DefaultHeaderDlg void changeHeaderFilePath(String NewHeaderFilePath): change (V)  | EQUIV[header (NM) file (NM) path (NI) , [ string (NI) - new (NM) header (NM) file (NM) path (NI) ]]	++ :: default (NM) header (NM) dlg (N) 
SPECIAL:NAME:FsLocation IFile getCridFile(String name): get (V)  | crid (NM) file (NI) 	++ :: [ string (NI) - name (NI) ] :: I (NM) file (NI)  :: fs (NM) location (NI) 
BASE_VERB:FORM:Connection void resign(Game game): resign (V)  | [ game (N) - game (N) ]	++ :: connection (N) 
CONSTRUCTOR:NAME:SaveNodeAction SaveNodeAction SaveNodeAction(UiNodeType type, String name):  | save (NM) node (NM) action (N) 	++ :: [ ui (NM) node (NM) type (N) - type (N) ] :: [ string (NI) - name (NI) ]
BASE_VERB:CLAS:IpodOptionsTab void save(): save (V)  | ipod (NM) options (NM) tab (N) 	++
SPECIAL:NAME:OrientationInterpolator Field getValueField(): get (V)  | value (NM) field (N) 	++ :: field (N)  :: orientation (NM) interpolator (N) 
SPECIAL:CLAS:UserGroups UserGroup getForName(String name): get (V)  | user (NM) groups (N) -- for (P) EQUIV[name (NI) , [ string (NI) - name (NI) ]]	++ :: user (NM) group (N) 
BASE_VERB:CLAS:AHDInterpolator void interpolate(): interpolate (V)  | AHD (NM) interpolator (N) 	++
SPECIAL:NAME:XsdDuration int getYears(): get (V)  | years (N) 	++ :: int (N)  :: xsd (NM) duration (N) 
BASE_VERB:FORM:AuthorityFactoryAdapter void store(Key key, AuthorityFactory factory): store (V)  | [ key (NI) - key (NI) ]	++ :: [ authority (NM) factory (N) - factory (N) ] :: authority (NM) factory (NM) adapter (NI) 
SPECIAL:NAME:XBaseInputMeta String getXML(): get (V)  | XML (N) 	++ :: string (NI)  :: X (NM) base (NM) input (NM) meta (N) 
SPECIAL:FORM:BreadthStrategy int compare(Activation left, Activation right): compare (V)  | [ activation (N) - left (N) ]	++ :: [ activation (N) - right (N) ] :: breadth (NM) strategy (N)  :: int (N) 
SPECIAL:NAME:MOFtoGDMO_Translator ASN_Specifications getASNSpecifications(): get (V)  | ASN (NM) specifications (N) 	++ :: ASN (NM) specifications (N)  :: MO (NM) fto (NM) GDMO (NM) translator (N) 
V_3PS:FORM:ComposedActionArrayList boolean equals(Object o): equals (V)  | [ object (NI) - o (N) ]	++ :: composed (NM) action (NM) array (NM) list (N)  :: boolean (N) 
NOUN_PHRASE:NAME:JEANAPI static JEANAPI newJEANAPI(File jeandir, String applicationName): get (V) | new (NM) JEANAPI (N) 	++ :: [ file (NI) - jeandir (N) ] :: [ string (NI) - application (NM) name (NI) ] :: JEANAPI (N)  :: JEANAPI (N) 
SPECIAL:NAME:DbBaseFrame static List getSelectedItemsAssociated(JTable table, Class target, String property): get (V)  | selected (NM) items (NM) associated (N) 	++ :: [ J (NM) table (N) - table (N) ] :: [ class (NI) - target (N) ] :: [ string (NI) - property (N) ] :: list (N)  :: db (NM) base (NM) frame (N) 
NOUN_PHRASE:NAME:RiffFile long CurrentFilePosition(): get (V) | current (NM) file (NM) position (N) 	++ :: riff (NM) file (NI)  :: long (N) 
SPECIAL:NAME:NumericTextField void setText(String s): set (V)  | text (NI) 	++ :: [ string (NI) - s (N) ] :: numeric (NM) text (NM) field (N) 
CONSTRUCTOR:NAME:RecordedEventDisplay RecordedEventDisplay RecordedEventDisplay():  | recorded (NM) event (NM) display (N) 	++
SPECIAL:NAME:SchemaAttributeTest void testGetUse1(): test (VI) get (V)  | use (N) 1 (D) 	++ :: schema (NM) attribute (NM) test (N) 
SPECIAL:FORM:DDNS void write(String text, String category): write (V)  | [ string (NI) - text (NI) ]	++ :: [ string (NI) - category (N) ] :: DDNS (N) 
V_3P_IRR:NAME:PathTokenizer boolean hasMoreTokens(): has (V)  | more (DT) tokens (N) 	++ :: boolean (N)  :: path (NM) tokenizer (N) 
BASE_VERB:CLAS:DateUtils static String convertToTimestamp(Date value): convert (V)  | date (NM) utils (N) -- to (P) timestamp (N) 	++ :: [ date (N) - value (NI) ] :: string (NI) 
BASE_VERB:FORM:Chant_BrownMold boolean invoke(MOB mob, Vector commands, Environmental givenTarget, boolean auto, int asLevel): invoke (VI)  | [ MOB (N) - mob (N) ]	++ :: [ vector (N) - commands (N) ] :: [ environmental (N) - given (NM) target (N) ] :: [ int (N) - as (NM) level (N) ] :: chant (NM) brown (NM) mold (N)  :: [ boolean (N) - auto (N) ] :: boolean (N) 
SPECIAL:NAME:ComponentDataBlitOp Point2D getPoint2D(Point2D srcPoint, Point2D destPoint): get (V)  | EQUIV[point (NM) 2 (D) D (N) , [ point (NM) 2 (NM) D (N) - src (NM) point (N) ], [ point (NM) 2 (NM) D (N) - dest (NM) point (N) ]]	++ :: point (NM) 2 (NM) D (N)  :: component (NM) data (NM) blit (NM) op (N) 
BASE_VERB:NAME:Util static void listFiles(String baseDir, String root, List toZip): list (V)  | files (N) 	++ :: [ string (NI) - base (NM) dir (NI) ] :: [ string (NI) - root (N) ] :: [ list (N) - to (NM) zip (N) ] :: util (N) 
SPECIAL:NAME:HTMLFrameSetElement void setRows(String rows): set (V)  | rows (N) 	++ :: [ string (NI) - rows (N) ] :: HTML (NM) frame (NM) set (NM) element (NI) 
BASE_VERB:NAME:TreeBrowser void insertNode(BrowserTreeNode nodeToInsert, SortingParentNode parentNode): insert (V)  | EQUIV[node (NI) , [ browser (NM) tree (NM) node (NI) - node (NM) to (NM) insert (N) ], [ sorting (NM) parent (NM) node (NI) - parent (NM) node (NI) ]]	++ :: tree (NM) browser (N) 
SPECIAL:NAME:ISecurityRemote List<ApplicationSettingValueModel> getSettings(ApplicationSettingReference setting, ISettingContext context, ServiceCall call): get (V)  | settings (N) 	++ :: [ application (NM) setting (NM) reference (NI) - setting (N) ] :: [ I (NM) setting (NM) context (N) - context (N) ] :: [ service (NM) call (N) - call (N) ] :: list (NM) application (NM) setting (NM) value (NM) model (NI)  :: I (NM) security (NM) remote (N) 
CONSTRUCTOR:NAME:MailMonitor MailMonitor MailMonitor(MessageServiceHandler msh):  | mail (NM) monitor (N) 	++ :: [ message (NM) service (NM) handler (N) - msh (N) ]
BASE_VERB:NAME:AccurateScale void paintIcon(Graphics2D g2, ImageObserver component): paint (V)  | icon (N) 	++ :: [ graphics (NM) 2 (NM) D (N) - g (NM) 2 (N) ] :: [ image (NM) observer (N) - component (N) ] :: accurate (NM) scale (N) 
SPECIAL:FORM:AbstractXSet boolean remove(Object e): remove (V)  | [ object (NI) - e (N) ]	++ :: abstract (NM) X (NM) set (N)  :: boolean (N) 
BASE_VERB:CLAS:SQLStack boolean empty(): empty (V)  | SQL (NM) stack (N) 	++ :: boolean (N) 
SPECIAL:NAME:X_PA_Report void setListSources(boolean ListSources): set (V)  | list (NM) sources (N) 	++ :: [ boolean (N) - list (NM) sources (N) ] :: X (NM) PA (NM) report (N) 
SPECIAL:NAME:HtmlTable void setTheme(String theme): set (V)  | theme (N) 	++ :: [ string (NI) - theme (N) ] :: html (NM) table (N) 
SPECIAL:NAME:IndicationOfInterest BenchmarkCurveName getBenchmarkCurveName(): get (V)  | benchmark (NM) curve (NM) name (NI) 	++ :: benchmark (NM) curve (NM) name (NI)  :: indication (NM) of (NM) interest (N) 
BASE_VERB:FORM:WriterHelper void comment(String comment): comment (V)  | [ string (NI) - comment (N) ]	++ :: writer (NM) helper (N) 
BASE_VERB:FORM:SAXParser void parse(InputSource is, HandlerBase hb): parse (V)  | [ input (NM) source (NI) - is (N) ]	++ :: [ handler (NM) base (N) - hb (N) ] :: SAX (NM) parser (N) 
BASE_VERB:CLAS:SpeakersIdentDb void close(): close (V)  | speakers (NM) ident (NM) db (N) 	++
V_3P_IRR:NAME:JListChooser boolean isEditable(): is (V)  | editable (N) 	++ :: boolean (N)  :: J (NM) list (NM) chooser (N) 
SPECIAL:NAME:CMakeScannerMgr RuleBasedPartitionScanner getStringScanner(): get (V)  | string (NM) scanner (N) 	++ :: rule (NM) based (NM) partition (NM) scanner (N)  :: C (NM) make (NM) scanner (NM) mgr (N) 
SPECIAL:NAME:JoglBase DisplayMode findDisplayMode(Dimension dim): find (V)  | display (NM) mode (N) 	++ :: [ dimension (N) - dim (N) ] :: display (NM) mode (N)  :: jogl (NM) base (N) 
SPECIAL:NAME:ConfigEditorNode void setInboundFilesLink(String defaultInboundFilesLink): set (V)  | inbound (NM) files (NM) link (N) 	++ :: [ string (NI) - default (NM) inbound (NM) files (NM) link (N) ] :: config (NM) editor (NM) node (NI) 
SPECIAL:NAME:ObjectFactory PgdbAuthors createPgdbAuthors(): create (V)  | pgdb (NM) authors (N) 	++ :: pgdb (NM) authors (N)  :: object (NM) factory (N) 
SPECIAL:CLAS:SQLProcessor int executeUpdate(): execute (VI) update (V)  | SQL (NM) processor (N) 	++ :: int (N) 
CONSTRUCTOR:NAME:DefaultResultsBodyCellWriter DefaultResultsBodyCellWriter DefaultResultsBodyCellWriter():  | default (NM) results (NM) body (NM) cell (NM) writer (N) 	++
CONSTRUCTOR:NAME:DynamicListenerControllerImpl DynamicListenerControllerImpl DynamicListenerControllerImpl(Class listenerInterface):  | dynamic (NM) listener (NM) controller (NM) impl (NI) 	++ :: [ class (NI) - listener (NM) interface (NI) ]
BASE_VERB:CLAS:UserAgentServerImpl void restart(): restart (V)  | user (NM) agent (NM) server (NM) impl (NI) 	++
NOUN_PHRASE:NAME:IntHashMap IntIterator keyIterator(): get (V) | key (NM) iterator (N) 	++ :: int (NM) hash (NM) map (N)  :: int (NM) iterator (N) 
CONSTRUCTOR:NAME:MaximumCapacityPatternCache MaximumCapacityPatternCache MaximumCapacityPatternCache(PatternCompiler compiler):  | maximum (NM) capacity (NM) pattern (NM) cache (N) 	++ :: [ pattern (NM) compiler (N) - compiler (N) ]
CONSTRUCTOR:NAME:LinkListModel LinkListModel LinkListModel(List links):  | link (NM) list (NM) model (NI) 	++ :: [ list (N) - links (N) ]
BASE_VERB:NAME:PyLong PyObject long___invert__(): long (V)  | invert (N) 	++ :: py (NM) object (NI)  :: py (NM) long (N) 
NOUN_PHRASE:NAME:Object newInstance(Object parent): get (V) | new (NM) instance (NI) 	++ :: [ object (NI) - parent (N) ] :: ANONYMOUS (N)  :: object (NI) 
SPECIAL:FORM:RequestHeader Object get(Object key): get (V)  | [ object (NI) - key (NI) ]	++ :: request (NM) header (N)  :: object (NI) 
NOUN_PHRASE:NAME:StringBuffer int indexOf(String str, int fromIndex): get (V) | index (NM) of (N) 	++ :: [ string (NI) - str (NI) ] :: [ int (N) - from (NM) index (NI) ] :: string (NM) buffer (NI)  :: int (N) 
BASE_VERB:NAME:Strings static String rightTrunc(String str, int amount): right (V)  | trunc (N) 	++ :: [ string (NI) - str (NI) ] :: [ int (N) - amount (N) ] :: string (NI)  :: strings (N) 
SPECIAL:NAME:Sys static void loadLibrary(String lib_name): load (V)  | library (N) 	++ :: [ string (NI) - lib (NM) name (NI) ] :: sys (N) 
ENDS_WITH_ED:NAME:void actionPerformed(ActionEvent evt): handle (V) | action (NM) performed (N) 	++ :: [ action (NM) event (NI) - evt (N) ] :: ANONYMOUS (N)  :: void (N) 
SPECIAL:NAME:Create_sg_ev_rec_ack Sg_recommendationTYPE getSg_recommendation(): get (V)  | sg (NM) recommendation (N) 	++ :: sg (NM) recommendation (NM) TYPE (N)  :: create (NM) sg (NM) ev (NM) rec (NM) ack (N) 
CONSTRUCTOR:NAME:JaxenHandlerTest JaxenHandlerTest JaxenHandlerTest(String name):  | jaxen (NM) handler (NM) test (N) 	++ :: [ string (NI) - name (NI) ]
BASE_VERB:FORM:Factory static EndIntensityAttribute parse(XMLStreamReader sr, XmlOptions options): parse (V)  | [ XML (NM) stream (NM) reader (N) - sr (N) ]	++ :: [ xml (NM) options (N) - options (N) ] :: factory (N)  :: end (NM) intensity (NM) attribute (N) 
SPECIAL:NAME:LegendPropertyEditPanel Paint getBackgroundPaint(): get (V)  | background (NM) paint (N) 	++ :: paint (N)  :: legend (NM) property (NM) edit (NM) panel (N) 
CONSTRUCTOR:NAME:Line2D Line2D Line2D(double adX, double adY):  | line (NM) 2 (NM) D (N) 	++ :: [ double (N) - ad (NM) X (N) ] :: [ double (N) - ad (NM) Y (N) ]
SPECIAL:NAME:NoUnderlyingSecurityAltID UnderlyingSecurityAltIDSource getUnderlyingSecurityAltIDSource(): get (V)  | underlying (NM) security (NM) alt (NM) ID (NM) source (NI) 	++ :: underlying (NM) security (NM) alt (NM) ID (NM) source (NI)  :: no (DT) underlying (NM) security (NM) alt (NM) ID (NI) 
NOUN_PHRASE:NAME:ClassDefinition static boolean sameProperty(PropertyFieldIdentifier a, PropertyFieldIdentifier b): get (V) | same (NM) property (N) 	++ :: [ property (NM) field (NM) identifier (NI) - a (N) ] :: [ property (NM) field (NM) identifier (NI) - b (N) ] :: class (NM) definition (NI)  :: boolean (N) 
CONSTRUCTOR:NAME:FunctionNode FunctionNode FunctionNode(String functionName):  | function (NM) node (NI) 	++ :: [ string (NI) - function (NM) name (NI) ]
SPECIAL:NAME:DesignTree void setSelectedView(String type): set (V)  | selected (NM) view (NI) 	++ :: [ string (NI) - type (N) ] :: design (NM) tree (NI) 
BASE_VERB:FORM:FileInputStream long skip(long numBytes): skip (V)  | [ long (N) - num (NM) bytes (NI) ]	++ :: file (NM) input (NM) stream (NI)  :: long (N) 
SPECIAL:NAME:ExtrusionNode void setCrossSections(String value): set (V)  | cross (NM) sections (N) 	++ :: [ string (NI) - value (NI) ] :: extrusion (NM) node (NI) 
SPECIAL:NAME:Organization Country getCountry(): get (V)  | country (N) 	++ :: country (N)  :: organization (N) 
BASE_VERB:FORM:EntityAspect Object invoke(FieldReadInvocation invocation): invoke (VI)  | [ field (NM) read (NM) invocation (N) - invocation (N) ]	++ :: entity (NM) aspect (N)  :: object (NI) 
SPECIAL:CLAS:TestPartial_Basics void testWithFieldAdded5(): test (VI)  | test (NM) partial (NM) basics (N) -- with (P) field (NM) added (N) 5 (D) 	++
V_3P_IRR:NAME:PrimitiveArrayString boolean areLmntsEqual(int i_idxThis, PrimitiveArray pa_other, int i_idxOther): are (V)  | lmnts (NM) equal (N) 	++ :: [ int (N) - i (NM) idx (NM) this (PR) ] :: [ primitive (NM) array (N) - pa (NM) other (DT) ] :: [ int (N) - i (NM) idx (NM) other (DT) ] :: boolean (N)  :: primitive (NM) array (NM) string (NI) 
SPECIAL:FORM:OrderCancelRequest OrderQty get(OrderQty value): get (V)  | [ order (NM) qty (N) - value (NI) ]	++ :: order (NM) cancel (NM) request (N)  :: order (NM) qty (N) 
ENDS_WITH_ED:NAME:ModelHandle void valueBound(HttpSessionBindingEvent e): handle (V) | value (NM) bound (N) 	++ :: [ http (NM) session (NM) binding (NM) event (NI) - e (N) ] :: model (NM) handle (NI)  :: void (N) 
CONSTRUCTOR:NAME:DisconnectPacket DisconnectPacket DisconnectPacket(int sequence):  | disconnect (NM) packet (N) 	++ :: [ int (N) - sequence (N) ]
BASE_VERB:NAME:GridBagLayout GridBagConstraints lookupConstraints(Component component): lookup (V)  | constraints (N) 	++ :: [ component (N) - component (N) ] :: grid (NM) bag (NM) constraints (N)  :: grid (NM) bag (NM) layout (N) 
BASE_VERB:CLAS:EnvelopeComponent void advance(): advance (V)  | envelope (NM) component (N) 	++
EVENT_PARAM:NAME:EventbaseWrapper void deregisterEvent(IMEvent mevent): handle (V) | deregister (NM) event (NI) 	++ :: [ IM (NM) event (NI) - mevent (N) ] :: eventbase (NM) wrapper (NI)  :: void (N) 
BASE_VERB:NAME:NativeLibraryLoader static File ensureOutputDirectory(): ensure (VI)  | output (NM) directory (N) 	++ :: file (NI)  :: native (NM) library (NM) loader (N) 
SPECIAL:NAME:PlanetItem int getPower(): get (V)  | power (N) 	++ :: int (N)  :: planet (NM) item (NI) 
PREP:NAME:DepthFirstAdapter void inSnmpObjectGroupMacroType(Node node):  | in (P) snmp (NM) object (NM) group (NM) macro (NM) type (N) 	++ :: [ node (NI) - node (NI) ] :: depth (NM) first (NM) adapter (NI)  :: void (N) 
SPECIAL:NAME:ExecutableCapability String getOperatingSystem(): get (V)  | operating (NM) system (N) 	++ :: string (NI)  :: executable (NM) capability (N) 
NOUN_PHRASE:NAME:Report2Client static String repStr(String x): get (V) | rep (NM) str (NI) 	++ :: [ string (NI) - x (N) ] :: report (NM) 2 (NM) client (N)  :: string (NI) 
SPECIAL:CLAS:void remove(): remove (V)  | ANONYMOUS (N) 	++
SPECIAL:NAME:DBCPDataSourceFactory boolean getDefaultReadOnly(): get (V)  | default (NM) read (NM) only (N) 	++ :: boolean (N)  :: DBCP (NM) data (NM) source (NM) factory (N) 
SPECIAL:NAME:CalendarBundle void setCalendarName(String calendarName): set (V)  | calendar (NM) name (NI) 	++ :: [ string (NI) - calendar (NM) name (NI) ] :: calendar (NM) bundle (N) 
ENDS_WITH_ED:NAME:DeleteKeyListener void actionPerformed(ActionEvent e): handle (V) | action (NM) performed (N) 	++ :: [ action (NM) event (NI) - e (N) ] :: delete (NM) key (NM) listener (N)  :: void (N) 
SPECIAL:NAME:Client void removeReport(Session ses, String reportName): remove (V)  | EQUIV[report (N) , [ string (NI) - report (NM) name (NI) ]]	++ :: [ session (N) - ses (N) ] :: client (N) 
CONSTRUCTOR:NAME:MemberImpl MemberImpl MemberImpl(SchemaType sType, boolean b):  | member (NM) impl (NI) 	++ :: [ schema (NM) type (N) - s (NM) type (N) ] :: [ boolean (N) - b (N) ]
ENDS_WITH_ED:NAME:JComboBox void firePopupMenuCanceled(): handle (V) | fire (NM) popup (NM) menu (NM) canceled (N) 	++ :: J (NM) combo (NM) box (N)  :: void (N) 
SPECIAL:NAME:Main void setReadonly(boolean readonly): set (V)  | readonly (N) 	++ :: [ boolean (N) - readonly (N) ] :: main (N) 
SPECIAL:NAME:HsqlDBConnectorTest void testEstraiDati(): test (VI)  | estrai (NM) dati (N) 	++ :: hsql (NM) DB (NM) connector (NM) test (N) 
BASE_VERB:NAME:NodeVisitor Instruction visitDSymbolNode(DSymbolNode iVisited): visit (V)  | EQUIV[D (NM) symbol (NM) node (NI) , [ D (NM) symbol (NM) node (NI) - i (NM) visited (N) ]]	++ :: instruction (N)  :: node (NM) visitor (N) 
CONSTRUCTOR:NAME:LogLayout LogLayout LogLayout():  | log (NM) layout (N) 	++
SPECIAL:FORM:NoAllocs AllocAccount get(AllocAccount value): get (V)  | [ alloc (NM) account (N) - value (NI) ]	++ :: no (DT) allocs (N)  :: alloc (NM) account (N) 
SPECIAL:NAME:TestStoredFieldSortedSearch void deleteDir(File dir): delete (V)  | EQUIV[dir (NI) , [ file (NI) - dir (NI) ]]	++ :: test (NM) stored (NM) field (NM) sorted (NM) search (N) 
SPECIAL:NAME:CodeThing void addStanza(Interp interp, Thing argv, int lineno): add (V)  | stanza (N) 	++ :: [ interp (N) - interp (N) ] :: [ thing (N) - argv (N) ] :: [ int (N) - lineno (N) ] :: code (NM) thing (N) 
CONSTRUCTOR:NAME:FeWaitDetector FeWaitDetector FeWaitDetector():  | fe (NM) wait (NM) detector (N) 	++
SPECIAL:FORM:DependencyRemovalTest1 void run(FutureResult result): run (VI)  | [ future (NM) result (N) - result (N) ]	++ :: dependency (NM) removal (NM) test (NM) 1 (N) 
SPECIAL:NAME:PrecioRegion void setSecuencia(int secuencia): set (V)  | secuencia (N) 	++ :: [ int (N) - secuencia (N) ] :: precio (NM) region (N) 
V_3P_IRR:NAME:IndexIterator boolean hasNext(): has (V)  | next (DT) 	++ :: boolean (N)  :: index (NM) iterator (N) 
CONSTRUCTOR:NAME:ThreadInfo ThreadInfo ThreadInfo():  | thread (NM) info (NI) 	++
BASE_VERB:FORM:Qualog static boolean stack(String name, float ary, int depth): stack (V)  | [ string (NI) - name (NI) ]	++ :: [ float (N) - ary (N) ] :: [ int (N) - depth (N) ] :: qualog (N)  :: boolean (N) 
CONSTRUCTOR:NAME:SendBundle SendBundle SendBundle(ByteBuffer b, InetAddress addr, int port, ErrorCallback c):  | send (NM) bundle (N) 	++ :: [ byte (NM) buffer (NI) - b (N) ] :: [ inet (NM) address (NI) - addr (N) ] :: [ int (N) - port (N) ] :: [ error (NM) callback (N) - c (N) ]
SPECIAL:CLAS:void run(): run (VI)  | ANONYMOUS (N) 	++
SPECIAL:NAME:BatchEnvironment static ClassPath createClassPath(String classPathString, String sysClassPathString, String extDirsString): create (V)  | EQUIV[class (NM) path (NI) , [ string (NI) - class (NM) path (NM) string (NI) ], [ string (NI) - sys (NM) class (NM) path (NM) string (NI) ]]	++ :: [ string (NI) - ext (NM) dirs (NM) string (NI) ] :: class (NM) path (NI)  :: batch (NM) environment (N) 
BASE_VERB:NAME:ASTNodeDescriptor String closeNode(String nodeVar): close (V)  | node (NI) 	++ :: [ string (NI) - node (NM) var (N) ] :: string (NI)  :: AST (NM) node (NM) descriptor (NI) 
SPECIAL:NAME:SatelliteEphemeris short getAODO(): get (V)  | AODO (N) 	++ :: short (N)  :: satellite (NM) ephemeris (N) 
SPECIAL:NAME:STR_Frame JMenu getSpecMenu(): get (V)  | spec (NM) menu (N) 	++ :: J (NM) menu (N)  :: STR (NM) frame (N) 
SPECIAL:NAME:ViewInfo Map getUserInputs(): get (V)  | user (NM) inputs (N) 	++ :: map (N)  :: view (NM) info (NI) 
SPECIAL:NAME:AccessMediator static AccessMediator getAM(GridSite site): get (V)  | AM (N) 	++ :: [ grid (NM) site (N) - site (N) ] :: access (NM) mediator (N)  :: access (NM) mediator (N) 
SPECIAL:NAME:AbstractComponent static void checkIdSpacesDown(Component comp, PageCtrl pageCtrl): check (VI)  | id (NM) spaces (NM) down (N) 	++ :: [ component (N) - comp (N) ] :: [ page (NM) ctrl (N) - page (NM) ctrl (N) ] :: abstract (NM) component (N) 
SPECIAL:NAME:InternetAddress void setPersonal(String s): set (V)  | personal (N) 	++ :: [ string (NI) - s (N) ] :: internet (NM) address (NI) 
SPECIAL:NAME:ThreeColAPTTable void addLine(String left, String middle, String right, int leftStyle, int middleStyle, int rightStyle): add (V)  | line (N) 	++ :: [ string (NI) - left (N) ] :: [ string (NI) - middle (N) ] :: [ string (NI) - right (N) ] :: [ int (N) - left (NM) style (N) ] :: [ int (N) - middle (NM) style (N) ] :: [ int (N) - right (NM) style (N) ] :: three (NM) col (NM) APT (NM) table (N) 
SPECIAL:NAME:WebMiel void doPost(HttpServletRequest req, HttpServletResponse res): do (VI)  | post (N) 	++ :: [ http (NM) servlet (NM) request (N) - req (N) ] :: [ http (NM) servlet (NM) response (N) - res (N) ] :: web (NM) miel (N) 
SPECIAL:NAME:Configuration void setTransormationConfigFileRef(String fileRef): set (V)  | transormation (NM) config (NM) file (NM) ref (NI) 	++ :: [ string (NI) - file (NM) ref (NI) ] :: configuration (NI) 
SPECIAL:CLAS:MarkMessageTest void testMarkAsFlaggedMessage(): test (VI) mark (V)  | mark (NM) message (NM) test (N) -- as (P) flagged (NM) message (NI) 	++
SPECIAL:FORM:SearchExample static void main(String args): main (V)  | [ string (NI) - args (N) ]	++ :: search (NM) example (N) 
SPECIAL:NAME:XMLInputSaxField String getTrimTypeDesc(): get (V)  | trim (NM) type (NM) desc (NI) 	++ :: string (NI)  :: XML (NM) input (NM) sax (NM) field (N) 
SPECIAL:NAME:Employee String getDisplayableName(): get (V)  | displayable (NM) name (NI) 	++ :: string (NI)  :: employee (N) 
SPECIAL:NAME:AutoImpl Auto setLink(Auto auto): set (V)  | link (N) 	++ :: [ auto (N) - auto (N) ] :: auto (N)  :: auto (NM) impl (NI) 
SPECIAL:NAME:CompressionFilter void setFilterConfig(FilterConfig filterConfig): set (V)  | filter (NM) config (NI) 	++ :: [ filter (NM) config (NI) - filter (NM) config (NI) ] :: compression (NM) filter (N) 
VOID_NP:NAME:Class25 void method293(int i, int j, int k, int l): handle (V) | method (N) 293 (D) 	++ :: [ int (N) - i (N) ] :: [ int (N) - j (N) ] :: [ int (N) - k (N) ] :: [ int (N) - l (N) ] :: class (NM) 25 (N)  :: void (N) 
SPECIAL:NAME:AbstractContentAccessLog static PrimaryKey getNextPrimaryKey(DataSourceSet dss): get (V)  | next (DT) primary (NM) key (NI) 	++ :: [ data (NM) source (NM) set (N) - dss (N) ] :: primary (NM) key (NI)  :: abstract (NM) content (NM) access (NM) log (N) 
SPECIAL:NAME:ExternalEditor Icon getIcon(): get (V)  | icon (N) 	++ :: icon (N)  :: external (NM) editor (N) 
SPECIAL:NAME:NaccacheSternKeyParameters BigInteger getG(): get (V)  | G (N) 	++ :: big (NM) integer (N)  :: naccache (NM) stern (NM) key (NM) parameters (N) 
SPECIAL:NAME:Runtime static SortedSet<String> getExpectedTokens(Map<Integer,String> tokens, int count, ParserThread threads): get (V)  | EQUIV[expected (NM) tokens (N) , [ string (NI) - tokens (N) ]]	++ :: [ int (N) - count (N) ] :: [ parser (NM) thread (N) - threads (N) ] :: sorted (NM) set (NM) string (NI)  :: runtime (N) 
SPECIAL:NAME:ApplicationModel void setInitialModule(Module initialModule): set (V)  | initial (NM) module (N) 	++ :: [ module (N) - initial (NM) module (N) ] :: application (NM) model (NI) 
SPECIAL:NAME:DoVoidResponseType String getAuthorizationID(): get (V)  | authorization (NM) ID (NI) 	++ :: string (NI)  :: do (NM) void (NM) response (NM) type (N) 
PREP:NAME:DynamicVariable String toString(): convert (V) | to (P) string (NI) 	++ :: dynamic (NM) variable (N)  :: string (NI) 
ED_VERB:NAME:Namespace ElementSet OwnedElement(): owned (V)  | element (NI) 	++ :: element (NM) set (N)  :: namespace (N) 
BASE_VERB:NAME:ConnectionTest String ListGPS(): list (V)  | GPS (N) 	++ :: string (NI)  :: connection (NM) test (N) 
SPECIAL:NAME:GenFactory StructGen createStructGen(): create (V)  | struct (NM) gen (N) 	++ :: struct (NM) gen (N)  :: gen (NM) factory (N) 
CONSTRUCTOR:NAME:PNGGraphic PNGGraphic PNGGraphic(GraphicServer4a server, URL url, BufferedInputStream bis):  | PNG (NM) graphic (N) 	++ :: [ graphic (NM) server (NM) 4 (NM) a (N) - server (N) ] :: [ URL (NI) - url (NI) ] :: [ buffered (NM) input (NM) stream (NI) - bis (N) ]
BASE_VERB:FORM:Type1Decoder boolean exec(GraphicsState gstate, int cmd, CharFilter param): exec (V)  | [ graphics (NM) state (N) - gstate (N) ]	++ :: [ int (N) - cmd (N) ] :: [ char (NM) filter (N) - param (N) ] :: type (NM) 1 (NM) decoder (N)  :: boolean (N) 
SPECIAL:FORM:IndicationOfInterest void set(RepurchaseRate value): set (V)  | [ repurchase (NM) rate (N) - value (NI) ]	++ :: indication (NM) of (NM) interest (N) 
SPECIAL:NAME:ProjectListModel Iterator getProjectItems(int selectedRows): get (V)  | project (NM) items (N) 	++ :: [ int (N) - selected (NM) rows (N) ] :: iterator (N)  :: project (NM) list (NM) model (NI) 
BASE_VERB:CLAS:NumpadCtrl void clear(): clear (V)  | numpad (NM) ctrl (N) 	++
SPECIAL:NAME:MasterDocConfigurator static String getDescription(Element element, String type): get (V)  | description (NI) 	++ :: [ element (NI) - element (NI) ] :: [ string (NI) - type (N) ] :: string (NI)  :: master (NM) doc (NM) configurator (N) 
SPECIAL:NAME:CIM_FRU String get_IdentifyingNumber(): get (V)  | identifying (NM) number (NI) 	++ :: string (NI)  :: CIM (NM) FRU (N) 
NOUN_PHRASE:NAME:ParameterNamesEnumeration Object nextElement(): get (V) | next (DT) element (NI) 	++ :: parameter (NM) names (NM) enumeration (N)  :: object (NI) 
PREP:NAME:BlankNodeResourceImpl String toString(): convert (V) | to (P) string (NI) 	++ :: blank (NM) node (NM) resource (NM) impl (NI)  :: string (NI) 
SPECIAL:NAME:QueryStateWrapper void setInternalIntFieldAbs(int field, int newValue): set (V)  | internal (NM) int (NM) field (NM) abs (N) 	++ :: [ int (N) - field (N) ] :: [ int (N) - new (NM) value (NI) ] :: query (NM) state (NM) wrapper (NI) 
SPECIAL:NAME:RegionBean RegionModel getRegionModel(): get (V)  | region (NM) model (NI) 	++ :: region (NM) model (NI)  :: region (NM) bean (NI) 
SPECIAL:NAME:SourceSync Source getTracker(): get (V)  | tracker (N) 	++ :: source (NI)  :: source (NM) sync (N) 
BASE_VERB:FORM:SHA1 void update(byte input, int offset, int len): update (V)  | [ byte (N) - input (NI) ]	++ :: [ int (N) - offset (N) ] :: [ int (N) - len (N) ] :: SHA (NM) 1 (N) 
EVENT_PARAM:NAME:void hyperlinkUpdate(HyperlinkEvent event): handle (V) | hyperlink (NM) update (N) 	++ :: [ hyperlink (NM) event (NI) - event (NI) ] :: ANONYMOUS (N)  :: void (N) 
SPECIAL:NAME:Module Block checkSwitchPages(Block _prevBlock, Block _activeBlock): check (VI)  | switch (NM) pages (N) 	++ :: [ block (N) - prev (NM) block (N) ] :: [ block (N) - active (NM) block (N) ] :: block (N)  :: module (N) 
NOUN_PHRASE:NAME:TestPrototypeNodeContextFactory static Test suite(): get (V) | suite (N) 	++ :: test (NM) prototype (NM) node (NM) context (NM) factory (N)  :: test (N) 
SPECIAL:NAME:AsyncTransfer void startSend(String path, char type, long resumePosition): start (V)  | send (N) 	++ :: [ string (NI) - path (NI) ] :: [ char (N) - type (N) ] :: [ long (N) - resume (NM) position (N) ] :: async (NM) transfer (N) 
BASE_VERB:NAME:StandardXYZToolTipGenerator String generateLabelString(XYDataset dataset, int series, int item): generate (V)  | label (NM) string (NI) 	++ :: [ XY (NM) dataset (N) - dataset (N) ] :: [ int (N) - series (N) ] :: [ int (N) - item (NI) ] :: string (NI)  :: standard (NM) XYZ (NM) tool (NM) tip (NM) generator (N) 
ENDS_WITH_ED:NAME:PopUpHandler void mouseReleased(MouseEvent e): handle (V) | mouse (NM) released (N) 	++ :: [ mouse (NM) event (NI) - e (N) ] :: pop (NM) up (NM) handler (N)  :: void (N) 
CONSTRUCTOR:NAME:ToggleDraftFlagAction ToggleDraftFlagAction ToggleDraftFlagAction(IFrameMediator frameMediator):  | toggle (NM) draft (NM) flag (NM) action (N) 	++ :: [ I (NM) frame (NM) mediator (N) - frame (NM) mediator (N) ]
SPECIAL:NAME:PluginManager JobSetupFactory getJobSetupFactory(): get (V)  | job (NM) setup (NM) factory (N) 	++ :: job (NM) setup (NM) factory (N)  :: plugin (NM) manager (N) 
BASE_VERB:NAME:BasicComboPopup void uninstallKeyboardActions(): uninstall (V)  | keyboard (NM) actions (N) 	++ :: basic (NM) combo (NM) popup (N) 
V_MODAL:FORM:Flag boolean canTag(MailItem item): can (VI) tag (V)  | [ mail (NM) item (NI) - item (NI) ]	++ :: flag (N)  :: boolean (N) 
V_3P_IRR:NAME:WebServer boolean isRunning(): is (V)  | running (N) 	++ :: boolean (N)  :: web (NM) server (N) 
SPECIAL:NAME:DefaultCaret void removeChangeListener(ChangeListener listener): remove (V)  | EQUIV[change (NM) listener (N) , [ change (NM) listener (N) - listener (N) ]]	++ :: default (NM) caret (N) 
EVENT_PARAM:NAME:GroupListener void onMouseExit(Event e): handle (V) | on (NM) mouse (NM) exit (N) 	++ :: [ event (NI) - e (N) ] :: group (NM) listener (N)  :: void (N) 
CONSTRUCTOR:NAME:Shell Shell Shell(int divs, int strips, Appearance shellAppearance):  | shell (N) 	++ :: [ int (N) - divs (N) ] :: [ int (N) - strips (N) ] :: [ appearance (N) - shell (NM) appearance (N) ]
SPECIAL:NAME:QTextView void setStyleSheet(QStyleSheet styleSheet): set (V)  | style (NM) sheet (N) 	++ :: [ Q (NM) style (NM) sheet (N) - style (NM) sheet (N) ] :: Q (NM) text (NM) view (NI) 
SPECIAL:NAME:Domain Integer getId(): get (V)  | id (NI) 	++ :: integer (N)  :: domain (N) 
CONSTRUCTOR:NAME:AbstractMapItem AbstractMapItem AbstractMapItem(String name):  | abstract (NM) map (NM) item (NI) 	++ :: [ string (NI) - name (NI) ]
CONSTRUCTOR:NAME:Connection Connection Connection():  | connection (N) 	++
BASE_VERB:FORM:VMDirectByteBuffer static void put(RawData address, int index, byte value): put (V)  | [ raw (NM) data (NI) - address (NI) ]	++ :: [ int (N) - index (NI) ] :: [ byte (N) - value (NI) ] :: VM (NM) direct (NM) byte (NM) buffer (NI) 
SPECIAL:NAME:Annotations void testMultipleAnnotation(): test (VI)  | multiple (NM) annotation (N) 	++ :: annotations (N) 
SPECIAL:NAME:Rules BeanComparator getRuleParts(): get (V)  | rule (NM) parts (N) 	++ :: bean (NM) comparator (N)  :: rules (N) 
PREP:NAME:CircularList void at(int index, E e):  | at (P) 	++ :: [ int (N) - index (NI) ] :: [ E (N) - e (N) ] :: circular (NM) list (N)  :: void (N) 
EVENT_PARAM:NAME:PolygonTool void mouseDrag(MouseEvent e, int x, int y): handle (V) | mouse (NM) drag (N) 	++ :: [ mouse (NM) event (NI) - e (N) ] :: [ int (N) - x (N) ] :: [ int (N) - y (N) ] :: polygon (NM) tool (N)  :: void (N) 
SPECIAL:NAME:SargFactory RexBuilder getRexBuilder(): get (V)  | rex (NM) builder (N) 	++ :: rex (NM) builder (N)  :: sarg (NM) factory (N) 
SPECIAL:NAME:BaseContact void setCountryRelatedBySecCountryId(Country v): set (V)  | country (NM) related (N) -- by (P) sec (NM) country (NM) id (NI) 	++ :: [ country (N) - v (N) ] :: base (NM) contact (N) 
SPECIAL:NAME:BitStreamWriterTest void test2(): test (VI)  | 2 (D) 	++ :: bit (NM) stream (NM) writer (NM) test (N) 
SPECIAL:NAME:CreateTableCommand String getQuery(): get (V)  | query (N) 	++ :: string (NI)  :: create (NM) table (NM) command (N) 
SPECIAL:NAME:InputDescriptor Class getJavaClass(): get (V)  | java (NM) class (NI) 	++ :: class (NI)  :: input (NM) descriptor (NI) 
SPECIAL:NAME:CourseModule String getPrerequ(): get (V)  | prerequ (N) 	++ :: string (NI)  :: course (NM) module (N) 
SPECIAL:NAME:TestNotEqualTag void testCookieStringNotEquals(): test (VI)  | cookie (NM) string (NM) not (DT) equals (N) 	++ :: test (NM) not (DT) equal (NM) tag (NI) 
NOUN_PHRASE:NAME:int currentSegment(double coords): get (V) | current (NM) segment (N) 	++ :: [ double (N) - coords (N) ] :: ANONYMOUS (N)  :: int (N) 
BASE_VERB:NAME:TestPhone void connEtoC11(): conn (V)  | eto (NM) C (N) 11 (D) 	++ :: test (NM) phone (N) 
SPECIAL:CLAS:void run(): run (VI)  | ANONYMOUS (N) 	++
SPECIAL:NAME:JSPWSecurityLevelModifier int doEndTag(): do (VI)  | end (NM) tag (NI) 	++ :: int (N)  :: JSPW (NM) security (NM) level (NM) modifier (N) 
SPECIAL:NAME:EnemyUnit PlayerBase getPlayerBase(): get (V)  | player (NM) base (N) 	++ :: player (NM) base (N)  :: enemy (NM) unit (N) 
SPECIAL:NAME:ActivityDescriptionManager static void readActivityDescriptorsFromXML(): read (V)  | activity (NM) descriptors (N) -- from (P) XML (N) 	++ :: activity (NM) description (NM) manager (N) 
SPECIAL:NAME:ColorIcon int getIconHeight(): get (V)  | icon (NM) height (N) 	++ :: int (N)  :: color (NM) icon (N) 
BASE_VERB:NAME:DbaseFileReader String extractNumberString(CharBuffer charBuffer2, int fieldOffset, int fieldLen): extract (V)  | number (NM) string (NI) 	++ :: [ char (NM) buffer (NI) - char (NM) buffer (NM) 2 (N) ] :: [ int (N) - field (NM) offset (N) ] :: [ int (N) - field (NM) len (N) ] :: string (NI)  :: dbase (NM) file (NM) reader (N) 
SPECIAL:NAME:ProverUI void setInformation(IUserSupportInformation information): set (V)  | information (N) 	++ :: [ I (NM) user (NM) support (NM) information (N) - information (N) ] :: prover (NM) UI (N) 
SPECIAL:NAME:X_M_Warehouse void setSeparator(String Separator): set (V)  | separator (N) 	++ :: [ string (NI) - separator (N) ] :: X (NM) M (NM) warehouse (N) 
SPECIAL:NAME:JetRenderer static String processTemplate(JetContext context, AbstractMap data, String templatename): process (VI)  | template (N) 	++ :: [ jet (NM) context (N) - context (N) ] :: [ abstract (NM) map (N) - data (NI) ] :: [ string (NI) - templatename (N) ] :: string (NI)  :: jet (NM) renderer (N) 
SPECIAL:NAME:List String getName(int i): get (V)  | name (NI) 	++ :: [ int (N) - i (N) ] :: string (NI)  :: list (N) 
BASE_VERB:FORM:CheckstylePluginException static void rethrow(Throwable t): rethrow (V)  | [ throwable (N) - t (N) ]	++ :: checkstyle (NM) plugin (NM) exception (N) 
BASE_VERB:NAME:PaddingTopAttribute void xsetPaddingTop(NonNegativeLength paddingTop): xset (V)  | EQUIV[padding (NM) top (N) , [ non (NM) negative (NM) length (N) - padding (NM) top (N) ]]	++ :: padding (NM) top (NM) attribute (N) 
BASE_VERB:NAME:StatefulSession String callBusinessMethodA(): call (V)  | business (NM) method (NM) A (N) 	++ :: string (NI)  :: stateful (NM) session (N) 
CONSTRUCTOR:NAME:GameEntityChangeEvent GameEntityChangeEvent GameEntityChangeEvent(Object source, Entity entity, Vector<UnitLocation> movePath):  | game (NM) entity (NM) change (NM) event (NI) 	++ :: [ object (NI) - source (NI) ] :: [ entity (N) - entity (N) ] :: [ vector (NM) unit (NM) location (NI) - move (NM) path (NI) ]
CONSTRUCTOR:NAME:CMMLearner CMMLearner CMMLearner():  | CMM (NM) learner (N) 	++
BASE_VERB:NAME:PeeringConnection void sendPacket(PeeringPacket packet): send (V)  | EQUIV[packet (N) , [ peering (NM) packet (N) - packet (N) ]]	++ :: peering (NM) connection (N) 
CONSTRUCTOR:NAME:WebsiteContainerBase WebsiteContainerBase WebsiteContainerBase(WOContext aContext):  | website (NM) container (NM) base (N) 	++ :: [ WO (NM) context (N) - a (NM) context (N) ]
BASE_VERB:NAME:Traverser void traverseArrayAccessExpression(ArrayAccessExpression aae): traverse (V)  | EQUIV[array (NM) access (NM) expression (N) , [ array (NM) access (NM) expression (N) - aae (N) ]]	++ :: traverser (N) 
CONSTRUCTOR:NAME:ArrayNode ArrayNode ArrayNode(ISourcePosition position):  | array (NM) node (NI) 	++ :: [ I (NM) source (NM) position (N) - position (N) ]
PREP:NAME:Token String toString(char separator): convert (V) | to (P) string (NI) 	++ :: [ char (N) - separator (N) ] :: token (N)  :: string (NI) 
SPECIAL:NAME:Type static Field _addManagedField(Type t, String name, int modifiers, Type type, Type componentType, int id): add (V)  | managed (NM) field (N) 	++ :: [ type (N) - t (N) ] :: [ string (NI) - name (NI) ] :: [ int (N) - modifiers (N) ] :: [ type (N) - type (N) ] :: [ type (N) - component (NM) type (N) ] :: [ int (N) - id (NI) ] :: field (N)  :: type (N) 
ENDS_WITH_ED:NAME:void actionPerformed(ActionEvent e): handle (V) | action (NM) performed (N) 	++ :: [ action (NM) event (NI) - e (N) ] :: ANONYMOUS (N)  :: void (N) 
ENDS_WITH_ED:NAME:void keyPressed(KeyEvent ke): handle (V) | key (NM) pressed (N) 	++ :: [ key (NM) event (NI) - ke (N) ] :: ANONYMOUS (N)  :: void (N) 
SPECIAL:NAME:APFormatExporter int getNextMentionId(): get (V)  | next (DT) mention (NM) id (NI) 	++ :: int (N)  :: AP (NM) format (NM) exporter (N) 
SPECIAL:CLAS:Formatter void setToConsole(boolean toConsole): set (V)  | formatter (N) -- to (P) console (N) 	++ :: [ boolean (N) - to (NM) console (N) ]
SPECIAL:NAME:PopupFrameTag void setStyle(String style): set (V)  | style (N) 	++ :: [ string (NI) - style (N) ] :: popup (NM) frame (NM) tag (NI) 
SPECIAL:NAME:GeneticAlgorithm String getCategoryInfo(int index): get (V)  | category (NM) info (NI) 	++ :: [ int (N) - index (NI) ] :: string (NI)  :: genetic (NM) algorithm (N) 
SPECIAL:NAME:MapToolController JTree getSourceTree(): get (V)  | source (NM) tree (NI) 	++ :: J (NM) tree (NI)  :: map (NM) tool (NM) controller (N) 
BASE_VERB:CLAS:PersonAction void save(): save (V)  | person (NM) action (N) 	++
BASE_VERB:CLAS:VisualGraph void layout(): layout (V)  | visual (NM) graph (N) 	++
V_3P_IRR:NAME:boolean isCellEditable(int row, int column): is (V)  | cell (NM) editable (N) 	++ :: [ int (N) - row (N) ] :: [ int (N) - column (N) ] :: boolean (N)  :: ANONYMOUS (N) 
BASE_VERB:NAME:PROTOMaker void attemptOptimization(Node n): attempt (VI)  | optimization (N) 	++ :: [ node (NI) - n (N) ] :: PROTO (NM) maker (N) 
SPECIAL:NAME:ProduktImpl void addThema(Thema t): add (V)  | EQUIV[thema (N) , [ thema (N) - t (N) ]]	++ :: produkt (NM) impl (NI) 
SPECIAL:NAME:Region int getRegionTypeId(): get (V)  | region (NM) type (NM) id (NI) 	++ :: int (N)  :: region (N) 
SPECIAL:FORM:ErrorLog void add(Timestamp timestamp, String className, String stackTrace, PrimaryKey entityPrimaryKey, PrimaryKey recordPrimaryKey, DataSourceSet dss): add (V)  | [ timestamp (N) - timestamp (N) ]	++ :: [ string (NI) - class (NM) name (NI) ] :: [ string (NI) - stack (NM) trace (N) ] :: [ primary (NM) key (NI) - entity (NM) primary (NM) key (NI) ] :: [ primary (NM) key (NI) - record (NM) primary (NM) key (NI) ] :: [ data (NM) source (NM) set (N) - dss (N) ] :: error (NM) log (N) 
CONSTRUCTOR:NAME:ServiceDetail ServiceDetail ServiceDetail(String operator):  | service (NM) detail (NI) 	++ :: [ string (NI) - operator (N) ]
BASE_VERB:FORM:AbstractAngleHandle void draw(Graphics g): draw (V)  | [ graphics (N) - g (N) ]	++ :: abstract (NM) angle (NM) handle (NI) 
SPECIAL:NAME:AbstractSBFBForm void setFields(Map fields): set (V)  | fields (N) 	++ :: [ map (N) - fields (N) ] :: abstract (NM) SBFB (NM) form (N) 
SPECIAL:NAME:JMSSessionProxy Topic createTopic(String topicName): create (V)  | EQUIV[topic (N) , [ string (NI) - topic (NM) name (NI) ]]	++ :: topic (N)  :: JMS (NM) session (NM) proxy (NI) 
SPECIAL:NAME:Product Vector getProductLots(): get (V)  | product (NM) lots (DT) 	++ :: vector (N)  :: product (N) 
CONSTRUCTOR:NAME:WaferMapPlot WaferMapPlot WaferMapPlot(WaferMapDataset dataset, WaferMapRenderer renderer):  | wafer (NM) map (NM) plot (N) 	++ :: [ wafer (NM) map (NM) dataset (N) - dataset (N) ] :: [ wafer (NM) map (NM) renderer (N) - renderer (N) ]
SPECIAL:NAME:MetalLookAndFeel void createDefaultTheme(): create (V)  | default (NM) theme (N) 	++ :: metal (NM) look (NM) and (NM) feel (N) 
SPECIAL:NAME:AccountHelper void write_Object(OutputStream ostream, Object obj): write (V)  | EQUIV[object (NI) , [ object (NI) - obj (NI) ]]	++ :: [ output (NM) stream (NI) - ostream (N) ] :: account (NM) helper (N) 
BASE_VERB:NAME:ImageChangeUtil static BufferedImage rotateLeftOrRight(BufferedImage image, int degrees): rotate (V)  | left (NM) or (NM) right (N) 	++ :: [ buffered (NM) image (N) - image (N) ] :: [ int (N) - degrees (N) ] :: buffered (NM) image (N)  :: image (NM) change (NM) util (N) 
BASE_VERB:CLAS:void act(): act (V)  | ANONYMOUS (N) 	++
SPECIAL:FORM:BoundedInputStream int read(byte buf): read (V)  | [ byte (N) - buf (N) ]	++ :: bounded (NM) input (NM) stream (NI)  :: int (N) 
SPECIAL:NAME:Checkbox void setDisabled(Enum disabled): set (V)  | disabled (N) 	++ :: [ enum (NI) - disabled (N) ] :: checkbox (N) 
NOUN_PHRASE:NAME:list boolean valid(): get (V) | valid (N) 	++ :: list (N)  :: boolean (N) 
SPECIAL:NAME:AtomArray void setAStereo(int index, byte value): set (V)  | A (NM) stereo (N) 	++ :: [ int (N) - index (NI) ] :: [ byte (N) - value (NI) ] :: atom (NM) array (N) 
SPECIAL:NAME:PurchaseOrderForm void setTotalprice(String totalprice): set (V)  | totalprice (N) 	++ :: [ string (NI) - totalprice (N) ] :: purchase (NM) order (NM) form (N) 
SPECIAL:NAME:SimpleServer int getHtmlPort(): get (V)  | html (NM) port (N) 	++ :: int (N)  :: simple (NM) server (N) 
BASE_VERB:NAME:Paragraph boolean supressTag(String htmlTag): supress (V)  | EQUIV[tag (NI) , [ string (NI) - html (NM) tag (NI) ]]	++ :: boolean (N)  :: paragraph (N) 
SPECIAL:NAME:VirtualStack void push1(Item item): push (V)  | 1 (D) 	++ :: [ item (NI) - item (NI) ] :: virtual (NM) stack (N) 
BASE_VERB:NAME:CVWCoordinator void showDocServIcon(boolean b): show (V)  | doc (NM) serv (NM) icon (N) 	++ :: [ boolean (N) - b (N) ] :: [ boolean (N) - b (N) ] :: CVW (NM) coordinator (N) 
SPECIAL:NAME:NewOrderMultileg OrderRestrictions getOrderRestrictions(): get (V)  | order (NM) restrictions (N) 	++ :: order (NM) restrictions (N)  :: new (NM) order (NM) multileg (N) 
SPECIAL:NAME:SimpleDataBean Artifact createArtifact(Object externalId): create (V)  | artifact (N) 	++ :: [ object (NI) - external (NM) id (NI) ] :: artifact (N)  :: simple (NM) data (NM) bean (NI) 
ENDS_WITH_ING:NAME:void windowClosing(WindowEvent e): handle (V) | window (NM) closing (N) 	++ :: [ window (NM) event (NI) - e (N) ] :: ANONYMOUS (N)  :: void (N) 
SPECIAL:NAME:TBar static double getSliderValue(): get (V)  | slider (NM) value (NI) 	++ :: double (N)  :: T (NM) bar (N) 
SPECIAL:NAME:MySQLControlPlugin Class getDriver(): get (V)  | driver (N) 	++ :: class (NI)  :: my (PR) SQL (NM) control (NM) plugin (N) 
SPECIAL:NAME:HttpServletResponseFacade int getBufferSize(): get (V)  | buffer (NM) size (N) 	++ :: int (N)  :: http (NM) servlet (NM) response (NM) facade (NI) 
SPECIAL:NAME:ResultSetRegressionTest void testBug14562(): test (VI)  | bug (N) 14562 (D) 	++ :: result (NM) set (NM) regression (NM) test (N) 
BASE_VERB:NAME:AbstractUnmarshallingEventHandlerImpl UnmarshallingEventHandler spawnChild(Class clazz, int memento): spawn (V)  | child (N) 	++ :: [ class (NI) - clazz (N) ] :: [ int (N) - memento (N) ] :: unmarshalling (NM) event (NM) handler (N)  :: abstract (NM) unmarshalling (NM) event (NM) handler (NM) impl (NI) 
SPECIAL:NAME:StatusCodeHandler int getStatusCode(): get (V)  | status (NM) code (NI) 	++ :: int (N)  :: status (NM) code (NM) handler (N) 
BASE_VERB:FORM:LEFloatFormatDef Object unpack(ByteStream buf): unpack (V)  | [ byte (NM) stream (NI) - buf (N) ]	++ :: LE (NM) float (NM) format (NM) def (NI)  :: object (NI) 
EMPTY:NONE:OMAParser boolean jj_3R_72():  | jj (PRE) 3 (D) R (PRE) 72 (D) 
SPECIAL:NAME:DiagnosticBase static void enableChecking(boolean enable): enable (VI)  | checking (N) 	++ :: [ boolean (N) - enable (N) ] :: [ boolean (N) - enable (N) ] :: diagnostic (NM) base (N) 
BASE_VERB:NAME:CommunicateWS WSRole updateActionsForRole(WSRole wsRole, String ids): update (V)  | actions (N) -- for (P) EQUIV[role (N) , [ WS (NM) role (N) - ws (NM) role (N) ]]	++ :: [ string (NI) - ids (N) ] :: WS (NM) role (N)  :: communicate (NM) WS (N) 
SPECIAL:NAME:Macro void doExpansion(Token src): do (VI)  | expansion (N) 	++ :: [ token (N) - src (N) ] :: macro (N) 
BASE_VERB:NAME:JSCSVCell boolean unescapeBoolean(): unescape (V)  | boolean (N) 	++ :: boolean (N)  :: JSCSV (NM) cell (N) 
SPECIAL:NAME:VirtualProxy void setValid(boolean valid): set (V)  | valid (N) 	++ :: [ boolean (N) - valid (N) ] :: virtual (NM) proxy (NI) 
SPECIAL:NAME:Decimal_Increment int GetValue(): get (V)  | value (NI) 	++ :: int (N)  :: decimal (NM) increment (N) 
SPECIAL:NAME:ModelFormField FieldInfo getFieldInfo(): get (V)  | field (NM) info (NI) 	++ :: field (NM) info (NI)  :: model (NM) form (NM) field (N) 
SPECIAL:NAME:XmltestNotWfXmlConfTest void testNotWellFormed_NotWfSa159(): test (VI)  | not (DT) well (NM) formed (NM) not (DT) wf (NM) sa (N) 159 (D) 	++ :: xmltest (NM) not (DT) wf (NM) xml (NM) conf (NM) test (N) 
CONSTRUCTOR:NAME:PdfString PdfString PdfString(byte bytes):  | pdf (NM) string (NI) 	++ :: [ byte (N) - bytes (NI) ]
SPECIAL:NAME:SOCClearTradeMsg String getGame(): get (V)  | game (N) 	++ :: string (NI)  :: SOC (NM) clear (NM) trade (NM) msg (NI) 
CONSTRUCTOR:NAME:QuerySQLTemplatePanel QuerySQLTemplatePanel QuerySQLTemplatePanel():  | query (NM) SQL (NM) template (NM) panel (N) 	++
BASE_VERB:FORM:CompUnitMemberTranslator void visit(VeraEnumeration obj): visit (V)  | [ vera (NM) enumeration (N) - obj (NI) ]	++ :: comp (NM) unit (NM) member (NM) translator (N) 
CONSTRUCTOR:NAME:Word Word Word(String text, int start):  | word (N) 	++ :: [ string (NI) - text (NI) ] :: [ int (N) - start (N) ]
SPECIAL:NAME:MealRecipe String getIdInternal(): get (V)  | id (NM) internal (N) 	++ :: string (NI)  :: meal (NM) recipe (N) 
SPECIAL:NAME:BCFigure void setFigureBCNameFigure(Label fig): set (V)  | figure (NM) BC (NM) name (NM) figure (N) 	++ :: [ label (NI) - fig (N) ] :: BC (NM) figure (N) 
SPECIAL:NAME:FileSupport File createFile(Clob clob): create (V)  | file (NI) 	++ :: [ clob (N) - clob (N) ] :: file (NI)  :: file (NM) support (N) 
PREP:NAME:VMINew String toString(): convert (V) | to (P) string (NI) 	++ :: VMI (NM) new (NI)  :: string (NI) 
SPECIAL:NAME:HelpPage void removeLink(HelpItem item): remove (V)  | link (N) 	++ :: [ help (NM) item (NI) - item (NI) ] :: help (NM) page (N) 
SPECIAL:NAME:ExtendedPanelContainer ExtendedPanel getVisibleExtendedPanels(): get (V)  | visible (NM) extended (NM) panels (N) 	++ :: extended (NM) panel (N)  :: extended (NM) panel (NM) container (NI) 
PREP:NAME:DSWebDataSet void afterLast(): handle (V) | after (NM) last (DT) 	++ :: DS (NM) web (NM) data (NM) set (N)  :: void (N) 
BASE_VERB:CLAS:PolylineConnection void layout(): layout (V)  | polyline (NM) connection (N) 	++
SPECIAL:NAME:TransactionInterceptorIntegrationTest void testRequired(): test (VI)  | required (N) 	++ :: transaction (NM) interceptor (NM) integration (NM) test (N) 
SPECIAL:NAME:Factory Object getBean(String name): get (V)  | bean (NI) 	++ :: [ string (NI) - name (NI) ] :: object (NI)  :: factory (N) 
SPECIAL:NAME:MainFrame void initEditMenu(): init (V)  | edit (NM) menu (N) 	++ :: main (NM) frame (N) 
SPECIAL:NAME:SelectableItemWidget void setLastSelection(SelectableItem selectedItem, boolean showItem): set (V)  | last (DT) selection (N) 	++ :: [ selectable (NM) item (NI) - selected (NM) item (NI) ] :: [ boolean (N) - show (NM) item (NI) ] :: selectable (NM) item (NM) widget (N) 
SPECIAL:NAME:bdd BDDFactory getFactory(): get (V)  | factory (N) 	++ :: BDD (NM) factory (N)  :: bdd (N) 
BASE_VERB:CLAS:Zipper void zip(): zip (V)  | zipper (N) 	++
SPECIAL:NAME:CopydirTest void test6(): test (VI)  | 6 (D) 	++ :: copydir (NM) test (N) 
BASE_VERB:NAME:InstConstraintVisitor void visitDUP2(DUP2 o): visit (V)  | EQUIV[DUP (N) 2 (D) , [ DUP (NM) 2 (N) - o (N) ]]	++ :: inst (NM) constraint (NM) visitor (N) 
BASE_VERB:NAME:SeqMapView void toggleGrid(): toggle (VI)  | grid (N) 	++ :: seq (NM) map (NM) view (NI) 
ENDS_WITH_ED:NAME:Listener void selectionChanged(ModelEvent event): handle (V) | selection (NM) changed (N) 	++ :: [ model (NM) event (NI) - event (NI) ] :: listener (N)  :: void (N) 
SPECIAL:NAME:NullWordListLoader void setSource(IDataLoader loader): set (V)  | source (NI) 	++ :: [ I (NM) data (NM) loader (N) - loader (N) ] :: null (NM) word (NM) list (NM) loader (N) 
BASE_VERB:NAME:CBLAS static void cblas_dtpmv(CBLAS_ORDER arg0, CBLAS_UPLO arg1, CBLAS_TRANSPOSE arg2, CBLAS_DIAG arg3, int arg4, double arg5, double arg6, int arg7): cblas (V)  | dtpmv (N) 	++ :: [ CBLAS (NM) ORDER (N) - arg (NM) 0 (N) ] :: [ CBLAS (NM) UPLO (N) - arg (NM) 1 (N) ] :: [ CBLAS (NM) TRANSPOSE (N) - arg (NM) 2 (N) ] :: [ CBLAS (NM) DIAG (N) - arg (NM) 3 (N) ] :: [ int (N) - arg (NM) 4 (N) ] :: [ double (N) - arg (NM) 5 (N) ] :: [ double (N) - arg (NM) 6 (N) ] :: [ int (N) - arg (NM) 7 (N) ] :: CBLAS (N) 
BASE_VERB:FORM:ClassList int sync(StreamPair streams, int classOffset): sync (V)  | [ stream (NM) pair (N) - streams (N) ]	++ :: [ int (N) - class (NM) offset (N) ] :: class (NM) list (N)  :: int (N) 
BASE_VERB:NAME:TerminalFormat_GroupEnd Object parseObject(char source, ParsePosition status): parse (V)  | object (NI) 	++ :: [ char (N) - source (NI) ] :: [ parse (NM) position (N) - status (N) ] :: object (NI)  :: terminal (NM) format (NM) group (NM) end (N) 
SPECIAL:NAME:Interview Person getPerson(): get (V)  | person (N) 	++ :: person (N)  :: interview (N) 
SPECIAL:NAME:OJConstructorSourceCode ConstructorDeclaration getSourceCode(): get (V)  | source (NM) code (NI) 	++ :: constructor (NM) declaration (NI)  :: OJ (NM) constructor (NM) source (NM) code (NI) 
SPECIAL:CLAS:AWTMouse void dequeue(): dequeue (V)  | AWT (NM) mouse (N) 	++
V_3P_IRR:NAME:DummyRecording boolean isPaused(): is (V)  | paused (N) 	++ :: boolean (N)  :: dummy (NM) recording (N) 
SPECIAL:NAME:FileThumbnailCheckbox Dimension getPreferredSize(): get (V)  | preferred (NM) size (N) 	++ :: dimension (N)  :: file (NM) thumbnail (NM) checkbox (N) 
VOID_NP:NAME:ImportMultimediaWizard void nextCalled2(int currentPanel): handle (V) | next (DT) called (N) 2 (D) 	++ :: [ int (N) - current (NM) panel (N) ] :: import (NM) multimedia (NM) wizard (N)  :: void (N) 
BASE_VERB:CLAS:ChunkedOutputFilter void recycle(): recycle (V)  | chunked (NM) output (NM) filter (N) 	++
V_3P_IRR:NAME:MetalLookAndFeel boolean isSupportedLookAndFeel(): is (V)  | supported (NM) look (NM) and (NM) feel (N) 	++ :: boolean (N)  :: metal (NM) look (NM) and (NM) feel (N) 
SPECIAL:NAME:InputTimeTag void setMinuteNullable(boolean minuteNullable): set (V)  | minute (NM) nullable (N) 	++ :: [ boolean (N) - minute (NM) nullable (N) ] :: input (NM) time (NM) tag (NI) 
SPECIAL:NAME:MainViewAccessor static VMProjekt getProject(): get (V)  | project (N) 	++ :: VM (NM) projekt (N)  :: main (NM) view (NM) accessor (N) 
SPECIAL:CLAS:DateUnit Date addToDate(Date date): add (V)  | date (NM) unit (N) -- to (P) EQUIV[date (N) , [ date (N) - date (N) ]]	++ :: date (N) 
BASE_VERB:NAME:JSONViewerLogger static void logError(Plugin plugin, String message, Throwable th): log (V)  | error (N) 	++ :: [ plugin (N) - plugin (N) ] :: [ string (NI) - message (NI) ] :: [ throwable (N) - th (N) ] :: JSON (NM) viewer (NM) logger (N) 
PREP:NAME:DBLanguages String toHTMLSelect(JDCConnection oConn, String sIdLanguage): convert (V) | to (P) HTML (NM) select (N) 	++ :: [ JDC (NM) connection (N) - o (NM) conn (N) ] :: [ string (NI) - s (NM) id (NM) language (N) ] :: DB (NM) languages (N)  :: string (NI) 
SPECIAL:NAME:DExtractor void enableCritical(boolean enable): enable (VI)  | critical (N) 	++ :: [ boolean (N) - enable (N) ] :: [ boolean (N) - enable (N) ] :: D (NM) extractor (N) 
BASE_VERB:CLAS:AbstractSwingField void format(): format (V)  | abstract (NM) swing (NM) field (N) 	++
SPECIAL:NAME:TestClass void setStrArray(String strArray): set (V)  | str (NM) array (N) 	++ :: [ string (NI) - str (NM) array (N) ] :: test (NM) class (NI) 
NOUN_PHRASE:NAME:DefaultTableXYDatasetTests static Test suite(): get (V) | suite (N) 	++ :: default (NM) table (NM) XY (NM) dataset (NM) tests (N)  :: test (N) 
ENDS_WITH_ED:NAME:RelativeImageView void mouseReleased(MouseEvent me): handle (V) | mouse (NM) released (N) 	++ :: [ mouse (NM) event (NI) - me (PR) ] :: relative (NM) image (NM) view (NI)  :: void (N) 
SPECIAL:NAME:DiscoveryFramework Goal getGoalByContent(String goalDoc): get (V)  | EQUIV[goal (N) , [ string (NI) - goal (NM) doc (NI) ]]-- by (P) content (N) 	++ :: goal (N)  :: discovery (NM) framework (N) 
SPECIAL:CLAS:JSONTokener void reset(): reset (V)  | JSON (NM) tokener (N) 	++
SPECIAL:NAME:ControllerPortletConfig Object getPlugin(String name): get (V)  | plugin (N) 	++ :: [ string (NI) - name (NI) ] :: object (NI)  :: controller (NM) portlet (NM) config (NI) 
NOUN_PHRASE:NAME:RandomGenerator int randomInt(int min, int max): get (V) | random (NM) int (N) 	++ :: [ int (N) - min (N) ] :: [ int (N) - max (N) ] :: random (NM) generator (N)  :: int (N) 
BASE_VERB:FORM:__env_dbremove_msg void xdrDecode(XdrDecodingStream xdr): xdr (PRE) decode (V)  | [ xdr (NM) decoding (NM) stream (NI) - xdr (N) ]	++ :: env (NM) dbremove (NM) msg (NI) 
CONSTRUCTOR:NAME:OutputDestination OutputDestination OutputDestination(Writer out):  | output (NM) destination (N) 	++ :: [ writer (N) - out (N) ]
PREP:NAME:SoapUILoadTestRunner void afterTestStep(LoadTestRunner loadTestRunner, LoadTestRunContext context, TestRunner testRunner, TestRunContext runContext, TestStepResult testStepResult): handle (V) | after (NM) test (NM) step (N) 	++ :: [ load (NM) test (NM) runner (N) - load (NM) test (NM) runner (N) ] :: [ load (NM) test (NM) run (NM) context (N) - context (N) ] :: [ test (NM) runner (N) - test (NM) runner (N) ] :: [ test (NM) run (NM) context (N) - run (NM) context (N) ] :: [ test (NM) step (NM) result (N) - test (NM) step (NM) result (N) ] :: soap (NM) UI (NM) load (NM) test (NM) runner (N)  :: void (N) 
SPECIAL:NAME:DisplayArchiveTag void setParent(Tag parent): set (V)  | parent (N) 	++ :: [ tag (NI) - parent (N) ] :: display (NM) archive (NM) tag (NI) 
SPECIAL:CLAS:IDReferences void removeFromUnvalidatedIDList(String id): remove (V)  | ID (NM) references (N) -- from (P) unvalidated (NM) ID (NM) list (N) 	++ :: [ string (NI) - id (NI) ]
SPECIAL:NAME:IncludeTest void test1(): test (VI)  | 1 (D) 	++ :: include (NM) test (N) 
CONSTRUCTOR:NAME:Windows1251 Windows1251 Windows1251():  | windows (NM) 1251 (N) 	++
SPECIAL:NAME:ApprovedSupplierDOMapBuilder DatabaseMap getDatabaseMap(): get (V)  | database (NM) map (N) 	++ :: database (NM) map (N)  :: approved (NM) supplier (NM) DO (NM) map (NM) builder (N) 
SPECIAL:NAME:MediaType static MediaType getMediaTypeForSchema(String schema): get (V)  | media (NM) type (N) -- for (P) EQUIV[schema (N) , [ string (NI) - schema (N) ]]	++ :: media (NM) type (N)  :: media (NM) type (N) 
BASE_VERB:FORM:BitSet void clear(int pos): clear (V)  | [ int (N) - pos (N) ]	++ :: bit (NM) set (N) 
SPECIAL:NAME:OpenMBeanParameterInfoSupport Comparable<?> getMaxValue(): get (V)  | max (NM) value (NI) 	++ :: comparable (N)  :: open (NM) M (NM) bean (NM) parameter (NM) info (NM) support (N) 
SPECIAL:NAME:OneWireContainer30 double getRemainingCapacity(byte state): get (V)  | remaining (NM) capacity (N) 	++ :: [ byte (N) - state (N) ] :: double (N)  :: one (NM) wire (NM) container (NM) 30 (N) 
CONSTRUCTOR:NAME:TapestryMetaTagImpl TapestryMetaTagImpl TapestryMetaTagImpl(String name, String value, AbstractJavaEntity entity, int lineNumber):  | tapestry (NM) meta (NM) tag (NM) impl (NI) 	++ :: [ string (NI) - name (NI) ] :: [ string (NI) - value (NI) ] :: [ abstract (NM) java (NM) entity (N) - entity (N) ] :: [ int (N) - line (NM) number (NI) ]
SPECIAL:NAME:PrintableSheetView void setExcelUploadData(String excelUploadData): set (V)  | excel (NM) upload (NM) data (NI) 	++ :: [ string (NI) - excel (NM) upload (NM) data (NI) ] :: printable (NM) sheet (NM) view (NI) 
SPECIAL:NAME:BottomEmbeddedRenderer Insets getTabInsets(int tabIndex, Insets tabInsets): get (V)  | EQUIV[tab (NM) insets (N) , [ insets (N) - tab (NM) insets (N) ]]	++ :: [ int (N) - tab (NM) index (NI) ] :: insets (N)  :: bottom (NM) embedded (NM) renderer (N) 
BASE_VERB:CLAS:CodeAidPopup void dispose(): dispose (V)  | code (NM) aid (NM) popup (N) 	++
BASE_VERB:FORM:InstanceOf void accept(Visitor v): accept (VI)  | [ visitor (N) - v (N) ]	++ :: instance (NM) of (N) 
BASE_VERB:FORM:DataBlock void realloc(int size): realloc (V)  | [ int (N) - size (N) ]	++ :: data (NM) block (N) 
BASE_VERB:NAME:Unmarshaller void eatText1(String value): eat (V)  | text (NI) 1 (D) 	++ :: [ string (NI) - value (NI) ] :: unmarshaller (N) 
BASE_VERB:NAME:EQLPatternTreeWalker void leaveOr(AST node): leave (V)  | or (N) 	++ :: [ AST (N) - node (NI) ] :: EQL (NM) pattern (NM) tree (NM) walker (N) 
SPECIAL:NAME:PdfSignatureAppearance PdfSigGenericPKCS getSigStandard(): get (V)  | sig (NM) standard (N) 	++ :: pdf (NM) sig (NM) generic (NM) PKCS (N)  :: pdf (NM) signature (NM) appearance (N) 
BASE_VERB:NAME:TreeHead Object _lookupLocally(Name name): lookup (V)  | locally (N) 	++ :: [ name (NI) - name (NI) ] :: object (NI)  :: tree (NM) head (N) 
SPECIAL:NAME:UpdateHandler int getResultSetConcurrency(): get (V)  | result (NM) set (NM) concurrency (N) 	++ :: int (N)  :: update (NM) handler (N) 
NOUN_PHRASE:NAME:NntpSession String next(): get (V) | next (DT) 	++ :: nntp (NM) session (N)  :: string (NI) 
SPECIAL:NAME:ImageContainer float getScaleY(): get (V)  | scale (NM) Y (N) 	++ :: float (N)  :: image (NM) container (NI) 
ENDS_WITH_ING:NAME:ImageWriteParam void unsetTiling(): handle (V) | unset (NM) tiling (N) 	++ :: image (NM) write (NM) param (N)  :: void (N) 
PREP:NAME:QReturn String toString(): convert (V) | to (P) string (NI) 	++ :: Q (NM) return (N)  :: string (NI) 
CONSTRUCTOR:NAME:BarDetailPanel BarDetailPanel BarDetailPanel():  | bar (NM) detail (NM) panel (N) 	++
CONSTRUCTOR:NAME:SOCBankTrade SOCBankTrade SOCBankTrade(String ga, SOCResourceSet give, SOCResourceSet get):  | SOC (NM) bank (NM) trade (N) 	++ :: [ string (NI) - ga (N) ] :: [ SOC (NM) resource (NM) set (N) - give (N) ] :: [ SOC (NM) resource (NM) set (N) - get (N) ]
V_3P_IRR:NAME:X_GL_DistributionLine boolean isOverwriteOrgTrx(): is (V)  | overwrite (NM) org (NM) trx (N) 	++ :: boolean (N)  :: X (NM) GL (NM) distribution (NM) line (N) 
BASE_VERB:FORM:ConstantPool int Fieldref(String c, String name, String type): fieldref (V)  | [ string (NI) - c (N) ]	++ :: [ string (NI) - name (NI) ] :: [ string (NI) - type (N) ] :: constant (NM) pool (N)  :: int (N) 
SPECIAL:CLAS:FolderTest void setUp(): set (V) up (VP)  | folder (NM) test (N) 	++
SPECIAL:NAME:BPlageInterface int getIconeType(): get (V)  | icone (NM) type (N) 	++ :: int (N)  :: B (NM) plage (NM) interface (NI) 
BASE_VERB:NAME:DResultatsOlb void clearResultats(): clear (V)  | resultats (N) 	++ :: D (NM) resultats (NM) olb (N) 
SPECIAL:NAME:FisRunManager FisParameters getParameters(): get (V)  | parameters (N) 	++ :: fis (NM) parameters (N)  :: fis (NM) run (NM) manager (N) 
NOUN_PHRASE:NAME:GMenu JMenu windowMenu(): get (V) | window (NM) menu (N) 	++ :: G (NM) menu (N)  :: J (NM) menu (N) 
CONSTRUCTOR:NAME:Nonce Nonce Nonce(byte b):  | nonce (N) 	++ :: [ byte (N) - b (N) ]
BASE_VERB:CLAS:JogreLogger void initilise(): initilise (V)  | jogre (NM) logger (N) 	++
SPECIAL:NAME:MessageDTO Integer getTypeId(): get (V)  | type (NM) id (NI) 	++ :: integer (N)  :: message (NM) DTO (NI) 
CONSTRUCTOR:NAME:Resources Resources Resources():  | resources (N) 	++
CONSTRUCTOR:NAME:AudioClip AudioClip AudioClip(Mixer mixer, byte audioData, int volume):  | audio (NM) clip (N) 	++ :: [ mixer (N) - mixer (N) ] :: [ byte (N) - audio (NM) data (NI) ] :: [ int (N) - volume (N) ]
SPECIAL:NAME:AbstractEigen CMLAttribute getTypeAttribute(): get (V)  | type (NM) attribute (N) 	++ :: CML (NM) attribute (N)  :: abstract (NM) eigen (N) 
V_3P_IRR:NAME:LMMediator boolean isExtendedAdvancedSearchMode(): is (V)  | extended (NM) advanced (NM) search (NM) mode (N) 	++ :: boolean (N)  :: LM (NM) mediator (N) 
SPECIAL:NAME:MCRClassificationManager void deleteClassificationItem(String classifID): delete (V)  | classification (NM) item (NI) 	++ :: [ string (NI) - classif (NM) ID (NI) ] :: MCR (NM) classification (NM) manager (N) 
SPECIAL:NAME:EjbInfo_Test void testGetSrcClass(): test (VI) get (V)  | src (NM) class (NI) 	++ :: ejb (NM) info (NM) test (N) 
BASE_VERB:FORM:UUIDHexGenerator String format(int intval): format (V)  | [ int (N) - intval (N) ]	++ :: UUID (NM) hex (NM) generator (N)  :: string (NI) 
CONSTRUCTOR:NAME:ExeCallableSql ExeCallableSql ExeCallableSql(PluginDbConfig dbConfig):  | exe (NM) callable (NM) sql (N) 	++ :: [ plugin (NM) db (NM) config (NI) - db (NM) config (NI) ]
BASE_VERB:FORM:ObservationMgrHelper static ObservationMgr narrow(Object val): narrow (V)  | [ object (NI) - val (NI) ]	++ :: observation (NM) mgr (NM) helper (N)  :: observation (NM) mgr (N) 
SPECIAL:NAME:FileBatch String getNonOptionArgsUsage(): get (V)  | non (NM) option (NM) args (NM) usage (N) 	++ :: string (NI)  :: file (NM) batch (N) 
CONSTRUCTOR:NAME:LocalWikiLink LocalWikiLink LocalWikiLink(Container pages):  | local (NM) wiki (NM) link (N) 	++ :: [ container (NI) - pages (N) ]
SPECIAL:NAME:AttributeSelection Config getFirstConfig(): get (V)  | first (NM) config (NI) 	++ :: config (NI)  :: attribute (NM) selection (N) 
SPECIAL:NAME:TestToString void doCall(): do (VI)  | call (N) 	++ :: test (NM) to (NM) string (NI) 
SPECIAL:NAME:BasicTreeUI Object getPathToRoot(Object node, int depth): get (V)  | path (NI) -- to (P) root (N) 	++ :: [ object (NI) - node (NI) ] :: [ int (N) - depth (N) ] :: object (NI)  :: basic (NM) tree (NM) UI (N) 
SPECIAL:NAME:X_AD_Window String getWindowType(): get (V)  | window (NM) type (N) 	++ :: string (NI)  :: X (NM) AD (NM) window (N) 
SPECIAL:FORM:TextArea void initialize(BrowserContext c, Element e): initialize (V)  | [ browser (NM) context (N) - c (N) ]	++ :: [ element (NI) - e (N) ] :: text (NM) area (N) 
CONSTRUCTOR:NAME:AppletOutput AppletOutput AppletOutput(ConsoleApplet aApplet):  | applet (NM) output (N) 	++ :: [ console (NM) applet (N) - a (NM) applet (N) ]
SPECIAL:NAME:ReferenceBasePredictorInterval29Base void setMultipleFeatures(boolean weightPerState): set (V)  | multiple (NM) features (N) 	++ :: [ boolean (N) - weight (NM) per (NM) state (N) ] :: reference (NM) base (NM) predictor (NM) interval (NM) 29 (NM) base (N) 
SPECIAL:FORM:TypedefDefHelper static void write(OutputStream out, TypedefDef val): write (V)  | [ output (NM) stream (NI) - out (N) ]	++ :: [ typedef (NM) def (NI) - val (NI) ] :: typedef (NM) def (NM) helper (N) 
PREP:NAME:ClassFile String toString(): convert (V) | to (P) string (NI) 	++ :: class (NM) file (NI)  :: string (NI) 
SPECIAL:NAME:GraphNode NT getDominatingNodeByCat(String cat): get (V)  | dominating (NM) node (NI) -- by (P) EQUIV[cat (N) , [ string (NI) - cat (N) ]]	++ :: NT (N)  :: graph (NM) node (NI) 
BASE_VERB:NAME:Scanners static Parser<_> haskellDelimiter(): haskell (V)  | delimiter (N) 	++ :: parser (N)  :: scanners (N) 
BASE_VERB:NAME:DefaultXMLDialect void defineIntactTag(String tag): define (V)  | EQUIV[intact (NM) tag (NI) , [ string (NI) - tag (NI) ]]	++ :: default (NM) XML (NM) dialect (N) 
SPECIAL:NAME:ImageBackground Image getImage(): get (V)  | image (N) 	++ :: image (N)  :: image (NM) background (N) 
ENDS_WITH_ED:NAME:void actionPerformed(ActionEvent arg0): handle (V) | action (NM) performed (N) 	++ :: [ action (NM) event (NI) - arg (NM) 0 (N) ] :: ANONYMOUS (N)  :: void (N) 
SPECIAL:NAME:TextEditorImageButtonComponent String getGroupName(FacesContext facesContext): get (V)  | group (NM) name (NI) 	++ :: [ faces (NM) context (N) - faces (NM) context (N) ] :: string (NI)  :: text (NM) editor (NM) image (NM) button (NM) component (N) 
EMPTY:NONE:CPPParser static boolean jj_3R_45():  | jj (PRE) 3 (D) R (PRE) 45 (D) 
BASE_VERB:NAME:JspTableRow void generateHTML(TagWriter t, String content, String defaultBackgroundColor, String defaultStyleClass, int rowNo): generate (V)  | HTML (N) 	++ :: [ tag (NM) writer (N) - t (N) ] :: [ string (NI) - content (N) ] :: [ string (NI) - default (NM) background (NM) color (N) ] :: [ string (NI) - default (NM) style (NM) class (NI) ] :: [ int (N) - row (NM) no (DT) ] :: jsp (NM) table (NM) row (N) 
ENDS_WITH_ED:NAME:SmallBeanView void mouseExited(MouseEvent e): handle (V) | mouse (NM) exited (N) 	++ :: [ mouse (NM) event (NI) - e (N) ] :: small (NM) bean (NM) view (NI)  :: void (N) 
SPECIAL:NAME:CalendarSVG void deleteTaskDep(long sid, long tid): delete (V)  | task (NM) dep (N) 	++ :: [ long (N) - sid (N) ] :: [ long (N) - tid (N) ] :: calendar (NM) SVG (N) 
BASE_VERB:CLAS:BasicEditorActionContributor void contributeToMenu(IMenuManager menu): contribute (V)  | basic (NM) editor (NM) action (NM) contributor (N) -- to (P) EQUIV[menu (N) , [ I (NM) menu (NM) manager (N) - menu (N) ]]	++
SPECIAL:NAME:InhibitorsUncompetitiveImpl String getCcid(): get (V)  | ccid (N) 	++ :: string (NI)  :: inhibitors (NM) uncompetitive (NM) impl (NI) 
SPECIAL:FORM:CIMValue void initialize(Object o, CIMDataType dt): initialize (V)  | [ object (NI) - o (N) ]	++ :: [ CIM (NM) data (NM) type (N) - dt (N) ] :: CIM (NM) value (NI) 
V_3P_IRR:NAME:NewOrderMultileg boolean isSet(EncodedSecurityDescLen field): is (V)  | set (N) 	++ :: [ encoded (NM) security (NM) desc (NM) len (N) - field (N) ] :: boolean (N)  :: new (NM) order (NM) multileg (N) 
VOID_NP:NAME:BehaviorVisitor void activityType(ActivityType elem): handle (V) | activity (NM) type (N) 	++ :: [ activity (NM) type (N) - elem (NI) ] :: behavior (NM) visitor (N)  :: void (N) 
SPECIAL:NAME:JRDesignQuery void addParameterClauseChunk(String text): add (V)  | parameter (NM) clause (NM) chunk (N) 	++ :: [ string (NI) - text (NI) ] :: JR (NM) design (NM) query (N) 
V_3P_IRR:NAME:Incrementer boolean isConstant(): is (V)  | constant (N) 	++ :: boolean (N)  :: incrementer (N) 
SPECIAL:NAME:SCProductScreenshotModel long getGroupId(): get (V)  | group (NM) id (NI) 	++ :: long (N)  :: SC (NM) product (NM) screenshot (NM) model (NI) 
BASE_VERB:FORM:PRED_vwrite_list_1_sub_1 Predicate exec(Prolog engine): exec (V)  | [ prolog (N) - engine (N) ]	++ :: PRED (NM) vwrite (NM) list (NM) 1 (NM) sub (NM) 1 (N)  :: predicate (N) 
BASE_VERB:FORM:PrintfParser StringBuffer strpad(StringBuffer buf, String str, int ch, int width, boolean right): strpad (V)  | [ string (NM) buffer (NI) - buf (N) ]	++ :: [ string (NI) - str (NI) ] :: [ int (N) - ch (N) ] :: [ int (N) - width (N) ] :: printf (NM) parser (N)  :: [ boolean (N) - right (N) ] :: string (NM) buffer (NI) 
BASE_VERB:NAME:Unmarshaller void leaveChild(int nextState): leave (V)  | child (N) 	++ :: [ int (N) - next (DT) state (N) ] :: unmarshaller (N) 
SPECIAL:NAME:X_C_CycleStep String getName(): get (V)  | name (NI) 	++ :: string (NI)  :: X (NM) C (NM) cycle (NM) step (N) 
SPECIAL:NAME:TaskHttpServletRequest Principal getUserPrincipal(): get (V)  | user (NM) principal (N) 	++ :: principal (N)  :: task (NM) http (NM) servlet (NM) request (N) 
ENDS_WITH_ED:NAME:TableEscapeKeyBinding void actionPerformed(ActionEvent actionEvent): handle (V) | action (NM) performed (N) 	++ :: [ action (NM) event (NI) - action (NM) event (NI) ] :: table (NM) escape (NM) key (NM) binding (N)  :: void (N) 
BASE_VERB:NAME:ChanListWindow void listChannels(): list (V)  | channels (N) 	++ :: chan (NM) list (NM) window (N) 
SPECIAL:NAME:IAuthorizationService IAuthorizationPrincipal getPrincipal(IPermission permission): get (V)  | principal (N) 	++ :: [ I (NM) permission (N) - permission (N) ] :: I (NM) authorization (NM) principal (N)  :: I (NM) authorization (NM) service (N) 
SPECIAL:NAME:RE REMatch getMatchImpl(CharIndexed input, int anchor, int eflags, StringBuffer buffer): get (V)  | match (NM) impl (NI) 	++ :: [ char (NM) indexed (N) - input (NI) ] :: [ int (N) - anchor (N) ] :: [ int (N) - eflags (N) ] :: [ string (NM) buffer (NI) - buffer (NI) ] :: RE (NM) match (N)  :: RE (N) 
BASE_VERB:NAME:BuildMethodSummary void visitExceptionThrower(Quad obj): visit (V)  | exception (NM) thrower (N) 	++ :: [ quad (N) - obj (NI) ] :: build (NM) method (NM) summary (N) 
CONSTRUCTOR:NAME:FixedImage FixedImage FixedImage(Config conf, Image image, int w, int h):  | fixed (NM) image (N) 	++ :: [ config (NI) - conf (N) ] :: [ image (N) - image (N) ] :: [ int (N) - w (N) ] :: [ int (N) - h (N) ]
SPECIAL:NAME:Arrest Vector getRelevantWarrants(Vector warrants, LegalWarrant W, MOB criminal): get (V)  | EQUIV[relevant (NM) warrants (N) , [ vector (N) - warrants (N) ]]	++ :: [ legal (NM) warrant (N) - W (N) ] :: [ MOB (N) - criminal (N) ] :: vector (N)  :: arrest (N) 
BASE_VERB:NAME:MetadataSubmissionFormParser static int zzUnpackTrans(): zz (PRE) unpack (V)  | trans (N) 	++ :: int (N)  :: metadata (NM) submission (NM) form (NM) parser (N) 
PREP:NAME:LoadBalancer void beforeOperation(Database database): handle (V) | before (NM) operation (N) 	++ :: [ database (N) - database (N) ] :: load (NM) balancer (N)  :: void (N) 
SPECIAL:NAME:ModelCluster_instance_intf int run_ModelCluster_number_of_nodes_set_(int _value_): run (VI)  | model (NM) cluster (NM) number (NI) -- of (P) nodes (NM) set (N) 	++ :: [ int (N) - value (NI) ] :: int (N)  :: model (NM) cluster (NM) instance (NM) intf (N) 
BASE_VERB:NAME:Throttle void unthrottlePort(List portList): unthrottle (V)  | port (N) 	++ :: [ list (N) - port (NM) list (N) ] :: throttle (N) 
SPECIAL:NAME:ClassServer Vector getClasspath(): get (V)  | classpath (N) 	++ :: vector (N)  :: class (NM) server (N) 
SPECIAL:NAME:osmsMessageCreateUserRequest void setSuffix(String Suffix): set (V)  | suffix (N) 	++ :: [ string (NI) - suffix (N) ] :: osms (NM) message (NM) create (NM) user (NM) request (N) 
BASE_VERB:CLAS:ScormCourseEntityCMP void ejbStore(): ejb (PRE) store (V)  | scorm (NM) course (NM) entity (NM) CMP (N) 	++
SPECIAL:NAME:MainPanel void btRunActionPerformed(ActionEvent ae): bt (PRE) run (VI)  | action (NM) performed (N) 	++ :: [ action (NM) event (NI) - ae (N) ] :: main (NM) panel (N) 
CONSTRUCTOR:NAME:MapToObjectKeyByteMapAdapter MapToObjectKeyByteMapAdapter MapToObjectKeyByteMapAdapter(Map map):  | map (NM) to (NM) object (NM) key (NM) byte (NM) map (NM) adapter (NI) 	++ :: [ map (N) - map (N) ]
BASE_VERB:NAME:BitVector void fillNot(int n): fill (V)  | not (DT) 	++ :: [ int (N) - n (N) ] :: bit (NM) vector (N) 
ENDS_WITH_ED:NAME:HTMLformatFrame_jbeFormularSubmit_actionAdapter void actionPerformed(ActionEvent e): handle (V) | action (NM) performed (N) 	++ :: [ action (NM) event (NI) - e (N) ] :: HTM (NM) lformat (NM) frame (NM) jbe (NM) formular (NM) submit (NM) action (NM) adapter (NI)  :: void (N) 
SPECIAL:NAME:RowAdapter String getNameColumn(): get (V)  | name (NM) column (N) 	++ :: string (NI)  :: row (NM) adapter (NI) 
BASE_VERB:NAME:MagickImage boolean dispatchImage(int x, int y, int width, int height, String map, byte pixels): dispatch (VI)  | image (N) 	++ :: [ int (N) - x (N) ] :: [ int (N) - y (N) ] :: [ int (N) - width (N) ] :: [ int (N) - height (N) ] :: [ string (NI) - map (N) ] :: [ byte (N) - pixels (N) ] :: boolean (N)  :: magick (NM) image (N) 
SPECIAL:NAME:DSAPublicKeyParameters BigInteger getY(): get (V)  | Y (N) 	++ :: big (NM) integer (N)  :: DSA (NM) public (NM) key (NM) parameters (N) 
SPECIAL:NAME:JDOMetafileGUIEditor void doSaveAs(): do (VI) save (V)  | as (NM) 	++ :: JDO (NM) metafile (NM) GUI (NM) editor (N) 
CONSTRUCTOR:NAME:DeviceItem DeviceItem DeviceItem(DragDropItem source):  | device (NM) item (NI) 	++ :: [ drag (NM) drop (NM) item (NI) - source (NI) ]
SPECIAL:FORM:RatingInternalProxyList Object get(int index): get (V)  | [ int (N) - index (NI) ]	++ :: rating (NM) internal (NM) proxy (NM) list (N)  :: object (NI) 
SPECIAL:NAME:RerootAction String getName(): get (V)  | name (NI) 	++ :: string (NI)  :: reroot (NM) action (N) 
BASE_VERB:CLAS:TimeSheetSummary String Commision(): commision (V)  | time (NM) sheet (NM) summary (N) 	++ :: string (NI) 
SPECIAL:NAME:HillClimber Object getContribution(): get (V)  | contribution (N) 	++ :: object (NI)  :: hill (NM) climber (N) 
CONSTRUCTOR:NAME:ArrayPath ArrayPath ArrayPath(Path path):  | array (NM) path (NI) 	++ :: [ path (NI) - path (NI) ]
SPECIAL:NAME:InitialParameters Map getParameterMap(): get (V)  | parameter (NM) map (N) 	++ :: map (N)  :: initial (NM) parameters (N) 
SPECIAL:NAME:ResourceManager void setSlotWidth(int newValue): set (V)  | slot (NM) width (N) 	++ :: [ int (N) - new (NM) value (NI) ] :: resource (NM) manager (N) 
SPECIAL:NAME:SimpleMovingElementHandler void setSpeed(Speed speed): set (V)  | speed (N) 	++ :: [ speed (N) - speed (N) ] :: simple (NM) moving (NM) element (NM) handler (N) 
NOUN_PHRASE:NAME:AccessorTest static Test suite(): get (V) | suite (N) 	++ :: accessor (NM) test (N)  :: test (N) 
CONSTRUCTOR:NAME:Manager_deleAccount_OK_actionAdapter Manager_deleAccount_OK_actionAdapter Manager_deleAccount_OK_actionAdapter(Manager adaptee):  | manager (NM) dele (NM) account (NM) OK (NM) action (NM) adapter (NI) 	++ :: [ manager (N) - adaptee (N) ]
SPECIAL:NAME:MenuCheckedActionImpl UnmarshallingEventHandler createUnmarshaller(UnmarshallingContext context): create (V)  | unmarshaller (N) 	++ :: [ unmarshalling (NM) context (N) - context (N) ] :: unmarshalling (NM) event (NM) handler (N)  :: menu (NM) checked (NM) action (NM) impl (NI) 
BASE_VERB:NAME:KeyboardFocusManager void fireVetoableChange(String name, Object o, Object n): fire (V)  | vetoable (NM) change (N) 	++ :: [ string (NI) - name (NI) ] :: [ object (NI) - o (N) ] :: [ object (NI) - n (N) ] :: keyboard (NM) focus (NM) manager (N) 
SPECIAL:NAME:WebForm String getAction(): get (V)  | action (N) 	++ :: string (NI)  :: web (NM) form (N) 
BASE_VERB:NAME:Resource void signalChangeMyDisplayedItems(LinkableObject oldItem, LinkableObject newItem): signal (V)  | change (NM) my (PR) displayed (NM) items (N) 	++ :: [ linkable (NM) object (NI) - old (NM) item (NI) ] :: [ linkable (NM) object (NI) - new (NM) item (NI) ] :: resource (N) 
CONSTRUCTOR:NAME:JAWPGameController JAWPGameController JAWPGameController(String gameStore, boolean load):  | JAWP (NM) game (NM) controller (N) 	++ :: [ string (NI) - game (NM) store (N) ] :: [ boolean (N) - load (N) ]
BASE_VERB:NAME:DynamicTree void selectRootnode(): select (V)  | rootnode (N) 	++ :: dynamic (NM) tree (NI) 
CONSTRUCTOR:NAME:SOCRejectOffer SOCRejectOffer SOCRejectOffer(String ga, int pn):  | SOC (NM) reject (NM) offer (N) 	++ :: [ string (NI) - ga (N) ] :: [ int (N) - pn (N) ]
PREP:NAME:Token String toString(): convert (V) | to (P) string (NI) 	++ :: token (N)  :: string (NI) 
BASE_VERB:CLAS:UrlClassLoader void flush(): flush (V)  | url (NM) class (NM) loader (N) 	++
BASE_VERB:NAME:AutomatonBuilder Object javaBlock(JavaBlock block): java (V)  | EQUIV[block (N) , [ java (NM) block (N) - block (N) ]]	++ :: object (NI)  :: automaton (NM) builder (N) 
SPECIAL:CLAS:PKTConvert void doExit(): do (VI) exit (VI)  | PKT (NM) convert (N) 	++
VOID_NP:NAME:TableTuple void validityCheck(): handle (V) | validity (NM) check (N) 	++ :: table (NM) tuple (N)  :: void (N) 
BASE_VERB:NAME:Resume int hashCode(): hash (V)  | code (NI) 	++ :: int (N)  :: resume (N) 
BASE_VERB:NAME:Utils static boolean parseBoolean(String arg): parse (V)  | boolean (N) 	++ :: [ string (NI) - arg (N) ] :: boolean (N)  :: utils (N) 
SPECIAL:NAME:WsdlInputMessageMapListImpl Thing setWsdlOutputMessageParts(): set (V)  | wsdl (NM) output (NM) message (NM) parts (N) 	++ :: thing (N)  :: wsdl (NM) input (NM) message (NM) map (NM) list (NM) impl (NI) 
BASE_VERB:FORM:HttpOutputConnectionLive void put(Entry entry): put (V)  | [ entry (NI) - entry (NI) ]	++ :: http (NM) output (NM) connection (NM) live (N) 
SPECIAL:NAME:ToolButton String getText(): get (V)  | text (NI) 	++ :: string (NI)  :: tool (NM) button (N) 
SPECIAL:NAME:Rect CSSPrimitiveValue getTop(): get (V)  | top (N) 	++ :: CSS (NM) primitive (NM) value (NI)  :: rect (N) 
SPECIAL:NAME:fireflier String addDecimalPoints(String number): add (V)  | decimal (NM) points (N) 	++ :: [ string (NI) - number (NI) ] :: string (NI)  :: fireflier (N) 
ED_VERB:CLAS:Info static String failedToLoadRemoteRuleSets(String failedRuleSetNames): failed (V)  | info (NI) -- to (P) load (NM) remote (NM) rule (NM) sets (N) 	++ :: [ string (NI) - failed (NM) rule (NM) set (NM) names (N) ] :: string (NI) 
CONSTRUCTOR:NAME:DateButtonPanel DateButtonPanel DateButtonPanel(String label):  | date (NM) button (NM) panel (N) 	++ :: [ string (NI) - label (NI) ]
SPECIAL:NAME:PIHandlerImpl void setServerPIInfo(NVList arguments): set (V)  | server (NM) PI (NM) info (NI) 	++ :: [ NV (NM) list (N) - arguments (N) ] :: PI (NM) handler (NM) impl (NI) 
BASE_VERB:NAME:ResolverConfigurationImpl static String fallbackDomain0(): fallback (V)  | domain (N) 0 (D) 	++ :: string (NI)  :: resolver (NM) configuration (NM) impl (NI) 
SPECIAL:CLAS:LoggingOutputStream void reset(): reset (V)  | logging (NM) output (NM) stream (NI) 	++
PREP:NAME:BaseSqlTypeMapper String toSqlType(String otherType): convert (V) | to (P) sql (NM) type (N) 	++ :: [ string (NI) - other (DT) type (N) ] :: base (NM) sql (NM) type (NM) mapper (N)  :: string (NI) 
BASE_VERB:FORM:NumberImageCanvas void paint(Graphics g): paint (V)  | [ graphics (N) - g (N) ]	++ :: number (NM) image (NM) canvas (N) 
SPECIAL:NAME:PropertyStep void doInput(): do (VI)  | input (NI) 	++ :: property (NM) step (N) 
ENDS_WITH_ED:NAME:void mouseEntered(MouseEvent e): handle (V) | mouse (NM) entered (N) 	++ :: [ mouse (NM) event (NI) - e (N) ] :: ANONYMOUS (N)  :: void (N) 
SPECIAL:NAME:LifeCyclePanel void setDataModel(MD_DataModel mdDataModel): set (V)  | data (NM) model (NI) 	++ :: [ MD (NM) data (NM) model (NI) - md (NM) data (NM) model (NI) ] :: life (NM) cycle (NM) panel (N) 
SPECIAL:NAME:DBLPparserOutput String getOutputText(): get (V)  | output (NM) text (NI) 	++ :: string (NI)  :: DBL (NM) pparser (NM) output (N) 
SPECIAL:CLAS:ExtNegotiationImpl void writeTo(DataOutputStream dout): write (V)  | ext (NM) negotiation (NM) impl (NI) -- to (P) [ data (NM) output (NM) stream (NI) - dout (N) ]	++ :: [ data (NM) output (NM) stream (NI) - dout (N) ]
SPECIAL:CLAS:CreditPaymentDlg void jbInit(): jb (PRE) init (V)  | credit (NM) payment (NM) dlg (N) 	++
SPECIAL:NAME:DiskStoreTest DiskStore createAutoPersistentDiskStore(String cacheName): create (V)  | auto (NM) persistent (NM) disk (NM) store (N) 	++ :: [ string (NI) - cache (NM) name (NI) ] :: disk (NM) store (N)  :: disk (NM) store (NM) test (N) 
SPECIAL:NAME:CanonCRWMakerNoteSupport int getThumbnailInfo(): get (V)  | thumbnail (NM) info (NI) 	++ :: int (N)  :: canon (NM) CRW (NM) maker (NM) note (NM) support (N) 
SPECIAL:NAME:MParse ExecuteStreamHandler createStreamHandler(): create (V)  | stream (NM) handler (N) 	++ :: execute (NM) stream (NM) handler (N)  :: M (NM) parse (N) 
SPECIAL:NAME:TagInfo static TagInfo getTagInfoFromXMLConfiguration(Element renderingInstructions): get (V)  | tag (NM) info (NI) -- from (P) XML (NM) configuration (NI) 	++ :: [ element (NI) - rendering (NM) instructions (N) ] :: tag (NM) info (NI)  :: tag (NM) info (NI) 
ENDS_WITH_ING:NAME:ChangeLayer void editorFrameClosing(EditorFrameEvent e): handle (V) | editor (NM) frame (NM) closing (N) 	++ :: [ editor (NM) frame (NM) event (NI) - e (N) ] :: change (NM) layer (N)  :: void (N) 
CONSTRUCTOR:NAME:Reflected Reflected Reflected():  | reflected (N) 	++
SPECIAL:FORM:DBFiles void reset(RuleController regelwerk): reset (V)  | [ rule (NM) controller (N) - regelwerk (N) ]	++ :: DB (NM) files (N) 
CONSTRUCTOR:NAME:SsTemplateContextImpl SsTemplateContextImpl SsTemplateContextImpl(SsTemplateProcessor processor, File templateDir):  | ss (NM) template (NM) context (NM) impl (NI) 	++ :: [ ss (NM) template (NM) processor (N) - processor (N) ] :: [ file (NI) - template (NM) dir (NI) ]
BASE_VERB:NAME:DraggableComponentBox void dragDraggableComponent(DraggableComponent component, Point p): drag (V)  | EQUIV[draggable (NM) component (N) , [ draggable (NM) component (N) - component (N) ]]	++ :: [ point (N) - p (NI) ] :: draggable (NM) component (NM) box (N) 
NOUN_PHRASE:NAME:SubMenuImpl static Class PRIMARY_INTERFACE_CLASS(): get (V) | PRIMARY (NM) INTERFACE (NM) CLASS (NI) 	++ :: sub (NM) menu (NM) impl (NI)  :: class (NI) 
CONSTRUCTOR:NAME:JChoiceText JChoiceText JChoiceText(String labeltxt):  | J (NM) choice (NM) text (NI) 	++ :: [ string (NI) - labeltxt (N) ]
SPECIAL:NAME:LoadStoreObject float getStoreTime(): get (V)  | store (NM) time (N) 	++ :: float (N)  :: load (NM) store (NM) object (NI) 
SPECIAL:NAME:CollisionElasticPdu Vector3Float getLocation(): get (V)  | location (NI) 	++ :: vector (NM) 3 (NM) float (N)  :: collision (NM) elastic (NM) pdu (N) 
BASE_VERB:NAME:MockHttpServletResponse void flushBuffer(): flush (V)  | buffer (NI) 	++ :: mock (NM) http (NM) servlet (NM) response (N) 
SPECIAL:FORM:Test static void main(String args): main (V)  | [ string (NI) - args (N) ]	++ :: test (N) 
SPECIAL:NAME:CodingschemesPackageImpl EReference getCodingSchemeVersion_Relations(): get (V)  | coding (NM) scheme (NM) version (NM) relations (N) 	++ :: E (NM) reference (NI)  :: codingschemes (NM) package (NM) impl (NI) 
SPECIAL:NAME:JSplitPane int getLastDividerLocation(): get (V)  | last (DT) divider (NM) location (NI) 	++ :: int (N)  :: J (NM) split (NM) pane (N) 
BASE_VERB:CLAS:DayOfWeekScheduleDE void clear(): clear (V)  | day (NM) of (NM) week (NM) schedule (NM) DE (N) 	++
SPECIAL:NAME:JavaCC void setForcelacheck(boolean forceLACheck): set (V)  | forcelacheck (N) 	++ :: [ boolean (N) - force (NM) LA (NM) check (N) ] :: java (NM) CC (N) 
CONSTRUCTOR:NAME:XMLFilterImpl XMLFilterImpl XMLFilterImpl(XMLReader parent):  | XML (NM) filter (NM) impl (NI) 	++ :: [ XML (NM) reader (N) - parent (N) ]
SPECIAL:NAME:UserProfileForm String getFaceUrl(): get (V)  | face (NM) url (NI) 	++ :: string (NI)  :: user (NM) profile (NM) form (N) 
SPECIAL:FORM:Buchungsprotokoll int delete(long vishandle): delete (V)  | [ long (N) - vishandle (N) ]	++ :: buchungsprotokoll (N)  :: int (N) 
SPECIAL:NAME:MRequest MRequestUpdate getUpdates(String confidentialType): get (V)  | updates (N) 	++ :: [ string (NI) - confidential (NM) type (N) ] :: M (NM) request (NM) update (N)  :: M (NM) request (N) 
V_3P_IRR:NAME:SecondsImpl boolean isSetDecimalPlaces(): is (V)  | set (NM) decimal (NM) places (N) 	++ :: boolean (N)  :: seconds (NM) impl (NI) 
SPECIAL:NAME:PlayerApplet String getAudioFileName(): get (V)  | audio (NM) file (NM) name (NI) 	++ :: string (NI)  :: player (NM) applet (N) 
NOUN_PHRASE:NAME:SPARQLParser Expression RelationalExpression(): get (V) | relational (NM) expression (N) 	++ :: SPARQL (NM) parser (N)  :: expression (N) 
V_3PS:CLAS:BaseMockOJMBean Class interfaces(): interfaces (V)  | base (NM) mock (NM) OJM (NM) bean (NI) 	++ :: class (NI) 
SPECIAL:NAME:CMLAtomArrayTest void testGetMolecule(): test (VI) get (V)  | molecule (N) 	++ :: CML (NM) atom (NM) array (NM) test (N) 
ENDS_WITH_ED:NAME:Frame1 void jButton1_actionPerformed(ActionEvent e): handle (V) | j (PRE) button (NM) 1 (D) action (NM) performed (N) 	++ :: [ action (NM) event (NI) - e (N) ] :: frame (NM) 1 (N)  :: void (N) 
SPECIAL:NAME:CSU_C12_STUDY_PHASE CSU_C12_STUDY_SCHEDULE getSTUDY_SCHEDULE(): get (V)  | STUDY (NM) SCHEDULE (N) 	++ :: CSU (NM) C (NM) 12 (NM) STUDY (NM) SCHEDULE (N)  :: CSU (NM) C (NM) 12 (NM) STUDY (NM) PHASE (N) 
ENDS_WITH_ED:NAME:void itemStateChanged(ItemEvent e): handle (V) | item (NM) state (NM) changed (N) 	++ :: [ item (NM) event (NI) - e (N) ] :: ANONYMOUS (N)  :: void (N) 
V_3P_IRR:NAME:NewOrderSingle boolean isSet(CashMargin field): is (V)  | set (N) 	++ :: [ cash (NM) margin (N) - field (N) ] :: boolean (N)  :: new (NM) order (NM) single (N) 
BASE_VERB:NAME:CleavageBondMultiReaction boolean existAC(IAtomContainerSet acSet, IMolecule fragment): exist (V)  | AC (N) 	++ :: [ I (NM) atom (NM) container (NM) set (N) - ac (NM) set (N) ] :: [ I (NM) molecule (N) - fragment (N) ] :: boolean (N)  :: cleavage (NM) bond (NM) multi (NM) reaction (N) 
SPECIAL:NAME:CactPcrTestDataExtnInfo void setPcr_odTotalUg(double pcr_odTotalUg): set (V)  | pcr (NM) od (NM) total (NM) ug (N) 	++ :: [ double (N) - pcr (NM) od (NM) total (NM) ug (N) ] :: cact (NM) pcr (NM) test (NM) data (NM) extn (NM) info (NI) 
V_3P_IRR:NAME:StyleSectionPropertiesContentStrictImpl boolean isSetDontBalanceTextColumns(): is (V)  | set (NM) dont (NM) balance (NM) text (NM) columns (N) 	++ :: boolean (N)  :: style (NM) section (NM) properties (NM) content (NM) strict (NM) impl (NI) 
SPECIAL:NAME:CDLMergeContentProvider Object getLeftContent(Object input): get (V)  | left (NM) content (N) 	++ :: [ object (NI) - input (NI) ] :: object (NI)  :: CDL (NM) merge (NM) content (NM) provider (N) 
SPECIAL:NAME:Skill void setAdditiveDecay(Long additiveDecay): set (V)  | additive (NM) decay (N) 	++ :: [ long (N) - additive (NM) decay (N) ] :: skill (N) 
SPECIAL:NAME:NVRegisterCombiners static void glGetCombinerInputParameterNV(int stage, int portion, int variable, int pname, IntBuffer params): gl (PRE) get (V)  | combiner (NM) input (NM) parameter (NM) NV (N) 	++ :: [ int (N) - stage (N) ] :: [ int (N) - portion (N) ] :: [ int (N) - variable (N) ] :: [ int (N) - pname (N) ] :: [ int (NM) buffer (NI) - params (N) ] :: NV (NM) register (NM) combiners (N) 
VOID_NP:NAME:void menuAboutToShow(IMenuManager manager): handle (V) | menu (NM) about (NM) to (NM) show (N) 	++ :: [ I (NM) menu (NM) manager (N) - manager (N) ] :: ANONYMOUS (N)  :: void (N) 
SPECIAL:NAME:PluginRegistrationTypeImpl List getPluginMode(): get (V)  | plugin (NM) mode (N) 	++ :: list (N)  :: plugin (NM) registration (NM) type (NM) impl (NI) 
BASE_VERB:CLAS:ImmutableMuleEndpoint void initialise(): initialise (V)  | immutable (NM) mule (NM) endpoint (N) 	++
SPECIAL:NAME:WfsPackageImpl EClass getInsertResultsType(): get (V)  | insert (NM) results (NM) type (N) 	++ :: E (NM) class (NI)  :: wfs (NM) package (NM) impl (NI) 
BASE_VERB:NAME:FiddlerImpl void logInfoLocators(): log (V)  | info (NM) locators (N) 	++ :: fiddler (NM) impl (NI) 
SPECIAL:NAME:ReportFieldEntityBean Integer getOrderPosition(): get (V)  | order (NM) position (N) 	++ :: integer (N)  :: report (NM) field (NM) entity (NM) bean (NI) 
SPECIAL:NAME:VTA_construct_view void setModel(DataModel value): set (V)  | model (NI) 	++ :: [ data (NM) model (NI) - value (NI) ] :: VTA (NM) construct (NM) view (NI) 
V_3P_IRR:NAME:NoNestedPartyIDs boolean isSetNestedPartyIDSource(): is (V)  | set (NM) nested (NM) party (NM) ID (NM) source (NI) 	++ :: boolean (N)  :: no (DT) nested (NM) party (NM) I (NM) ds (N) 
BASE_VERB:NAME:DrawPageHelper static String extractCardName(XDrawPage xDrawPage): extract (V)  | card (NM) name (NI) 	++ :: [ X (NM) draw (NM) page (N) - x (NM) draw (NM) page (N) ] :: string (NI)  :: draw (NM) page (NM) helper (N) 
SPECIAL:NAME:ParseStateTests void testNesting(): test (VI)  | nesting (N) 	++ :: parse (NM) state (NM) tests (N) 
BASE_VERB:NAME:JavaCharStream void ExpandBuff(boolean wrapAround): expand (V)  | buff (N) 	++ :: [ boolean (N) - wrap (NM) around (N) ] :: [ boolean (N) - wrap (NM) around (N) ] :: java (NM) char (NM) stream (NI) 
V_3PS:NAME:CustomCalendarEditor boolean supportsCustomEditor(): supports (V)  | custom (NM) editor (N) 	++ :: boolean (N)  :: custom (NM) calendar (NM) editor (N) 
BASE_VERB:CLAS:referenceSearch_jsp void _jspDestroy(): jsp (PRE) destroy (V)  | reference (NM) search (NM) jsp (N) 	++
ENDS_WITH_ED:NAME:PropertyTable void mousePressed(MouseEvent e): handle (V) | mouse (NM) pressed (N) 	++ :: [ mouse (NM) event (NI) - e (N) ] :: property (NM) table (N)  :: void (N) 
SPECIAL:CLAS:SelectAllSystemAction void initialize(): initialize (V)  | select (NM) all (DT) system (NM) action (N) 	++
BASE_VERB:FORM:DjUser void reload(DjSession session): reload (V)  | [ dj (NM) session (N) - session (N) ]	++ :: dj (NM) user (N) 
ENDS_WITH_ING:NAME:LifeSupport void timePassing(double time): handle (V) | time (NM) passing (N) 	++ :: [ double (N) - time (N) ] :: life (NM) support (N)  :: void (N) 
SPECIAL:NAME:P6CallableStatement Array getArray(String p0): get (V)  | array (N) 	++ :: [ string (NI) - p (NM) 0 (N) ] :: array (N)  :: P (NM) 6 (NM) callable (NM) statement (NI) 
BASE_VERB:NAME:BESCreateActivity JobDefinitionDocument populateMyProxyElements(JobDefinitionDocument pJSDL, CommandLine pCmdLine, Properties pSettings): populate (V)  | my (PR) proxy (NM) elements (N) 	++ :: [ job (NM) definition (NM) document (NI) - p (NM) JSDL (N) ] :: [ command (NM) line (N) - p (NM) cmd (NM) line (N) ] :: [ properties (N) - p (NM) settings (N) ] :: job (NM) definition (NM) document (NI)  :: BES (NM) create (NM) activity (N) 
BASE_VERB:FORM:SceneNodeList void insert(String key, ISceneNode value): insert (V)  | [ string (NI) - key (NI) ]	++ :: [ I (NM) scene (NM) node (NI) - value (NI) ] :: scene (NM) node (NM) list (N) 
BASE_VERB:CLAS:BeanCacheEntry void touch(): touch (V)  | bean (NM) cache (NM) entry (NI) 	++
SPECIAL:NAME:Motion2DAverages double getAvgXMid(): get (V)  | avg (NM) X (NM) mid (N) 	++ :: double (N)  :: motion (NM) 2 (NM) D (NM) averages (N) 
SPECIAL:NAME:StatusEvent int getType(): get (V)  | type (N) 	++ :: int (N)  :: status (NM) event (NI) 
SPECIAL:NAME:CreateDialog void setBox(DesignBox box): set (V)  | box (N) 	++ :: [ design (NM) box (N) - box (N) ] :: create (NM) dialog (N) 
SPECIAL:NAME:ColorIcon int getIconHeight(): get (V)  | icon (NM) height (N) 	++ :: int (N)  :: color (NM) icon (N) 
SPECIAL:NAME:DocumentNavigator String getElementStringValue(Object obj): get (V)  | element (NM) string (NM) value (NI) 	++ :: [ object (NI) - obj (NI) ] :: string (NI)  :: document (NM) navigator (N) 
SPECIAL:NAME:OyoahaThemeScheme ColorUIResource getFocus(): get (V)  | focus (N) 	++ :: color (NM) UI (NM) resource (N)  :: oyoaha (NM) theme (NM) scheme (N) 
SPECIAL:NAME:ComponentKit static void setEnabled(Component component, boolean enabled): set (V)  | enabled (N) 	++ :: [ component (N) - component (N) ] :: [ boolean (N) - enabled (N) ] :: component (NM) kit (N) 
SPECIAL:NAME:ReturnTypeExample static int returnInteger(): return (V)  | integer (N) 	++ :: int (N)  :: return (NM) type (NM) example (N) 
SPECIAL:NAME:SpeakerIdentServant_Stub Configuration setDefaultConfig(): set (V)  | default (NM) config (NI) 	++ :: configuration (NI)  :: speaker (NM) ident (NM) servant (NM) stub (N) 
PREP:NAME:Crossref String toString(): convert (V) | to (P) string (NI) 	++ :: crossref (N)  :: string (NI) 
BASE_VERB:NAME:OneTest String failMessage(JMLAssertionError e): fail (V)  | message (NI) 	++ :: [ JML (NM) assertion (NM) error (N) - e (N) ] :: string (NI)  :: one (NM) test (N) 
BASE_VERB:NAME:Unmarshaller void enterElement(String ___uri, String ___local, String ___qname, Attributes __atts): enter (V)  | element (NI) 	++ :: [ string (NI) - uri (NI) ] :: [ string (NI) - local (N) ] :: [ string (NI) - qname (N) ] :: [ attributes (N) - atts (N) ] :: unmarshaller (N) 
SPECIAL:NAME:DbLink static int getSchoenen(): get (V)  | schoenen (N) 	++ :: int (N)  :: db (NM) link (N) 
SPECIAL:NAME:CollectionPlugin Parser<Node> getParser(String nonterminal): get (V)  | parser (N) 	++ :: [ string (NI) - nonterminal (N) ] :: parser (NM) node (NI)  :: collection (NM) plugin (N) 
V_3PS:FORM:FilePaths boolean equals(Object o): equals (V)  | [ object (NI) - o (N) ]	++ :: file (NM) paths (N)  :: boolean (N) 
SPECIAL:NAME:ManageUsersForm void setUserrole(MochaListModel userrole): set (V)  | userrole (N) 	++ :: [ mocha (NM) list (NM) model (NI) - userrole (N) ] :: manage (NM) users (NM) form (N) 
SPECIAL:NAME:AbstractBitmapFormat short getBitmapFlags(): get (V)  | bitmap (NM) flags (N) 	++ :: short (N)  :: abstract (NM) bitmap (NM) format (NI) 
BASE_VERB:NAME:MailUtil static void sendTextMail(String from, String to, String subject, String content): send (V)  | text (NM) mail (N) 	++ :: [ string (NI) - from (N) ] :: [ string (NI) - to (N) ] :: [ string (NI) - subject (N) ] :: [ string (NI) - content (N) ] :: mail (NM) util (N) 
SPECIAL:NAME:IDualTest void testSetNullLPSTR(): test (VI) set (V)  | null (NM) LPSTR (N) 	++ :: I (NM) dual (NM) test (N) 
SPECIAL:NAME:UIManager static Color getColor(Object key): get (V)  | color (N) 	++ :: [ object (NI) - key (NI) ] :: color (N)  :: UI (NM) manager (N) 
SPECIAL:NAME:BaseEquipment Casts getCasts(): get (V)  | casts (N) 	++ :: casts (N)  :: base (NM) equipment (N) 
CONSTRUCTOR:NAME:ATVtextframe ATVtextframe ATVtextframe(String s):  | AT (NM) vtextframe (N) 	++ :: [ string (NI) - s (N) ]
SPECIAL:NAME:Arrays static void checkArray(long array, int off, int len): check (VI)  | EQUIV[array (N) , [ long (N) - array (N) ]]	++ :: [ int (N) - off (N) ] :: [ int (N) - len (N) ] :: arrays (N) 
SPECIAL:NAME:ConceptTagConstraintOrTemplate int getPostValidatorCount(): get (V)  | post (NM) validator (NM) count (N) 	++ :: int (N)  :: concept (NM) tag (NM) constraint (NM) or (NM) template (N) 
CONSTRUCTOR:NAME:DefaultIntervalCategoryDataset DefaultIntervalCategoryDataset DefaultIntervalCategoryDataset(Number starts, Number ends):  | default (NM) interval (NM) category (NM) dataset (N) 	++ :: [ number (NI) - starts (N) ] :: [ number (NI) - ends (N) ]
SPECIAL:NAME:TreeViewColumn boolean getResizable(): get (V)  | resizable (N) 	++ :: boolean (N)  :: tree (NM) view (NM) column (N) 
BASE_VERB:NAME:CrawlerUtililties static String expandSqlForTable(String templateSql, Table table): expand (V)  | EQUIV[sql (N) , [ string (NI) - template (NM) sql (N) ]]-- for (P) EQUIV[table (N) , [ table (N) - table (N) ]]	++ :: [ string (NI) - template (NM) sql (N) ] :: string (NI)  :: crawler (NM) utililties (N) 
SPECIAL:NAME:ICC_Profile static ICC_Profile getInstance(String filename): get (V)  | instance (NI) 	++ :: [ string (NI) - filename (N) ] :: ICC (NM) profile (NI)  :: ICC (NM) profile (NI) 
SPECIAL:NAME:Initializer void setUserDAO(UserDAO userDAO): set (V)  | user (NM) DAO (N) 	++ :: [ user (NM) DAO (N) - user (NM) DAO (N) ] :: initializer (N) 
BASE_VERB:CLAS:LoopWriter void flush(): flush (V)  | loop (NM) writer (N) 	++
SPECIAL:NAME:Java3DSaver void getTexCoordExtents(GeometryArray geom, float extents): get (V)  | EQUIV[tex (NM) coord (NM) extents (N) , [ float (N) - extents (N) ]]	++ :: [ geometry (NM) array (N) - geom (N) ] :: java (NM) 3 (NM) D (NM) saver (N) 
SPECIAL:CLAS:NumberList void create(): create (V)  | number (NM) list (N) 	++
BASE_VERB:NAME:ParseHandlerPlain void emitIRI(int line, int column, String iriStr): emit (V)  | EQUIV[IRI (N) , [ string (NI) - iri (NM) str (NI) ]]	++ :: [ int (N) - line (N) ] :: [ int (N) - column (N) ] :: parse (NM) handler (NM) plain (N) 
NOUN_PHRASE:NAME:CheckBoxTag boolean theBodyShouldBeEvaluatedAgain(): get (V) | the (DT) body (NM) should (NM) be (NM) evaluated (NM) again (N) 	++ :: check (NM) box (NM) tag (NI)  :: boolean (N) 
SPECIAL:CLAS:SpellAlterReality void process(): process (VI)  | spell (NM) alter (NM) reality (N) 	++
SPECIAL:NAME:ProprodControllerEJB Collection getSampleInfoByIds(String ids): get (V)  | sample (NM) info (NI) -- by (P) EQUIV[ids (N) , [ string (NI) - ids (N) ]]	++ :: collection (N)  :: proprod (NM) controller (NM) EJB (N) 
BASE_VERB:NAME:AceMailService boolean handleMail(AceMailMessage mail_message): handle (VI)  | EQUIV[mail (N) , [ ace (NM) mail (NM) message (NI) - mail (NM) message (NI) ]]	++ :: boolean (N)  :: ace (NM) mail (NM) service (N) 
BASE_VERB:NAME:DomainDef void _linkSpecifiedEnd(AssociationEnd specifiedEnd1): link (V)  | EQUIV[specified (NM) end (N) , [ association (NM) end (N) - specified (NM) end (NM) 1 (N) ]]	++ :: domain (NM) def (NI) 
SPECIAL:NAME:InfoTypeAndValue DERObjectIdentifier getInfoType(): get (V)  | info (NM) type (N) 	++ :: DER (NM) object (NM) identifier (NI)  :: info (NM) type (NM) and (NM) value (NI) 
SPECIAL:NAME:Property void addProperty(String n, String v): add (V)  | property (N) 	++ :: [ string (NI) - n (N) ] :: [ string (NI) - v (N) ] :: property (N) 
BASE_VERB:NAME:DBQueryEngine List listTablesInSchema(String schemaName): list (V)  | tables (N) -- in (P) EQUIV[schema (N) , [ string (NI) - schema (NM) name (NI) ]]	++ :: list (N)  :: DB (NM) query (NM) engine (N) 
V_3P_IRR:NAME:DataPilotLevelImpl boolean isSetShowEmpty(): is (V)  | set (NM) show (NM) empty (N) 	++ :: boolean (N)  :: data (NM) pilot (NM) level (NM) impl (NI) 
BASE_VERB:CLAS:IRenderWindow void update(): update (V)  | I (NM) render (NM) window (N) 	++
SPECIAL:NAME:Collector int getLogLevel(): get (V)  | log (NM) level (N) 	++ :: int (N)  :: collector (N) 
BASE_VERB:NAME:JLabel void updateUI(): update (V)  | UI (N) 	++ :: J (NM) label (NI) 
BASE_VERB:NAME:WebsphereMessageQueueFacade Queue lookupQueue(String queueName): lookup (V)  | EQUIV[queue (N) , [ string (NI) - queue (NM) name (NI) ]]	++ :: queue (N)  :: websphere (NM) message (NM) queue (NM) facade (NI) 
SPECIAL:NAME:WfEventAudit String processMgrVersion(): process (VI)  | mgr (NM) version (N) 	++ :: string (NI)  :: wf (NM) event (NM) audit (N) 
SPECIAL:NAME:ModuleParams void addFeatureExtractionParam(Object poParam): add (V)  | EQUIV[feature (NM) extraction (NM) param (N) , [ object (NI) - po (NM) param (N) ]]	++ :: module (NM) params (N) 
SPECIAL:NAME:jdbcDatabaseMetaData ResultSet getTypeInfo(): get (V)  | type (NM) info (NI) 	++ :: result (NM) set (N)  :: jdbc (NM) database (NM) meta (NM) data (NI) 
BASE_VERB:NAME:ExtendsHandler void handlePageDirectiveAttribute(JspParseEventListener listener, String extendsClzz, Mark start, Mark stop): handle (VI)  | page (NM) directive (NM) attribute (N) 	++ :: [ jsp (NM) parse (NM) event (NM) listener (N) - listener (N) ] :: [ string (NI) - extends (NM) clzz (N) ] :: [ mark (N) - start (N) ] :: [ mark (N) - stop (N) ] :: extends (NM) handler (N) 
SPECIAL:NAME:Display void setExtendedState(int state): set (V)  | extended (NM) state (N) 	++ :: [ int (N) - state (N) ] :: display (N) 
SPECIAL:NAME:LCDPanelTest void testGetResults(): test (VI) get (V)  | results (N) 	++ :: LCD (NM) panel (NM) test (N) 
ENDS_WITH_ED:NAME:EventHandler void keyPressed(KeyEvent e): handle (V) | key (NM) pressed (N) 	++ :: [ key (NM) event (NI) - e (N) ] :: event (NM) handler (N)  :: void (N) 
V_3P_IRR:NAME:PatternParser static boolean isOpenBracket(char ch, char pre): is (V)  | open (NM) bracket (N) 	++ :: [ char (N) - ch (N) ] :: [ char (N) - pre (N) ] :: boolean (N)  :: pattern (NM) parser (N) 
CONSTRUCTOR:NAME:layout layout layout():  | layout (N) 	++
V_3P_IRR:NAME:EventEntityType static boolean isTypeValid(Integer type): is (V)  | type (NM) valid (N) 	++ :: [ integer (N) - type (N) ] :: boolean (N)  :: event (NM) entity (NM) type (N) 
SPECIAL:NAME:RestaurantFactory static RestaurantServiceInfo getFineDiningRestaurantService(Model model): get (V)  | fine (NM) dining (NM) restaurant (NM) service (N) 	++ :: [ model (NI) - model (NI) ] :: restaurant (NM) service (NM) info (NI)  :: restaurant (NM) factory (N) 
SPECIAL:NAME:BasicSperowiderModel void addFileToRectificationQueue(String fileName): add (V)  | EQUIV[file (NI) , [ string (NI) - file (NM) name (NI) ]]-- to (P) rectification (NM) queue (N) 	++ :: basic (NM) sperowider (NM) model (NI) 
SPECIAL:NAME:JoRMIClassLoader Class loadSkel4Class(RemoteObjectInfo remoteObjectInfo): load (V)  | skel (NM) 4 (D) class (NI) 	++ :: [ remote (NM) object (NM) info (NI) - remote (NM) object (NM) info (NI) ] :: class (NI)  :: jo (NM) RMI (NM) class (NM) loader (N) 
SPECIAL:NAME:WWEColorPanel Dimension getMinimumSize(): get (V)  | minimum (NM) size (N) 	++ :: dimension (N)  :: WWE (NM) color (NM) panel (N) 
BASE_VERB:NAME:DependencyVisitor void visitMethod(Method method): visit (V)  | EQUIV[method (N) , [ method (N) - method (N) ]]	++ :: dependency (NM) visitor (N) 
BASE_VERB:NAME:ComplexLigatureLayout void computeThirdArea(): compute (V)  | third (NM) area (N) 	++ :: complex (NM) ligature (NM) layout (N) 
SPECIAL:FORM:PipeSink boolean setUp(SinkThread sinkThread): set (V) up (VP)  | [ sink (NM) thread (N) - sink (NM) thread (N) ]	++ :: pipe (NM) sink (N)  :: boolean (N) 
SPECIAL:FORM:void ontTest(OntModel m): ont (PRE) test (VI)  | [ ont (NM) model (NI) - m (N) ]	++ :: ANONYMOUS (N) 
SPECIAL:NAME:AbstractStatsExporter int getMainFontSize(): get (V)  | main (NM) font (NM) size (N) 	++ :: int (N)  :: abstract (NM) stats (NM) exporter (N) 
NOUN_PHRASE:NAME:Arrays static int binarySearch(Object a, Object key, Comparator c): get (V) | binary (NM) search (N) 	++ :: [ object (NI) - a (N) ] :: [ object (NI) - key (NI) ] :: [ comparator (N) - c (N) ] :: arrays (N)  :: int (N) 
ENDS_WITH_ED:NAME:DisplaySurface void simEventPerformed(SimEvent evt): handle (V) | sim (PRE) event (NM) performed (N) 	++ :: [ sim (NM) event (NI) - evt (N) ] :: display (NM) surface (N)  :: void (N) 
SPECIAL:NAME:MPN static int add_n(int dest, int x, int y, int len): add (V)  | n (N) 	++ :: [ int (N) - dest (N) ] :: [ int (N) - x (N) ] :: [ int (N) - y (N) ] :: [ int (N) - len (N) ] :: int (N)  :: MPN (N) 
SPECIAL:NAME:Tile void setWalkable(): set (V)  | walkable (N) 	++ :: tile (N) 
SPECIAL:NAME:EmailMessage String getContent(): get (V)  | content (N) 	++ :: string (NI)  :: email (NM) message (NI) 
PREP:NAME:ServiceComponentInterceptor void after(Method m, Object args, ServiceComponent service, Object value): handle (V) | after (N) 	++ :: [ method (N) - m (N) ] :: [ object (NI) - args (N) ] :: [ service (NM) component (N) - service (N) ] :: [ object (NI) - value (NI) ] :: service (NM) component (NM) interceptor (N)  :: void (N) 
SPECIAL:CLAS:BranchDescription TracePosition createAfter(BoundedTrace trace): create (V)  | branch (NM) description (NI) -- after (P) [ bounded (NM) trace (N) - trace (N) ]	++ :: [ bounded (NM) trace (N) - trace (N) ] :: trace (NM) position (N) 
SPECIAL:NAME:CoreIOHandler void setMaxSlashes(int maxSlashes): set (V)  | max (NM) slashes (N) 	++ :: [ int (N) - max (NM) slashes (N) ] :: core (NM) IO (NM) handler (N) 
VOID_NP:NAME:NVVertexProgram static void glVertexAttribPointerNV(int index, int size, int type, int stride, ByteBuffer buffer): handle (V) | gl (PRE) vertex (NM) attrib (NM) pointer (NM) NV (N) 	++ :: [ int (N) - index (NI) ] :: [ int (N) - size (N) ] :: [ int (N) - type (N) ] :: [ int (N) - stride (N) ] :: [ byte (NM) buffer (NI) - buffer (NI) ] :: NV (NM) vertex (NM) program (N)  :: void (N) 
NOUN_PHRASE:NAME:FilterListIterator int nextIndex(): get (V) | next (DT) index (NI) 	++ :: filter (NM) list (NM) iterator (N)  :: int (N) 
SPECIAL:NAME:NoRelatedSym QuoteRequestType getQuoteRequestType(): get (V)  | quote (NM) request (NM) type (N) 	++ :: quote (NM) request (NM) type (N)  :: no (DT) related (NM) sym (N) 
SPECIAL:NAME:SFPluginDetails String getCategory(): get (V)  | category (N) 	++ :: string (NI)  :: SF (NM) plugin (NM) details (N) 
SPECIAL:NAME:USStateAreaDescriptor AccessMode getAccessMode(): get (V)  | access (NM) mode (N) 	++ :: access (NM) mode (N)  :: US (PR) state (NM) area (NM) descriptor (NI) 
BASE_VERB:CLAS:Field void commit(): commit (VI)  | field (N) 	++
ENDS_WITH_ED:NAME:TestListener void interpreterResetFailed(Throwable t): handle (V) | interpreter (NM) reset (NM) failed (N) 	++ :: [ throwable (N) - t (N) ] :: test (NM) listener (N)  :: void (N) 
SPECIAL:CLAS:LearnSessionTest void testRemoveFromSkippedIfPassedOrFailed(): test (VI) remove (V)  | learn (NM) session (NM) test (N) -- from (P) skipped (NM) if (NM) passed (NM) or (NM) failed (N) 	++
SPECIAL:NAME:P void setInitialCreatorArray(int i, InitialCreator initialCreator): set (V)  | initial (NM) creator (NM) array (N) 	++ :: [ int (N) - i (N) ] :: [ initial (NM) creator (N) - initial (NM) creator (N) ] :: P (NI) 
V_3P_IRR:NAME:MoveTextEdit boolean isDownMove(): is (V)  | down (NM) move (N) 	++ :: boolean (N)  :: move (NM) text (NM) edit (N) 
SPECIAL:CLAS:Memory Object clone(): clone (V)  | memory (N) 	++ :: object (NI) 
ENDS_WITH_ED:NAME:Orbitals void actionPerformed(ActionEvent e): handle (V) | action (NM) performed (N) 	++ :: [ action (NM) event (NI) - e (N) ] :: orbitals (N)  :: void (N) 
BASE_VERB:NAME:Unmarshaller void leaveElement(String ___uri, String ___local, String ___qname): leave (V)  | element (NI) 	++ :: [ string (NI) - uri (NI) ] :: [ string (NI) - local (N) ] :: [ string (NI) - qname (N) ] :: unmarshaller (N) 
SPECIAL:NAME:XmlFieldDescriptorImpl void setConvertor(FieldConvertor convertor): set (V)  | convertor (N) 	++ :: [ field (NM) convertor (N) - convertor (N) ] :: xml (NM) field (NM) descriptor (NM) impl (NI) 
SPECIAL:NAME:DirectoryScanner String getDeselectedDirectories(): get (V)  | deselected (NM) directories (N) 	++ :: string (NI)  :: directory (NM) scanner (N) 
BASE_VERB:FORM:DhcpMonitor PollStatus poll(MonitoredService svc, Map parameters): poll (V)  | [ monitored (NM) service (N) - svc (N) ]	++ :: [ map (N) - parameters (N) ] :: dhcp (NM) monitor (N)  :: poll (NM) status (N) 
SPECIAL:NAME:Function void setParameter(ListIterator<Expression> i, Expression parameter): set (V)  | parameter (N) 	++ :: [ list (NM) iterator (NM) expression (N) - i (N) ] :: [ expression (N) - parameter (N) ] :: function (N) 
SPECIAL:NAME:Perform EList getParticipantBindDetails(): get (V)  | participant (NM) bind (NM) details (N) 	++ :: E (NM) list (N)  :: perform (N) 
CONSTRUCTOR:NAME:AVConfAdvancedPrefPanel AVConfAdvancedPrefPanel AVConfAdvancedPrefPanel(CVWPreferences pref, FolderDialog par):  | AV (NM) conf (NM) advanced (NM) pref (NM) panel (N) 	++ :: [ CVW (NM) preferences (N) - pref (N) ] :: [ folder (NM) dialog (N) - par (N) ]
BASE_VERB:FORM:TString static String repeat(char c, int i): repeat (V)  | [ char (N) - c (N) ]	++ :: [ int (N) - i (N) ] :: T (NM) string (NI)  :: string (NI) 
BASE_VERB:NAME:AccessibleJList void clearAccessibleSelection(): clear (V)  | accessible (NM) selection (N) 	++ :: accessible (NM) J (NM) list (N) 
SPECIAL:NAME:MultiTree void addAction(Action action): add (V)  | EQUIV[action (N) , [ action (N) - action (N) ]]	++ :: multi (NM) tree (NI) 
SPECIAL:NAME:SikherComponent StatusBar getStatusBar(): get (V)  | status (NM) bar (N) 	++ :: status (NM) bar (N)  :: sikher (NM) component (N) 
ENDS_WITH_ED:NAME:void actionPerformed(ActionEvent e): handle (V) | action (NM) performed (N) 	++ :: [ action (NM) event (NI) - e (N) ] :: ANONYMOUS (N)  :: void (N) 
SPECIAL:NAME:RuntimeResourceReport int getServerId(): get (V)  | server (NM) id (NI) 	++ :: int (N)  :: runtime (NM) resource (NM) report (N) 
VOID_NP:NAME:clMLoader void ML_InfoLoader(): handle (V) | ML (PRE) info (NM) loader (N) 	++ :: cl (NM) M (NM) loader (N)  :: void (N) 
SPECIAL:NAME:RodinElement void runOperation(MultiOperation op, IRodinElement sibling, String newName, IProgressMonitor monitor): run (VI)  | EQUIV[operation (N) , [ multi (NM) operation (N) - op (N) ]]	++ :: [ I (NM) rodin (NM) element (NI) - sibling (N) ] :: [ string (NI) - new (NM) name (NI) ] :: [ I (NM) progress (NM) monitor (N) - monitor (N) ] :: rodin (NM) element (NI) 
SPECIAL:NAME:PEPeerManager float getMinAvailability(): get (V)  | min (NM) availability (N) 	++ :: float (N)  :: PE (NM) peer (NM) manager (N) 
SPECIAL:NAME:HExchRateList Experiment findFirstExperiment(String key1, Object value1, String key2, Object value2): find (V)  | first (NM) experiment (N) 	++ :: [ string (NI) - key (NM) 1 (N) ] :: [ object (NI) - value (NM) 1 (N) ] :: [ string (NI) - key (NM) 2 (N) ] :: [ object (NI) - value (NM) 2 (N) ] :: experiment (N)  :: H (NM) exch (NM) rate (NM) list (N) 
EVENT_PARAM:NAME:void changedUpdate(DocumentEvent e): handle (V) | changed (NM) update (N) 	++ :: [ document (NM) event (NI) - e (N) ] :: ANONYMOUS (N)  :: void (N) 
BASE_VERB:CLAS:GHCNumberCell GHCFloatingPointCell log(): log (V)  | GHC (NM) number (NM) cell (N) 	++ :: GHC (NM) floating (NM) point (NM) cell (N) 
CONSTRUCTOR:NAME:NetPermission NetPermission NetPermission(String name, String perms):  | net (NM) permission (N) 	++ :: [ string (NI) - name (NI) ] :: [ string (NI) - perms (N) ]
NOUN_PHRASE:NAME:Unmarshaller Object owner(): get (V) | owner (N) 	++ :: unmarshaller (N)  :: object (NI) 
V_3P_IRR:NAME:UserInfoFront boolean isActive(): is (V)  | active (N) 	++ :: boolean (N)  :: user (NM) info (NM) front (N) 
SPECIAL:NAME:Element void setComment(String comment): set (V)  | comment (N) 	++ :: [ string (NI) - comment (N) ] :: element (NI) 
SPECIAL:NAME:ActiveDirectoryContactMapping void setFaxNumber(String faxNumber): set (V)  | fax (NM) number (NI) 	++ :: [ string (NI) - fax (NM) number (NI) ] :: active (NM) directory (NM) contact (NM) mapping (N) 
SPECIAL:NAME:GDictEntry String getWord(int i, int alternative): get (V)  | word (N) 	++ :: [ int (N) - i (N) ] :: [ int (N) - alternative (N) ] :: string (NI)  :: G (NM) dict (NM) entry (NI) 
SPECIAL:NAME:MarshallingMethodEndpointAdapterTest void testNoResponse(): test (VI)  | no (DT) response (N) 	++ :: marshalling (NM) method (NM) endpoint (NM) adapter (NM) test (N) 
SPECIAL:NAME:SearchResult int getAccuracy(): get (V)  | accuracy (N) 	++ :: int (N)  :: search (NM) result (N) 
BASE_VERB:CLAS:Platform void activate(): activate (VI)  | platform (N) 	++
ENDS_WITH_ED:NAME:YTree void nodeSelected(YTreeNode current): handle (V) | node (NM) selected (N) 	++ :: [ Y (NM) tree (NM) node (NI) - current (N) ] :: Y (NM) tree (NI)  :: void (N) 
BASE_VERB:NAME:void programChange(int bank, int program): program (V)  | change (N) 	++ :: [ int (N) - bank (N) ] :: [ int (N) - program (N) ] :: ANONYMOUS (N) 
BASE_VERB:NAME:Business HashMap buildHashMap(Object valueObject, String collectionToGet, String fieldToUseAsKey, boolean setField, String fieldToUseToFillMap): build (V)  | EQUIV[hash (NM) map (N) , [ string (NI) - field (NM) to (NM) use (NM) to (NM) fill (NM) map (N) ]]	++ :: [ object (NI) - value (NM) object (NI) ] :: [ string (NI) - collection (NM) to (NM) get (N) ] :: [ string (NI) - field (NM) to (NM) use (NM) as (NM) key (NI) ] :: [ boolean (N) - set (NM) field (N) ] :: hash (NM) map (N)  :: business (N) 
SPECIAL:NAME:WeekDayTypeImpl BigInteger getDayType(): get (V)  | day (NM) type (N) 	++ :: big (NM) integer (N)  :: week (NM) day (NM) type (NM) impl (NI) 
BASE_VERB:NAME:BasicButtonListener void installKeyboardActions(JComponent c): install (V)  | keyboard (NM) actions (N) 	++ :: [ J (NM) component (N) - c (N) ] :: basic (NM) button (NM) listener (N) 
EVENT_PARAM:NAME:PopupListener void maybeShowPopup(MouseEvent e): handle (V) | maybe (NM) show (NM) popup (N) 	++ :: [ mouse (NM) event (NI) - e (N) ] :: popup (NM) listener (N)  :: void (N) 
SPECIAL:NAME:LogFilter void setParameters(Map parameter): set (V)  | parameters (N) 	++ :: [ map (N) - parameter (N) ] :: log (NM) filter (N) 
SPECIAL:NAME:SettingsDialog void removeUpdate(DocumentEvent e): remove (V)  | update (N) 	++ :: [ document (NM) event (NI) - e (N) ] :: settings (NM) dialog (N) 
SPECIAL:NAME:XHead Double getBottomSideBearingAsDouble(): get (V)  | bottom (NM) side (NM) bearing (N) -- as (P) double (N) 	++ :: double (N)  :: X (NM) head (N) 
SPECIAL:NAME:DocumentHandler void startDocument(): start (V)  | document (NI) 	++ :: document (NM) handler (N) 
BASE_VERB:NAME:JRBaseBreak void collectExpressions(JRExpressionCollector collector): collect (V)  | expressions (N) 	++ :: [ JR (NM) expression (NM) collector (N) - collector (N) ] :: JR (NM) base (NM) break (N) 
V_3P_IRR:NAME:LinkedQueue boolean isEmpty(): is (V)  | empty (N) 	++ :: boolean (N)  :: linked (NM) queue (N) 
SPECIAL:NAME:MoveTool void setDrawPaint(Paint aPaint): set (V)  | draw (NM) paint (N) 	++ :: [ paint (N) - a (NM) paint (N) ] :: move (NM) tool (N) 
SPECIAL:NAME:CubicCurve2D static double getFlatnessSq(double coords, int offset): get (V)  | flatness (NM) sq (N) 	++ :: [ double (N) - coords (N) ] :: [ int (N) - offset (N) ] :: double (N)  :: cubic (NM) curve (NM) 2 (NM) D (N) 
SPECIAL:NAME:SyllabusContent int getContentID(): get (V)  | content (NM) ID (NI) 	++ :: int (N)  :: syllabus (NM) content (N) 
ENDS_WITH_ED:NAME:void keyPressed(KeyEvent evt): handle (V) | key (NM) pressed (N) 	++ :: [ key (NM) event (NI) - evt (N) ] :: ANONYMOUS (N)  :: void (N) 
SPECIAL:NAME:OutlineItemFlags int getValue(): get (V)  | value (NI) 	++ :: int (N)  :: outline (NM) item (NM) flags (N) 
CONSTRUCTOR:NAME:ForwardingObject ForwardingObject ForwardingObject(DO ref):  | forwarding (NM) object (NI) 	++ :: [ DO (NI) - ref (NI) ]
SPECIAL:NAME:BackgroundNode void setGroundColors(String value): set (V)  | ground (NM) colors (N) 	++ :: [ string (NI) - value (NI) ] :: background (NM) node (NI) 
SPECIAL:NAME:JMJdbcManagerAccTest void testFindWhatever(): test (VI) find (V)  | whatever (DT) 	++ :: JM (NM) jdbc (NM) manager (NM) acc (NM) test (N) 
SPECIAL:NAME:DatabaseIndex void addColumn(String column): add (V)  | EQUIV[column (N) , [ string (NI) - column (N) ]]	++ :: database (NM) index (NI) 
CONSTRUCTOR:NAME:OpenStats OpenStats OpenStats(SimModel model):  | open (NM) stats (N) 	++ :: [ sim (NM) model (NI) - model (NI) ]
NOUN_PHRASE:NAME:PerformanceTestResult int failureCount(): get (V) | failure (NM) count (N) 	++ :: performance (NM) test (NM) result (N)  :: int (N) 
BASE_VERB:NAME:FileUtil static String concatPath(String s1, String s2): concat (V)  | path (NI) 	++ :: [ string (NI) - s (NM) 1 (N) ] :: [ string (NI) - s (NM) 2 (N) ] :: string (NI)  :: file (NM) util (N) 
SPECIAL:NAME:LongArrayDeque void writeObject(ObjectOutputStream s): write (V)  | object (NI) 	++ :: [ object (NM) output (NM) stream (NI) - s (N) ] :: long (NM) array (NM) deque (N) 
SPECIAL:FORM:IconComparator int compare(Object o1, Object o2): compare (V)  | [ object (NI) - o (NM) 1 (N) ]	++ :: [ object (NI) - o (NM) 2 (N) ] :: icon (NM) comparator (N)  :: int (N) 
SPECIAL:NAME:PatternPredicate FileNamePattern getPattern(): get (V)  | pattern (N) 	++ :: file (NM) name (NM) pattern (N)  :: pattern (NM) predicate (N) 
SPECIAL:NAME:xlResultSet int getInt(String columnName): get (V)  | int (N) 	++ :: [ string (NI) - column (NM) name (NI) ] :: int (N)  :: xl (NM) result (NM) set (N) 
BASE_VERB:CLAS:HelpBrowser void exit(): exit (VI)  | help (NM) browser (N) 	++
CONSTRUCTOR:NAME:ShpXmlFileReader ShpXmlFileReader ShpXmlFileReader(URL metadatFileURL):  | shp (NM) xml (NM) file (NM) reader (N) 	++ :: [ URL (NI) - metadat (NM) file (NM) URL (NI) ]
CONSTRUCTOR:NAME:AuditManager AuditManager AuditManager():  | audit (NM) manager (N) 	++
BASE_VERB:NAME:ComplexityScanner void visitApply(JCMethodInvocation tree): visit (V)  | apply (N) 	++ :: [ JC (NM) method (NM) invocation (N) - tree (NI) ] :: complexity (NM) scanner (N) 
SPECIAL:NAME:_ifeq int getSize(): get (V)  | size (N) 	++ :: int (N)  :: ifeq (N) 
CONSTRUCTOR:NAME:WhatsNewServices WhatsNewServices WhatsNewServices():  | whats (NM) new (NM) services (N) 	++
ENDS_WITH_ED:NAME:void actionPerformed(ActionEvent evt): handle (V) | action (NM) performed (N) 	++ :: [ action (NM) event (NI) - evt (N) ] :: ANONYMOUS (N)  :: void (N) 
ENDS_WITH_ED:NAME:GDMExpViewer void onAnnotationWidthChanged(): handle (V) | on (NM) annotation (NM) width (NM) changed (N) 	++ :: GDM (NM) exp (NM) viewer (N)  :: void (N) 
ENDS_WITH_ED:NAME:SliderKeyHandler void keyPressed(KeyEvent e): handle (V) | key (NM) pressed (N) 	++ :: [ key (NM) event (NI) - e (N) ] :: slider (NM) key (NM) handler (N)  :: void (N) 
BASE_VERB:NAME:CarteTopo void creeTopologieFaces(): cree (PRE) topologie (V)  | faces (N) 	++ :: carte (NM) topo (N) 
SPECIAL:NAME:StyleSelection JPanel getStepUI(): get (V)  | step (NM) UI (N) 	++ :: J (NM) panel (N)  :: style (NM) selection (N) 
SPECIAL:NAME:PageTemplateManagerDAOOracle boolean getAutoCommit(): get (V)  | auto (NM) commit (N) 	++ :: boolean (N)  :: page (NM) template (NM) manager (NM) DAO (NM) oracle (N) 
SPECIAL:NAME:EntityImpl int getElements(): get (V)  | elements (N) 	++ :: int (N)  :: entity (NM) impl (NI) 
ENDS_WITH_ING:NAME:LocationList void disableAutoSorting(): handle (V) | disable (NM) auto (NM) sorting (N) 	++ :: location (NM) list (N)  :: void (N) 
SPECIAL:NAME:HTMLScriptElement String getHtmlFor(): get (V)  | html (N) for (NM) 	++ :: string (NI)  :: HTML (NM) script (NM) element (NI) 
VOID_NP:NAME:JPhysXAdapterJNI static void NxSphericalJointDesc_twistSpring_set(long jarg1, NxSphericalJointDesc jarg1_, long jarg2, NxSpringDesc jarg2_): handle (V) | nx (PRE) spherical (NM) joint (NM) desc (NM) twist (NM) spring (NM) set (N) 	++ :: [ long (N) - jarg (NM) 1 (N) ] :: [ nx (NM) spherical (NM) joint (NM) desc (NI) - jarg (NM) 1 (N) ] :: [ long (N) - jarg (NM) 2 (N) ] :: [ nx (NM) spring (NM) desc (NI) - jarg (NM) 2 (N) ] :: J (NM) phys (NM) X (NM) adapter (NM) JNI (N)  :: void (N) 
ENDS_WITH_ED:NAME:SlideProjector void pmiAddAll_Selected(): handle (V) | pmi (NM) add (NM) all (DT) selected (N) 	++ :: slide (NM) projector (N)  :: void (N) 
SPECIAL:NAME:SingleFileAudioPlayer void resetTime(): reset (V)  | time (N) 	++ :: single (NM) file (NM) audio (NM) player (N) 
NOUN_PHRASE:NAME:DomainHandler PersistentObject newEmbeddedPersistentObject(PersistentObject master, String beanProperty): get (V) | new (NM) embedded (NM) persistent (NM) object (NI) 	++ :: [ persistent (NM) object (NI) - master (N) ] :: [ string (NI) - bean (NM) property (N) ] :: domain (NM) handler (N)  :: persistent (NM) object (NI) 
SPECIAL:FORM:NetscapeCertType void init(ASN1Object asn1object): init (V)  | [ ASN (NM) 1 (NM) object (NI) - asn (NM) 1 (NM) object (NI) ]	++ :: netscape (NM) cert (NM) type (N) 
SPECIAL:NAME:NodeSetDTM void setRoot(int context, Object environment): set (V)  | root (N) 	++ :: [ int (N) - context (N) ] :: [ object (NI) - environment (N) ] :: node (NM) set (NM) DTM (N) 
SPECIAL:NAME:Customer Address getAddress(): get (V)  | address (NI) 	++ :: address (NI)  :: customer (N) 
VOID_NP:NAME:JTAUtils static void rollbackTransaction(String jndiName): handle (V) | rollback (NM) transaction (N) 	++ :: [ string (NI) - jndi (NM) name (NI) ] :: JTA (NM) utils (N)  :: void (N) 
CONSTRUCTOR:NAME:Deflater Deflater Deflater():  | deflater (N) 	++
CONSTRUCTOR:NAME:ManageBoxAction ManageBoxAction ManageBoxAction(CridController controller):  | manage (NM) box (NM) action (N) 	++ :: [ crid (NM) controller (N) - controller (N) ]
SPECIAL:NAME:X_M_RequisitionLine BigDecimal getQty(): get (V)  | qty (N) 	++ :: big (NM) decimal (N)  :: X (NM) M (NM) requisition (NM) line (N) 
SPECIAL:NAME:CustomHTTPAuthenticator PasswordAuthentication getPasswordAuthentication(): get (V)  | password (NM) authentication (N) 	++ :: password (NM) authentication (N)  :: custom (NM) HTTP (NM) authenticator (N) 
BASE_VERB:FORM:MultipleMatchFilter Surreal filter(CompMatrix matrix, ScopeRules scope): filter (V)  | [ comp (NM) matrix (N) - matrix (N) ]	++ :: [ scope (NM) rules (N) - scope (N) ] :: multiple (NM) match (NM) filter (N)  :: surreal (N) 
SPECIAL:NAME:FileNotFoundException String _getFile_const(long _pointer_): get (V)  | file (NM) const (N) 	++ :: [ long (N) - pointer (N) ] :: string (NI)  :: file (NM) not (DT) found (NM) exception (N) 
SPECIAL:NAME:axChildTestMetaDataPO axAttributeMetaData getVirtualUni(): get (V)  | virtual (NM) uni (N) 	++ :: ax (NM) attribute (NM) meta (NM) data (NI)  :: ax (NM) child (NM) test (NM) meta (NM) data (NM) PO (N) 
SPECIAL:NAME:CGCGraphics2D FontMetrics getFontMetrics(): get (V)  | font (NM) metrics (N) 	++ :: font (NM) metrics (N)  :: CGC (NM) graphics (NM) 2 (NM) D (N) 
CONSTRUCTOR:NAME:ValueDisplay ValueDisplay ValueDisplay():  | value (NM) display (N) 	++
SPECIAL:NAME:HoistStackItem int getLineCountOffset(): get (V)  | line (NM) count (NM) offset (N) 	++ :: int (N)  :: hoist (NM) stack (NM) item (NI) 
BASE_VERB:NAME:DialogUtility void installSubscribers(): install (V)  | subscribers (N) 	++ :: dialog (NM) utility (N) 
SPECIAL:FORM:ChemBond void doDelete(Set nowDeleted): do (VI) delete (V)  | [ set (N) - now (NM) deleted (N) ]	++ :: chem (NM) bond (N) 
SPECIAL:NAME:File String getBind(): get (V)  | bind (N) 	++ :: string (NI)  :: file (NI) 
BASE_VERB:NAME:ProblemReporter void abortDueToInternalError(String errorMessage, ASTNode location): abort (VI)  | due (N) -- to (P) EQUIV[internal (NM) error (N) , [ string (NI) - error (NM) message (NI) ]]	++ :: [ AST (NM) node (NI) - location (NI) ] :: problem (NM) reporter (N) 
ENDS_WITH_ED:NAME:void windowOpened(WindowEvent e): handle (V) | window (NM) opened (N) 	++ :: [ window (NM) event (NI) - e (N) ] :: ANONYMOUS (N)  :: void (N) 
BASE_VERB:CLAS:SmtpClient void connect(): connect (V)  | smtp (NM) client (N) 	++
SPECIAL:NAME:DM00M17wTest void testResult26(): test (VI)  | result (N) 26 (D) 	++ :: DM (NM) 00 (NM) M (NM) 17 (NM) w (NM) test (N) 
BASE_VERB:NAME:Image void lineAltText(): line (V)  | alt (NM) text (NI) 	++ :: image (N) 
BASE_VERB:FORM:Bindenlicht static int elementi(SWIGTYPE_p_int array, int index): elementi (V)  | [ SWIGTYPE (NM) p (NM) int (N) - array (N) ]	++ :: [ int (N) - index (NI) ] :: bindenlicht (N)  :: int (N) 
VOID_NP:NAME:EncryptionUserType void nullSafeSet(PreparedStatement st, Object value, int index): handle (V) | null (NM) safe (NM) set (N) 	++ :: [ prepared (NM) statement (NI) - st (N) ] :: [ object (NI) - value (NI) ] :: [ int (N) - index (NI) ] :: encryption (NM) user (NM) type (N)  :: void (N) 
SPECIAL:CLAS:XmlParserImpl void run(): run (VI)  | xml (NM) parser (NM) impl (NI) 	++
CONSTRUCTOR:NAME:CacheListener CacheListener CacheListener(JBossCacheWrapper wrapper, JBossCacheManager manager, String hostname, String webapp):  | cache (NM) listener (N) 	++ :: [ J (NM) boss (NM) cache (NM) wrapper (NI) - wrapper (NI) ] :: [ J (NM) boss (NM) cache (NM) manager (N) - manager (N) ] :: [ string (NI) - hostname (N) ] :: [ string (NI) - webapp (N) ]
SPECIAL:NAME:KunststoffTheme String getName(): get (V)  | name (NI) 	++ :: string (NI)  :: kunststoff (NM) theme (N) 
BASE_VERB:CLAS:JdbcOperations long queryForLong(String sql, Object args, int argTypes): query (V)  | jdbc (NM) operations (N) -- for (P) long (N) 	++ :: [ string (NI) - sql (N) ] :: [ object (NI) - args (N) ] :: [ int (N) - arg (NM) types (N) ] :: long (N) 
ED_VERB:NAME:RestrictedFloatList static RestrictedFloatList fixedSize(FloatList delegate): fixed (V)  | size (N) 	++ :: [ float (NM) list (N) - delegate (N) ] :: restricted (NM) float (NM) list (N)  :: restricted (NM) float (NM) list (N) 
CONSTRUCTOR:NAME:ProxyModeAction ProxyModeAction ProxyModeAction(String name, String cmd):  | proxy (NM) mode (NM) action (N) 	++ :: [ string (NI) - name (NI) ] :: [ string (NI) - cmd (N) ]
SPECIAL:NAME:HtmlUtils static SecurityContext getSecurityContext(HttpServletRequest request): get (V)  | security (NM) context (N) 	++ :: [ http (NM) servlet (NM) request (N) - request (N) ] :: security (NM) context (N)  :: html (NM) utils (N) 
CONSTRUCTOR:NAME:RemotePublicAddressJPanel RemotePublicAddressJPanel RemotePublicAddressJPanel():  | remote (NM) public (NM) address (NM) J (NM) panel (N) 	++
SPECIAL:NAME:XtapiCallId String getRemoteAddress(): get (V)  | remote (NM) address (NI) 	++ :: string (NI)  :: xtapi (NM) call (NM) id (NI) 
SPECIAL:NAME:AttrConfigImpl String getAttrType(): get (V)  | attr (NM) type (N) 	++ :: string (NI)  :: attr (NM) config (NM) impl (NI) 
SPECIAL:NAME:JDbConvert DatabaseInfos getDatabaseInfos(int database, Connection con): get (V)  | database (NM) infos (N) 	++ :: [ int (N) - database (N) ] :: [ connection (N) - con (N) ] :: database (NM) infos (N)  :: J (NM) db (NM) convert (N) 
SPECIAL:FORM:ByteArrayUtil static void main(String args): main (V)  | [ string (NI) - args (N) ]	++ :: byte (NM) array (NM) util (N) 
BASE_VERB:NAME:Number double doubleValue(): double (V)  | value (NI) 	++ :: double (N)  :: number (NI) 
SPECIAL:CLAS:void run(): run (VI)  | ANONYMOUS (N) 	++
CONSTRUCTOR:NAME:AbstractStandardRequestStatusType AbstractStandardRequestStatusType AbstractStandardRequestStatusType():  | abstract (NM) standard (NM) request (NM) status (NM) type (N) 	++
SPECIAL:NAME:GOBOParser void readIsCyclic(boolean isCyclic, NestedValue nv): read (V)  | is (NM) cyclic (N) 	++ :: [ nested (NM) value (NI) - nv (N) ] :: [ boolean (N) - is (NM) cyclic (N) ] :: GOBO (NM) parser (N) 
SPECIAL:NAME:epp_ContactCheckRsp epp_CheckResult getResults(): get (V)  | results (N) 	++ :: epp (NM) check (NM) result (N)  :: epp (NM) contact (NM) check (NM) rsp (N) 
SPECIAL:NAME:List<Event> getEventsForPeriod(Calendar calendar, Date dtStart, Date dtEnd): get (V)  | events (N) -- for (P) period (N) 	++ :: [ calendar (N) - calendar (N) ] :: [ date (N) - dt (NM) start (N) ] :: [ date (N) - dt (NM) end (N) ] :: list (NM) event (NI)  :: ANONYMOUS (N) 
SPECIAL:FORM:WindowItem void write(ObjectOutputStream out, WriteContext context, ViewWriter viewWriter): write (V)  | [ object (NM) output (NM) stream (NI) - out (N) ]	++ :: [ write (NM) context (N) - context (N) ] :: [ view (NM) writer (N) - view (NM) writer (N) ] :: window (NM) item (NI) 
SPECIAL:NAME:IOUtilsTest void testWriteAndReadLines(): test (VI) write (V)  | and (NM) read (NM) lines (N) 	++ :: IO (NM) utils (NM) test (N) 
BASE_VERB:NAME:IMessagingDAO long updateMessage(PrivateMessage message): update (V)  | EQUIV[message (NI) , [ private (NM) message (NI) - message (NI) ]]	++ :: long (N)  :: I (NM) messaging (NM) DAO (N) 
BASE_VERB:FORM:Qualog static boolean blink(String name, byte ary): blink (V)  | [ string (NI) - name (NI) ]	++ :: [ byte (N) - ary (N) ] :: qualog (N)  :: boolean (N) 
SPECIAL:NAME:RegistryHelper static TraversalInfo getTraversalPath(InstanceId id): get (V)  | traversal (NM) path (NI) 	++ :: [ instance (NM) id (NI) - id (NI) ] :: traversal (NM) info (NI)  :: registry (NM) helper (N) 
SPECIAL:NAME:StrictDuplicateCodeCheck void setMin(int aMin): set (V)  | min (N) 	++ :: [ int (N) - a (NM) min (N) ] :: strict (NM) duplicate (NM) code (NM) check (N) 
PREP:NAME:String toXML(Object object): convert (V) | to (P) XML (N) 	++ :: [ object (NI) - object (NI) ] :: ANONYMOUS (N)  :: string (NI) 
SPECIAL:NAME:AlignmentPointSet void setClass(String _Class): set (V)  | class (NI) 	++ :: [ string (NI) - class (NI) ] :: alignment (NM) point (NM) set (N) 
SPECIAL:NAME:LabeledTestStringArrayComponent void setRequired(boolean required): set (V)  | required (N) 	++ :: [ boolean (N) - required (N) ] :: labeled (NM) test (NM) string (NM) array (NM) component (N) 
V_3PS:CLAS:PyDictionary PyList dict_values(): dict (PRE) values (V)  | py (NM) dictionary (N) 	++ :: py (NM) list (N) 
V_3P_IRR:NAME:boolean isExecutable(DrawingView aView): is (V)  | executable (N) 	++ :: [ drawing (NM) view (NI) - a (NM) view (NI) ] :: boolean (N)  :: ANONYMOUS (N) 
SPECIAL:NAME:GeneralEntityData void setLanguage(String language): set (V)  | language (N) 	++ :: [ string (NI) - language (N) ] :: general (NM) entity (NM) data (NI) 
SPECIAL:NAME:ApplicationFormLocal void setDataSource(String ds): set (V)  | data (NM) source (NI) 	++ :: [ string (NI) - ds (N) ] :: application (NM) form (NM) local (N) 
BASE_VERB:NAME:DERVisibleString int hashCode(): hash (V)  | code (NI) 	++ :: int (N)  :: DER (NM) visible (NM) string (NI) 
V_3P_IRR:NAME:DetailFormDisplayBoxTag boolean hasNestedTags(): has (V)  | nested (NM) tags (N) 	++ :: boolean (N)  :: detail (NM) form (NM) display (NM) box (NM) tag (NI) 
BASE_VERB:FORM:Signature void update(byte b): update (V)  | [ byte (N) - b (N) ]	++ :: signature (N) 
SPECIAL:NAME:PoolablePersistenceActionFactory PersistenceAction createPersistenceAction(PersistenceContext persistenceContext, AbstractCollectionField collectionField, int actionType): create (V)  | persistence (NM) action (N) 	++ :: [ persistence (NM) context (N) - persistence (NM) context (N) ] :: [ abstract (NM) collection (NM) field (N) - collection (NM) field (N) ] :: [ int (N) - action (NM) type (N) ] :: persistence (NM) action (N)  :: poolable (NM) persistence (NM) action (NM) factory (N) 
SPECIAL:NAME:ComboColumnTag void setHiddenMode(String hiddenMode): set (V)  | hidden (NM) mode (N) 	++ :: [ string (NI) - hidden (NM) mode (N) ] :: combo (NM) column (NM) tag (NI) 
BASE_VERB:CLAS:XmlElement static void transformWithXslt(Document source, Document xslt, String dest): transform (V)  | xml (NM) element (NI) -- with (P) EQUIV[xslt (N) , [ document (NI) - xslt (N) ]]	++ :: [ document (NI) - source (NI) ] :: [ string (NI) - dest (N) ]
NOUN_PHRASE:NAME:ReliableLog String versionName(String name): get (V) | version (NM) name (NI) 	++ :: [ string (NI) - name (NI) ] :: reliable (NM) log (N)  :: string (NI) 
V_3P_IRR:NAME:Constraint boolean isEquivalent(int col, int type): is (V)  | equivalent (N) 	++ :: [ int (N) - col (N) ] :: [ int (N) - type (N) ] :: boolean (N)  :: constraint (N) 
NOUN_PHRASE:NAME:InstanceList boolean no_weight(): get (V) | no (DT) weight (N) 	++ :: instance (NM) list (N)  :: boolean (N) 
SPECIAL:NAME:LayerEntry String getName(): get (V)  | name (NI) 	++ :: string (NI)  :: layer (NM) entry (NI) 
VOID_NP:NAME:ImageViewer void fullScreenAction(): handle (V) | full (NM) screen (NM) action (N) 	++ :: image (NM) viewer (N)  :: void (N) 
CONSTRUCTOR:NAME:RegexParserVal RegexParserVal RegexParserVal(Object val):  | regex (NM) parser (NM) val (NI) 	++ :: [ object (NI) - val (NI) ]
BASE_VERB:NAME:GraphArrivalPanel void ArrNumMinute(): arr (PRE) num (V)  | minute (N) 	++ :: graph (NM) arrival (NM) panel (N) 
SPECIAL:CLAS:SessionEventHandler void delete(): delete (V)  | session (NM) event (NM) handler (N) 	++
BASE_VERB:NAME:RtfWriter2 void importRtfDocument(Reader documentSource): import (V)  | EQUIV[rtf (NM) document (NI) , [ reader (N) - document (NM) source (NI) ]]	++ :: rtf (NM) writer (NM) 2 (N) 
BASE_VERB:FORM:TimeOfDayFormat TimeOfDay parse(String source, ParsePosition pos): parse (V)  | [ string (NI) - source (NI) ]	++ :: [ parse (NM) position (N) - pos (N) ] :: time (NM) of (NM) day (NM) format (NI)  :: time (NM) of (NM) day (N) 
SPECIAL:NAME:DbNavNewButtonTag String getDestTable(): get (V)  | dest (NM) table (N) 	++ :: string (NI)  :: db (NM) nav (NM) new (NM) button (NM) tag (NI) 
SPECIAL:NAME:FlowMetric void setGraph(Graph graph): set (V)  | graph (N) 	++ :: [ graph (N) - graph (N) ] :: flow (NM) metric (N) 
SPECIAL:NAME:DefaultSubGraphRappresentation Class getUserObjectEditorClass(): get (V)  | user (NM) object (NM) editor (NM) class (NI) 	++ :: class (NI)  :: default (NM) sub (NM) graph (NM) rappresentation (N) 
CONSTRUCTOR:NAME:StylesheetDescription StylesheetDescription StylesheetDescription(String uri, String type):  | stylesheet (NM) description (NI) 	++ :: [ string (NI) - uri (NI) ] :: [ string (NI) - type (N) ]
CONSTRUCTOR:NAME:Activator Activator Activator():  | activator (N) 	++
SPECIAL:NAME:NeoQualler void setBackground(int id, Color col): set (V)  | background (N) 	++ :: [ int (N) - id (NI) ] :: [ color (N) - col (N) ] :: neo (NM) qualler (N) 
SPECIAL:NAME:LabelImageElement String getSrc(): get (V)  | src (N) 	++ :: string (NI)  :: label (NM) image (NM) element (NI) 
CONSTRUCTOR:NAME:EventListenerProxy EventListenerProxy EventListenerProxy(EventListener listener):  | event (NM) listener (NM) proxy (NI) 	++ :: [ event (NM) listener (N) - listener (N) ]
V_3P_IRR:NAME:NoUnderlyings boolean isSet(UnderlyingSymbol field): is (V)  | set (N) 	++ :: [ underlying (NM) symbol (N) - field (N) ] :: boolean (N)  :: no (DT) underlyings (N) 
CONSTRUCTOR:NAME:Twofish Twofish Twofish():  | twofish (N) 	++
SPECIAL:NAME:UnhideFolderTreeAction MvcSFForwardBean doAction(HttpServletRequest request, HttpServletResponse response, HashMap parameters): do (VI)  | action (N) 	++ :: [ http (NM) servlet (NM) request (N) - request (N) ] :: [ http (NM) servlet (NM) response (N) - response (N) ] :: [ hash (NM) map (N) - parameters (N) ] :: mvc (NM) SF (NM) forward (NM) bean (NI)  :: unhide (NM) folder (NM) tree (NM) action (N) 
SPECIAL:NAME:LocalConnection String getUserName(): get (V)  | user (NM) name (NI) 	++ :: string (NI)  :: local (NM) connection (N) 
SPECIAL:NAME:OrganismsImpl List getInstances(): get (V)  | instances (N) 	++ :: list (N)  :: organisms (NM) impl (NI) 
BASE_VERB:NAME:FileValidator boolean verifyFile(File f): verify (VI)  | EQUIV[file (NI) , [ file (NI) - f (N) ]]	++ :: boolean (N)  :: file (NM) validator (N) 
SPECIAL:NAME:TPSoilDatabaseTest void testGetObject(): test (VI) get (V)  | object (NI) 	++ :: TP (NM) soil (NM) database (NM) test (N) 
ENDS_WITH_ED:NAME:MyTextField void focusGained(FocusEvent fe): handle (V) | focus (NM) gained (N) 	++ :: [ focus (NM) event (NI) - fe (N) ] :: my (PR) text (NM) field (N)  :: void (N) 
CONSTRUCTOR:NAME:JQBRecordLockedException JQBRecordLockedException JQBRecordLockedException(String s, int info, int rec):  | JQB (NM) record (NM) locked (NM) exception (N) 	++ :: [ string (NI) - s (N) ] :: [ int (N) - info (NI) ] :: [ int (N) - rec (N) ]
SPECIAL:NAME:HTMLPrettyPrintFilter void doFilter(ServletRequest request, ServletResponse response, FilterChain chain): do (VI)  | filter (N) 	++ :: [ servlet (NM) request (N) - request (N) ] :: [ servlet (NM) response (N) - response (N) ] :: [ filter (NM) chain (N) - chain (N) ] :: HTML (NM) pretty (NM) print (NM) filter (N) 
SPECIAL:NAME:FCodeEmit void loadFloat(): load (V)  | float (N) 	++ :: F (NM) code (NM) emit (N) 
SPECIAL:NAME:JEditTextArea void setSelectionEnd(int selectionEnd): set (V)  | selection (NM) end (N) 	++ :: [ int (N) - selection (NM) end (N) ] :: J (NM) edit (NM) text (NM) area (N) 
SPECIAL:NAME:PersistentData static PersistentData getInstance(): get (V)  | instance (NI) 	++ :: persistent (NM) data (NI)  :: persistent (NM) data (NI) 
V_3PS:NAME:AbstractMapMatrix boolean containsKey(Object key): contains (V)  | EQUIV[key (NI) , [ object (NI) - key (NI) ]]	++ :: boolean (N)  :: abstract (NM) map (NM) matrix (N) 
NOUN_PHRASE:NAME:ElementDecoratorFactoryImpl ElementDecorator newElementDecorator(SchemaAnnotationOwner pParent, SchemaElement pElement, ParserData pParserData, Element pNode, Element pDecoratorNode): get (V) | new (NM) element (NM) decorator (N) 	++ :: [ schema (NM) annotation (NM) owner (N) - p (NM) parent (N) ] :: [ schema (NM) element (NI) - p (NM) element (NI) ] :: [ parser (NM) data (NI) - p (NM) parser (NM) data (NI) ] :: [ element (NI) - p (NM) node (NI) ] :: [ element (NI) - p (NM) decorator (NM) node (NI) ] :: element (NM) decorator (NM) factory (NM) impl (NI)  :: element (NM) decorator (N) 
SPECIAL:NAME:CachedCallGraph Collection getCallees(jq_Method caller): get (V)  | callees (N) 	++ :: [ jq (NM) method (N) - caller (N) ] :: collection (N)  :: cached (NM) call (NM) graph (N) 
SPECIAL:NAME:UniCash void doAddHtgLoadCatFrm(HttpServletRequest req, HttpServletResponse res, PrintWriter out, HttpSession session, String username): do (VI) add (V)  | htg (NM) load (NM) cat (NM) frm (N) 	++ :: [ http (NM) servlet (NM) request (N) - req (N) ] :: [ http (NM) servlet (NM) response (N) - res (N) ] :: [ print (NM) writer (N) - out (N) ] :: [ http (NM) session (N) - session (N) ] :: [ string (NI) - username (N) ] :: uni (NM) cash (N) 
SPECIAL:NAME:FMS FMSEntry get_next_waypoint(): get (V)  | next (DT) waypoint (N) 	++ :: FMS (NM) entry (NI)  :: FMS (N) 
EMPTY:NONE:StdOverloadedList static boolean ea18(CleanVM vm):  | ea (PRE) 18 (D) 
SPECIAL:NAME:OrderDaoImpl Order getOrderDetail(long orderId): get (V)  | order (NM) detail (NI) 	++ :: [ long (N) - order (NM) id (NI) ] :: order (N)  :: order (NM) dao (NM) impl (NI) 
SPECIAL:NAME:BatchModeTest void testBatchStatementsOrder(): test (VI)  | batch (NM) statements (NM) order (N) 	++ :: batch (NM) mode (NM) test (N) 
SPECIAL:CLAS:DefaultDocumentServerConstructorTest void setUp(): set (V) up (VP)  | default (NM) document (NM) server (NM) constructor (NM) test (N) 	++
BASE_VERB:NAME:RTTriangle int numIntersections(): num (V)  | intersections (N) 	++ :: int (N)  :: RT (NM) triangle (N) 
SPECIAL:NAME:StringAttributes void setType(IClass type): set (V)  | type (N) 	++ :: [ I (NM) class (NI) - type (N) ] :: string (NM) attributes (N) 
BASE_VERB:NAME:PyType PyObject compute_mro(): compute (V)  | mro (N) 	++ :: py (NM) object (NI)  :: py (NM) type (N) 
SPECIAL:NAME:StarObject String getName(): get (V)  | name (NI) 	++ :: string (NI)  :: star (NM) object (NI) 
SPECIAL:NAME:VTOLMapSet void setEntity(Entity e): set (V)  | entity (N) 	++ :: [ entity (N) - e (N) ] :: VTOL (NM) map (NM) set (N) 
SPECIAL:NAME:AfterReal static void initializeClassAttributes(): initialize (V)  | class (NM) attributes (N) 	++ :: after (NM) real (N) 
BASE_VERB:NAME:BDDPointerAnalysis void calculateTypeHierarchy(): calculate (V)  | type (NM) hierarchy (N) 	++ :: BDD (NM) pointer (NM) analysis (N) 
SPECIAL:NAME:DbResults int getColumnCount(): get (V)  | column (NM) count (N) 	++ :: int (N)  :: db (NM) results (N) 
SPECIAL:NAME:StrutsActionStateLogicImpl List getContainerActions(): get (V)  | container (NM) actions (N) 	++ :: list (N)  :: struts (NM) action (NM) state (NM) logic (NM) impl (NI) 
SPECIAL:FORM:CollateralResponse NoTrdRegTimestamps get(NoTrdRegTimestamps value): get (V)  | [ no (DT) trd (NM) reg (NM) timestamps (N) - value (NI) ]	++ :: collateral (NM) response (N)  :: no (DT) trd (NM) reg (NM) timestamps (N) 
SPECIAL:NAME:JournalTemplateSoap void setName(String name): set (V)  | name (NI) 	++ :: [ string (NI) - name (NI) ] :: journal (NM) template (NM) soap (N) 
SPECIAL:NAME:BaseAgUserEventState AgEvent getAgEvent(): get (V)  | ag (NM) event (NI) 	++ :: ag (NM) event (NI)  :: base (NM) ag (NM) user (NM) event (NM) state (N) 
SPECIAL:NAME:TargetMetaRequest TargetMetaDef getTargetMetaDef(): get (V)  | target (NM) meta (NM) def (NI) 	++ :: target (NM) meta (NM) def (NI)  :: target (NM) meta (NM) request (N) 
SPECIAL:NAME:FinancialCalendar static Date addBusinessDays(Date startDate, int numDays): add (V)  | EQUIV[business (NM) days (N) , [ int (N) - num (NM) days (N) ]]	++ :: [ date (N) - start (NM) date (N) ] :: date (N)  :: financial (NM) calendar (N) 
SPECIAL:NAME:NativeMethods4JDK static Db2eBoundTimestamp db2eGetTimestamp(int statementHandle, int column, Db2eBoundTimestamp timestamp): db (PRE) 2 (D) e (PRE) get (V)  | EQUIV[timestamp (N) , [ db (NM) 2 (NM) e (NM) bound (NM) timestamp (N) - timestamp (N) ]]	++ :: [ int (N) - statement (NM) handle (NI) ] :: [ int (N) - column (N) ] :: db (NM) 2 (NM) e (NM) bound (NM) timestamp (N)  :: native (NM) methods (NM) 4 (NM) JDK (N) 
BASE_VERB:FORM:LongClosure boolean proceed(long e): proceed (V)  | [ long (N) - e (N) ]	++ :: long (NM) closure (N)  :: boolean (N) 
SPECIAL:CLAS:multiple_finit_inner void test(): test (VI)  | multiple (NM) finit (NM) inner (N) 	++
VOID_NP:NAME:FeatureBean void unsetEntityContext(): handle (V) | unset (NM) entity (NM) context (N) 	++ :: feature (NM) bean (NI)  :: void (N) 
SPECIAL:CLAS:MathAbs void initialize(): initialize (V)  | math (NM) abs (N) 	++
BASE_VERB:FORM:NamingContext void rename(String oldName, String newName): rename (V)  | [ string (NI) - old (NM) name (NI) ]	++ :: [ string (NI) - new (NM) name (NI) ] :: naming (NM) context (N) 
NOUN_PHRASE:NAME:Algs static Iterator iterator(boolean array, int begin, int end): get (V) | iterator (N) 	++ :: [ boolean (N) - array (N) ] :: [ int (N) - begin (N) ] :: [ int (N) - end (N) ] :: algs (N)  :: iterator (N) 
SPECIAL:NAME:TemplateForm Template getTemplate(): get (V)  | template (N) 	++ :: template (N)  :: template (NM) form (N) 
PREP:NAME:AbstractHashedMap String toString(): convert (V) | to (P) string (NI) 	++ :: abstract (NM) hashed (NM) map (N)  :: string (NI) 
SPECIAL:NAME:TrPostInspectorReaderSerafin void setProgression(ProgressionInterface _prog): set (V)  | progression (N) 	++ :: [ progression (NM) interface (NI) - prog (N) ] :: tr (NM) post (NM) inspector (NM) reader (NM) serafin (N) 
SPECIAL:FORM:ScAccessiblePageHeader void initialize(TestParameters Param, PrintWriter log): initialize (V)  | [ test (NM) parameters (N) - param (N) ]	++ :: [ print (NM) writer (N) - log (N) ] :: sc (NM) accessible (NM) page (NM) header (N) 
V_3PS:FORM:boolean matches(Object arg0, Object arg1): matches (V)  | [ object (NI) - arg (NM) 0 (N) ]	++ :: [ object (NI) - arg (NM) 1 (N) ] :: ANONYMOUS (N)  :: boolean (N) 
SPECIAL:NAME:Invoke static MethodOperand getMethod(Quad q): get (V)  | method (N) 	++ :: [ quad (N) - q (N) ] :: method (NM) operand (N)  :: invoke (N) 
SPECIAL:NAME:Knot double getWeight(): get (V)  | weight (N) 	++ :: double (N)  :: knot (N) 
SPECIAL:NAME:GraphToXMLHandler void endSerialize(): end (V)  | serialize (N) 	++ :: graph (NM) to (NM) XML (NM) handler (N) 
SPECIAL:NAME:EvalFunction String getName(): get (V)  | name (NI) 	++ :: string (NI)  :: eval (NM) function (N) 
BASE_VERB:CLAS:WorkListAbstr T extractInOrder(): extract (V)  | work (NM) list (NM) abstr (N) -- in (P) order (N) 	++ :: T (N) 
BASE_VERB:NAME:ColorCounter ImageMedia countColors(ImageMedia originalImage): count (V)  | colors (N) 	++ :: [ image (NM) media (N) - original (NM) image (N) ] :: image (NM) media (N)  :: color (NM) counter (N) 
SPECIAL:NAME:TableMap void setValueAt(Object aValue, int aRow, int aColumn): set (V)  | value (NI) -- at (P) [ object (NI) - a (NM) value (NI) ]	++ :: [ object (NI) - a (NM) value (NI) ] :: [ int (N) - a (NM) row (N) ] :: [ int (N) - a (NM) column (N) ] :: table (NM) map (N) 
SPECIAL:NAME:TraceBox Color getColorFond(): get (V)  | color (NM) fond (N) 	++ :: color (N)  :: trace (NM) box (N) 
SPECIAL:NAME:ImageConvertService String getExtensionType(String sInputType): get (V)  | EQUIV[extension (NM) type (N) , [ string (NI) - s (NM) input (NM) type (N) ]]	++ :: string (NI)  :: image (NM) convert (NM) service (N) 
NOUN_PHRASE:NAME:lr_parser int error_sync_size(): get (V) | error (NM) sync (NM) size (N) 	++ :: lr (NM) parser (N)  :: int (N) 
SPECIAL:NAME:Model String getQs_statusCodes(): get (V)  | qs (NM) status (NM) codes (N) 	++ :: string (NI)  :: model (NI) 
V_3P_IRR:NAME:PDAcroFormField boolean isAlignmentLeft(): is (V)  | alignment (NM) left (N) 	++ :: boolean (N)  :: PD (NM) acro (NM) form (NM) field (N) 
SPECIAL:NAME:WritableRenderedImage void addTileObserver(TileObserver to): add (V)  | EQUIV[tile (NM) observer (N) , [ tile (NM) observer (N) - to (N) ]]	++ :: writable (NM) rendered (NM) image (N) 
BASE_VERB:FORM:Resend6A void m(Object o1, Object o2): m (V)  | [ object (NI) - o (NM) 1 (N) ]	++ :: [ object (NI) - o (NM) 2 (N) ] :: resend (NM) 6 (NM) A (N) 
CONSTRUCTOR:NAME:EventServerController EventServerController EventServerController(ControllableService anObject, String aName):  | event (NM) server (NM) controller (N) 	++ :: [ controllable (NM) service (N) - an (DT) object (NI) ] :: [ string (NI) - a (NM) name (NI) ]
BASE_VERB:NAME:X509CertUtil static BigInteger generateX509SerialNumber(): generate (V)  | X (NM) 509 (D) serial (NM) number (NI) 	++ :: big (NM) integer (N)  :: X (NM) 509 (NM) cert (NM) util (N) 
SPECIAL:NAME:PlainTextConfiguration String getResultsFileName(): get (V)  | results (NM) file (NM) name (NI) 	++ :: string (NI)  :: plain (NM) text (NM) configuration (NI) 
V_3P_IRR:NAME:TaskRunner boolean isTaskSchedulable(SchedulableTask task): is (V)  | task (NM) schedulable (N) 	++ :: [ schedulable (NM) task (N) - task (N) ] :: boolean (N)  :: task (NM) runner (N) 
SPECIAL:NAME:ColorIntensitySlider void addChangeListener(ChangeListener listener): add (V)  | EQUIV[change (NM) listener (N) , [ change (NM) listener (N) - listener (N) ]]	++ :: color (NM) intensity (NM) slider (N) 
CONSTRUCTOR:NAME:Keyword Keyword Keyword(int id, int type):  | keyword (N) 	++ :: [ int (N) - id (NI) ] :: [ int (N) - type (N) ]
CONSTRUCTOR:NAME:RBDisjunction RBDisjunction RBDisjunction(RBExpression e1, RBExpression e2):  | RB (NM) disjunction (N) 	++ :: [ RB (NM) expression (N) - e (NM) 1 (N) ] :: [ RB (NM) expression (N) - e (NM) 2 (N) ]
NOUN_PHRASE:NAME:Iterator iterator(): get (V) | iterator (N) 	++ :: ANONYMOUS (N)  :: iterator (N) 
NOUN_PHRASE:NAME:RoutingThreadFactory Thread newThread(Runnable r): get (V) | new (NM) thread (N) 	++ :: [ runnable (N) - r (N) ] :: routing (NM) thread (NM) factory (N)  :: thread (N) 
V_3PS:FORM:TotalDigitsFacet boolean equals(Object other): equals (V)  | [ object (NI) - other (DT) ]	++ :: total (NM) digits (NM) facet (N)  :: boolean (N) 
BASE_VERB:NAME:particle void enterAttribute(String $__uri, String $__local, String $__qname): enter (V)  | attribute (N) 	++ :: [ string (NI) - uri (NI) ] :: [ string (NI) - local (N) ] :: [ string (NI) - qname (N) ] :: particle (N) 
SPECIAL:NAME:StackedBarRenderer int getPassCount(): get (V)  | pass (NM) count (N) 	++ :: int (N)  :: stacked (NM) bar (NM) renderer (N) 
SPECIAL:NAME:GdkGlyphVector int getGlyphCharIndex(int glyphIndex): get (V)  | EQUIV[glyph (NM) char (NM) index (NI) , [ int (N) - glyph (NM) index (NI) ]]	++ :: int (N)  :: gdk (NM) glyph (NM) vector (N) 
V_3P_IRR:NAME:LongValidator boolean isNull(Object newValue): is (V)  | null (N) 	++ :: [ object (NI) - new (NM) value (NI) ] :: boolean (N)  :: long (NM) validator (N) 
SPECIAL:NAME:HosObject static OfficeInCup initOfficeInCup(Office of): init (V)  | EQUIV[office (N) , [ office (N) - of (N) ]]-- in (P) cup (N) 	++ :: office (NM) in (NM) cup (N)  :: hos (NM) object (NI) 
V_3PS:NAME:DataView boolean containsOutScopeReadOnly(String fieldName): contains (V)  | out (NM) scope (NM) read (NM) only (N) 	++ :: [ string (NI) - field (NM) name (NI) ] :: boolean (N)  :: data (NM) view (NI) 
SPECIAL:NAME:JCDefaultExReporterModel void setLogfileDirectory(String _logfileDirectory): set (V)  | logfile (NM) directory (N) 	++ :: [ string (NI) - logfile (NM) directory (N) ] :: JC (NM) default (NM) ex (NM) reporter (NM) model (NI) 
BASE_VERB:FORM:ConsExpressionVisitor void visit(ConsSignedRightShift obj): visit (V)  | [ cons (NM) signed (NM) right (NM) shift (N) - obj (NI) ]	++ :: cons (NM) expression (NM) visitor (N) 
CONSTRUCTOR:NAME:RenderContext RenderContext RenderContext(AffineTransform xform, Shape aoi, RenderingHints hints):  | render (NM) context (N) 	++ :: [ affine (NM) transform (N) - xform (N) ] :: [ shape (N) - aoi (N) ] :: [ rendering (NM) hints (N) - hints (N) ]
SPECIAL:NAME:WDDXResultSet int getConcurrency(): get (V)  | concurrency (N) 	++ :: int (N)  :: WDDX (NM) result (NM) set (N) 
CONSTRUCTOR:NAME:OneSampProp OneSampProp OneSampProp():  | one (NM) samp (NM) prop (N) 	++
SPECIAL:NAME:RelationalStorageTechnologyDefType String getAssociationRoleReferentialConstraintNameConversionType(): get (V)  | association (NM) role (NM) referential (NM) constraint (NM) name (NM) conversion (NM) type (N) 	++ :: string (NI)  :: relational (NM) storage (NM) technology (NM) def (NM) type (N) 
BASE_VERB:NAME:StringTokenizerHelper static ArrayList spaceSeparatedToArrayList(String str): space (V)  | separated (N) -- to (P) array (NM) list (N) 	++ :: [ string (NI) - str (NI) ] :: array (NM) list (N)  :: string (NM) tokenizer (NM) helper (N) 
NOUN_PHRASE:NAME:DBConnections Connection newConnection(String dURL, String dClassName, String dbName, String dbUser, String dbPassword): get (V) | new (NM) connection (N) 	++ :: [ string (NI) - d (NM) URL (NI) ] :: [ string (NI) - d (NM) class (NM) name (NI) ] :: [ string (NI) - db (NM) name (NI) ] :: [ string (NI) - db (NM) user (N) ] :: [ string (NI) - db (NM) password (N) ] :: DB (NM) connections (N)  :: connection (N) 
CONSTRUCTOR:NAME:ConditionPropertySetter ConditionPropertySetter ConditionPropertySetter(Method m, String selectedUsersParam):  | condition (NM) property (NM) setter (N) 	++ :: [ method (N) - m (N) ] :: [ string (NI) - selected (NM) users (NM) param (N) ]
BASE_VERB:FORM:VcObject void debugln(String s): debugln (V)  | [ string (NI) - s (N) ]	++ :: vc (NM) object (NI) 
SPECIAL:NAME:JRProperty void setValue(String value): set (V)  | value (NI) 	++ :: [ string (NI) - value (NI) ] :: JR (NM) property (N) 
CONSTRUCTOR:NAME:UnknownLineNumberException UnknownLineNumberException UnknownLineNumberException(Node node):  | unknown (NM) line (NM) number (NM) exception (N) 	++ :: [ node (NI) - node (NI) ]
BASE_VERB:FORM:ValidityPeriodXML void save(XMLTranslator traductor): save (V)  | [ XML (NM) translator (N) - traductor (N) ]	++ :: validity (NM) period (NM) XML (N) 
SPECIAL:NAME:JavaType void setMethods(List methods): set (V)  | methods (N) 	++ :: [ list (N) - methods (N) ] :: java (NM) type (N) 
ENDS_WITH_ED:NAME:ChildChangedListener void objectChanged(DatabaseObjectEvent e): handle (V) | object (NM) changed (N) 	++ :: [ database (NM) object (NM) event (NI) - e (N) ] :: child (NM) changed (NM) listener (N)  :: void (N) 
SPECIAL:NAME:DurationCalculatorHelper IDaysWorked getDaysWorked(Date startDate, TimeQuantity work, BigDecimal percentAssignedDecimal): get (V)  | days (NM) worked (N) 	++ :: [ date (N) - start (NM) date (N) ] :: [ time (NM) quantity (N) - work (N) ] :: [ big (NM) decimal (N) - percent (NM) assigned (NM) decimal (N) ] :: I (NM) days (NM) worked (N)  :: duration (NM) calculator (NM) helper (N) 
SPECIAL:CLAS:SymkeysHistoryLocalHome Collection findBySoid(Long soid): find (V)  | symkeys (NM) history (NM) local (NM) home (N) -- by (P) EQUIV[soid (N) , [ long (N) - soid (N) ]]	++ :: collection (N) 
SPECIAL:NAME:EditMessageAction Map getAttachments(ActionRequest req): get (V)  | attachments (N) 	++ :: [ action (NM) request (N) - req (N) ] :: map (N)  :: edit (NM) message (NM) action (N) 
SPECIAL:NAME:ProjectMember Set getDeeping(): get (V)  | deeping (N) 	++ :: set (N)  :: project (NM) member (N) 
NOUN_PHRASE:NAME:Raster2 int green(int u, int v): get (V) | green (N) 	++ :: [ int (N) - u (N) ] :: [ int (N) - v (N) ] :: raster (NM) 2 (N)  :: int (N) 
BASE_VERB:CLAS:UnScheduleMenu void deSelect(): de (PRE) select (V)  | un (NM) schedule (NM) menu (N) 	++
SPECIAL:NAME:IfEntry long getIfInDiscards(): get (V)  | if (NI) -- in (P) discards (N) 	++ :: long (N)  :: if (NM) entry (NI) 
SPECIAL:NAME:Properties Object setProperty(String key, String value): set (V)  | property (N) 	++ :: [ string (NI) - key (NI) ] :: [ string (NI) - value (NI) ] :: object (NI)  :: properties (N) 
SPECIAL:NAME:UiComponentHelperInputFactory String getLabelText(AttributeInfo pAttributeInfo): get (V)  | label (NM) text (NI) 	++ :: [ attribute (NM) info (NI) - p (NM) attribute (NM) info (NI) ] :: string (NI)  :: ui (NM) component (NM) helper (NM) input (NM) factory (N) 
SPECIAL:NAME:PrefetchProcessorNode void setObjects(List objects): set (V)  | objects (N) 	++ :: [ list (N) - objects (N) ] :: prefetch (NM) processor (NM) node (NI) 
CONSTRUCTOR:NAME:TextJarPackageBuilder TextJarPackageBuilder TextJarPackageBuilder():  | text (NM) jar (NM) package (NM) builder (N) 	++
SPECIAL:NAME:JavaClass String getPackageName(): get (V)  | package (NM) name (NI) 	++ :: string (NI)  :: java (NM) class (NI) 
CONSTRUCTOR:NAME:PooledDataSource PooledDataSource PooledDataSource(SubComponent parent, String name):  | pooled (NM) data (NM) source (NI) 	++ :: [ sub (NM) component (N) - parent (N) ] :: [ string (NI) - name (NI) ]
CONSTRUCTOR:NAME:DSRAV DSRAV DSRAV():  | DSRAV (N) 	++
BASE_VERB:CLAS:WCMSAdminServlet boolean getback(): getback (V)  | WCMS (NM) admin (NM) servlet (N) 	++ :: boolean (N) 
SPECIAL:NAME:cPoint void setLocation(cUnit x, cUnit y): set (V)  | location (NI) 	++ :: [ c (NM) unit (N) - x (N) ] :: [ c (NM) unit (N) - y (N) ] :: c (NM) point (N) 
SPECIAL:NAME:Criteria Criteria setTimeout(int timeout): set (V)  | timeout (N) 	++ :: [ int (N) - timeout (N) ] :: criteria (N)  :: criteria (N) 
CONSTRUCTOR:NAME:AlphabeticalIndexMarkEndImpl AlphabeticalIndexMarkEndImpl AlphabeticalIndexMarkEndImpl(SchemaType sType):  | alphabetical (NM) index (NM) mark (NM) end (NM) impl (NI) 	++ :: [ schema (NM) type (N) - s (NM) type (N) ]
CONSTRUCTOR:NAME:ByteIlaFromCastDoubleIla ByteIlaFromCastDoubleIla ByteIlaFromCastDoubleIla():  | byte (NM) ila (NM) from (NM) cast (NM) double (NM) ila (N) 	++
BASE_VERB:NAME:SessionManager void closeAllSessions(): close (V)  | all (DT) sessions (N) 	++ :: session (NM) manager (N) 
CONSTRUCTOR:NAME:WFSTransactionException WFSTransactionException WFSTransactionException(String message, Throwable cause, String code, String locator):  | WFS (NM) transaction (NM) exception (N) 	++ :: [ string (NI) - message (NI) ] :: [ throwable (N) - cause (N) ] :: [ string (NI) - code (NI) ] :: [ string (NI) - locator (N) ]
SPECIAL:NAME:ControlScheduleValue ScheduleValue getScheduleValue(): get (V)  | schedule (NM) value (NI) 	++ :: schedule (NM) value (NI)  :: control (NM) schedule (NM) value (NI) 
CONSTRUCTOR:NAME:SettlCurrOfferFxRate SettlCurrOfferFxRate SettlCurrOfferFxRate():  | settl (NM) curr (NM) offer (NM) fx (NM) rate (N) 	++
NOUN_PHRASE:NAME:SpecificLongValue LongValue remainder(LongValue other): get (V) | remainder (N) 	++ :: [ long (NM) value (NI) - other (DT) ] :: specific (NM) long (NM) value (NI)  :: long (NM) value (NI) 
BASE_VERB:NAME:MockCompany void acceptSetName(Object p0_String, Throwable toThrow): accept (VI) set (V)  | name (NI) 	++ :: [ object (NI) - p (NM) 0 (NM) string (NI) ] :: [ throwable (N) - to (NM) throw (N) ] :: mock (NM) company (N) 
SPECIAL:NAME:BrowseAccessImpl ObservationRemote get_observations_by_time(QualifiedPersonId who, String what, TimeSpan when, int max_sequence, ObservationRemoteIteratorHolder the_rest): get (V)  | observations (N) -- by (P) time (N) 	++ :: [ qualified (NM) person (NM) id (NI) - who (PR) ] :: [ string (NI) - what (DT) ] :: [ time (NM) span (N) - when (N) ] :: [ int (N) - max (NM) sequence (N) ] :: [ observation (NM) remote (NM) iterator (NM) holder (NI) - the (DT) rest (N) ] :: observation (NM) remote (N)  :: browse (NM) access (NM) impl (NI) 
SPECIAL:NAME:Calc Vector getFaces(): get (V)  | faces (N) 	++ :: vector (N)  :: calc (N) 
SPECIAL:NAME:Eval Object getBitsetProperty(BitSet bs, int tok, Point3f ptRef, Point4f planeRef, Object tokenValue, Object opValue, boolean useAtomMap): get (V)  | bitset (NM) property (N) 	++ :: [ bit (NM) set (N) - bs (N) ] :: [ int (N) - tok (N) ] :: [ point (NM) 3 (NM) f (N) - pt (NM) ref (NI) ] :: [ point (NM) 4 (NM) f (N) - plane (NM) ref (NI) ] :: [ object (NI) - token (NM) value (NI) ] :: [ object (NI) - op (NM) value (NI) ] :: [ boolean (N) - use (NM) atom (NM) map (N) ] :: object (NI)  :: eval (N) 
CONSTRUCTOR:NAME:DefaultTemporalDatum DefaultTemporalDatum DefaultTemporalDatum(TemporalDatum datum):  | default (NM) temporal (NM) datum (N) 	++ :: [ temporal (NM) datum (N) - datum (N) ]
SPECIAL:CLAS:ISToolBar void initialize(): initialize (V)  | IS (NM) tool (NM) bar (N) 	++
SPECIAL:NAME:BaseShipment String getSubject(): get (V)  | subject (N) 	++ :: string (NI)  :: base (NM) shipment (N) 
SPECIAL:NAME:JCadAboutBox JPanel getTextPane(): get (V)  | text (NM) pane (N) 	++ :: J (NM) panel (N)  :: J (NM) cad (NM) about (NM) box (N) 
BASE_VERB:NAME:CenturionBoardRenderer void showDeployments(Vector<Deployment> deployments): show (V)  | EQUIV[deployments (N) , [ vector (NM) deployment (N) - deployments (N) ]]	++ :: centurion (NM) board (NM) renderer (N) 
SPECIAL:NAME:PropertyDescriptor String getXMLName(): get (V)  | XML (NM) name (NI) 	++ :: string (NI)  :: property (NM) descriptor (NI) 
CONSTRUCTOR:NAME:PriDescriptor PriDescriptor PriDescriptor(String prid):  | pri (NM) descriptor (NI) 	++ :: [ string (NI) - prid (N) ]
SPECIAL:FORM:Array Object get(int index): get (V)  | [ int (N) - index (NI) ]	++ :: array (N)  :: object (NI) 
BASE_VERB:NAME:BasicExecutionServiceAxisImpl Document TerminateActivities(Document pInput): terminate (V)  | activities (N) 	++ :: [ document (NI) - p (NM) input (NI) ] :: document (NI)  :: basic (NM) execution (NM) service (NM) axis (NM) impl (NI) 
SPECIAL:FORM:ObjectArrayValueHolder boolean remove(Object o): remove (V)  | [ object (NI) - o (N) ]	++ :: object (NM) array (NM) value (NM) holder (NI)  :: boolean (N) 
BASE_VERB:FORM:PoolSystem void log(Throwable e, String s): log (V)  | [ throwable (N) - e (N) ]	++ :: [ string (NI) - s (N) ] :: pool (NM) system (N) 
V_3P_IRR:NAME:ABSimOCL2JavaMapper boolean isLogicalExpression(DefaultMutableTreeNode node): is (V)  | logical (NM) expression (N) 	++ :: [ default (NM) mutable (NM) tree (NM) node (NI) - node (NI) ] :: boolean (N)  :: AB (NM) sim (NM) OCL (NM) 2 (NM) java (NM) mapper (N) 
SPECIAL:NAME:KnapsackFitnessFunction static double getTotalVolume(IChromosome a_potentialSolution): get (V)  | total (NM) volume (N) 	++ :: [ I (NM) chromosome (N) - a (NM) potential (NM) solution (N) ] :: double (N)  :: knapsack (NM) fitness (NM) function (N) 
SPECIAL:FORM:HtmlLink Object copy(SafeEnv safeEnv, Object newOwnerRef, boolean deepPageCopy): copy (V)  | [ safe (NM) env (N) - safe (NM) env (N) ]	++ :: [ object (NI) - new (NM) owner (NM) ref (NI) ] :: html (NM) link (N)  :: [ boolean (N) - deep (NM) page (NM) copy (N) ] :: object (NI) 
SPECIAL:NAME:MediaListCellRenderer Component getListCellRendererComponent(JList list, Object value, int index, boolean isSelected, boolean selHasFocus): get (V)  | list (NM) cell (NM) renderer (NM) component (N) 	++ :: [ J (NM) list (N) - list (N) ] :: [ object (NI) - value (NI) ] :: [ int (N) - index (NI) ] :: [ boolean (N) - is (NM) selected (N) ] :: [ boolean (N) - sel (NM) has (NM) focus (N) ] :: component (N)  :: media (NM) list (NM) cell (NM) renderer (N) 
BASE_VERB:NAME:QMotifStyle void drawIndicator(QPainter p, int x, int y, int w, int h, QColorGroup g, int state, boolean down, boolean enabled): draw (V)  | indicator (N) 	++ :: [ Q (NM) painter (N) - p (NI) ] :: [ int (N) - x (N) ] :: [ int (N) - y (N) ] :: [ int (N) - w (N) ] :: [ int (N) - h (N) ] :: [ Q (NM) color (NM) group (N) - g (N) ] :: [ int (N) - state (N) ] :: [ boolean (N) - down (N) ] :: [ boolean (N) - enabled (N) ] :: Q (NM) motif (NM) style (N) 
CONSTRUCTOR:NAME:TestSwingTargetReplaceApp TestSwingTargetReplaceApp TestSwingTargetReplaceApp():  | test (NM) swing (NM) target (NM) replace (NM) app (N) 	++
SPECIAL:NAME:CommentHandlerBean void addComment(String commenterId, String commenterName, String comment, Long chapterId): add (V)  | EQUIV[comment (N) , [ string (NI) - comment (N) ]]	++ :: [ string (NI) - commenter (NM) id (NI) ] :: [ string (NI) - commenter (NM) name (NI) ] :: [ long (N) - chapter (NM) id (NI) ] :: comment (NM) handler (NM) bean (NI) 
SPECIAL:NAME:MinefieldStatePdu void setMinefieldType(EntityType pMinefieldType): set (V)  | minefield (NM) type (N) 	++ :: [ entity (NM) type (N) - p (NM) minefield (NM) type (N) ] :: minefield (NM) state (NM) pdu (N) 
BASE_VERB:FORM:UDPNewSessionRequest void ttl(byte value): ttl (V)  | [ byte (N) - value (NI) ]	++ :: UDP (NM) new (NM) session (NM) request (N) 
SPECIAL:NAME:Quote EstimateLabourExpense getLabour(): get (V)  | labour (N) 	++ :: estimate (NM) labour (NM) expense (N)  :: quote (N) 
SPECIAL:NAME:HtmlUtils static script getScript(String scriptName): get (V)  | EQUIV[script (N) , [ string (NI) - script (NM) name (NI) ]]	++ :: script (N)  :: html (NM) utils (N) 
SPECIAL:NAME:JSmoothModelBean void setEmbeddedJar(boolean b): set (V)  | embedded (NM) jar (N) 	++ :: [ boolean (N) - b (N) ] :: J (NM) smooth (NM) model (NM) bean (NI) 
SPECIAL:NAME:Map void removePiece(GamePiece p): remove (V)  | EQUIV[piece (N) , [ game (NM) piece (N) - p (NI) ]]	++ :: map (N) 
SPECIAL:NAME:CallbackServiceImpl List getCallbacks(): get (V)  | callbacks (N) 	++ :: list (N)  :: callback (NM) service (NM) impl (NI) 
VOID_NP:NAME:ExampleProducer void method1(String msg, int val): handle (V) | method (N) 1 (D) 	++ :: [ string (NI) - msg (NI) ] :: [ int (N) - val (NI) ] :: example (NM) producer (N)  :: void (N) 
SPECIAL:NAME:HighLowMap String getNextColumn(): get (V)  | next (DT) column (N) 	++ :: string (NI)  :: high (NM) low (NM) map (N) 
SPECIAL:NAME:MainWin DataPanel getCurrentPanel(): get (V)  | current (NM) panel (N) 	++ :: data (NM) panel (N)  :: main (NM) win (N) 
NOUN_PHRASE:NAME:PlotPackageTests static Test suite(): get (V) | suite (N) 	++ :: plot (NM) package (NM) tests (N)  :: test (N) 
V_3P_IRR:NAME:NoRelatedSym boolean isSet(RoundLot field): is (V)  | set (N) 	++ :: [ round (NM) lot (DT) - field (N) ] :: boolean (N)  :: no (DT) related (NM) sym (N) 
SPECIAL:CLAS:ProxyFactory static void removeFromCache(TiVoItem tivoItem): remove (V)  | proxy (NM) factory (N) -- from (P) cache (N) 	++ :: [ ti (NM) vo (NM) item (NI) - tivo (NM) item (NI) ]
V_MODAL:NAME:boolean canWritePDataTF(): can (VI) write (V)  | P (NM) data (NM) TF (N) 	++ :: boolean (N)  :: ANONYMOUS (N) 
ENDS_WITH_ED:NAME:InSimInputListener void viewpointMotionChanged(SplinePath newPath): handle (V) | viewpoint (NM) motion (NM) changed (N) 	++ :: [ spline (NM) path (NI) - new (NM) path (NI) ] :: in (NM) sim (NM) input (NM) listener (N)  :: void (N) 
SPECIAL:CLAS:zAbstractDataWrapper Object get(): get (V)  | z (NM) abstract (NM) data (NM) wrapper (NI) 	++ :: object (NI) 
SPECIAL:NAME:CellEditor Component getTableCellEditorComponent(JTable table, Object value, boolean isSelected, int row, int column): get (V)  | table (NM) cell (NM) editor (NM) component (N) 	++ :: [ J (NM) table (N) - table (N) ] :: [ object (NI) - value (NI) ] :: [ int (N) - row (N) ] :: [ int (N) - column (N) ] :: [ boolean (N) - is (NM) selected (N) ] :: component (N)  :: cell (NM) editor (N) 
SPECIAL:NAME:DestinationAddress void setAddress(Address address): set (V)  | address (NI) 	++ :: [ address (NI) - address (NI) ] :: destination (NM) address (NI) 
SPECIAL:NAME:MailMerge ByteArray readInput(InputStream i): read (V)  | EQUIV[input (NI) , [ input (NM) stream (NI) - i (N) ]]	++ :: byte (NM) array (N)  :: mail (NM) merge (N) 
SPECIAL:NAME:CallableStatement void setCharacterStream(String parameterName, Reader reader): set (V)  | character (NM) stream (NI) 	++ :: [ string (NI) - parameter (NM) name (NI) ] :: [ reader (N) - reader (N) ] :: callable (NM) statement (NI) 
CONSTRUCTOR:NAME:Name Name Name(int qNameIndex, int nsUriIndex, String nsUri, int localIndex, String localName, boolean isAttribute):  | name (NI) 	++ :: [ int (N) - q (NM) name (NM) index (NI) ] :: [ int (N) - ns (NM) uri (NM) index (NI) ] :: [ string (NI) - ns (NM) uri (NI) ] :: [ int (N) - local (NM) index (NI) ] :: [ string (NI) - local (NM) name (NI) ] :: [ boolean (N) - is (NM) attribute (N) ]
CONSTRUCTOR:NAME:NumberCall NumberCall NumberCall(QName fname, Vector arguments):  | number (NM) call (N) 	++ :: [ Q (NM) name (NI) - fname (N) ] :: [ vector (N) - arguments (N) ]
SPECIAL:NAME:RetArray static Object getObjectArr2(): get (V)  | object (NM) arr (N) 2 (D) 	++ :: object (NI)  :: ret (NM) array (N) 
SPECIAL:NAME:REConverterTest void testRules(): test (VI)  | rules (N) 	++ :: RE (NM) converter (NM) test (N) 
SPECIAL:NAME:PenroseModification void setType(int type): set (V)  | type (N) 	++ :: [ int (N) - type (N) ] :: penrose (NM) modification (N) 
CONSTRUCTOR:NAME:RenameConceptAdapter RenameConceptAdapter RenameConceptAdapter(SpiderPanel spiderPanel):  | rename (NM) concept (NM) adapter (NI) 	++ :: [ spider (NM) panel (N) - spider (NM) panel (N) ]
SPECIAL:NAME:DefaultDocumentNavigator String getAttributeStringValue(Object obj): get (V)  | attribute (NM) string (NM) value (NI) 	++ :: [ object (NI) - obj (NI) ] :: string (NI)  :: default (NM) document (NM) navigator (N) 
BASE_VERB:NAME:Unmarshaller void leaveElement(String ___uri, String ___local, String ___qname): leave (V)  | element (NI) 	++ :: [ string (NI) - uri (NI) ] :: [ string (NI) - local (N) ] :: [ string (NI) - qname (N) ] :: unmarshaller (N) 
SPECIAL:NAME:CMSynergySession String getPassword(): get (V)  | password (N) 	++ :: string (NI)  :: CM (NM) synergy (NM) session (N) 
SPECIAL:NAME:DOMErrorImpl String getMessage(): get (V)  | message (NI) 	++ :: string (NI)  :: DOM (NM) error (NM) impl (NI) 
SPECIAL:NAME:SpokeAgentImpl void doBehavior(): do (VI)  | behavior (N) 	++ :: spoke (NM) agent (NM) impl (NI) 
SPECIAL:NAME:ZSourceViewer Color createColor(IPreferenceStore store, String key, Display display): create (V)  | color (N) 	++ :: [ I (NM) preference (NM) store (N) - store (N) ] :: [ string (NI) - key (NI) ] :: [ display (N) - display (N) ] :: color (N)  :: Z (NM) source (NM) viewer (N) 
SPECIAL:NAME:CVWWhiteboard void setThreadReader(WBThreadReader wbThreadReader): set (V)  | thread (NM) reader (N) 	++ :: [ WB (NM) thread (NM) reader (N) - wb (NM) thread (NM) reader (N) ] :: CVW (NM) whiteboard (N) 
SPECIAL:NAME:SubmitSM byte getMsValidity(): get (V)  | ms (NM) validity (N) 	++ :: byte (N)  :: submit (NM) SM (N) 
SPECIAL:NAME:CspIntSetVariable void removePossible(int value): remove (V)  | possible (N) 	++ :: [ int (N) - value (NI) ] :: csp (NM) int (NM) set (NM) variable (N) 
BASE_VERB:NAME:Activity void updateIdealTime(): update (V)  | ideal (NM) time (N) 	++ :: activity (N) 
ENDS_WITH_ED:NAME:TopWindowListener void componentShown(ComponentEvent e): handle (V) | component (NM) shown (N) 	++ :: [ component (NM) event (NI) - e (N) ] :: top (NM) window (NM) listener (N)  :: void (N) 
VOID_NP:NAME:CapCommon void highLevelCopy(CapCommon capCommon, boolean includeSuperclasses): handle (V) | high (NM) level (NM) copy (N) 	++ :: [ cap (NM) common (N) - cap (NM) common (N) ] :: [ boolean (N) - include (NM) superclasses (N) ] :: cap (NM) common (N)  :: void (N) 
BASE_VERB:NAME:ASN1PreparedElementData Object invokeIsSelectedMethod(Object object, Object param): invoke (VI)  | is (NM) selected (NM) method (N) 	++ :: [ object (NI) - object (NI) ] :: [ object (NI) - param (N) ] :: object (NI)  :: ASN (NM) 1 (NM) prepared (NM) element (NM) data (NI) 
SPECIAL:NAME:LevenbergMarquardt void setComment(String comment): set (V)  | comment (N) 	++ :: [ string (NI) - comment (N) ] :: levenberg (NM) marquardt (N) 
SPECIAL:NAME:ForumDAO ForumStats getBoardStatus(): get (V)  | board (NM) status (N) 	++ :: forum (NM) stats (N)  :: forum (NM) DAO (N) 
ENDS_WITH_ED:NAME:void actionPerformed(ActionEvent e): handle (V) | action (NM) performed (N) 	++ :: [ action (NM) event (NI) - e (N) ] :: ANONYMOUS (N)  :: void (N) 
SPECIAL:NAME:yacySeedDB yacySeed getDisconnected(String hash): get (V)  | disconnected (N) 	++ :: [ string (NI) - hash (N) ] :: yacy (NM) seed (N)  :: yacy (NM) seed (NM) DB (N) 
BASE_VERB:FORM:XmlI18nMgr static String s(String key, Class clazz, Locale locale): s (V)  | [ string (NI) - key (NI) ]	++ :: [ class (NI) - clazz (N) ] :: [ locale (N) - locale (N) ] :: xml (NM) I (NM) 18 (NM) n (NM) mgr (N)  :: string (NI) 
SPECIAL:NAME:BasePlaylistHasGenrePeer static List doSelect(PlaylistHasGenre obj): do (VI)  | select (N) 	++ :: [ playlist (NM) has (NM) genre (N) - obj (NI) ] :: list (N)  :: base (NM) playlist (NM) has (NM) genre (NM) peer (N) 
SPECIAL:NAME:IProject DataTable getDataTabla(String idTable): get (V)  | data (NM) tabla (N) 	++ :: [ string (NI) - id (NM) table (N) ] :: data (NM) table (N)  :: I (NM) project (N) 
SPECIAL:CLAS:SemanticScopeImpl Set<RepeatableOnAlarm> getOnAlarmSet(): get (V)  | semantic (NM) scope (NM) impl (NI) -- on (P) alarm (NM) set (N) 	++ :: set (NM) repeatable (NM) on (NM) alarm (N) 
SPECIAL:NAME:CompiereServer String getStatistics(): get (V)  | statistics (N) 	++ :: string (NI)  :: compiere (NM) server (N) 
V_3PS:FORM:OclCollection OclBoolean includes(OclRoot obj): includes (V)  | [ ocl (NM) root (N) - obj (NI) ]	++ :: ocl (NM) collection (N)  :: ocl (NM) boolean (N) 
SPECIAL:FORM:Notepad static void main(String args): main (V)  | [ string (NI) - args (N) ]	++ :: notepad (N) 
SPECIAL:NAME:Nop Class getChildType(int parm1): get (V)  | child (NM) type (N) 	++ :: [ int (N) - parm (NM) 1 (N) ] :: class (NI)  :: nop (N) 
V_3P_IRR:NAME:PKIXParameters boolean isAnyPolicyInhibited(): is (V)  | any (DT) policy (NM) inhibited (N) 	++ :: boolean (N)  :: PKIX (NM) parameters (N) 
SPECIAL:NAME:StrictInsets long getRight(): get (V)  | right (N) 	++ :: long (N)  :: strict (NM) insets (N) 
BASE_VERB:FORM:void say(String text): say (V)  | [ string (NI) - text (NI) ]	++ :: ANONYMOUS (N) 
SPECIAL:NAME:UiBulletinComponentDataSection UiField createLanguageField(): create (V)  | language (NM) field (N) 	++ :: ui (NM) field (N)  :: ui (NM) bulletin (NM) component (NM) data (NM) section (N) 
BASE_VERB:CLAS:jq_Method jq_CompiledCode compile(): compile (V)  | jq (NM) method (N) 	++ :: jq (NM) compiled (NM) code (NI) 
SPECIAL:NAME:JSCSVDocument String getValue(int row, int col): get (V)  | value (NI) 	++ :: [ int (N) - row (N) ] :: [ int (N) - col (N) ] :: string (NI)  :: JSCSV (NM) document (NI) 
BASE_VERB:NAME:StageDescriptor int hashCode(): hash (V)  | code (NI) 	++ :: int (N)  :: stage (NM) descriptor (NI) 
SPECIAL:NAME:TestElfListModel String getParameter(String key, String def): get (V)  | parameter (N) 	++ :: [ string (NI) - key (NI) ] :: [ string (NI) - def (NI) ] :: string (NI)  :: test (NM) elf (NM) list (NM) model (NI) 
BASE_VERB:CLAS:CommentFormattingStrategy void format(): format (V)  | comment (NM) formatting (NM) strategy (N) 	++
SPECIAL:NAME:TesterHttpServletRequestWrapper Cookie getCookies(): get (V)  | cookies (N) 	++ :: cookie (N)  :: tester (NM) http (NM) servlet (NM) request (NM) wrapper (NI) 
SPECIAL:NAME:UserEventActionListener void processUserEvent(UserEvent event): process (VI)  | EQUIV[user (NM) event (NI) , [ user (NM) event (NI) - event (NI) ]]	++ :: user (NM) event (NM) action (NM) listener (N) 
BASE_VERB:NAME:ProjectItemsViewer void showProjectMenuItem(String path, String com, String menu): show (V)  | project (NM) menu (NM) item (NI) 	++ :: [ string (NI) - path (NI) ] :: [ string (NI) - com (N) ] :: [ string (NI) - menu (N) ] :: project (NM) items (NM) viewer (N) 
SPECIAL:FORM:RenderDelegate void render(BridgePeer peer, BridgeRenderContext context, Object renderObject): render (V)  | [ bridge (NM) peer (N) - peer (N) ]	++ :: [ bridge (NM) render (NM) context (N) - context (N) ] :: [ object (NI) - render (NM) object (NI) ] :: render (NM) delegate (N) 
SPECIAL:NAME:CategoryNodeEditor Component getTreeCellEditorComponent(JTree tree, Object value, boolean selected, boolean expanded, boolean leaf, int row): get (V)  | tree (NM) cell (NM) editor (NM) component (N) 	++ :: [ J (NM) tree (NI) - tree (NI) ] :: [ object (NI) - value (NI) ] :: [ int (N) - row (N) ] :: [ boolean (N) - selected (N) ] :: [ boolean (N) - expanded (N) ] :: [ boolean (N) - leaf (N) ] :: component (N)  :: category (NM) node (NM) editor (N) 
NOUN_PHRASE:NAME:WSDLRegistry static WSDLRegistry newInstance(): get (V) | new (NM) instance (NI) 	++ :: WSDL (NM) registry (N)  :: WSDL (NM) registry (N) 
SPECIAL:NAME:CrashReportingThread void runThread(): run (VI)  | thread (N) 	++ :: crash (NM) reporting (NM) thread (N) 
CONSTRUCTOR:NAME:MovieBasics MovieBasics MovieBasics(String args):  | movie (NM) basics (N) 	++ :: [ string (NI) - args (N) ]
V_3P_IRR:NAME:GraphModel boolean isEdge(Object edge): is (V)  | EQUIV[edge (N) , [ object (NI) - edge (N) ]]	++ :: boolean (N)  :: graph (NM) model (NI) 
CONSTRUCTOR:NAME:Arc3d Arc3d Arc3d():  | arc (NM) 3 (NM) d (N) 	++
BASE_VERB:NAME:VM_BootRecord void showHeapRanges(): show (V)  | heap (NM) ranges (N) 	++ :: VM (NM) boot (NM) record (N) 
CONSTRUCTOR:NAME:OffsetNxN OffsetNxN OffsetNxN():  | offset (NM) nx (NM) N (N) 	++
CONSTRUCTOR:NAME:ComparableImage ComparableImage ComparableImage(BufferedImage img):  | comparable (NM) image (N) 	++ :: [ buffered (NM) image (N) - img (N) ]
SPECIAL:NAME:RandomVariable double getValue(): get (V)  | value (NI) 	++ :: double (N)  :: random (NM) variable (N) 
SPECIAL:NAME:PdfPTable void addCell(PdfPCell cell): add (V)  | EQUIV[cell (N) , [ pdf (NM) P (NM) cell (N) - cell (N) ]]	++ :: pdf (NM) P (NM) table (N) 
SPECIAL:NAME:Base64Decoder void printHex(int x): print (V)  | hex (N) 	++ :: [ int (N) - x (N) ] :: base (NM) 64 (NM) decoder (N) 
SPECIAL:NAME:Converter Object getConversionProperty(String property): get (V)  | EQUIV[conversion (NM) property (N) , [ string (NI) - property (N) ]]	++ :: object (NI)  :: converter (N) 
CONSTRUCTOR:NAME:PrerequisiteAcceptDecideRule PrerequisiteAcceptDecideRule PrerequisiteAcceptDecideRule(String name):  | prerequisite (NM) accept (NM) decide (NM) rule (N) 	++ :: [ string (NI) - name (NI) ]
NOUN_PHRASE:NAME:ClassDocImpl Type typeForString(String typeName): get (V) | type (NM) for (NM) string (NI) 	++ :: [ string (NI) - type (NM) name (NI) ] :: class (NM) doc (NM) impl (NI)  :: type (N) 
BASE_VERB:NAME:AddressBOBody boolean preInternalDelete(): pre (V)  | internal (NM) delete (N) 	++ :: boolean (N)  :: address (NM) BO (NM) body (N) 
SPECIAL:NAME:DBTableObject void resetRow(int row): reset (V)  | EQUIV[row (N) , [ int (N) - row (N) ]]	++ :: DB (NM) table (NM) object (NI) 
SPECIAL:NAME:Page1 void setLabel8(Label l): set (V)  | label (NI) 8 (D) 	++ :: [ label (NI) - l (N) ] :: page (NM) 1 (N) 
BASE_VERB:FORM:IlluminationPass void setstage(IlluminationStage _jni_value_): setstage (V)  | [ illumination (NM) stage (N) - jni (NM) value (NI) ]	++ :: illumination (NM) pass (N) 
CONSTRUCTOR:NAME:LoadLibrary LoadLibrary LoadLibrary():  | load (NM) library (N) 	++
SPECIAL:NAME:XMLFieldMappingEditor void initComponents(): init (V)  | components (N) 	++ :: XML (NM) field (NM) mapping (NM) editor (N) 
SPECIAL:NAME:TopicMapImpl String getID(ProviderTransaction txn): get (V)  | ID (NI) 	++ :: [ provider (NM) transaction (N) - txn (N) ] :: string (NI)  :: topic (NM) map (NM) impl (NI) 
SPECIAL:NAME:X3DCanvas void setViewpoint(String descrip): set (V)  | viewpoint (N) 	++ :: [ string (NI) - descrip (N) ] :: X (NM) 3 (NM) D (NM) canvas (N) 
SPECIAL:NAME:DisplayBucketData String getLabel(String sLanguage): get (V)  | label (NI) 	++ :: [ string (NI) - s (NM) language (N) ] :: string (NI)  :: display (NM) bucket (NM) data (NI) 
CONSTRUCTOR:NAME:ShoutcastContainer ShoutcastContainer ShoutcastContainer():  | shoutcast (NM) container (NI) 	++
SPECIAL:NAME:NewsCommonXML void setHotNews(Collection hotNewsList): set (V)  | hot (NM) news (N) 	++ :: [ collection (N) - hot (NM) news (NM) list (N) ] :: news (NM) common (NM) XML (N) 
SPECIAL:NAME:String getId(): get (V)  | id (NI) 	++ :: string (NI)  :: ANONYMOUS (N) 
BASE_VERB:CLAS:ChannelUn void destroy(): destroy (V)  | channel (NM) un (N) 	++
BASE_VERB:FORM:VCS void checkout(String path): checkout (V)  | [ string (NI) - path (NI) ]	++ :: VCS (N) 
BASE_VERB:FORM:NEWARRAY void accept(Visitor v): accept (VI)  | [ visitor (N) - v (N) ]	++ :: NEWARRAY (N) 
SPECIAL:NAME:ListGenerator IndividualList getIndividualAndEntityEmailList(int userID, int startAT, int EndAt, String searchString, String sortColumn, int dbID): get (V)  | individual (NM) and (NM) entity (NM) email (NM) list (N) 	++ :: [ int (N) - user (NM) ID (NI) ] :: [ int (N) - start (NM) AT (N) ] :: [ int (N) - end (NM) at (N) ] :: [ string (NI) - search (NM) string (NI) ] :: [ string (NI) - sort (NM) column (N) ] :: [ int (N) - db (NM) ID (NI) ] :: individual (NM) list (N)  :: list (NM) generator (N) 
SPECIAL:NAME:UnifiedInvoker void setMBeanServer(MBeanServer server): set (V)  | M (NM) bean (NM) server (N) 	++ :: [ M (NM) bean (NM) server (N) - server (N) ] :: unified (NM) invoker (N) 
BASE_VERB:NAME:VeriParserTokenManager int jjMoveStringLiteralDfa7_1(long old0, long active0, long old2, long active2): jj (PRE) move (V)  | string (NM) literal (NM) dfa (N) 7 (D) 1 (D) 	++ :: [ long (N) - old (NM) 0 (N) ] :: [ long (N) - active (NM) 0 (N) ] :: [ long (N) - old (NM) 2 (N) ] :: [ long (N) - active (NM) 2 (N) ] :: int (N)  :: veri (NM) parser (NM) token (NM) manager (N) 
SPECIAL:NAME:ResponseErrorNonHtml InputStream getContent(): get (V)  | content (N) 	++ :: input (NM) stream (NI)  :: response (NM) error (NM) non (NM) html (N) 
ENDS_WITH_ED:NAME:void keyPressed(KeyEvent e): handle (V) | key (NM) pressed (N) 	++ :: [ key (NM) event (NI) - e (N) ] :: ANONYMOUS (N)  :: void (N) 
SPECIAL:CLAS:void run(): run (VI)  | ANONYMOUS (N) 	++
BASE_VERB:FORM:Font static Font decode(String fontspec): decode (V)  | [ string (NI) - fontspec (N) ]	++ :: font (N)  :: font (N) 
BASE_VERB:CLAS:TestSupportParcelCatcher void clear(): clear (V)  | test (NM) support (NM) parcel (NM) catcher (N) 	++
SPECIAL:NAME:ParamTableModel int getColumnCount(): get (V)  | column (NM) count (N) 	++ :: int (N)  :: param (NM) table (NM) model (NI) 
SPECIAL:NAME:CommandCapability List<String> getIncludes(): get (V)  | includes (N) 	++ :: list (NM) string (NI)  :: command (NM) capability (N) 
BASE_VERB:NAME:WaitableChar void whenEqual(char c, Runnable action): when (V)  | equal (N) 	++ :: [ char (N) - c (N) ] :: [ runnable (N) - action (N) ] :: waitable (NM) char (N) 
SPECIAL:NAME:ChannelDefinition void setJavaClass(String javaClass): set (V)  | java (NM) class (NI) 	++ :: [ string (NI) - java (NM) class (NI) ] :: channel (NM) definition (NI) 
SPECIAL:FORM:DisconnectedHolder void _read(InputStream in): read (V)  | [ input (NM) stream (NI) - in (NI) ]	++ :: disconnected (NM) holder (NI) 
SPECIAL:NAME:TestMergeView void testViewAttachesTo(): test (VI)  | view (NM) attaches (N) to (NM) 	++ :: test (NM) merge (NM) view (NI) 
NOUN_PHRASE:NAME:Archon_Banish String ID(): get (V) | ID (NI) 	++ :: archon (NM) banish (N)  :: string (NI) 
CONSTRUCTOR:NAME:ArmMetricCounter64DefinitionImpl ArmMetricCounter64DefinitionImpl ArmMetricCounter64DefinitionImpl(ArmID id, ArmTransactionFactory creatingFactory):  | arm (NM) metric (NM) counter (NM) 64 (NM) definition (NM) impl (NI) 	++ :: [ arm (NM) ID (NI) - id (NI) ] :: [ arm (NM) transaction (NM) factory (N) - creating (NM) factory (N) ]
CONSTRUCTOR:NAME:GUIDRoutingTable GUIDRoutingTable GUIDRoutingTable(long lifetime):  | GUID (NM) routing (NM) table (N) 	++ :: [ long (N) - lifetime (N) ]
BASE_VERB:NAME:TransMngPromote boolean recoverTransaction(int nState): recover (V)  | transaction (N) 	++ :: [ int (N) - n (NM) state (N) ] :: boolean (N)  :: trans (NM) mng (NM) promote (N) 
ENDS_WITH_ED:NAME:void actionPerformed(ActionEvent e): handle (V) | action (NM) performed (N) 	++ :: [ action (NM) event (NI) - e (N) ] :: ANONYMOUS (N)  :: void (N) 
SPECIAL:FORM:PartnerCrudAction ForwardAndMessage doCreate(PartnerDTOEx dto): do (VI) create (V)  | [ partner (NM) DTO (NM) ex (N) - dto (NI) ]	++ :: partner (NM) crud (NM) action (N)  :: forward (NM) and (NM) message (NI) 
ED_VERB:NAME:BlockWidget boolean selectedInput(String inputName): selected (V)  | EQUIV[input (NI) , [ string (NI) - input (NM) name (NI) ]]	++ :: boolean (N)  :: block (NM) widget (N) 
CONSTRUCTOR:NAME:Range Range Range(Comparable lower, Comparable upper):  | range (N) 	++ :: [ comparable (N) - lower (N) ] :: [ comparable (N) - upper (N) ]
BASE_VERB:NAME:KaboumGGDIndex void reconstructVisibleGeometries(): reconstruct (V)  | visible (NM) geometries (N) 	++ :: kaboum (NM) GGD (NM) index (NI) 
CONSTRUCTOR:NAME:ClientShell_vacuum ClientShell_vacuum ClientShell_vacuum(ClientShell shell):  | client (NM) shell (NM) vacuum (N) 	++ :: [ client (NM) shell (N) - shell (N) ]
SPECIAL:NAME:DroplistValueSearch int getMaxRowPerPage(): get (V)  | max (NM) row (N) -- per (P) page (N) 	++ :: int (N)  :: droplist (NM) value (NM) search (N) 
NOUN_PHRASE:NAME:JDK14PreferencesConfigurationFactory static String nodeName(Class c): get (V) | node (NM) name (NI) 	++ :: [ class (NI) - c (N) ] :: JDK (NM) 14 (NM) preferences (NM) configuration (NM) factory (N)  :: string (NI) 
SPECIAL:NAME:TileAnalyzeCapture void addChecksum(String checksum): add (V)  | EQUIV[checksum (N) , [ string (NI) - checksum (N) ]]	++ :: tile (NM) analyze (NM) capture (N) 
ENDS_WITH_ED:NAME:InterfacePanel void treeNodesChanged(TreeModelEvent e): handle (V) | tree (NM) nodes (NM) changed (N) 	++ :: [ tree (NM) model (NM) event (NI) - e (N) ] :: interface (NM) panel (N)  :: void (N) 
SPECIAL:FORM:SequenceValueGenerator void reset(int initialValue): reset (V)  | [ int (N) - initial (NM) value (NI) ]	++ :: sequence (NM) value (NM) generator (N) 
CONSTRUCTOR:NAME:DefaultWindDatasetTests DefaultWindDatasetTests DefaultWindDatasetTests(String name):  | default (NM) wind (NM) dataset (NM) tests (N) 	++ :: [ string (NI) - name (NI) ]
SPECIAL:NAME:NuevaPreguntaPresentation String getHTMLPosterior(): get (V)  | HTML (NM) posterior (N) 	++ :: string (NI)  :: nueva (NM) pregunta (NM) presentation (N) 
SPECIAL:NAME:DebugIrcdConfiguration NameNormalizer getServerNormalizer(): get (V)  | server (NM) normalizer (N) 	++ :: name (NM) normalizer (N)  :: debug (NM) ircd (NM) configuration (NI) 
BASE_VERB:NAME:DrawStringdemo void handleCombo2Change(): handle (VI)  | combo (NM) 2 (D) change (N) 	++ :: draw (NM) stringdemo (N) 
SPECIAL:NAME:VFieldUI VCommand getAllCommands(): get (V)  | all (DT) commands (N) 	++ :: V (NM) command (N)  :: V (NM) field (NM) UI (N) 
CONSTRUCTOR:NAME:SumExpression SumExpression SumExpression():  | sum (NM) expression (N) 	++
SPECIAL:NAME:CopyRefactoring IChange createChange(IProgressMonitor pm, IPackageFragmentRoot root): create (V)  | change (N) 	++ :: [ I (NM) progress (NM) monitor (N) - pm (N) ] :: [ I (NM) package (NM) fragment (NM) root (N) - root (N) ] :: I (NM) change (N)  :: copy (NM) refactoring (N) 
SPECIAL:FORM:BaseAgPictPeer static void doDelete(AgPict obj, Connection con): do (VI) delete (V)  | [ ag (NM) pict (N) - obj (NI) ]	++ :: [ connection (N) - con (N) ] :: base (NM) ag (NM) pict (NM) peer (N) 
CONSTRUCTOR:NAME:JobQuotaPeriod JobQuotaPeriod JobQuotaPeriod(int value):  | job (NM) quota (NM) period (N) 	++ :: [ int (N) - value (NI) ]
SPECIAL:NAME:FC GlobalContext getGlobalContext(): get (V)  | global (NM) context (N) 	++ :: global (NM) context (N)  :: FC (N) 
SPECIAL:NAME:Entry Object getKey(): get (V)  | key (NI) 	++ :: object (NI)  :: entry (NI) 
SPECIAL:NAME:ASTEmptyVisitor void endVisit(ContinueStatement node): end (V)  | visit (N) 	++ :: [ continue (NM) statement (NI) - node (NI) ] :: AST (NM) empty (NM) visitor (N) 
SPECIAL:NAME:NewWizardMessages static String getFormattedString(String key, Object arg): get (V)  | EQUIV[formatted (NM) string (NI) , [ string (NI) - key (NI) ]]	++ :: [ object (NI) - arg (N) ] :: string (NI)  :: new (NM) wizard (NM) messages (N) 
CONSTRUCTOR:NAME:InvalidCFGFileException InvalidCFGFileException InvalidCFGFileException():  | invalid (NM) CFG (NM) file (NM) exception (N) 	++
BASE_VERB:NAME:ConstructNFA void outADecChar(ADecChar node): out (V)  | EQUIV[A (NM) dec (NM) char (N) , [ A (NM) dec (NM) char (N) - node (NI) ]]	++ :: construct (NM) NFA (N) 
SPECIAL:NAME:MIFStringTokenizer String getLine(): get (V)  | line (N) 	++ :: string (NI)  :: MIF (NM) string (NM) tokenizer (N) 
SPECIAL:FORM:Filter2IndexMapping void add(IndexFilterTuple tup): add (V)  | [ index (NM) filter (NM) tuple (N) - tup (N) ]	++ :: filter (NM) 2 (NM) index (NM) mapping (N) 
BASE_VERB:NAME:ViewBitziTicketAction void refreshActionState(): refresh (V)  | action (NM) state (N) 	++ :: view (NM) bitzi (NM) ticket (NM) action (N) 
BASE_VERB:NAME:cpeDescriptionFactory deploymentParameters createdeploymentParameters(String elementName): createdeployment (V)  | parameters (N) 	++ :: [ string (NI) - element (NM) name (NI) ] :: deployment (NM) parameters (N)  :: cpe (NM) description (NM) factory (N) 
BASE_VERB:NAME:Intermediate String selectKey(String _sUsername): select (V)  | key (NI) 	++ :: [ string (NI) - s (NM) username (N) ] :: string (NI)  :: intermediate (N) 
SPECIAL:NAME:MboxStoreImpl Folder getFolder(URLName urlname): get (V)  | folder (N) 	++ :: [ URL (NM) name (NI) - urlname (N) ] :: folder (N)  :: mbox (NM) store (NM) impl (NI) 
V_3P_IRR:NAME:boolean isAssignable(Class clazz): is (V)  | assignable (N) 	++ :: [ class (NI) - clazz (N) ] :: boolean (N)  :: ANONYMOUS (N) 
SPECIAL:NAME:GenericParserTest void testIntegers(): test (VI)  | integers (N) 	++ :: generic (NM) parser (NM) test (N) 
NOUN_PHRASE:NAME:KeySet Iterator iterator(): get (V) | iterator (N) 	++ :: key (NM) set (N)  :: iterator (N) 
SPECIAL:NAME:DocLine_Material int getC_UOM_ID(): get (V)  | C (NM) UOM (NM) ID (NI) 	++ :: int (N)  :: doc (NM) line (NM) material (N) 
V_3P_IRR:NAME:SenderCompanyImpl boolean isSetFixed(): is (V)  | set (NM) fixed (N) 	++ :: boolean (N)  :: sender (NM) company (NM) impl (NI) 
CONSTRUCTOR:NAME:HttpProxyContext HttpProxyContext HttpProxyContext():  | http (NM) proxy (NM) context (N) 	++
UNKOWN: :StorableProxy OID $jso$OID():
SPECIAL:NAME:AbstractDOMParser void setCharacterData(boolean sawChars): set (V)  | character (NM) data (NI) 	++ :: [ boolean (N) - saw (NM) chars (N) ] :: abstract (NM) DOM (NM) parser (N) 
CONSTRUCTOR:NAME:Filter Filter Filter(String extension, String description):  | filter (N) 	++ :: [ string (NI) - extension (N) ] :: [ string (NI) - description (NI) ]
BASE_VERB:NAME:JavaParser static void ClassBodyDeclaration(): class (V)  | body (NM) declaration (NI) 	++ :: java (NM) parser (N) 
SPECIAL:NAME:ScopeSelector Scope getScope(): get (V)  | scope (N) 	++ :: scope (N)  :: scope (NM) selector (N) 
SPECIAL:NAME:DefaultUniversalFormatter void setLongFormatter(LongFormatter formatter): set (V)  | long (NM) formatter (N) 	++ :: [ long (NM) formatter (N) - formatter (N) ] :: default (NM) universal (NM) formatter (N) 
BASE_VERB:FORM:Log4jImpl void warn(Object source, String message): warn (V)  | [ object (NI) - source (NI) ]	++ :: [ string (NI) - message (NI) ] :: log (NM) 4 (NM) j (NM) impl (NI) 
SPECIAL:NAME:TForAll void setText(String text): set (V)  | text (NI) 	++ :: [ string (NI) - text (NI) ] :: T (NM) for (NM) all (DT) 
CONSTRUCTOR:NAME:ASTSymbolList ASTSymbolList ASTSymbolList(int id):  | AST (NM) symbol (NM) list (N) 	++ :: [ int (N) - id (NI) ]
SPECIAL:NAME:BaseAgAgenda void setTypeId(short v): set (V)  | type (NM) id (NI) 	++ :: [ short (N) - v (N) ] :: base (NM) ag (NM) agenda (N) 
ENDS_WITH_ED:NAME:void actionPerformed(ActionEvent e): handle (V) | action (NM) performed (N) 	++ :: [ action (NM) event (NI) - e (N) ] :: ANONYMOUS (N)  :: void (N) 
CONSTRUCTOR:NAME:XmlWriter XmlWriter XmlWriter():  | xml (NM) writer (N) 	++
SPECIAL:NAME:Type String getType(): get (V)  | type (N) 	++ :: string (NI)  :: type (N) 
SPECIAL:NAME:DBClearerTest void createTestDatabase(): create (V)  | test (NM) database (N) 	++ :: DB (NM) clearer (NM) test (N) 
SPECIAL:NAME:LogEntry void setVerifyResult(String result): set (V)  | verify (NM) result (N) 	++ :: [ string (NI) - result (N) ] :: log (NM) entry (NI) 
SPECIAL:NAME:NoRelatedSym RepurchaseTerm getRepurchaseTerm(): get (V)  | repurchase (NM) term (N) 	++ :: repurchase (NM) term (N)  :: no (DT) related (NM) sym (N) 
VOID_NP:NAME:DoRIO static void errorInCommandLine(): handle (V) | error (NM) in (NM) command (NM) line (N) 	++ :: do (NM) RIO (N)  :: void (N) 
NOUN_PHRASE:NAME:OperationNoLabel String messageName(): get (V) | message (NM) name (NI) 	++ :: operation (NM) no (DT) label (NI)  :: string (NI) 
VOID_NP:NAME:LmpStation void dataRequest(LmpFrame frame): handle (V) | data (NM) request (N) 	++ :: [ lmp (NM) frame (N) - frame (N) ] :: lmp (NM) station (N)  :: void (N) 
SPECIAL:NAME:XSLStylesheet void addImportedSchema(String targetNamespace): add (V)  | imported (NM) schema (N) 	++ :: [ string (NI) - target (NM) namespace (N) ] :: XSL (NM) stylesheet (N) 
PREP:NAME:AIterateArrowPropertyCallExpCs String toString(): convert (V) | to (P) string (NI) 	++ :: A (NM) iterate (NM) arrow (NM) property (NM) call (NM) exp (NM) cs (N)  :: string (NI) 
SPECIAL:CLAS:MovePageResponderTest void setUp(): set (V) up (VP)  | move (NM) page (NM) responder (NM) test (N) 	++
CONSTRUCTOR:NAME:XMLUtils XMLUtils XMLUtils():  | XML (NM) utils (N) 	++
SPECIAL:NAME:LookupTag void setDisplayformatlocalekey(String string): set (V)  | displayformatlocalekey (N) 	++ :: [ string (NI) - string (NI) ] :: lookup (NM) tag (NI) 
BASE_VERB:CLAS:ClosedEvent void close(): close (V)  | closed (NM) event (NI) 	++
SPECIAL:NAME:EnumIterator Enumeration getEnumeration(): get (V)  | enumeration (N) 	++ :: enumeration (N)  :: enum (NM) iterator (N) 
CONSTRUCTOR:NAME:OneWireContainer37 OneWireContainer37 OneWireContainer37(DSPortAdapter sourceAdapter, String newAddress):  | one (NM) wire (NM) container (NM) 37 (N) 	++ :: [ DS (NM) port (NM) adapter (NI) - source (NM) adapter (NI) ] :: [ string (NI) - new (NM) address (NI) ]
SPECIAL:NAME:CDLabelPrinter Printable getPrintable(int pageIndex): get (V)  | printable (N) 	++ :: [ int (N) - page (NM) index (NI) ] :: printable (N)  :: CD (NM) label (NM) printer (N) 
SPECIAL:NAME:VariableProperties void pushNewVariablePropertiesTuple(VariablePropertiesTuple variablePropertiesTuple): push (V)  | EQUIV[new (NM) variable (NM) properties (NM) tuple (N) , [ variable (NM) properties (NM) tuple (N) - variable (NM) properties (NM) tuple (N) ]]	++ :: variable (NM) properties (N) 
SPECIAL:CLAS:FormEvents void setOnChange(String script): set (V)  | form (NM) events (N) -- on (P) change (N) 	++ :: [ string (NI) - script (N) ]
CONSTRUCTOR:NAME:MotionGroup MotionGroup MotionGroup():  | motion (NM) group (N) 	++
ENDS_WITH_ED:NAME:Listener void contextInitialized(ServletContextEvent sce): handle (V) | context (NM) initialized (N) 	++ :: [ servlet (NM) context (NM) event (NI) - sce (N) ] :: listener (N)  :: void (N) 
CONSTRUCTOR:NAME:Output Output Output(int width):  | output (N) 	++ :: [ int (N) - width (N) ]
SPECIAL:NAME:SimsbillingitemBean Long getApprovecharge(): get (V)  | approvecharge (N) 	++ :: long (N)  :: simsbillingitem (NM) bean (NI) 
CONSTRUCTOR:NAME:inetConnection inetConnection inetConnection(int code, String name):  | inet (NM) connection (N) 	++ :: [ int (N) - code (NI) ] :: [ string (NI) - name (NI) ]
SPECIAL:NAME:AdminServlet void setFileName(): set (V)  | file (NM) name (NI) 	++ :: admin (NM) servlet (N) 
NOUN_PHRASE:NAME:SubjectParser int messageParts(): get (V) | message (NM) parts (N) 	++ :: subject (NM) parser (N)  :: int (N) 
SPECIAL:NAME:MyVtableServer IUnknown getFirstChildWithCLSID(GUID aCLSID): get (V)  | first (NM) child (N) -- with (P) EQUIV[CLSID (N) , [ GUID (N) - a (NM) CLSID (N) ]]	++ :: I (NM) unknown (N)  :: my (PR) vtable (NM) server (N) 
SPECIAL:NAME:Plugin JMenu getMenu(): get (V)  | menu (N) 	++ :: J (NM) menu (N)  :: plugin (N) 
EMPTY:NONE:GTDLParser boolean jj_2_23(int xla):  | jj (PRE) 2 (D) 23 (D) 
SPECIAL:NAME:GifDecoder int getLoopCount(): get (V)  | loop (NM) count (N) 	++ :: int (N)  :: gif (NM) decoder (N) 
PREP:NAME:void onClick(Widget w): handle (V) | on (NM) click (N) 	++ :: [ widget (N) - w (N) ] :: ANONYMOUS (N)  :: void (N) 
BASE_VERB:NAME:WeightDescription Attribute str2Att(String weight): str (V)  | 2 (D) att (N) 	++ :: [ string (NI) - weight (N) ] :: attribute (N)  :: weight (NM) description (NI) 
BASE_VERB:NAME:CPlayerObject3D void selectFirstItem(): select (V)  | first (NM) item (NI) 	++ :: C (NM) player (NM) object (NM) 3 (NM) D (N) 
CONSTRUCTOR:NAME:NotContextException NotContextException NotContextException(String msg):  | not (DT) context (NM) exception (N) 	++ :: [ string (NI) - msg (NI) ]
BASE_VERB:CLAS:SWFActionBlock void multiply(): multiply (V)  | SWF (NM) action (NM) block (N) 	++
BASE_VERB:NAME:TStatusLine void updateSortingDirectionLabel(): update (V)  | sorting (NM) direction (NM) label (NI) 	++ :: T (NM) status (NM) line (N) 
SPECIAL:NAME:OutServe Object getParent(): get (V)  | parent (N) 	++ :: object (NI)  :: out (NM) serve (N) 
CONSTRUCTOR:NAME:COWSubList COWSubList COWSubList(CopyOnWriteArrayList list, int fromIndex, int toIndex):  | COW (NM) sub (NM) list (N) 	++ :: [ copy (NM) on (NM) write (NM) array (NM) list (N) - list (N) ] :: [ int (N) - from (NM) index (NI) ] :: [ int (N) - to (NM) index (NI) ]
BASE_VERB:NAME:GameCommandListener void CloseCommands(): close (V)  | commands (N) 	++ :: game (NM) command (NM) listener (N) 
SPECIAL:NAME:ReferenceManager void setDefaultInCollectionDetailView(): set (V)  | default (N) -- in (P) collection (NM) detail (NM) view (NI) 	++ :: reference (NM) manager (N) 
ENDS_WITH_ED:NAME:EditingDuration void unsetFixed(): handle (V) | unset (NM) fixed (N) 	++ :: editing (NM) duration (N)  :: void (N) 
PREP:NAME:BBNCPF String toString(): convert (V) | to (P) string (NI) 	++ :: BBNCPF (N)  :: string (NI) 
SPECIAL:NAME:Date long getTime(): get (V)  | time (N) 	++ :: long (N)  :: date (N) 
BASE_VERB:CLAS:Score void normalizeTo(double highScore): normalize (V)  | score (N) -- to (P) [ double (N) - high (NM) score (N) ]	++ :: [ double (N) - high (NM) score (N) ]
CONSTRUCTOR:NAME:CancelButton CancelButton CancelButton(Icon icon):  | cancel (NM) button (N) 	++ :: [ icon (N) - icon (N) ]
SPECIAL:NAME:ContainerConfig String getEmail(): get (V)  | email (N) 	++ :: string (NI)  :: container (NM) config (NI) 
SPECIAL:NAME:MockMessage void setJMSCorrelationID(String correlationId): set (V)  | JMS (NM) correlation (NM) ID (NI) 	++ :: [ string (NI) - correlation (NM) id (NI) ] :: mock (NM) message (NI) 
BASE_VERB:NAME:FileParser void parseUnavailable(String buffer): parse (V)  | unavailable (N) 	++ :: [ string (NI) - buffer (NI) ] :: file (NM) parser (N) 
SPECIAL:NAME:Parameter void setName(String name): set (V)  | name (NI) 	++ :: [ string (NI) - name (NI) ] :: parameter (N) 
BASE_VERB:NAME:Preferences static boolean dontShowImages(): dont (PRE) show (V)  | images (N) 	++ :: boolean (N)  :: preferences (N) 
SPECIAL:FORM:StatementWrapper boolean execute(String sql, int autoGeneratedKeys): execute (VI)  | [ string (NI) - sql (N) ]	++ :: [ int (N) - auto (NM) generated (NM) keys (N) ] :: statement (NM) wrapper (NI)  :: boolean (N) 
CONSTRUCTOR:NAME:UserConfig UserConfig UserConfig():  | user (NM) config (NI) 	++
SPECIAL:NAME:StatusBar static long getCPtr(StatusBar obj): get (V)  | C (NM) ptr (N) 	++ :: [ status (NM) bar (N) - obj (NI) ] :: long (N)  :: status (NM) bar (N) 
SPECIAL:FORM:ECKeyPairGenerator void init(KeyGenerationParameters param): init (V)  | [ key (NM) generation (NM) parameters (N) - param (N) ]	++ :: EC (NM) key (NM) pair (NM) generator (N) 
CONSTRUCTOR:NAME:ConstSFTime ConstSFTime ConstSFTime(SFTime time):  | const (NM) SF (NM) time (N) 	++ :: [ SF (NM) time (N) - time (N) ]
SPECIAL:NAME:EnvEntryForm boolean getOverride(): get (V)  | override (N) 	++ :: boolean (N)  :: env (NM) entry (NM) form (N) 
SPECIAL:NAME:WSDkeyboard void setKey(int arg0): set (V)  | key (NI) 	++ :: [ int (N) - arg (NM) 0 (N) ] :: WS (NM) dkeyboard (N) 
BASE_VERB:FORM:MockIterationValidator void acceptValidate(Object p0_Object, Throwable toThrow): accept (VI) validate (VI)  | [ object (NI) - p (NM) 0 (NM) object (NI) ]	++ :: [ throwable (N) - to (NM) throw (N) ] :: mock (NM) iteration (NM) validator (N) 
SPECIAL:NAME:MExpressionParameter void setClazz(Class clazz): set (V)  | clazz (N) 	++ :: [ class (NI) - clazz (N) ] :: M (NM) expression (NM) parameter (N) 
VOID_NP:NAME:QFileEvent void actualOpenProject(String fileName): handle (V) | actual (NM) open (NM) project (N) 	++ :: [ string (NI) - file (NM) name (NI) ] :: Q (NM) file (NM) event (NI)  :: void (N) 
SPECIAL:NAME:PrimitiveTypeNameEditPart Image getLabelIconHelper(IFigure figure): get (V)  | label (NM) icon (NM) helper (N) 	++ :: [ I (NM) figure (N) - figure (N) ] :: image (N)  :: primitive (NM) type (NM) name (NM) edit (NM) part (N) 
CONSTRUCTOR:NAME:_CC_ _CC_ _CC_():  | CC (N) 	++
CONSTRUCTOR:NAME:IFLT IFLT IFLT():  | IFLT (N) 	++
BASE_VERB:FORM:InterruptingSignalHandler void handle(Signal sig): handle (VI)  | [ signal (N) - sig (N) ]	++ :: interrupting (NM) signal (NM) handler (N) 
V_3PS:NAME:Namespace boolean containsDiagram(Diagram diagram1): contains (V)  | EQUIV[diagram (N) , [ diagram (N) - diagram (NM) 1 (N) ]]	++ :: boolean (N)  :: namespace (N) 
CONSTRUCTOR:NAME:Toolbar Toolbar Toolbar(GlyphEdit edit):  | toolbar (N) 	++ :: [ glyph (NM) edit (N) - edit (N) ]
SPECIAL:NAME:OtterTagHandler String getLeafName(): get (V)  | leaf (NM) name (NI) 	++ :: string (NI)  :: otter (NM) tag (NM) handler (N) 
SPECIAL:CLAS:void run(): run (VI)  | ANONYMOUS (N) 	++
SPECIAL:NAME:TransactionPointer Throwable getThrownException(): get (V)  | thrown (NM) exception (N) 	++ :: throwable (N)  :: transaction (NM) pointer (N) 
BASE_VERB:NAME:EventQueue static void invokeLater(Runnable runnable): invoke (VI)  | later (N) 	++ :: [ runnable (N) - runnable (N) ] :: event (NM) queue (N) 
BASE_VERB:NAME:JtdsResultSet void updateTimestamp(String columnName, Timestamp x): update (V)  | EQUIV[timestamp (N) , [ timestamp (N) - x (N) ]]	++ :: [ string (NI) - column (NM) name (NI) ] :: jtds (NM) result (NM) set (N) 
NOUN_PHRASE:NAME:DatabaseMetaData boolean nullsAreSortedAtStart(): get (V) | nulls (NM) are (NM) sorted (NM) at (NM) start (N) 	++ :: database (NM) meta (NM) data (NI)  :: boolean (N) 
SPECIAL:FORM:Servidor_Puzzlex_Tcp static void main(String args): main (V)  | [ string (NI) - args (N) ]	++ :: servidor (NM) puzzlex (NM) tcp (N) 
SPECIAL:NAME:BookForm void setAuthors(ArrayList authors): set (V)  | authors (N) 	++ :: [ array (NM) list (N) - authors (N) ] :: book (NM) form (N) 
SPECIAL:NAME:SplitPanel void setGapWidth(int i): set (V)  | gap (NM) width (N) 	++ :: [ int (N) - i (N) ] :: split (NM) panel (N) 
BASE_VERB:NAME:JavaLibrary Signature parseArg(Object objs): parse (V)  | arg (N) 	++ :: [ object (NI) - objs (N) ] :: signature (N)  :: java (NM) library (N) 
SPECIAL:NAME:CombinedDomainXYPlot XYPlot findSubplot(PlotRenderingInfo info, Point2D source): find (V)  | subplot (N) 	++ :: [ plot (NM) rendering (NM) info (NI) - info (NI) ] :: [ point (NM) 2 (NM) D (N) - source (NI) ] :: XY (NM) plot (N)  :: combined (NM) domain (NM) XY (NM) plot (N) 
V_3P_IRR:NAME:DataSM boolean hasSourcePort(): has (V)  | source (NM) port (N) 	++ :: boolean (N)  :: data (NM) SM (N) 
SPECIAL:NAME:LauncherView void addReport(JPanel panel, String title, int width, int height): add (V)  | report (N) 	++ :: [ J (NM) panel (N) - panel (N) ] :: [ string (NI) - title (N) ] :: [ int (N) - width (N) ] :: [ int (N) - height (N) ] :: launcher (NM) view (NI) 
V_3P_IRR:NAME:CSwitchBodyContext boolean isBreakTarget(): is (V)  | break (NM) target (N) 	++ :: boolean (N)  :: C (NM) switch (NM) body (NM) context (N) 
SPECIAL:CLAS:TimeSheetServices static TimeSheet findByPrimaryKeyGeneric(GenericDelegator delegator, String idNumber, boolean cache): find (V)  | time (NM) sheet (NM) services (N) -- by (P) primary (NM) key (NM) generic (N) 	++ :: [ generic (NM) delegator (N) - delegator (N) ] :: [ string (NI) - id (NM) number (NI) ] :: [ boolean (N) - cache (N) ] :: time (NM) sheet (N) 
SPECIAL:NAME:DAVUpdateHandler FSTranslateReporter getReporter(): get (V)  | reporter (N) 	++ :: FS (NM) translate (NM) reporter (N)  :: DAV (NM) update (NM) handler (N) 
CONSTRUCTOR:NAME:MailDBCSV MailDBCSV MailDBCSV(MailRecord rec):  | mail (NM) DBCSV (N) 	++ :: [ mail (NM) record (N) - rec (N) ]
CONSTRUCTOR:NAME:TPM_STRUCT_VER TPM_STRUCT_VER TPM_STRUCT_VER():  | TPM (NM) STRUCT (NM) VER (N) 	++
ED_VERB:NAME:ManageCompletedWebsiteRequests NSArray completedRequests(): completed (V)  | requests (N) 	++ :: NS (NM) array (N)  :: manage (NM) completed (NM) website (NM) requests (N) 
SPECIAL:NAME:MsgResults void setReceipt(int receipt): set (V)  | receipt (N) 	++ :: [ int (N) - receipt (N) ] :: msg (NM) results (N) 
SPECIAL:NAME:UpdateRulesRI OrchestrationAchieveGoal createOrchestrationAchieveGoal(IRI perform, Goal goal): create (V)  | EQUIV[orchestration (NM) achieve (NM) goal (N) , [ goal (N) - goal (N) ]]	++ :: [ IRI (N) - perform (N) ] :: orchestration (NM) achieve (NM) goal (N)  :: update (NM) rules (NM) RI (N) 
BASE_VERB:CLAS:MapRangeBox void destroy(): destroy (V)  | map (NM) range (NM) box (N) 	++
ENDS_WITH_ED:NAME:void actionPerformed(ActionEvent e): handle (V) | action (NM) performed (N) 	++ :: [ action (NM) event (NI) - e (N) ] :: ANONYMOUS (N)  :: void (N) 
NOUN_PHRASE:NAME:Demon int shortestMale(): get (V) | shortest (NM) male (N) 	++ :: demon (N)  :: int (N) 
ENDS_WITH_ED:NAME:MainFace void windowOpened(WindowEvent e): handle (V) | window (NM) opened (N) 	++ :: [ window (NM) event (NI) - e (N) ] :: main (NM) face (N)  :: void (N) 
CONSTRUCTOR:NAME:RefondeDialogPanneau RefondeDialogPanneau RefondeDialogPanneau(Dialog _parent):  | refonde (NM) dialog (NM) panneau (N) 	++ :: [ dialog (N) - parent (N) ]
SPECIAL:NAME:CSS2PropertiesImpl String getBorderTopColor(): get (V)  | border (NM) top (NM) color (N) 	++ :: string (NI)  :: CSS (NM) 2 (NM) properties (NM) impl (NI) 
SPECIAL:NAME:StringAppender2 void setLength(int newLength): set (V)  | length (N) 	++ :: [ int (N) - new (NM) length (N) ] :: string (NM) appender (NM) 2 (N) 
SPECIAL:NAME:LookupListBean String getValuesSorted(int nDisguiseId, int nBucketId, int nFieldId): get (V)  | values (NM) sorted (N) 	++ :: [ int (N) - n (NM) disguise (NM) id (NI) ] :: [ int (N) - n (NM) bucket (NM) id (NI) ] :: [ int (N) - n (NM) field (NM) id (NI) ] :: string (NI)  :: lookup (NM) list (NM) bean (NI) 
CONSTRUCTOR:NAME:SymbolTable SymbolTable SymbolTable():  | symbol (NM) table (N) 	++
SPECIAL:CLAS:ShortInputStream int read(): read (V)  | short (NM) input (NM) stream (NI) 	++ :: int (N) 
CONSTRUCTOR:NAME:PolarPlotTests PolarPlotTests PolarPlotTests(String name):  | polar (NM) plot (NM) tests (N) 	++ :: [ string (NI) - name (NI) ]
SPECIAL:CLAS:DefaultTeam Object clone(): clone (V)  | default (NM) team (N) 	++ :: object (NI) 
V_3P_IRR:NAME:Password boolean isSetTabIndex(): is (V)  | set (NM) tab (NM) index (NI) 	++ :: boolean (N)  :: password (N) 
VOID_NP:NAME:Scanner void unread(char ch): handle (V) | unread (N) 	++ :: [ char (N) - ch (N) ] :: scanner (N)  :: void (N) 
SPECIAL:NAME:DeviceObjectItem int getAssociatedGroupAddresses(): get (V)  | associated (NM) group (NM) addresses (N) 	++ :: int (N)  :: device (NM) object (NM) item (NI) 
CONSTRUCTOR:NAME:FontEncodingEditor FontEncodingEditor FontEncodingEditor():  | font (NM) encoding (NM) editor (N) 	++
CONSTRUCTOR:NAME:StoreTerminal StoreTerminal StoreTerminal(GPConfiguration a_conf, String a_storageName, Class a_childType):  | store (NM) terminal (N) 	++ :: [ GP (NM) configuration (NI) - a (NM) conf (N) ] :: [ string (NI) - a (NM) storage (NM) name (NI) ] :: [ class (NI) - a (NM) child (NM) type (N) ]
NOUN_PHRASE:NAME:String boolean regionMatches(boolean ignoreCase, int toffset, String other, int ooffset, int len): get (V) | region (NM) matches (N) 	++ :: [ boolean (N) - ignore (NM) case (N) ] :: [ int (N) - toffset (N) ] :: [ string (NI) - other (DT) ] :: [ int (N) - ooffset (N) ] :: [ int (N) - len (N) ] :: string (NI)  :: boolean (N) 
BASE_VERB:NAME:SwingSession void initialiseForm(ToolParent theParent): initialise (V)  | form (N) 	++ :: [ tool (NM) parent (N) - the (DT) parent (N) ] :: swing (NM) session (N) 
CONSTRUCTOR:NAME:SAXException SAXException SAXException(String message, Exception e):  | SAX (NM) exception (N) 	++ :: [ string (NI) - message (NI) ] :: [ exception (N) - e (N) ]
V_3PS:NAME:CustomProbabilityDispatcher boolean requiresDetailedProbabilitiesInTranslationTable(): requires (V)  | detailed (NM) probabilities (N) -- in (P) translation (NM) table (N) 	++ :: boolean (N)  :: custom (NM) probability (NM) dispatcher (N) 
SPECIAL:NAME:TestTokenizer void testLongString(): test (VI)  | long (NM) string (NI) 	++ :: test (NM) tokenizer (N) 
BASE_VERB:NAME:CacheDiscovery static CachePeer categorisePeer(byte peer_id, InetAddress ip, int port): categorise (V)  | EQUIV[peer (N) , [ byte (N) - peer (NM) id (NI) ]]	++ :: [ inet (NM) address (NI) - ip (N) ] :: [ int (N) - port (N) ] :: cache (NM) peer (N)  :: cache (NM) discovery (N) 
V_3P_IRR:NAME:Unmod boolean isEmpty(): is (V)  | empty (N) 	++ :: boolean (N)  :: unmod (N) 
SPECIAL:NAME:Object getValue(Object object): get (V)  | value (NI) 	++ :: [ object (NI) - object (NI) ] :: object (NI)  :: ANONYMOUS (N) 
CONSTRUCTOR:NAME:JavaUpperCase JavaUpperCase JavaUpperCase():  | java (NM) upper (NM) case (N) 	++
CONSTRUCTOR:NAME:NewsArticle NewsArticle NewsArticle(String artNUM, String msgID, String date, NewsMaestro NM):  | news (NM) article (N) 	++ :: [ string (NI) - art (NM) NUM (NI) ] :: [ string (NI) - msg (NM) ID (NI) ] :: [ string (NI) - date (N) ] :: [ news (NM) maestro (N) - NM (N) ]
BASE_VERB:NAME:PropertySetPOA OutputStream _OB_op_define_property(InputStream in, ResponseHandler handler): OB (PRE) op (PRE) define (V)  | property (N) 	++ :: [ input (NM) stream (NI) - in (NI) ] :: [ response (NM) handler (N) - handler (N) ] :: output (NM) stream (NI)  :: property (NM) set (NM) POA (N) 
SPECIAL:FORM:PyPropertyDerived void __delete__(PyObject obj): delete (V)  | [ py (NM) object (NI) - obj (NI) ]	++ :: py (NM) property (NM) derived (N) 
SPECIAL:NAME:KafenioPanelConfiguration void setShowToolbar2(boolean b): set (V)  | show (NM) toolbar (N) 2 (D) 	++ :: [ boolean (N) - b (N) ] :: kafenio (NM) panel (NM) configuration (NI) 
SPECIAL:NAME:HotSwapClassWeaver static void resetAll(): reset (V)  | all (DT) 	++ :: hot (NM) swap (NM) class (NM) weaver (N) 
SPECIAL:NAME:JarWizySettingsManager String getAuthorEmail(): get (V)  | author (NM) email (N) 	++ :: string (NI)  :: jar (NM) wizy (NM) settings (NM) manager (N) 
BASE_VERB:NAME:LaTeXFormat StringBuilder formatClassicalMemory(ArrayList<VariableValue> memState): format (V)  | classical (NM) memory (N) 	++ :: [ array (NM) list (NM) variable (NM) value (NI) - mem (NM) state (N) ] :: string (NM) builder (N)  :: la (NM) te (NM) X (NM) format (NI) 
SPECIAL:FORM:LblButton void set(String t): set (V)  | [ string (NI) - t (N) ]	++ :: lbl (NM) button (N) 
NOUN_PHRASE:NAME:FullBuilder GPNode newRootedTree(EvolutionState state, GPType type, int thread, GPNodeParent parent, GPFunctionSet set, int argposition, int requestedSize): get (V) | new (NM) rooted (NM) tree (NI) 	++ :: [ evolution (NM) state (N) - state (N) ] :: [ GP (NM) type (N) - type (N) ] :: [ int (N) - thread (N) ] :: [ GP (NM) node (NM) parent (N) - parent (N) ] :: [ GP (NM) function (NM) set (N) - set (N) ] :: [ int (N) - argposition (N) ] :: [ int (N) - requested (NM) size (N) ] :: full (NM) builder (N)  :: GP (NM) node (NI) 
SPECIAL:NAME:InputRadioButtonTag int doStartInputTag(): do (VI) start (V)  | input (NM) tag (NI) 	++ :: int (N)  :: input (NM) radio (NM) button (NM) tag (NI) 
SPECIAL:NAME:MagneticGridMoverTest void testNearestGridPositionGridSetTo5(): test (VI)  | nearest (NM) grid (NM) position (NM) grid (NM) set (N) -- to (P) 5 (D) 	++ :: magnetic (NM) grid (NM) mover (NM) test (N) 
V_3PS:NAME:TimesTenDialect boolean supportsAlterColumnType(): supports (V)  | alter (NM) column (NM) type (N) 	++ :: boolean (N)  :: times (NM) ten (NM) dialect (N) 
BASE_VERB:NAME:CodecXML static Object parseHtml(Object object, Object control): parse (V)  | html (N) 	++ :: [ object (NI) - object (NI) ] :: [ object (NI) - control (N) ] :: object (NI)  :: codec (NM) XML (N) 
BASE_VERB:NAME:EXTPointParameters static void glPointParameterEXT(int pname, FloatBuffer pfParams): gl (PRE) point (V)  | parameter (NM) EXT (N) 	++ :: [ int (N) - pname (N) ] :: [ float (NM) buffer (NI) - pf (NM) params (N) ] :: EXT (NM) point (NM) parameters (N) 
CONSTRUCTOR:NAME:Consumer Consumer Consumer(String queueName):  | consumer (N) 	++ :: [ string (NI) - queue (NM) name (NI) ]
SPECIAL:NAME:MessageSubject int doStartTag(): do (VI) start (V)  | tag (NI) 	++ :: int (N)  :: message (NM) subject (N) 
SPECIAL:NAME:ObjectNameTuple String getDomain(): get (V)  | domain (N) 	++ :: string (NI)  :: object (NM) name (NM) tuple (N) 
BASE_VERB:NAME:RelationalOperationExpr void showComponents(int n): show (V)  | components (N) 	++ :: [ int (N) - n (N) ] :: relational (NM) operation (NM) expr (NI) 
SPECIAL:NAME:SerUtils static void writeSimpleField(int typeCode, ObjectOutput os, Object toWrite): write (V)  | simple (NM) field (N) 	++ :: [ int (N) - type (NM) code (NI) ] :: [ object (NM) output (N) - os (N) ] :: [ object (NI) - to (NM) write (N) ] :: ser (NM) utils (N) 
SPECIAL:NAME:CharacterDataImplTest void testCharacterDataImpl_deleteData(): test (VI)  | character (NM) data (NM) impl (NM) delete (NM) data (NI) 	++ :: character (NM) data (NM) impl (NM) test (N) 
SPECIAL:NAME:Entry int getPageNumber(): get (V)  | page (NM) number (NI) 	++ :: int (N)  :: entry (NI) 
SPECIAL:NAME:PositionControl void setAllowedError(int err): set (V)  | allowed (NM) error (N) 	++ :: [ int (N) - err (N) ] :: position (NM) control (N) 
SPECIAL:NAME:SceneManager long _getLightsDirtyCounter(): get (V)  | lights (NM) dirty (NM) counter (N) 	++ :: long (N)  :: scene (NM) manager (N) 
SPECIAL:FORM:IChatWriter void write(String aReciever, byte aMessage): write (V)  | [ string (NI) - a (NM) reciever (N) ]	++ :: [ byte (N) - a (NM) message (NI) ] :: I (NM) chat (NM) writer (N) 
SPECIAL:NAME:JavaCharStream char ReadByte(): read (V)  | byte (N) 	++ :: char (N)  :: java (NM) char (NM) stream (NI) 
SPECIAL:NAME:FSDirectory File getFile(): get (V)  | file (NI) 	++ :: file (NI)  :: FS (NM) directory (N) 
BASE_VERB:CLAS:Query void validate(): validate (VI)  | query (N) 	++
SPECIAL:NAME:RoleRight Long getRightID(): get (V)  | right (NM) ID (NI) 	++ :: long (N)  :: role (NM) right (N) 
ENDS_WITH_ED:NAME:void treeCollapsed(TreeExpansionEvent event): handle (V) | tree (NM) collapsed (N) 	++ :: [ tree (NM) expansion (NM) event (NI) - event (NI) ] :: ANONYMOUS (N)  :: void (N) 
BASE_VERB:FORM:ABTIOSiteFileAdjRule IABTValue populate(IABTHashTable args): populate (V)  | [ IABT (NM) hash (NM) table (N) - args (N) ]	++ :: ABTIO (NM) site (NM) file (NM) adj (NM) rule (N)  :: IABT (NM) value (NI) 
SPECIAL:NAME:JRDesignChart void setPadding(Integer padding): set (V)  | padding (N) 	++ :: [ integer (N) - padding (N) ] :: JR (NM) design (NM) chart (N) 
SPECIAL:NAME:Configuration boolean getCreateWriter(): get (V)  | create (NM) writer (N) 	++ :: boolean (N)  :: configuration (NI) 
BASE_VERB:NAME:PHPEditor void configureSourceViewerDecorationSupport(): configure (V)  | source (NM) viewer (NM) decoration (NM) support (N) 	++ :: PHP (NM) editor (N) 
CONSTRUCTOR:NAME:CategoryStepRenderer CategoryStepRenderer CategoryStepRenderer(boolean stagger):  | category (NM) step (NM) renderer (N) 	++ :: [ boolean (N) - stagger (N) ]
SPECIAL:NAME:Product String getBusinessableName(): get (V)  | businessable (NM) name (NI) 	++ :: string (NI)  :: product (N) 
BASE_VERB:CLAS:SubcollectionIndexManager void destroy(): destroy (V)  | subcollection (NM) index (NM) manager (N) 	++
BASE_VERB:CLAS:RepastConsole void dispose(): dispose (V)  | repast (NM) console (N) 	++
SPECIAL:NAME:HandlerChainImpl boolean addAll(int index, Collection col): add (V)  | all (DT) 	++ :: [ int (N) - index (NI) ] :: [ collection (N) - col (N) ] :: boolean (N)  :: handler (NM) chain (NM) impl (NI) 
SPECIAL:NAME:ExceptionTest void testValid(): test (VI)  | valid (N) 	++ :: exception (NM) test (N) 
BASE_VERB:CLAS:AnimationState boolean animate(): animate (V)  | animation (NM) state (N) 	++ :: boolean (N) 
SPECIAL:NAME:Customer String getName(): get (V)  | name (NI) 	++ :: string (NI)  :: customer (N) 
BASE_VERB:FORM:TestRegistry RegisteredTest register(Test test): register (V)  | [ test (N) - test (N) ]	++ :: test (NM) registry (N)  :: registered (NM) test (N) 
SPECIAL:FORM:AbstractIntList int add(int index, int source, int fromIndex, int toIndex): add (V)  | [ int (N) - index (NI) ]	++ :: [ int (N) - source (NI) ] :: [ int (N) - from (NM) index (NI) ] :: [ int (N) - to (NM) index (NI) ] :: abstract (NM) int (NM) list (N)  :: int (N) 
BASE_VERB:NAME:BentoParser static void parseFile(File file): parse (V)  | EQUIV[file (NI) , [ file (NI) - file (NI) ]]	++ :: bento (NM) parser (N) 
PREP:NAME:JdbcDriverRecord String toString(): convert (V) | to (P) string (NI) 	++ :: jdbc (NM) driver (NM) record (N)  :: string (NI) 
SPECIAL:NAME:DatasetLink void addAttributeLink(AttributeLink obj): add (V)  | EQUIV[attribute (NM) link (N) , [ attribute (NM) link (N) - obj (NI) ]]	++ :: dataset (NM) link (N) 
SPECIAL:NAME:PrefsModel String getPluginPreference(String key): get (V)  | plugin (NM) preference (N) 	++ :: [ string (NI) - key (NI) ] :: string (NI)  :: prefs (NM) model (NI) 
SPECIAL:NAME:AddAccountPanel void initGUI(): init (V)  | GUI (N) 	++ :: add (NM) account (NM) panel (N) 
SPECIAL:NAME:AnnotDiffDialog String getSelectedResponseAnnotationSetName(): get (V)  | selected (NM) response (NM) annotation (NM) set (NM) name (NI) 	++ :: string (NI)  :: annot (NM) diff (NM) dialog (N) 
SPECIAL:NAME:BooleanStyleImpl XmlString addNewText(): add (V)  | new (NM) text (NI) 	++ :: xml (NM) string (NI)  :: boolean (NM) style (NM) impl (NI) 
SPECIAL:NAME:PictureType void setBinDataArray(int i, BinDataType binData): set (V)  | bin (NM) data (NM) array (N) 	++ :: [ int (N) - i (N) ] :: [ bin (NM) data (NM) type (N) - bin (NM) data (NI) ] :: picture (NM) type (N) 
SPECIAL:FORM:ServerTCPSocketTransport void initialize(Properties properties, int id): initialize (V)  | [ properties (N) - properties (N) ]	++ :: [ int (N) - id (NI) ] :: server (NM) TCP (NM) socket (NM) transport (N) 
BASE_VERB:FORM:DatagramSocket void connect(InetAddress address, int port): connect (V)  | [ inet (NM) address (NI) - address (NI) ]	++ :: [ int (N) - port (N) ] :: datagram (NM) socket (N) 
SPECIAL:FORM:SourceStruct Variant Copy(Variant End, Variant Start, Variant Target): copy (V)  | [ variant (N) - end (N) ]	++ :: [ variant (N) - start (N) ] :: [ variant (N) - target (N) ] :: source (NM) struct (N)  :: variant (N) 
EMPTY:NONE:IDL boolean jj_3R_91():  | jj (PRE) 3 (D) R (PRE) 91 (D) 
CONSTRUCTOR:NAME:Rijndael Rijndael Rijndael():  | rijndael (N) 	++
BASE_VERB:NAME:BeanToXml static String convertClassToElementName(Class nodeClass, PropertyStyle style): convert (V)  | EQUIV[class (NI) , [ class (NI) - node (NM) class (NI) ]]-- to (P) element (NM) name (NI) 	++ :: [ property (NM) style (N) - style (N) ] :: string (NI)  :: bean (NM) to (NM) xml (N) 
CONSTRUCTOR:NAME:JDBCConnectionFactory JDBCConnectionFactory JDBCConnectionFactory():  | JDBC (NM) connection (NM) factory (N) 	++
SPECIAL:NAME:MyXMLHandler void startElement(String uri, String localName, String qName, Attributes attributes): start (V)  | element (NI) 	++ :: [ string (NI) - uri (NI) ] :: [ string (NI) - local (NM) name (NI) ] :: [ string (NI) - q (NM) name (NI) ] :: [ attributes (N) - attributes (N) ] :: my (PR) XML (NM) handler (N) 
SPECIAL:NAME:PanelElement PanelElement getPanelAt(int index): get (V)  | panel (N) -- at (P) [ int (N) - index (NI) ]	++ :: [ int (N) - index (NI) ] :: panel (NM) element (NI)  :: panel (NM) element (NI) 
SPECIAL:NAME:CollectionEditorForm void setSort(String string): set (V)  | sort (N) 	++ :: [ string (NI) - string (NI) ] :: collection (NM) editor (NM) form (N) 
VOID_NP:NAME:Javoids void actionPerformedMouseMove(): handle (V) | action (NM) performed (NM) mouse (NM) move (N) 	++ :: javoids (N)  :: void (N) 
BASE_VERB:NAME:GroupHandler boolean handleNntp(NntpRequest nntpRequest, NntpResponse nntpResponse): handle (VI)  | nntp (N) 	++ :: [ nntp (NM) request (N) - nntp (NM) request (N) ] :: [ nntp (NM) response (N) - nntp (NM) response (N) ] :: boolean (N)  :: group (NM) handler (N) 
SPECIAL:NAME:PortletPermission String getPrimaryKey(long plid, String portletId): get (V)  | primary (NM) key (NI) 	++ :: [ long (N) - plid (N) ] :: [ string (NI) - portlet (NM) id (NI) ] :: string (NI)  :: portlet (NM) permission (N) 
SPECIAL:NAME:BorderFactory static Border createEtchedBorder(int etchType): create (V)  | etched (NM) border (N) 	++ :: [ int (N) - etch (NM) type (N) ] :: border (N)  :: border (NM) factory (N) 
V_3P_IRR:NAME:Modifiable boolean isFinal(): is (V)  | final (N) 	++ :: boolean (N)  :: modifiable (N) 
SPECIAL:NAME:GuiBeanFrame Component addPropertyCanvas(PropertyEditor editor, JPanel p): add (V)  | property (NM) canvas (N) 	++ :: [ property (NM) editor (N) - editor (N) ] :: [ J (NM) panel (N) - p (NI) ] :: component (N)  :: gui (NM) bean (NM) frame (N) 
SPECIAL:FORM:Native static long load(String library): load (V)  | [ string (NI) - library (N) ]	++ :: native (N)  :: long (N) 
CONSTRUCTOR:NAME:ObjectAreaPosition ObjectAreaPosition ObjectAreaPosition(int x, int y, int rotation):  | object (NM) area (NM) position (N) 	++ :: [ int (N) - x (N) ] :: [ int (N) - y (N) ] :: [ int (N) - rotation (N) ]
SPECIAL:NAME:InstructionEditor void setPC(int pc): set (V)  | PC (N) 	++ :: [ int (N) - pc (N) ] :: instruction (NM) editor (N) 
SPECIAL:NAME:DatabaseReadAccess FunctionalEntity setFunctionalEntityData(ResultSet resSet): set (V)  | functional (NM) entity (NM) data (NI) 	++ :: [ result (NM) set (N) - res (NM) set (N) ] :: functional (NM) entity (N)  :: database (NM) read (NM) access (N) 
SPECIAL:NAME:MemberBean void setMemberLastLogon(Timestamp memberLastLogon): set (V)  | member (NM) last (DT) logon (N) 	++ :: [ timestamp (N) - member (NM) last (DT) logon (N) ] :: member (NM) bean (NI) 
SPECIAL:NAME:QvtBaseBlock Button createButton(Composite parent, String text): create (V)  | button (N) 	++ :: [ composite (N) - parent (N) ] :: [ string (NI) - text (NI) ] :: button (N)  :: qvt (NM) base (NM) block (N) 
ENDS_WITH_ED:NAME:SaveAsActionListener void actionPerformed(ActionEvent event): handle (V) | action (NM) performed (N) 	++ :: [ action (NM) event (NI) - event (NI) ] :: save (NM) as (NM) action (NM) listener (N)  :: void (N) 
SPECIAL:NAME:Mapping void createMappingElement(): create (V)  | mapping (NM) element (NI) 	++ :: mapping (N) 
SPECIAL:NAME:Screen static void resetScreen(int scrn): reset (V)  | screen (N) 	++ :: [ int (N) - scrn (N) ] :: screen (N) 
V_3P_IRR:NAME:FtpFile boolean isAbsolute(): is (V)  | absolute (N) 	++ :: boolean (N)  :: ftp (NM) file (NI) 
SPECIAL:NAME:CourseDefinitionEditor Object getDataObject(): get (V)  | data (NM) object (NI) 	++ :: object (NI)  :: course (NM) definition (NM) editor (N) 
NOUN_PHRASE:NAME:Media String mediaDesc(): get (V) | media (NM) desc (NI) 	++ :: media (N)  :: string (NI) 
CONSTRUCTOR:NAME:ChapterDOBody ChapterDOBody ChapterDOBody(int id, int version):  | chapter (NM) DO (NM) body (N) 	++ :: [ int (N) - id (NI) ] :: [ int (N) - version (N) ]
V_3PS:NAME:TimeZoneConstructor boolean needsParameters(): needs (V)  | parameters (N) 	++ :: boolean (N)  :: time (NM) zone (NM) constructor (N) 
NOUN_PHRASE:NAME:ContentElementCollection int size(): get (V) | size (N) 	++ :: content (NM) element (NM) collection (N)  :: int (N) 
SPECIAL:NAME:CombinedRangeXYPlot void setFixedDomainAxisSpaceForSubplots(AxisSpace space): set (V)  | fixed (NM) domain (NM) axis (NM) space (N) -- for (P) subplots (N) 	++ :: [ axis (NM) space (N) - space (N) ] :: combined (NM) range (NM) XY (NM) plot (N) 
SPECIAL:NAME:FisBase String getCWD(): get (V)  | CWD (N) 	++ :: string (NI)  :: fis (NM) base (N) 
SPECIAL:NAME:HImpl SenderCity getSenderCityArray(): get (V)  | sender (NM) city (NM) array (N) 	++ :: sender (NM) city (N)  :: H (NM) impl (NI) 
SPECIAL:NAME:ShadowedGrammarPool Grammar retrieveGrammar(XMLGrammarDescription gDesc): retrieve (V)  | EQUIV[grammar (N) , [ XML (NM) grammar (NM) description (NI) - g (NM) desc (NI) ]]	++ :: grammar (N)  :: shadowed (NM) grammar (NM) pool (N) 
CONSTRUCTOR:NAME:GrayColor GrayColor GrayColor(float floatGray):  | gray (NM) color (N) 	++ :: [ float (N) - float (NM) gray (N) ]
V_3P_IRR:NAME:JEditableListElement boolean isChanged(): is (V)  | changed (N) 	++ :: boolean (N)  :: J (NM) editable (NM) list (NM) element (NI) 
SPECIAL:NAME:Transaction void setTax(BigDecimal tax): set (V)  | tax (N) 	++ :: [ big (NM) decimal (N) - tax (N) ] :: transaction (N) 
SPECIAL:NAME:xsdDateTime Class getType(): get (V)  | type (N) 	++ :: class (NI)  :: xsd (NM) date (NM) time (N) 
CONSTRUCTOR:NAME:DataSource DataSource DataSource(long id, long dsid, String globalURI, String localURI):  | data (NM) source (NI) 	++ :: [ long (N) - id (NI) ] :: [ long (N) - dsid (N) ] :: [ string (NI) - global (NM) URI (NI) ] :: [ string (NI) - local (NM) URI (NI) ]
BASE_VERB:NAME:Scanner String buildIntegerPatternString(): build (V)  | integer (NM) pattern (NM) string (NI) 	++ :: string (NI)  :: scanner (N) 
ENDS_WITH_ED:NAME:MouseControl void mouseEntered(MouseEvent event, Double modelLoc): handle (V) | mouse (NM) entered (N) 	++ :: [ mouse (NM) event (NI) - event (NI) ] :: [ double (N) - model (NM) loc (N) ] :: mouse (NM) control (N)  :: void (N) 
SPECIAL:NAME:MultiTreeMapTest void testSimpleUsage(): test (VI)  | simple (NM) usage (N) 	++ :: multi (NM) tree (NM) map (NM) test (N) 
SPECIAL:NAME:MockHttpServletRequest Map getParameterMap(): get (V)  | parameter (NM) map (N) 	++ :: map (N)  :: mock (NM) http (NM) servlet (NM) request (N) 
VOID_NP:NAME:Implements1 void someMethod(): handle (V) | some (DT) method (N) 	++ :: implements (NM) 1 (N)  :: void (N) 
BASE_VERB:CLAS:AlignedSeqGlyph void reColor(): re (PRE) color (V)  | aligned (NM) seq (NM) glyph (N) 	++
SPECIAL:NAME:GtkDesktopIconUI Dimension getMinimumSize(JComponent c): get (V)  | minimum (NM) size (N) 	++ :: [ J (NM) component (N) - c (N) ] :: dimension (N)  :: gtk (NM) desktop (NM) icon (NM) UI (N) 
ENDS_WITH_ED:NAME:void mouseReleased(MouseEvent e): handle (V) | mouse (NM) released (N) 	++ :: [ mouse (NM) event (NI) - e (N) ] :: ANONYMOUS (N)  :: void (N) 
SPECIAL:NAME:BasicPanel void setOpaque(boolean opaque): set (V)  | opaque (N) 	++ :: [ boolean (N) - opaque (N) ] :: basic (NM) panel (N) 
ENDS_WITH_ED:NAME:void moderatorGranted(): handle (V) | moderator (NM) granted (N) 	++ :: ANONYMOUS (N)  :: void (N) 
SPECIAL:NAME:CustomScreen static void setMessageReceivedMark(int state, int img, int markX, int markY): set (V)  | message (NM) received (NM) mark (N) 	++ :: [ int (N) - state (N) ] :: [ int (N) - img (N) ] :: [ int (N) - mark (NM) X (N) ] :: [ int (N) - mark (NM) Y (N) ] :: custom (NM) screen (N) 
BASE_VERB:FORM:StrictMath static double max(double a, double b): max (V)  | [ double (N) - a (N) ]	++ :: [ double (N) - b (N) ] :: strict (NM) math (N)  :: double (N) 
CONSTRUCTOR:NAME:DialogBox DialogBox DialogBox(Game g):  | dialog (NM) box (N) 	++ :: [ game (N) - g (N) ]
SPECIAL:NAME:CASImpl FeatureValuePath createFeatureValuePath(String featureValuePath): create (V)  | EQUIV[feature (NM) value (NM) path (NI) , [ string (NI) - feature (NM) value (NM) path (NI) ]]	++ :: feature (NM) value (NM) path (NI)  :: CAS (NM) impl (NI) 
SPECIAL:FORM:DefaultPlaneBoundedVolumeListSceneQuery void execute(ISceneQueryListener listener): execute (VI)  | [ I (NM) scene (NM) query (NM) listener (N) - listener (N) ]	++ :: default (NM) plane (NM) bounded (NM) volume (NM) list (NM) scene (NM) query (N) 
SPECIAL:NAME:Signature String getAlgorithm(): get (V)  | algorithm (N) 	++ :: string (NI)  :: signature (N) 
SPECIAL:NAME:SWTVersionGetter int getLatestVersion(): get (V)  | latest (NM) version (N) 	++ :: int (N)  :: SWT (NM) version (NM) getter (N) 
BASE_VERB:FORM:Any_codec Object serialize(SerializationManager sm, Object type_instance, boolean is_optional, String type_name): serialize (V)  | [ serialization (NM) manager (N) - sm (N) ]	++ :: [ object (NI) - type (NM) instance (NI) ] :: [ string (NI) - type (NM) name (NI) ] :: any (DT) codec (N)  :: [ boolean (N) - is (NM) optional (N) ] :: object (NI) 
SPECIAL:NAME:UserRole void setUser(User user): set (V)  | user (N) 	++ :: [ user (N) - user (N) ] :: user (NM) role (N) 
SPECIAL:NAME:RealRangeSet Expression getLowerBound(): get (V)  | lower (NM) bound (N) 	++ :: expression (N)  :: real (NM) range (NM) set (N) 
BASE_VERB:CLAS:Listener boolean open(): open (V)  | listener (N) 	++ :: boolean (N) 
ENDS_WITH_ED:NAME:void actionPerformed(ActionEvent e): handle (V) | action (NM) performed (N) 	++ :: [ action (NM) event (NI) - e (N) ] :: ANONYMOUS (N)  :: void (N) 
SPECIAL:NAME:ExtractConstantRefactoring String getIndent(ASTNode insertAfter): get (V)  | indent (N) 	++ :: [ AST (NM) node (NI) - insert (NM) after (N) ] :: string (NI)  :: extract (NM) constant (NM) refactoring (N) 
SPECIAL:NAME:XFormDialog void setWidth(int i): set (V)  | width (N) 	++ :: [ int (N) - i (N) ] :: X (NM) form (NM) dialog (N) 
SPECIAL:NAME:IbmNotWf2XmlConfTest void testNotWellFormed_IbmNotWfP56Ibm56n02xml(): test (VI)  | not (DT) well (NM) formed (NM) ibm (NM) not (DT) wf (NM) P (NM) 56 (D) ibm (NM) 56 (D) n (NM) 02 (D) xml (N) 	++ :: ibm (NM) not (DT) wf (NM) 2 (NM) xml (NM) conf (NM) test (N) 
BASE_VERB:NAME:RS void updateString(int c, String b): update (V)  | EQUIV[string (NI) , [ string (NI) - b (N) ]]	++ :: [ int (N) - c (N) ] :: RS (N) 
SPECIAL:NAME:T0PassBasicTypesTestCase void testIIOPSendShort(): test (VI)  | IIOP (NM) send (NM) short (N) 	++ :: T (NM) 0 (NM) pass (NM) basic (NM) types (NM) test (NM) case (N) 
SPECIAL:NAME:ResultSet boolean getBoolean(int columnIndex): get (V)  | boolean (N) 	++ :: [ int (N) - column (NM) index (NI) ] :: boolean (N)  :: result (NM) set (N) 
SPECIAL:NAME:TextTitle HorizontalAlignment getTextAlignment(): get (V)  | text (NM) alignment (N) 	++ :: horizontal (NM) alignment (N)  :: text (NM) title (N) 
V_3P_IRR:NAME:MiniTable boolean isMultiSelection(): is (V)  | multi (NM) selection (N) 	++ :: boolean (N)  :: mini (NM) table (N) 
PREP:NAME:ThreadPool void onRemove(Thread removed): handle (V) | on (NM) remove (N) 	++ :: [ thread (N) - removed (N) ] :: thread (NM) pool (N)  :: void (N) 
SPECIAL:NAME:CategoryPlot void setRangeAxisLocation(AxisLocation location): set (V)  | range (NM) axis (NM) location (NI) 	++ :: [ axis (NM) location (NI) - location (NI) ] :: category (NM) plot (N) 
V_3P_IRR:NAME:SynchronizedMap boolean isEmpty(): is (V)  | empty (N) 	++ :: boolean (N)  :: synchronized (NM) map (N) 
SPECIAL:NAME:Sp_blk_num_dataTYPE_Helper static Deserializer getDeserializer(String mechType, Class _javaType, QName _xmlType): get (V)  | deserializer (N) 	++ :: [ string (NI) - mech (NM) type (N) ] :: [ class (NI) - java (NM) type (N) ] :: [ Q (NM) name (NI) - xml (NM) type (N) ] :: deserializer (N)  :: sp (NM) blk (NM) num (NM) data (NM) TYPE (NM) helper (N) 
V_3PS:FORM:URI boolean equals(Object o): equals (V)  | [ object (NI) - o (N) ]	++ :: URI (NI)  :: boolean (N) 
CONSTRUCTOR:NAME:MonthHistory MonthHistory MonthHistory(int mm, int yr, long hits, long files, long pages, long traffic):  | month (NM) history (N) 	++ :: [ int (N) - mm (N) ] :: [ int (N) - yr (N) ] :: [ long (N) - hits (N) ] :: [ long (N) - files (N) ] :: [ long (N) - pages (N) ] :: [ long (N) - traffic (N) ]
SPECIAL:NAME:NdbStopStarted int getStopType(long ptr): get (V)  | stop (NM) type (N) 	++ :: [ long (N) - ptr (N) ] :: int (N)  :: ndb (NM) stop (NM) started (N) 
SPECIAL:NAME:StatisticsAddRangeDialog static StatisticsAddRangeDialog getOne(JDialog dlg, Character symbols): get (V)  | one (N) 	++ :: [ J (NM) dialog (N) - dlg (N) ] :: [ character (N) - symbols (N) ] :: statistics (NM) add (NM) range (NM) dialog (N)  :: statistics (NM) add (NM) range (NM) dialog (N) 
BASE_VERB:NAME:AudioTronState void updateCurrentSong(AudioTronSong song): update (V)  | EQUIV[current (NM) song (N) , [ audio (NM) tron (NM) song (N) - song (N) ]]	++ :: audio (NM) tron (NM) state (N) 
CONSTRUCTOR:NAME:ImageOrValue ImageOrValue ImageOrValue(float scale, ImageMap theMap, int whichComponent):  | image (NM) or (NM) value (NI) 	++ :: [ float (N) - scale (N) ] :: [ image (NM) map (N) - the (DT) map (N) ] :: [ int (N) - which (DT) component (N) ]
SPECIAL:CLAS:Test03 boolean test(): test (VI)  | test (NM) 03 (N) 	++ :: boolean (N) 
EVENT_PARAM:NAME:ProcessorsController void controllerUpdate(ControllerEvent ce): handle (V) | controller (NM) update (N) 	++ :: [ controller (NM) event (NI) - ce (N) ] :: processors (NM) controller (N)  :: void (N) 
SPECIAL:FORM:DdlCommand void doExecute(FarragoTestConcurrentCommandExecutor executor): do (VI) execute (VI)  | [ farrago (NM) test (NM) concurrent (NM) command (NM) executor (N) - executor (N) ]	++ :: ddl (NM) command (N) 
SPECIAL:FORM:SLDPointSymbolizerBinding void initialize(ElementInstance instance, Node node, MutablePicoContainer context): initialize (V)  | [ element (NM) instance (NI) - instance (NI) ]	++ :: [ node (NI) - node (NI) ] :: [ mutable (NM) pico (NM) container (NI) - context (N) ] :: SLD (NM) point (NM) symbolizer (NM) binding (N) 
BASE_VERB:FORM:MVC static void attach(Model model, View views, Controller controllers): attach (V)  | [ model (NI) - model (NI) ]	++ :: [ view (NI) - views (N) ] :: [ controller (N) - controllers (N) ] :: MVC (N) 
SPECIAL:CLAS:Bundeslaender static void addToVector(Vector v): add (V)  | bundeslaender (N) -- to (P) EQUIV[vector (N) , [ vector (N) - v (N) ]]	++
BASE_VERB:FORM:_StructuredPullSupplierImplBase OutputStream _invoke(String opName, InputStream _is, ResponseHandler handler): invoke (VI)  | [ string (NI) - op (NM) name (NI) ]	++ :: [ input (NM) stream (NI) - is (N) ] :: [ response (NM) handler (N) - handler (N) ] :: structured (NM) pull (NM) supplier (NM) impl (NM) base (N)  :: output (NM) stream (NI) 
ENDS_WITH_ED:NAME:void actionPerformed(ActionEvent evt): handle (V) | action (NM) performed (N) 	++ :: [ action (NM) event (NI) - evt (N) ] :: ANONYMOUS (N)  :: void (N) 
SPECIAL:NAME:ObjectStreamClass long getSerialVersionUID(): get (V)  | serial (NM) version (NM) UID (N) 	++ :: long (N)  :: object (NM) stream (NM) class (NI) 
V_3PS:FORM:MP3Comparator boolean equals(Object obj): equals (V)  | [ object (NI) - obj (NI) ]	++ :: MP (NM) 3 (NM) comparator (N)  :: boolean (N) 
SPECIAL:NAME:GeometryKit static double getLength(Line2D line): get (V)  | length (N) 	++ :: [ line (NM) 2 (NM) D (N) - line (N) ] :: double (N)  :: geometry (NM) kit (N) 
V_3P_IRR:NAME:KeyStroker boolean isAltGrDown(): is (V)  | alt (NM) gr (NM) down (N) 	++ :: boolean (N)  :: key (NM) stroker (N) 
NOUN_PHRASE:NAME:JndiNamingEnum Context newJndiContext(Node node): get (V) | new (NM) jndi (NM) context (N) 	++ :: [ node (NI) - node (NI) ] :: jndi (NM) naming (NM) enum (NI)  :: context (N) 
BASE_VERB:FORM:SecondsDurationValue DoubleValue divide(DurationValue other, XPathContext context): divide (V)  | [ duration (NM) value (NI) - other (DT) ]	++ :: [ X (NM) path (NM) context (N) - context (N) ] :: seconds (NM) duration (NM) value (NI)  :: double (NM) value (NI) 
CONSTRUCTOR:NAME:MouseZoomDemo MouseZoomDemo MouseZoomDemo(String title):  | mouse (NM) zoom (NM) demo (N) 	++ :: [ string (NI) - title (N) ]
SPECIAL:NAME:GncGncEntryTypeImpl String getEntryDescription(): get (V)  | entry (NM) description (NI) 	++ :: string (NI)  :: gnc (NM) gnc (NM) entry (NM) type (NM) impl (NI) 
ENDS_WITH_ED:NAME:void actionPerformed(ActionEvent event): handle (V) | action (NM) performed (N) 	++ :: [ action (NM) event (NI) - event (NI) ] :: ANONYMOUS (N)  :: void (N) 
SPECIAL:NAME:RTS static String get_stub_name(Class c): get (V)  | stub (NM) name (NI) 	++ :: [ class (NI) - c (N) ] :: string (NI)  :: RTS (N) 
ENDS_WITH_ED:NAME:void actionPerformed(ActionEvent e): handle (V) | action (NM) performed (N) 	++ :: [ action (NM) event (NI) - e (N) ] :: ANONYMOUS (N)  :: void (N) 
BASE_VERB:NAME:Reinstall String savePbArchs(): save (V)  | pb (NM) archs (N) 	++ :: string (NI)  :: reinstall (N) 
SPECIAL:NAME:CvFileVO void setParentName(String parentname): set (V)  | parent (NM) name (NI) 	++ :: [ string (NI) - parentname (N) ] :: cv (NM) file (NM) VO (NI) 
NOUN_PHRASE:NAME:Arrays2 static int linearSearch(int n, int fromIndex, int toIndex, int data): get (V) | linear (NM) search (N) 	++ :: [ int (N) - n (N) ] :: [ int (N) - from (NM) index (NI) ] :: [ int (N) - to (NM) index (NI) ] :: [ int (N) - data (NI) ] :: arrays (NM) 2 (N)  :: int (N) 
SPECIAL:NAME:Site boolean getUseCookies(): get (V)  | use (NM) cookies (N) 	++ :: boolean (N)  :: site (N) 
SPECIAL:NAME:JAPConfServices JAPConfAnon getAnonModule(): get (V)  | anon (NM) module (N) 	++ :: JAP (NM) conf (NM) anon (N)  :: JAP (NM) conf (NM) services (N) 
SPECIAL:CLAS:void run(): run (VI)  | ANONYMOUS (N) 	++
SPECIAL:NAME:SWFActionBlockImpl void setSWFActionBlock(SWFActionBlock acts): set (V)  | SWF (NM) action (NM) block (N) 	++ :: [ SWF (NM) action (NM) block (N) - acts (N) ] :: SWF (NM) action (NM) block (NM) impl (NI) 
SPECIAL:NAME:MsnftpInviteMessage void setApplicationFile(String applicationFile): set (V)  | application (NM) file (NI) 	++ :: [ string (NI) - application (NM) file (NI) ] :: msnftp (NM) invite (NM) message (NI) 
SPECIAL:NAME:RSAMultiPrimePrivateCrtKeySpec BigInteger getPrimeP(): get (V)  | prime (NM) P (NI) 	++ :: big (NM) integer (N)  :: RSA (NM) multi (NM) prime (NM) private (NM) crt (NM) key (NM) spec (NI) 
SPECIAL:NAME:EdgeFactory void initNoSemEdges(): init (V)  | no (DT) sem (NM) edges (N) 	++ :: edge (NM) factory (N) 
SPECIAL:NAME:Instance void addSchemaRef(SimpleLink schemaRef): add (V)  | EQUIV[schema (NM) ref (NI) , [ simple (NM) link (N) - schema (NM) ref (NI) ]]	++ :: instance (NI) 
SPECIAL:NAME:ContactServiceImpl ActionMessages deleteCompany(Company company): delete (V)  | EQUIV[company (N) , [ company (N) - company (N) ]]	++ :: action (NM) messages (N)  :: contact (NM) service (NM) impl (NI) 
SPECIAL:NAME:ProjectDataManager Vector checkCouplerPresence(): check (VI)  | coupler (NM) presence (N) 	++ :: vector (N)  :: project (NM) data (NM) manager (N) 
BASE_VERB:CLAS:void undo(): undo (VI)  | ANONYMOUS (N) 	++
SPECIAL:FORM:ServiceContextHolder void _read(InputStream i): read (V)  | [ input (NM) stream (NI) - i (N) ]	++ :: service (NM) context (NM) holder (NI) 
SPECIAL:FORM:BroadcastCommand void execute(CommandMessage m): execute (VI)  | [ command (NM) message (NI) - m (N) ]	++ :: broadcast (NM) command (N) 
SPECIAL:NAME:AtomContainerManipulator static int getTotalFormalCharge(IAtomContainer atomContainer): get (V)  | total (NM) formal (NM) charge (N) 	++ :: [ I (NM) atom (NM) container (NI) - atom (NM) container (NI) ] :: int (N)  :: atom (NM) container (NM) manipulator (N) 
SPECIAL:NAME:Configuration String getRPMDBCachePath(): get (V)  | RPMDB (NM) cache (NM) path (NI) 	++ :: string (NI)  :: configuration (NI) 
CONSTRUCTOR:NAME:MultiHashMap MultiHashMap MultiHashMap(int initialCapacity, float loadFactor):  | multi (NM) hash (NM) map (N) 	++ :: [ int (N) - initial (NM) capacity (N) ] :: [ float (N) - load (NM) factor (N) ]
ENDS_WITH_ED:NAME:PopupListener void mousePressed(MouseEvent e): handle (V) | mouse (NM) pressed (N) 	++ :: [ mouse (NM) event (NI) - e (N) ] :: popup (NM) listener (N)  :: void (N) 
BASE_VERB:CLAS:StarUnaryOpAstTest void tearDown(): tear (V) down (VP)  | star (NM) unary (NM) op (NM) ast (NM) test (N) 	++
SPECIAL:NAME:SynchronizerTest void testEntityUpdateExternal(): test (VI)  | entity (NM) update (NM) external (N) 	++ :: synchronizer (NM) test (N) 
SPECIAL:NAME:PersistentSearch void setName(String name): set (V)  | name (NI) 	++ :: [ string (NI) - name (NI) ] :: persistent (NM) search (N) 
SPECIAL:NAME:CacheEntry int getHits(): get (V)  | hits (N) 	++ :: int (N)  :: cache (NM) entry (NI) 
ENDS_WITH_ED:NAME:Indicator void dataChanged(int index): handle (V) | data (NM) changed (N) 	++ :: [ int (N) - index (NI) ] :: indicator (N)  :: void (N) 
PREP:NAME:CheckDataTask void onJob(Object o): handle (V) | on (NM) job (N) 	++ :: [ object (NI) - o (N) ] :: check (NM) data (NM) task (N)  :: void (N) 
CONSTRUCTOR:NAME:neuralNet2 neuralNet2 neuralNet2(Random randomizer, monkeyLibrary newMonkeyLibrary, int newNumberOfInputs):  | neural (NM) net (NM) 2 (N) 	++ :: [ random (N) - randomizer (N) ] :: [ monkey (NM) library (N) - new (NM) monkey (NM) library (N) ] :: [ int (N) - new (NM) number (NM) of (NM) inputs (N) ]
SPECIAL:NAME:CIM_PhysicalComponentHelper static CIM_PhysicalComponent getInstance(CIMClient cimClient, CIM_PhysicalComponent dataInstance): get (V)  | EQUIV[instance (NI) , [ CIM (NM) physical (NM) component (N) - data (NM) instance (NI) ]]	++ :: [ CIM (NM) client (N) - cim (NM) client (N) ] :: CIM (NM) physical (NM) component (N)  :: CIM (NM) physical (NM) component (NM) helper (N) 
ENDS_WITH_ED:NAME:MenuFrame void mousePressed(MouseEvent e): handle (V) | mouse (NM) pressed (N) 	++ :: [ mouse (NM) event (NI) - e (N) ] :: menu (NM) frame (N)  :: void (N) 
CONSTRUCTOR:NAME:PaletteBorder PaletteBorder PaletteBorder():  | palette (NM) border (N) 	++
ENDS_WITH_ED:NAME:Property Variant Serialization_SaveFormatted(Variant NoRelations, Variant Wait, Variant Status): handle (V) | serialization (NM) save (NM) formatted (N) 	++ :: [ variant (N) - no (DT) relations (N) ] :: [ variant (N) - wait (N) ] :: [ variant (N) - status (N) ] :: property (N)  :: variant (N) 
SPECIAL:NAME:UserTestAssocBean void setLastModifiedTimestamp(Timestamp lastModifiedTimestamp): set (V)  | last (DT) modified (NM) timestamp (N) 	++ :: [ timestamp (N) - last (DT) modified (NM) timestamp (N) ] :: user (NM) test (NM) assoc (NM) bean (NI) 
CONSTRUCTOR:NAME:TokenMgrError TokenMgrError TokenMgrError(String message, int errorLine, int errorColumn):  | token (NM) mgr (NM) error (N) 	++ :: [ string (NI) - message (NI) ] :: [ int (N) - error (NM) line (N) ] :: [ int (N) - error (NM) column (N) ]
SPECIAL:NAME:Features int removeFeature(Feature _feature): remove (V)  | EQUIV[feature (N) , [ feature (N) - feature (N) ]]	++ :: int (N)  :: features (N) 
BASE_VERB:NAME:MessageFormat Object parseObject(String sourceStr, ParsePosition pos): parse (V)  | object (NI) 	++ :: [ string (NI) - source (NM) str (NI) ] :: [ parse (NM) position (N) - pos (N) ] :: object (NI)  :: message (NM) format (NI) 
SPECIAL:NAME:QuickIdentify int getCallerPriority(ICaller caller): get (V)  | caller (NM) priority (N) 	++ :: [ I (NM) caller (N) - caller (N) ] :: int (N)  :: quick (NM) identify (N) 
BASE_VERB:NAME:AddOp Object applyN(Object args): apply (V)  | N (N) 	++ :: [ object (NI) - args (N) ] :: object (NI)  :: add (NM) op (N) 
SPECIAL:NAME:ConvertHDFObjToJamObj Histogram addHistogram(Group group, String name, Object histData): add (V)  | histogram (N) 	++ :: [ group (N) - group (N) ] :: [ string (NI) - name (NI) ] :: [ object (NI) - hist (NM) data (NI) ] :: histogram (N)  :: convert (NM) HDF (NM) obj (NM) to (NM) jam (NM) obj (NI) 
SPECIAL:NAME:FontDialogSwing static void setFontSize(String inFontSize): set (V)  | font (NM) size (N) 	++ :: [ string (NI) - in (NM) font (NM) size (N) ] :: font (NM) dialog (NM) swing (N) 
SPECIAL:NAME:Screen void setCurrentFrame(ImageFrame f): set (V)  | current (NM) frame (N) 	++ :: [ image (NM) frame (N) - f (N) ] :: screen (N) 
SPECIAL:NAME:DefaultDomain String getModelMBeanClassName(): get (V)  | model (NM) M (NM) bean (NM) class (NM) name (NI) 	++ :: string (NI)  :: default (NM) domain (N) 
SPECIAL:CLAS:ToggleOption void set(): set (V)  | toggle (NM) option (N) 	++
SPECIAL:NAME:MetaDataPredicateServices static List findAll(GenericDelegator delegator): find (V)  | all (DT) 	++ :: [ generic (NM) delegator (N) - delegator (N) ] :: list (N)  :: meta (NM) data (NM) predicate (NM) services (N) 
CONSTRUCTOR:NAME:Deserialiser Deserialiser Deserialiser(FileAccess file, DAO parent, boolean lazyLoad):  | deserialiser (N) 	++ :: [ file (NM) access (N) - file (NI) ] :: [ DAO (N) - parent (N) ] :: [ boolean (N) - lazy (NM) load (N) ]
CONSTRUCTOR:NAME:ZipFileSet ZipFileSet ZipFileSet(ZipFileSet fileset):  | zip (NM) file (NM) set (N) 	++ :: [ zip (NM) file (NM) set (N) - fileset (N) ]
SPECIAL:NAME:MinML2 boolean getFeature(String name): get (V)  | feature (N) 	++ :: [ string (NI) - name (NI) ] :: boolean (N)  :: min (NM) ML (NM) 2 (N) 
CONSTRUCTOR:NAME:AgLvlNames AgLvlNames AgLvlNames(String aglvl):  | ag (NM) lvl (NM) names (N) 	++ :: [ string (NI) - aglvl (N) ]
BASE_VERB:NAME:PlotPanel void locate_variable(String bn_name, String variable_name, String result_type, int result_index): locate (V)  | EQUIV[variable (N) , [ string (NI) - variable (NM) name (NI) ]]	++ :: [ string (NI) - bn (NM) name (NI) ] :: [ string (NI) - result (NM) type (N) ] :: [ int (N) - result (NM) index (NI) ] :: plot (NM) panel (N) 
BASE_VERB:NAME:Unmarshaller void leaveElement(String ___uri, String ___local): leave (V)  | element (NI) 	++ :: [ string (NI) - uri (NI) ] :: [ string (NI) - local (N) ] :: unmarshaller (N) 
PREP:NAME:Pattern String toString(PatternSet previous, PatternSet next): convert (V) | to (P) string (NI) 	++ :: [ pattern (NM) set (N) - previous (N) ] :: [ pattern (NM) set (N) - next (DT) ] :: pattern (N)  :: string (NI) 
SPECIAL:NAME:PrefixMapping String getNsPrefixURI(String prefix): get (V)  | ns (NM) prefix (NM) URI (NI) 	++ :: [ string (NI) - prefix (N) ] :: string (NI)  :: prefix (NM) mapping (N) 
BASE_VERB:NAME:CodeAttr void emitBinop(int base_code, Type type): emit (V)  | binop (N) 	++ :: [ int (N) - base (NM) code (NI) ] :: [ type (N) - type (N) ] :: code (NM) attr (N) 
SPECIAL:FORM:PreparedStatementWrapper int executeUpdate(String sql, int columnIndexes): execute (VI) update (V)  | [ string (NI) - sql (N) ]	++ :: [ int (N) - column (NM) indexes (N) ] :: prepared (NM) statement (NM) wrapper (NI)  :: int (N) 
SPECIAL:NAME:PropertyValue String getPk_lock_garage(): get (V)  | pk (NM) lock (NM) garage (N) 	++ :: string (NI)  :: property (NM) value (NI) 
SPECIAL:CLAS:void run(): run (VI)  | ANONYMOUS (N) 	++
SPECIAL:NAME:SkinRadioButtonMenuItemUI void processMouseEvent(JMenuItem item, MouseEvent e, MenuElement path, MenuSelectionManager manager): process (VI)  | EQUIV[mouse (NM) event (NI) , [ mouse (NM) event (NI) - e (N) ]]	++ :: [ J (NM) menu (NM) item (NI) - item (NI) ] :: [ menu (NM) element (NI) - path (NI) ] :: [ menu (NM) selection (NM) manager (N) - manager (N) ] :: skin (NM) radio (NM) button (NM) menu (NM) item (NM) UI (N) 
SPECIAL:NAME:TNVModel void setLinkDirection(DisplayLinkDirection dir): set (V)  | link (NM) direction (N) 	++ :: [ display (NM) link (NM) direction (N) - dir (NI) ] :: TNV (NM) model (NI) 
SPECIAL:NAME:AttributeList int getLength(): get (V)  | length (N) 	++ :: int (N)  :: attribute (NM) list (N) 
BASE_VERB:NAME:FunctionDialog void validateValues(): validate (VI)  | values (N) 	++ :: function (NM) dialog (N) 
SPECIAL:NAME:NotificationServerConnector void setStatus(String strNewStatus): set (V)  | status (N) 	++ :: [ string (NI) - str (NM) new (NM) status (N) ] :: notification (NM) server (NM) connector (N) 
SPECIAL:NAME:Configuration static Document loadDocument(String docName): load (V)  | document (NI) 	++ :: [ string (NI) - doc (NM) name (NI) ] :: document (NI)  :: configuration (NI) 
SPECIAL:NAME:InterpretedFunction String getParamOrVarName(int index): get (V)  | param (NM) or (NM) var (NM) name (NI) 	++ :: [ int (N) - index (NI) ] :: string (NI)  :: interpreted (NM) function (N) 
SPECIAL:NAME:AboutSpocket JPanel getContents(): get (V)  | contents (N) 	++ :: J (NM) panel (N)  :: about (NM) spocket (N) 
CONSTRUCTOR:NAME:ImmutableParcelPriority ImmutableParcelPriority ImmutableParcelPriority():  | immutable (NM) parcel (NM) priority (N) 	++
SPECIAL:CLAS:ConnectionWorker boolean test(): test (VI)  | connection (NM) worker (N) 	++ :: boolean (N) 
SPECIAL:NAME:ActiveParticleList void pop_back(): pop (V)  | back (N) 	++ :: active (NM) particle (NM) list (N) 
SPECIAL:CLAS:SVGLayout String render(): render (V)  | SVG (NM) layout (N) 	++ :: string (NI) 
V_3P_IRR:NAME:NoLegs boolean isSet(LegSecuritySubType field): is (V)  | set (N) 	++ :: [ leg (NM) security (NM) sub (NM) type (N) - field (N) ] :: boolean (N)  :: no (DT) legs (N) 
CONSTRUCTOR:NAME:WebAppDescriptor WebAppDescriptor WebAppDescriptor(String base, String rr, Realm realm, AuthenticatorBase auth, WebAppOptions options):  | web (NM) app (NM) descriptor (NI) 	++ :: [ string (NI) - base (N) ] :: [ string (NI) - rr (N) ] :: [ realm (N) - realm (N) ] :: [ authenticator (NM) base (N) - auth (N) ] :: [ web (NM) app (NM) options (N) - options (N) ]
SPECIAL:NAME:DescriptorRepository void setDefaultIsolationLevel(int defaultIsolationLevel): set (V)  | default (NM) isolation (NM) level (N) 	++ :: [ int (N) - default (NM) isolation (NM) level (N) ] :: descriptor (NM) repository (N) 
V_3PS:NAME:RDMSOS2200Dialect boolean supportsCascadeDelete(): supports (V)  | cascade (NM) delete (N) 	++ :: boolean (N)  :: RDMSOS (NM) 2200 (NM) dialect (N) 
SPECIAL:FORM:FileSystemIndexStore QuadTree load(IndexFile indexfile): load (V)  | [ index (NM) file (NI) - indexfile (N) ]	++ :: file (NM) system (NM) index (NM) store (N)  :: quad (NM) tree (NI) 
SPECIAL:NAME:TModelInstanceInfo void setInstanceDetails(InstanceDetails details): set (V)  | instance (NM) details (N) 	++ :: [ instance (NM) details (N) - details (N) ] :: T (NM) model (NM) instance (NM) info (NI) 
ENDS_WITH_ED:NAME:void windowDeactivated(WindowEvent e): handle (V) | window (NM) deactivated (N) 	++ :: [ window (NM) event (NI) - e (N) ] :: ANONYMOUS (N)  :: void (N) 
BASE_VERB:NAME:DDLMakerBase void makePartialForeignKey(String name, StringBuffer sql): make (V)  | partial (NM) foreign (NM) key (NI) 	++ :: [ string (NI) - name (NI) ] :: [ string (NM) buffer (NI) - sql (N) ] :: DDL (NM) maker (NM) base (N) 
BASE_VERB:NAME:FloatBufferImpl FloatBuffer putShort(int index, short value): put (V)  | EQUIV[short (N) , [ short (N) - value (NI) ]]	++ :: [ int (N) - index (NI) ] :: float (NM) buffer (NI)  :: float (NM) buffer (NM) impl (NI) 
BASE_VERB:NAME:SQLLexer static int zzUnpackTrans(String packed, int offset, int result): zz (PRE) unpack (V)  | trans (N) 	++ :: [ string (NI) - packed (N) ] :: [ int (N) - offset (N) ] :: [ int (N) - result (N) ] :: int (N)  :: SQL (NM) lexer (N) 
BASE_VERB:NAME:SACParser void parseStyleSheet(String uri): parse (V)  | style (NM) sheet (N) 	++ :: [ string (NI) - uri (NI) ] :: SAC (NM) parser (N) 
BASE_VERB:FORM:JbpmContext void save(Token token): save (V)  | [ token (N) - token (N) ]	++ :: jbpm (NM) context (N) 
SPECIAL:NAME:AccessibleJToolBar AccessibleRole getAccessibleRole(): get (V)  | accessible (NM) role (N) 	++ :: accessible (NM) role (N)  :: accessible (NM) J (NM) tool (NM) bar (N) 
SPECIAL:NAME:PublishersPanel DefaultListModel getElementListModel(): get (V)  | element (NM) list (NM) model (NI) 	++ :: default (NM) list (NM) model (NI)  :: publishers (NM) panel (N) 
NOUN_PHRASE:NAME:StateMachine ElementSet Transition(): get (V) | transition (N) 	++ :: state (NM) machine (N)  :: element (NM) set (N) 
V_3P_IRR:NAME:ExtendedResultSet boolean isLast(): is (V)  | last (DT) 	++ :: boolean (N)  :: extended (NM) result (NM) set (N) 
SPECIAL:NAME:ConnectionList ConnectionProperty getEnvironment(String environment): get (V)  | EQUIV[environment (N) , [ string (NI) - environment (N) ]]	++ :: connection (NM) property (N)  :: connection (NM) list (N) 
SPECIAL:FORM:BaseSongPerformedByArtistPeer static void doUpdate(Criteria criteria): do (VI) update (V)  | [ criteria (N) - criteria (N) ]	++ :: base (NM) song (NM) performed (NM) by (NM) artist (NM) peer (N) 
ENDS_WITH_ED:NAME:void textValueChanged(DocumentEvent e): handle (V) | text (NM) value (NM) changed (N) 	++ :: [ document (NM) event (NI) - e (N) ] :: ANONYMOUS (N)  :: void (N) 
SPECIAL:NAME:GGraphics GDisplay getDisplay(): get (V)  | display (N) 	++ :: G (NM) display (N)  :: G (NM) graphics (N) 
V_3P_IRR:NAME:TableMirror boolean isValid(): is (V)  | valid (N) 	++ :: boolean (N)  :: table (NM) mirror (N) 
SPECIAL:NAME:TestSIPHistory void testClient2PbxMessage(): test (VI)  | client (NM) 2 (D) pbx (NM) message (NI) 	++ :: test (NM) SIP (NM) history (N) 
V_3P_IRR:NAME:X_I_MProduct_Category boolean isProcessing(): is (V)  | processing (N) 	++ :: boolean (N)  :: X (NM) I (NM) M (NM) product (NM) category (N) 
SPECIAL:NAME:AbstractUlyssesPlugin void getAdditionalInfo(Service theService): get (V)  | additional (NM) info (NI) 	++ :: [ service (N) - the (DT) service (N) ] :: abstract (NM) ulysses (NM) plugin (N) 
SPECIAL:NAME:Sinavi2TypeTrajet void setTypeLoi(int _loi): set (V)  | type (NM) loi (N) 	++ :: [ int (N) - loi (N) ] :: sinavi (NM) 2 (NM) type (NM) trajet (N) 
PREP:NAME:SelectedProduction String toString(): convert (V) | to (P) string (NI) 	++ :: selected (NM) production (N)  :: string (NI) 
SPECIAL:NAME:ObjectCondition void setTemplateName(String name): set (V)  | template (NM) name (NI) 	++ :: [ string (NI) - name (NI) ] :: object (NM) condition (N) 
BASE_VERB:CLAS:CSTest static void waitForEnterKey(String println): wait (V)  | CS (NM) test (N) -- for (P) enter (NM) key (NI) 	++ :: [ string (NI) - println (N) ]
SPECIAL:NAME:DemoApplet void initComponents(): init (V)  | components (N) 	++ :: demo (NM) applet (N) 
BASE_VERB:NAME:PropertiesFrame void showNothing(): show (V)  | nothing (PR) 	++ :: properties (NM) frame (N) 
CONSTRUCTOR:NAME:MdVetoException MdVetoException MdVetoException(String msg):  | md (NM) veto (NM) exception (N) 	++ :: [ string (NI) - msg (NI) ]
SPECIAL:NAME:OleServerEnvironmentImpl Variant CreateObject(Variant ClassName): create (V)  | object (NI) 	++ :: [ variant (N) - class (NM) name (NI) ] :: variant (N)  :: ole (NM) server (NM) environment (NM) impl (NI) 
BASE_VERB:NAME:BulbComponentGraphic void updateTransform(): update (V)  | transform (N) 	++ :: bulb (NM) component (NM) graphic (N) 
NOUN_PHRASE:NAME:WebServiceConfigurationValidator Object primToObj(long l): get (V) | prim (NM) to (NM) obj (NI) 	++ :: [ long (N) - l (N) ] :: web (NM) service (NM) configuration (NM) validator (N)  :: object (NI) 
SPECIAL:NAME:JCTipsViewer static String getWriteType(String type, StringBuffer errBuf): get (V)  | EQUIV[write (NM) type (N) , [ string (NI) - type (N) ]]	++ :: [ string (NM) buffer (NI) - err (NM) buf (N) ] :: string (NI)  :: JC (NM) tips (NM) viewer (N) 
V_3P_IRR:NAME:Language boolean isLeftToRight(): is (V)  | left (N) -- to (P) right (N) 	++ :: boolean (N)  :: language (N) 
SPECIAL:NAME:BehaviorPackageImpl EAttribute getBehaviorType_Description(): get (V)  | behavior (NM) type (NM) description (NI) 	++ :: E (NM) attribute (N)  :: behavior (NM) package (NM) impl (NI) 
BASE_VERB:FORM:_SequencePullSupplierImplBase OutputStream _invoke(String opName, InputStream _is, ResponseHandler handler): invoke (VI)  | [ string (NI) - op (NM) name (NI) ]	++ :: [ input (NM) stream (NI) - is (N) ] :: [ response (NM) handler (N) - handler (N) ] :: sequence (NM) pull (NM) supplier (NM) impl (NM) base (N)  :: output (NM) stream (NI) 
SPECIAL:NAME:BidRequest void initStrikeTime(Object obj): init (V)  | strike (NM) time (N) 	++ :: [ object (NI) - obj (NI) ] :: bid (NM) request (N) 
SPECIAL:NAME:AbstractCollapsableBorder int getBorderShadow(): get (V)  | border (NM) shadow (N) 	++ :: int (N)  :: abstract (NM) collapsable (NM) border (N) 
BASE_VERB:FORM:MiniBarManager void register(MiniBar bar): register (V)  | [ mini (NM) bar (N) - bar (N) ]	++ :: mini (NM) bar (NM) manager (N) 
SPECIAL:NAME:DerivedDbEntity void setParentEntity(DbEntity parentEntity): set (V)  | parent (NM) entity (N) 	++ :: [ db (NM) entity (N) - parent (NM) entity (N) ] :: derived (NM) db (NM) entity (N) 
SPECIAL:FORM:Game1 static void main(String args): main (V)  | [ string (NI) - args (N) ]	++ :: game (NM) 1 (N) 
SPECIAL:NAME:ImportWheel Object readThisLine(String theLine): read (V)  | EQUIV[this (PR) line (N) , [ string (NI) - the (DT) line (N) ]]	++ :: object (NI)  :: import (NM) wheel (N) 
SPECIAL:NAME:AccessibleText AttributeSet getCharacterAttribute(int index): get (V)  | character (NM) attribute (N) 	++ :: [ int (N) - index (NI) ] :: attribute (NM) set (N)  :: accessible (NM) text (NI) 
SPECIAL:NAME:Scene void removeFilter(ObjectFilter filter): remove (V)  | EQUIV[filter (N) , [ object (NM) filter (N) - filter (N) ]]	++ :: scene (N) 
SPECIAL:NAME:Definer void loadProperties(ClassLoader al, URL url): load (V)  | properties (N) 	++ :: [ class (NM) loader (N) - al (N) ] :: [ URL (NI) - url (NI) ] :: definer (N) 
V_3P_IRR:NAME:BeanContextServices boolean hasService(Class serviceClass): has (V)  | EQUIV[service (N) , [ class (NI) - service (NM) class (NI) ]]	++ :: boolean (N)  :: bean (NM) context (NM) services (N) 
V_3P_IRR:NAME:SmCompositeStateImpl boolean hasStates(): has (V)  | states (N) 	++ :: boolean (N)  :: sm (NM) composite (NM) state (NM) impl (NI) 
BASE_VERB:NAME:AbstractRegistryVisitor boolean visitLeave(Key node): visit (V)  | leave (N) 	++ :: [ key (NI) - node (NI) ] :: boolean (N)  :: abstract (NM) registry (NM) visitor (N) 
SPECIAL:NAME:CmrStyle String getSetterDescriptor(): get (V)  | setter (NM) descriptor (NI) 	++ :: string (NI)  :: cmr (NM) style (N) 
SPECIAL:NAME:ColorLookUpTable void readClut16(byte data): read (V)  | clut (N) 16 (D) 	++ :: [ byte (N) - data (NI) ] :: color (NM) look (NM) up (NM) table (N) 
SPECIAL:FORM:RedirectionErrorStream void println(long x): println (V)  | [ long (N) - x (N) ]	++ :: redirection (NM) error (NM) stream (NI) 
SPECIAL:NAME:EfGridDefaultAbstract int getEltContainingXY(double _x, double _y, Coordinate _m): get (V)  | elt (NM) containing (NM) XY (N) 	++ :: [ double (N) - x (N) ] :: [ double (N) - y (N) ] :: [ coordinate (N) - m (N) ] :: int (N)  :: ef (NM) grid (NM) default (NM) abstract (N) 
SPECIAL:NAME:TimeZone void setRawOffset(int offsetMillis): set (V)  | raw (NM) offset (N) 	++ :: [ int (N) - offset (NM) millis (N) ] :: time (NM) zone (N) 
EVENT_PARAM:NAME:ResponseCompletionStage void ensureStartLine(HTTPEvent e): handle (V) | ensure (NM) start (NM) line (N) 	++ :: [ HTTP (NM) event (NI) - e (N) ] :: response (NM) completion (NM) stage (N)  :: void (N) 
SPECIAL:NAME:BaseDataGathererTest void testAggregateDataMappingContainerStuff(): test (VI)  | aggregate (NM) data (NM) mapping (NM) container (NM) stuff (N) 	++ :: base (NM) data (NM) gatherer (NM) test (N) 
CONSTRUCTOR:NAME:ResourceType ResourceType ResourceType():  | resource (NM) type (N) 	++
SPECIAL:FORM:Strings void delete(int index): delete (V)  | [ int (N) - index (NI) ]	++ :: strings (N) 
BASE_VERB:FORM:PeerThreadManager void ping(int peerID): ping (V)  | [ int (N) - peer (NM) ID (NI) ]	++ :: peer (NM) thread (NM) manager (N) 
SPECIAL:NAME:SunTest void testSetFetchDirectiion(): test (VI) set (V)  | fetch (NM) directiion (N) 	++ :: sun (NM) test (N) 
V_3PS:FORM:Region boolean contains(IShape s): contains (V)  | [ I (NM) shape (N) - s (N) ]	++ :: region (N)  :: boolean (N) 
SPECIAL:FORM:TypeChecker boolean check(Object data): check (VI)  | [ object (NI) - data (NI) ]	++ :: type (NM) checker (N)  :: boolean (N) 
SPECIAL:NAME:GlobalCatalogAccountMapping String getHomeNumber(): get (V)  | home (NM) number (NI) 	++ :: string (NI)  :: global (NM) catalog (NM) account (NM) mapping (N) 
SPECIAL:NAME:RQI_I02_GUARANTOR_INSURANCE RQI_I02_INSURANCE getINSURANCE(int rep): get (V)  | INSURANCE (N) 	++ :: [ int (N) - rep (N) ] :: RQI (NM) I (NM) 02 (NM) INSURANCE (N)  :: RQI (NM) I (NM) 02 (NM) GUARANTOR (NM) INSURANCE (N) 
SPECIAL:NAME:AbstractBox NamedList getItems(): get (V)  | items (N) 	++ :: named (NM) list (N)  :: abstract (NM) box (N) 
BASE_VERB:NAME:World float computeRawFitness(Individual individual): compute (V)  | raw (NM) fitness (N) 	++ :: [ individual (N) - individual (N) ] :: float (N)  :: world (N) 
SPECIAL:FORM:DepositCompHomeImplicitHolder void _write(OutputStream out): write (V)  | [ output (NM) stream (NI) - out (N) ]	++ :: deposit (NM) comp (NM) home (NM) implicit (NM) holder (NI) 
NOUN_PHRASE:NAME:H int sizeOfTocMarkEndArray(): get (V) | size (NM) of (NM) toc (NM) mark (NM) end (NM) array (N) 	++ :: H (N)  :: int (N) 
CONSTRUCTOR:NAME:PatchFaces PatchFaces PatchFaces(PatchFacesNode PatchFacesNode, PrimitivePatch patch, Color3f color, double creaseAngle):  | patch (NM) faces (N) 	++ :: [ patch (NM) faces (NM) node (NI) - patch (NM) faces (NM) node (NI) ] :: [ primitive (NM) patch (N) - patch (N) ] :: [ color (NM) 3 (NM) f (N) - color (N) ] :: [ double (N) - crease (NM) angle (N) ]
BASE_VERB:NAME:PgSQLErrorParserBody String parseCurrent(SQLException exception): parse (V)  | current (N) 	++ :: [ SQL (NM) exception (N) - exception (N) ] :: string (NI)  :: pg (NM) SQL (NM) error (NM) parser (NM) body (N) 
NOUN_PHRASE:NAME:CreateSplineMeshTool int whichClicks(): get (V) | which (DT) clicks (N) 	++ :: create (NM) spline (NM) mesh (NM) tool (N)  :: int (N) 
CONSTRUCTOR:NAME:ActionDataPanel ActionDataPanel ActionDataPanel(String action):  | action (NM) data (NM) panel (N) 	++ :: [ string (NI) - action (N) ]
CONSTRUCTOR:NAME:BCUTDescriptor BCUTDescriptor BCUTDescriptor():  | BCUT (NM) descriptor (NI) 	++
BASE_VERB:NAME:NetParserTokenManager static int jjMoveStringLiteralDfa4_0(long old0, long active0, long old1, long active1): jj (PRE) move (V)  | EQUIV[string (NM) literal (NM) dfa (N) 4 (D) 0 (D) , [ long (N) - old (NM) 0 (N) ], [ long (N) - active (NM) 0 (N) ]]	++ :: [ long (N) - old (NM) 1 (N) ] :: [ long (N) - active (NM) 1 (N) ] :: int (N)  :: net (NM) parser (NM) token (NM) manager (N) 
SPECIAL:NAME:CController int getStateID(int VK): get (V)  | state (NM) ID (NI) 	++ :: [ int (N) - VK (N) ] :: int (N)  :: C (NM) controller (N) 
SPECIAL:NAME:LongListAdapter void addAll(int index, ListAdapter list): add (V)  | all (DT) 	++ :: [ int (N) - index (NI) ] :: [ list (NM) adapter (NI) - list (N) ] :: long (NM) list (NM) adapter (NI) 
CONSTRUCTOR:NAME:Menu Menu Menu(Control parent):  | menu (N) 	++ :: [ control (N) - parent (N) ]
NOUN_PHRASE:NAME:ComplexMatrix ComplexMatrix submatrix(int lRow, int uRow, int lCol, int uCol): get (V) | submatrix (N) 	++ :: [ int (N) - l (NM) row (N) ] :: [ int (N) - u (NM) row (N) ] :: [ int (N) - l (NM) col (N) ] :: [ int (N) - u (NM) col (N) ] :: complex (NM) matrix (N)  :: complex (NM) matrix (N) 
SPECIAL:NAME:IndexedFeatureClass IndexedFeature createIndexedFeature(String _name, VisibilityKind _visibility, Boolean _isAscending): create (V)  | indexed (NM) feature (N) 	++ :: [ string (NI) - name (NI) ] :: [ visibility (NM) kind (N) - visibility (N) ] :: [ boolean (N) - is (NM) ascending (N) ] :: indexed (NM) feature (N)  :: indexed (NM) feature (NM) class (NI) 
SPECIAL:NAME:ReferenceNodeModelCache GraphicNode getParent(GraphicNode node): get (V)  | parent (N) 	++ :: [ graphic (NM) node (NI) - node (NI) ] :: graphic (NM) node (NI)  :: reference (NM) node (NM) model (NM) cache (N) 
SPECIAL:NAME:XflowServiceServiceLocator QName getServiceName(): get (V)  | service (NM) name (NI) 	++ :: Q (NM) name (NI)  :: xflow (NM) service (NM) service (NM) locator (N) 
SPECIAL:NAME:DescriptionServices static String getParentList(Class cl, Class upToClass): get (V)  | parent (NM) list (N) 	++ :: [ class (NI) - cl (N) ] :: [ class (NI) - up (NM) to (NM) class (NI) ] :: string (NI)  :: description (NM) services (N) 
SPECIAL:NAME:SimpleMappingExceptionResolverTests void testSimpleExceptionMappingWithHandlerClassSpecifiedButWrongHandler(): test (VI)  | simple (NM) exception (NM) mapping (N) -- with (P) handler (NM) class (NM) specified (NM) but (NM) wrong (NM) handler (N) 	++ :: simple (NM) mapping (NM) exception (NM) resolver (NM) tests (N) 
CONSTRUCTOR:NAME:DefaultCategoryFactory DefaultCategoryFactory DefaultCategoryFactory():  | default (NM) category (NM) factory (N) 	++
SPECIAL:NAME:BinaryTest boolean testPreemption(Ability ability, Targetable tested): test (VI)  | preemption (N) 	++ :: [ ability (N) - ability (N) ] :: [ targetable (N) - tested (N) ] :: boolean (N)  :: binary (NM) test (N) 
BASE_VERB:FORM:Factory static Float parse(XMLStreamReader sr): parse (V)  | [ XML (NM) stream (NM) reader (N) - sr (N) ]	++ :: factory (N)  :: float (N) 
NOUN_PHRASE:NAME:ShortKeyShortMap int size(): get (V) | size (N) 	++ :: short (NM) key (NM) short (NM) map (N)  :: int (N) 
SPECIAL:NAME:ClassExtent void removeIsKeyedListener(PropertyChangeListener listener): remove (V)  | EQUIV[is (NM) keyed (NM) listener (N) , [ property (NM) change (NM) listener (N) - listener (N) ]]	++ :: class (NM) extent (N) 
SPECIAL:NAME:ClassLoader Package getPackages(): get (V)  | packages (N) 	++ :: package (N)  :: class (NM) loader (N) 
CONSTRUCTOR:NAME:TaskDefaultBatchPresentation TaskDefaultBatchPresentation TaskDefaultBatchPresentation():  | task (NM) default (NM) batch (NM) presentation (N) 	++
SPECIAL:NAME:LocalDatabaseManager String getSqlCreateTableCommand(TableDefinition td, CustomColumnNameMapping mapping): get (V)  | sql (NM) create (NM) table (NM) command (N) 	++ :: [ table (NM) definition (NI) - td (N) ] :: [ custom (NM) column (NM) name (NM) mapping (N) - mapping (N) ] :: string (NI)  :: local (NM) database (NM) manager (N) 
SPECIAL:NAME:StatusBar void setType(String type): set (V)  | type (N) 	++ :: [ string (NI) - type (N) ] :: status (NM) bar (N) 
CONSTRUCTOR:NAME:DefaultGroupMembershipMultipleNewBlock DefaultGroupMembershipMultipleNewBlock DefaultGroupMembershipMultipleNewBlock():  | default (NM) group (NM) membership (NM) multiple (NM) new (NM) block (N) 	++
ED_VERB:NAME:VersantDetachingEmbeddedStateManager void providedIntField(PersistenceCapable pc, int field, int currentValue): provided (V)  | EQUIV[int (NM) field (N) , [ int (N) - field (N) ]]	++ :: [ persistence (NM) capable (N) - pc (N) ] :: [ int (N) - current (NM) value (NI) ] :: versant (NM) detaching (NM) embedded (NM) state (NM) manager (N) 
SPECIAL:NAME:IServerImplementationFactory AbstractServerImplementation createServerImplementation(): create (V)  | server (NM) implementation (N) 	++ :: abstract (NM) server (NM) implementation (N)  :: I (NM) server (NM) implementation (NM) factory (N) 
BASE_VERB:NAME:SyncCollectionListIterator ListIterator baseListIterator(): base (V)  | list (NM) iterator (N) 	++ :: list (NM) iterator (N)  :: sync (NM) collection (NM) list (NM) iterator (N) 
SPECIAL:NAME:TaskTableModel String getPriorityString(int p): get (V)  | priority (NM) string (NI) 	++ :: [ int (N) - p (NI) ] :: string (NI)  :: task (NM) table (NM) model (NI) 
PREP:NAME:BidRespGroup String toFIXMessage(): convert (V) | to (P) FIX (NM) message (NI) 	++ :: bid (NM) resp (NM) group (N)  :: string (NI) 
CONSTRUCTOR:NAME:esRequest_inline166_type esRequest_inline166_type esRequest_inline166_type(OriginPartToKeep_type toKeep, OriginPartNotToKeep_type notToKeep):  | es (NM) request (NM) inline (NM) 166 (NM) type (N) 	++ :: [ origin (NM) part (NM) to (NM) keep (NM) type (N) - to (NM) keep (N) ] :: [ origin (NM) part (NM) not (DT) to (NM) keep (NM) type (N) - not (DT) to (NM) keep (N) ]
SPECIAL:NAME:DiffUtilTest void testDiff5(): test (VI)  | diff (N) 5 (D) 	++ :: diff (NM) util (NM) test (N) 
SPECIAL:FORM:PairwiseSummary void println(StringBuffer main, String x): println (V)  | [ string (NM) buffer (NI) - main (N) ]	++ :: [ string (NI) - x (N) ] :: pairwise (NM) summary (N) 
SPECIAL:NAME:AbstractDataExport void setModel(AbstractAPModel m): set (V)  | model (NI) 	++ :: [ abstract (NM) AP (NM) model (NI) - m (N) ] :: abstract (NM) data (NM) export (N) 
CONSTRUCTOR:NAME:AggregationCrossover AggregationCrossover AggregationCrossover(int type, double probability, Random random):  | aggregation (NM) crossover (N) 	++ :: [ int (N) - type (N) ] :: [ double (N) - probability (N) ] :: [ random (N) - random (N) ]
SPECIAL:CLAS:ListConfigurationDAO ListConfigurationVO getForUserByTypeAndName(Type type, String name, UserVO user): get (V)  | list (NM) configuration (NM) DAO (N) -- for (P) EQUIV[user (NM) by (NM) type (NM) and (NM) name (NI) , [ string (NI) - name (NI) ]]	++ :: [ type (N) - type (N) ] :: [ user (NM) VO (NI) - user (N) ] :: list (NM) configuration (NM) VO (NI) 
SPECIAL:NAME:MainFrame void jCheckBoxMenuItemElementsFormattingActionPerformed(ActionEvent evt): j (PRE) check (VI)  | box (NM) menu (NM) item (NM) elements (NM) formatting (NM) action (NM) performed (N) 	++ :: [ action (NM) event (NI) - evt (N) ] :: main (NM) frame (N) 
SPECIAL:NAME:RelatedRegistryFormat void setId(Long id): set (V)  | id (NI) 	++ :: [ long (N) - id (NI) ] :: related (NM) registry (NM) format (NI) 
ENDS_WITH_ED:NAME:TimeElapsedTrigger void onTimeElapsed(): handle (V) | on (NM) time (NM) elapsed (N) 	++ :: time (NM) elapsed (NM) trigger (N)  :: void (N) 
CONSTRUCTOR:NAME:AsyncCaret AsyncCaret AsyncCaret():  | async (NM) caret (N) 	++
SPECIAL:NAME:FBFirmenstamm String getAscKlaMah(long vishandle): get (V)  | asc (NM) kla (NM) mah (N) 	++ :: [ long (N) - vishandle (N) ] :: string (NI)  :: FB (NM) firmenstamm (N) 
BASE_VERB:NAME:DOMTextImpl void normalizeDocument(): normalize (V)  | document (NI) 	++ :: DOM (NM) text (NM) impl (NI) 
SPECIAL:NAME:FileNode void forceTotalSizeValid(): force (VI)  | total (NM) size (NM) valid (N) 	++ :: file (NM) node (NI) 
BASE_VERB:NAME:HumanFemaleLocomotion void fillMicroMoveQs(Steer steer): fill (V)  | micro (NM) move (NM) qs (N) 	++ :: [ steer (N) - steer (N) ] :: human (NM) female (NM) locomotion (N) 
SPECIAL:NAME:mfpropertyMap void removeTableModelListener(TableModelListener l): remove (V)  | EQUIV[table (NM) model (NM) listener (N) , [ table (NM) model (NM) listener (N) - l (N) ]]	++ :: mfproperty (NM) map (N) 
SPECIAL:NAME:ResourceBundle Object getObject(String key): get (V)  | object (NI) 	++ :: [ string (NI) - key (NI) ] :: object (NI)  :: resource (NM) bundle (N) 
SPECIAL:FORM:ExportUsersRolesTest static void main(String args): main (V)  | [ string (NI) - args (N) ]	++ :: export (NM) users (NM) roles (NM) test (N) 
SPECIAL:NAME:ConstantLong void setBytes(long bytes): set (V)  | bytes (NI) 	++ :: [ long (N) - bytes (NI) ] :: constant (NM) long (N) 
SPECIAL:NAME:Object getValue(Object object): get (V)  | value (NI) 	++ :: [ object (NI) - object (NI) ] :: object (NI)  :: ANONYMOUS (N) 
SPECIAL:NAME:DynamicProxyTest void testJavassistProxy(): test (VI)  | javassist (NM) proxy (NI) 	++ :: dynamic (NM) proxy (NM) test (N) 
PREP:NAME:JEditTextArea int xToOffset(int line, int x): convert (V) | x (PRE) to (P) offset (N) 	++ :: [ int (N) - line (N) ] :: [ int (N) - x (N) ] :: J (NM) edit (NM) text (NM) area (N)  :: int (N) 
SPECIAL:CLAS:addGroupKeyUsePolicyLocalHome addGroupKeyUsePolicyLocal create(): create (V)  | add (NM) group (NM) key (NM) use (NM) policy (NM) local (NM) home (N) 	++ :: add (NM) group (NM) key (NM) use (NM) policy (NM) local (N) 
V_3PS:FORM:EulaRef boolean affects(String component): affects (V)  | [ string (NI) - component (N) ]	++ :: eula (NM) ref (NI)  :: boolean (N) 
SPECIAL:NAME:BrowseTaxonomyTree void addTreeSelectionListener(PropertyChangeListener listener): add (V)  | EQUIV[tree (NM) selection (NM) listener (N) , [ property (NM) change (NM) listener (N) - listener (N) ]]	++ :: browse (NM) taxonomy (NM) tree (NI) 
SPECIAL:NAME:TabbedApparatusPanelContainer JComponent getComponent(): get (V)  | component (N) 	++ :: J (NM) component (N)  :: tabbed (NM) apparatus (NM) panel (NM) container (NI) 
V_3P_IRR:NAME:Logger boolean isInfoEnabled(): is (V)  | info (NM) enabled (N) 	++ :: boolean (N)  :: logger (N) 
BASE_VERB:FORM:LoggerWithJTextArea void log(Level level, String msg): log (V)  | [ level (N) - level (N) ]	++ :: [ string (NI) - msg (NI) ] :: logger (NM) with (NM) J (NM) text (NM) area (N) 
BASE_VERB:CLAS:Thread static void yield(): yield (V)  | thread (N) 	++
BASE_VERB:NAME:TimeParser static String convTimeToString(long t): conv (V)  | time (N) -- to (P) string (NI) 	++ :: [ long (N) - t (N) ] :: string (NI)  :: time (NM) parser (N) 
SPECIAL:NAME:AbstractJobManager void removeJob(int jobId): remove (V)  | EQUIV[job (N) , [ int (N) - job (NM) id (NI) ]]	++ :: abstract (NM) job (NM) manager (N) 
V_3P_IRR:NAME:Filter boolean isEnabled(): is (V)  | enabled (N) 	++ :: boolean (N)  :: filter (N) 
SPECIAL:NAME:SmartPreparedStatement void setBoolean(String field, boolean arg1): set (V)  | boolean (N) 	++ :: [ string (NI) - field (N) ] :: [ boolean (N) - arg (NM) 1 (N) ] :: smart (NM) prepared (NM) statement (NI) 
SPECIAL:NAME:ConfigItemMapNamedImpl String getName(): get (V)  | name (NI) 	++ :: string (NI)  :: config (NM) item (NM) map (NM) named (NM) impl (NI) 
BASE_VERB:NAME:LuceneSearchEngineQueryBuilder SearchEngineMultiPhraseQueryBuilder multiPhrase(String resourcePropertyName): multi (V)  | phrase (N) 	++ :: [ string (NI) - resource (NM) property (NM) name (NI) ] :: search (NM) engine (NM) multi (NM) phrase (NM) query (NM) builder (N)  :: lucene (NM) search (NM) engine (NM) query (NM) builder (N) 
EMPTY:NONE:Multi2 void m1():  | m (PRE) 1 (D) 
SPECIAL:NAME:LinesParserTokenManager static int jjStartNfa_0(int pos, long active0): jj (PRE) start (V)  | EQUIV[nfa (N) 0 (D) , [ long (N) - active (NM) 0 (N) ]]	++ :: [ int (N) - pos (N) ] :: int (N)  :: lines (NM) parser (NM) token (NM) manager (N) 
CONSTRUCTOR:NAME:CommandGroups CommandGroups CommandGroups():  | command (NM) groups (N) 	++
SPECIAL:NAME:MutableFilter String getDescription(): get (V)  | description (NI) 	++ :: string (NI)  :: mutable (NM) filter (N) 
BASE_VERB:CLAS:SpecificIntegerValue LongValue convertToLong(ValueFactory valueFactory): convert (V)  | specific (NM) integer (NM) value (NI) -- to (P) long (N) 	++ :: [ value (NM) factory (N) - value (NM) factory (N) ] :: long (NM) value (NI) 
BASE_VERB:FORM:PHPTarget void generate(Node tree, ErrorTracker tracker): generate (V)  | [ node (NI) - tree (NI) ]	++ :: [ error (NM) tracker (N) - tracker (N) ] :: PHP (NM) target (N) 
SPECIAL:NAME:WhileDeployer void processSpecificElements(Element element, Activity activity): process (VI)  | specific (NM) elements (N) 	++ :: [ element (NI) - element (NI) ] :: [ activity (N) - activity (N) ] :: while (NM) deployer (N) 
SPECIAL:NAME:UserProfileEditor UserPreferenceCatalog retrievePreferences(String uuid, UserPreferenceCatalog prefs): retrieve (V)  | preferences (N) 	++ :: [ string (NI) - uuid (N) ] :: [ user (NM) preference (NM) catalog (N) - prefs (N) ] :: user (NM) preference (NM) catalog (N)  :: user (NM) profile (NM) editor (N) 
SPECIAL:NAME:CustomPointcutMakers static String createPointcutFromTypes(String pointcutType, ArrayList classes, boolean constructor): create (V)  | pointcut (N) -- from (P) types (N) 	++ :: [ string (NI) - pointcut (NM) type (N) ] :: [ array (NM) list (N) - classes (N) ] :: [ boolean (N) - constructor (N) ] :: string (NI)  :: custom (NM) pointcut (NM) makers (N) 
CONSTRUCTOR:NAME:Interface Interface Interface(Structure struct):  | interface (NI) 	++ :: [ structure (N) - struct (N) ]
CONSTRUCTOR:NAME:OptionPane OptionPane OptionPane(Dialog dialog, Object message, int messageType, int optionType):  | option (NM) pane (N) 	++ :: [ dialog (N) - dialog (N) ] :: [ object (NI) - message (NI) ] :: [ int (N) - message (NM) type (N) ] :: [ int (N) - option (NM) type (N) ]
SPECIAL:NAME:void doAction(): do (VI)  | action (N) 	++ :: ANONYMOUS (N) 
ENDS_WITH_ED:NAME:void textValueChanged(DocumentEvent e): handle (V) | text (NM) value (NM) changed (N) 	++ :: [ document (NM) event (NI) - e (N) ] :: ANONYMOUS (N)  :: void (N) 
SPECIAL:NAME:NextTableCellAction void getProperties(): get (V)  | properties (N) 	++ :: next (DT) table (NM) cell (NM) action (N) 
BASE_VERB:CLAS:IbisReadMessage long finish(): finish (V)  | ibis (NM) read (NM) message (NI) 	++ :: long (N) 
SPECIAL:NAME:Action void setConfiguration(PageConfiguration configuration): set (V)  | configuration (NI) 	++ :: [ page (NM) configuration (NI) - configuration (NI) ] :: action (N) 
SPECIAL:NAME:SMapData void removeWalls(SObject centre, double range): remove (V)  | walls (N) 	++ :: [ S (NM) object (NI) - centre (N) ] :: [ double (N) - range (N) ] :: S (NM) map (NM) data (NI) 
SPECIAL:NAME:PosTotal void setPosNo(int value): set (V)  | pos (NM) no (DT) 	++ :: [ int (N) - value (NI) ] :: pos (NM) total (N) 
SPECIAL:NAME:ObjectNameTuple String getName(): get (V)  | name (NI) 	++ :: string (NI)  :: object (NM) name (NM) tuple (N) 
SPECIAL:NAME:SpinnerWidget void addEventListener(ChangeListener l): add (V)  | EQUIV[event (NM) listener (N) , [ change (NM) listener (N) - l (N) ]]	++ :: spinner (NM) widget (N) 
SPECIAL:CLAS:void run(): run (VI)  | ANONYMOUS (N) 	++
SPECIAL:NAME:DashboardMultiPageContributor IAction getAction(DashboardEditor editor, String actionID): get (V)  | EQUIV[action (N) , [ string (NI) - action (NM) ID (NI) ]]	++ :: [ dashboard (NM) editor (N) - editor (N) ] :: I (NM) action (N)  :: dashboard (NM) multi (NM) page (NM) contributor (N) 
SPECIAL:NAME:GSSContextSpi void setChannelBinding(ChannelBinding cb): set (V)  | channel (NM) binding (N) 	++ :: [ channel (NM) binding (N) - cb (N) ] :: GSS (NM) context (NM) spi (N) 
BASE_VERB:NAME:VMProjektImpl void selectAllProduktvorlagen(): select (V)  | all (DT) produktvorlagen (N) 	++ :: VM (NM) projekt (NM) impl (NI) 
SPECIAL:FORM:SVNLogStream void write(int b): write (V)  | [ int (N) - b (N) ]	++ :: SVN (NM) log (NM) stream (NI) 
NOUN_PHRASE:NAME:QueryFactory Query newConnectedForwardPageQuery(String sql, long pageSize): get (V) | new (NM) connected (NM) forward (NM) page (NM) query (N) 	++ :: [ string (NI) - sql (N) ] :: [ long (N) - page (NM) size (N) ] :: query (NM) factory (N)  :: query (N) 
SPECIAL:NAME:SExtract void addKeywordTags(Sentence sentence, String tag): add (V)  | keyword (NM) tags (N) 	++ :: [ sentence (N) - sentence (N) ] :: [ string (NI) - tag (NI) ] :: S (NM) extract (N) 
SPECIAL:NAME:TokenElement SQLToken getToken(): get (V)  | token (N) 	++ :: SQL (NM) token (N)  :: token (NM) element (NI) 
SPECIAL:NAME:CMWAdvancedSelectPage Button getImportASignedButton(): get (V)  | import (NM) A (NM) signed (NM) button (N) 	++ :: button (N)  :: CMW (NM) advanced (NM) select (NM) page (N) 
V_3PS:CLAS:SwiXUtil static boolean startsWithIgnoreCase(String text, String subtext): starts (V)  | swi (NM) X (NM) util (N) -- with (P) ignore (NM) case (N) 	++ :: [ string (NI) - text (NI) ] :: [ string (NI) - subtext (N) ] :: boolean (N) 
SPECIAL:NAME:JabapperExecutorImpl Configuration getConfiguration(): get (V)  | configuration (NI) 	++ :: configuration (NI)  :: jabapper (NM) executor (NM) impl (NI) 
BASE_VERB:FORM:void handle(Exception exception): handle (VI)  | [ exception (N) - exception (N) ]	++ :: ANONYMOUS (N) 
SPECIAL:NAME:AnjiNetTranscriber Class getPhenotypeClass(): get (V)  | phenotype (NM) class (NI) 	++ :: class (NI)  :: anji (NM) net (NM) transcriber (N) 
SPECIAL:NAME:IReader void setCreator(String creator): set (V)  | creator (N) 	++ :: [ string (NI) - creator (N) ] :: I (NM) reader (N) 
BASE_VERB:CLAS:OccurrenceImpl void destroy(): destroy (V)  | occurrence (NM) impl (NI) 	++
SPECIAL:FORM:RefreshCommand void execute(SQLForm form, String command, String SQLString): execute (VI)  | [ SQL (NM) form (N) - form (N) ]	++ :: [ string (NI) - command (N) ] :: [ string (NI) - SQL (NM) string (NI) ] :: refresh (NM) command (N) 
CONSTRUCTOR:NAME:HospitalScenarioGenerator HospitalScenarioGenerator HospitalScenarioGenerator():  | hospital (NM) scenario (NM) generator (N) 	++
BASE_VERB:NAME:SyncActivityValidator boolean validateHasPrecondition(Expression value): validate (VI)  | has (NM) precondition (N) 	++ :: [ expression (N) - value (NI) ] :: boolean (N)  :: sync (NM) activity (NM) validator (N) 
V_3PS:FORM:WorldImageFormat boolean accepts(Object input): accepts (V)  | [ object (NI) - input (NI) ]	++ :: world (NM) image (NM) format (NI)  :: boolean (N) 
SPECIAL:NAME:JicarillaInstantiationExceptionTestCase Throwable getInstance(String message, Throwable cause): get (V)  | instance (NI) 	++ :: [ string (NI) - message (NI) ] :: [ throwable (N) - cause (N) ] :: throwable (N)  :: jicarilla (NM) instantiation (NM) exception (NM) test (NM) case (N) 
SPECIAL:NAME:SimpleXYZ void setY(float y): set (V)  | Y (N) 	++ :: [ float (N) - y (N) ] :: simple (NM) XYZ (N) 
VOID_NP:NAME:MonitorWizard void nextCalled1(int currentPanel): handle (V) | next (DT) called (N) 1 (D) 	++ :: [ int (N) - current (NM) panel (N) ] :: monitor (NM) wizard (N)  :: void (N) 
NOUN_PHRASE:NAME:Container Iterator iterator(): get (V) | iterator (N) 	++ :: container (NI)  :: iterator (N) 
V_3P_IRR:NAME:MimeTypes static boolean isBitmapFormat(String format): is (V)  | EQUIV[bitmap (NM) format (NI) , [ string (NI) - format (NI) ]]	++ :: boolean (N)  :: mime (NM) types (N) 
SPECIAL:FORM:RDFCrawler static void main(String args): main (V)  | [ string (NI) - args (N) ]	++ :: RDF (NM) crawler (N) 
SPECIAL:NAME:CacttestdataextnBean void setPcrOdtotalug(long newVal): set (V)  | pcr (NM) odtotalug (N) 	++ :: [ long (N) - new (NM) val (NI) ] :: cacttestdataextn (NM) bean (NI) 
ENDS_WITH_ED:NAME:SearchToolBarAction void actionPerformed(ActionEvent e): handle (V) | action (NM) performed (N) 	++ :: [ action (NM) event (NI) - e (N) ] :: search (NM) tool (NM) bar (NM) action (N)  :: void (N) 
SPECIAL:NAME:BusinessInfo void setServiceInfos(ServiceInfos infos): set (V)  | service (NM) infos (N) 	++ :: [ service (NM) infos (N) - infos (N) ] :: business (NM) info (NI) 
SPECIAL:NAME:MsnP2PMessage String getP2PDest(): get (V)  | P (NM) 2 (D) P (NM) dest (N) 	++ :: string (NI)  :: msn (NM) P (NM) 2 (NM) P (NM) message (NI) 
SPECIAL:NAME:AbstractHtmlTag void setOnmouseout(String onmouseout): set (V)  | onmouseout (N) 	++ :: [ string (NI) - onmouseout (N) ] :: abstract (NM) html (NM) tag (NI) 
SPECIAL:NAME:FilterModel Set getMetricSet(): get (V)  | metric (NM) set (N) 	++ :: set (N)  :: filter (NM) model (NI) 
PREP:NAME:CycList String toPrettyString(String indent): convert (V) | to (P) pretty (NM) string (NI) 	++ :: [ string (NI) - indent (N) ] :: cyc (NM) list (N)  :: string (NI) 
BASE_VERB:NAME:SchemaDiagramEditor void firePropertyChange(int propertyId): fire (V)  | property (NM) change (N) 	++ :: [ int (N) - property (NM) id (NI) ] :: schema (NM) diagram (NM) editor (N) 
V_3PS:CLAS:PrimitivePersistenceDelegate boolean mutatesTo(Object oldInstance, Object newInstance): mutates (V)  | primitive (NM) persistence (NM) delegate (N) -- to (P) [ object (NI) - old (NM) instance (NI) ]	++ :: [ object (NI) - old (NM) instance (NI) ] :: [ object (NI) - new (NM) instance (NI) ] :: boolean (N) 
BASE_VERB:NAME:Visitor void visitLMUL(LMUL obj): visit (V)  | EQUIV[LMUL (N) , [ LMUL (N) - obj (NI) ]]	++ :: visitor (N) 
BASE_VERB:NAME:DcmObject DcmElement putUL(int tag, int values): put (V)  | UL (N) 	++ :: [ int (N) - tag (NI) ] :: [ int (N) - values (N) ] :: dcm (NM) element (NI)  :: dcm (NM) object (NI) 
SPECIAL:NAME:CQInstallXML String getQwhere(): get (V)  | qwhere (N) 	++ :: string (NI)  :: CQ (NM) install (NM) XML (N) 
SPECIAL:NAME:CalendarPane Locale getLocale(): get (V)  | locale (N) 	++ :: locale (N)  :: calendar (NM) pane (N) 
SPECIAL:NAME:EGTableModel EGAxeHorizontal getH(): get (V)  | H (N) 	++ :: EG (NM) axe (NM) horizontal (N)  :: EG (NM) table (NM) model (NI) 
BASE_VERB:NAME:MSImageProcessor void ComputeEdgeStrengths(): compute (V)  | edge (NM) strengths (N) 	++ :: MS (NM) image (NM) processor (N) 
ENDS_WITH_ED:NAME:MetadataSetModel void attributeChanged(AttributeEvent ae): handle (V) | attribute (NM) changed (N) 	++ :: [ attribute (NM) event (NI) - ae (N) ] :: metadata (NM) set (NM) model (NI)  :: void (N) 
V_3PS:NAME:RuleTrace boolean containsState(State state): contains (V)  | EQUIV[state (N) , [ state (N) - state (N) ]]	++ :: boolean (N)  :: rule (NM) trace (N) 
SPECIAL:FORM:SecurityTypeRequest EncodedText get(EncodedText value): get (V)  | [ encoded (NM) text (NI) - value (NI) ]	++ :: security (NM) type (NM) request (N)  :: encoded (NM) text (NI) 
BASE_VERB:FORM:DecimalFormat Number parse(String str, ParsePosition pos): parse (V)  | [ string (NI) - str (NI) ]	++ :: [ parse (NM) position (N) - pos (N) ] :: decimal (NM) format (NI)  :: number (NI) 
PREP:NAME:ReversedDepthFirstAdapter void inAGrammar(AGrammar node):  | in (P) A (NM) grammar (N) 	++ :: [ A (NM) grammar (N) - node (NI) ] :: reversed (NM) depth (NM) first (NM) adapter (NI)  :: void (N) 
SPECIAL:FORM:RequesterState void delete(int id): delete (V)  | [ int (N) - id (NI) ]	++ :: requester (NM) state (N) 
CONSTRUCTOR:NAME:LocationParser LocationParser LocationParser(String location, int offset):  | location (NM) parser (N) 	++ :: [ string (NI) - location (NI) ] :: [ int (N) - offset (N) ]
V_3PS:NAME:MultiMap boolean containsKey(Object key): contains (V)  | EQUIV[key (NI) , [ object (NI) - key (NI) ]]	++ :: boolean (N)  :: multi (NM) map (N) 
BASE_VERB:NAME:RadeonCore boolean verifyBiosSignature(MemoryResource rom): verify (VI)  | bios (NM) signature (N) 	++ :: [ memory (NM) resource (N) - rom (N) ] :: boolean (N)  :: radeon (NM) core (N) 
SPECIAL:NAME:AbstractDrawRect Shape getShapeOfOperation(): get (V)  | shape (N) -- of (P) operation (N) 	++ :: shape (N)  :: abstract (NM) draw (NM) rect (N) 
SPECIAL:FORM:Retrieve static void main(String args): main (V)  | [ string (NI) - args (N) ]	++ :: retrieve (N) 
SPECIAL:NAME:BuoyPatternWrapper void setNameVisible(boolean val): set (V)  | name (NM) visible (N) 	++ :: [ boolean (N) - val (NI) ] :: buoy (NM) pattern (NM) wrapper (NI) 
VOID_NP:NAME:NearSpans void partialListToQueue(): handle (V) | partial (NM) list (NM) to (NM) queue (N) 	++ :: near (NM) spans (N)  :: void (N) 
NOUN_PHRASE:NAME:ToolBox static int triangularNumber(int n): get (V) | triangular (NM) number (NI) 	++ :: [ int (N) - n (N) ] :: tool (NM) box (N)  :: int (N) 
SPECIAL:NAME:TypeRef void setType(ModuleTypeMember type): set (V)  | type (N) 	++ :: [ module (NM) type (NM) member (N) - type (N) ] :: type (NM) ref (NI) 
SPECIAL:NAME:JavaliFolderInfo int getUnreadMessageCount(): get (V)  | unread (NM) message (NM) count (N) 	++ :: int (N)  :: javali (NM) folder (NM) info (NI) 
ENDS_WITH_ED:NAME:void actionPerformed(ActionEvent ev): handle (V) | action (NM) performed (N) 	++ :: [ action (NM) event (NI) - ev (N) ] :: ANONYMOUS (N)  :: void (N) 
BASE_VERB:FORM:PAMUserDatabase void logout(User user): logout (V)  | [ user (N) - user (N) ]	++ :: PAM (NM) user (NM) database (N) 
SPECIAL:NAME:CalendarPage String renderMonth(String monthStr, String yearStr): render (V)  | EQUIV[month (N) , [ string (NI) - month (NM) str (NI) ]]	++ :: [ string (NI) - year (NM) str (NI) ] :: string (NI)  :: calendar (NM) page (N) 
NOUN_PHRASE:NAME:DefectDensity static double density(int bugs, int ncss): get (V) | density (N) 	++ :: [ int (N) - bugs (N) ] :: [ int (N) - ncss (N) ] :: defect (NM) density (N)  :: double (N) 
SPECIAL:NAME:Node void setDisplayColor(Color displayColor): set (V)  | display (NM) color (N) 	++ :: [ color (N) - display (NM) color (N) ] :: node (NI) 
ENDS_WITH_ING:NAME:PasswordParser void disable_tracing(): handle (V) | disable (NM) tracing (N) 	++ :: password (NM) parser (N)  :: void (N) 
BASE_VERB:FORM:SwingListPeer void deselect(int index): deselect (V)  | [ int (N) - index (NI) ]	++ :: swing (NM) list (NM) peer (N) 
PREP:NAME:ArraysUtils static Set asSet(Object a):  | as (P) set (N) 	++ :: [ object (NI) - a (N) ] :: arrays (NM) utils (N)  :: set (N) 
SPECIAL:FORM:StatementDelegator int executeUpdate(String sql, int autoGeneratedKeys): execute (VI) update (V)  | [ string (NI) - sql (N) ]	++ :: [ int (N) - auto (NM) generated (NM) keys (N) ] :: statement (NM) delegator (N)  :: int (N) 
SPECIAL:NAME:RequestRuntimeInfo PageRuntimeInfo addPage(String path, SmithContext context, boolean isFullPagePath): add (V)  | EQUIV[page (N) , [ boolean (N) - is (NM) full (NM) page (NM) path (NI) ]]	++ :: [ string (NI) - path (NI) ] :: [ smith (NM) context (N) - context (N) ] :: page (NM) runtime (NM) info (NI)  :: request (NM) runtime (NM) info (NI) 
SPECIAL:FORM:CommandBlock void execute(IProcessor generator): execute (VI)  | [ I (NM) processor (N) - generator (N) ]	++ :: command (NM) block (N) 
SPECIAL:NAME:MyURI void setKey(URI key): set (V)  | key (NI) 	++ :: [ URI (NI) - key (NI) ] :: my (PR) URI (NI) 
BASE_VERB:NAME:DVApplication void callJavaTask(String name, VerilogReg doneReg, VerilogObject argVars): call (V)  | java (NM) task (N) 	++ :: [ string (NI) - name (NI) ] :: [ verilog (NM) reg (N) - done (NM) reg (N) ] :: [ verilog (NM) object (NI) - arg (NM) vars (N) ] :: DV (NM) application (N) 
SPECIAL:NAME:SQLExecution static String getFreeUID(SQLParent parent): get (V)  | free (NM) UID (N) 	++ :: [ SQL (NM) parent (N) - parent (N) ] :: string (NI)  :: SQL (NM) execution (N) 
SPECIAL:NAME:WController void doPost(HttpServletRequest request, HttpServletResponse response): do (VI)  | post (N) 	++ :: [ http (NM) servlet (NM) request (N) - request (N) ] :: [ http (NM) servlet (NM) response (N) - response (N) ] :: W (NM) controller (N) 
SPECIAL:NAME:DeleteMeta void setKeyStream(String keyStream): set (V)  | key (NM) stream (NI) 	++ :: [ string (NI) - key (NM) stream (NI) ] :: delete (NM) meta (N) 
ENDS_WITH_ED:NAME:void actionPerformed(ActionEvent event): handle (V) | action (NM) performed (N) 	++ :: [ action (NM) event (NI) - event (NI) ] :: ANONYMOUS (N)  :: void (N) 
VOID_NP:NAME:BindenlichtJNI static void IVideoDriver_setMaterial(long jarg1, long jarg2): handle (V) | I (PRE) video (NM) driver (NM) set (NM) material (N) 	++ :: [ long (N) - jarg (NM) 1 (N) ] :: [ long (N) - jarg (NM) 2 (N) ] :: bindenlicht (NM) JNI (N)  :: void (N) 
SPECIAL:NAME:Row void setAgent(AgentTYPE agent): set (V)  | agent (N) 	++ :: [ agent (NM) TYPE (N) - agent (N) ] :: row (N) 
UNKOWN: :GenParse static boolean case$dot76(CleanVM vm):
SPECIAL:FORM:MochaToolBarReference void add(MochaToolBarButton btn): add (V)  | [ mocha (NM) tool (NM) bar (NM) button (N) - btn (N) ]	++ :: mocha (NM) tool (NM) bar (NM) reference (NI) 
SPECIAL:NAME:InitUserAction String getEmailKey(): get (V)  | email (NM) key (NI) 	++ :: string (NI)  :: init (NM) user (NM) action (N) 
ING_VERB:NAME:StreamState void lacing_expand(int needed): lacing (V)  | expand (N) 	++ :: [ int (N) - needed (N) ] :: stream (NM) state (N) 
SPECIAL:FORM:IMARFServerWS_getRemoteFeatureExtraction_ResponseStruct_SOAPSerializer Object doDeserialize(SOAPDeserializationState state, XMLReader reader, SOAPDeserializationContext context): do (VI) deserialize (V)  | [ SOAP (NM) deserialization (NM) state (N) - state (N) ]	++ :: [ XML (NM) reader (N) - reader (N) ] :: [ SOAP (NM) deserialization (NM) context (N) - context (N) ] :: IMARF (NM) server (NM) WS (NM) get (NM) remote (NM) feature (NM) extraction (NM) response (NM) struct (NM) SOAP (NM) serializer (N)  :: object (NI) 
BASE_VERB:NAME:Interceptor XDispatch queryDispatch(URL aURL, String sTarget, int nSearchFlags): query (V)  | dispatch (N) 	++ :: [ URL (NI) - a (NM) URL (NI) ] :: [ string (NI) - s (NM) target (N) ] :: [ int (N) - n (NM) search (NM) flags (N) ] :: X (NM) dispatch (N)  :: interceptor (N) 
VOID_NP:NAME:NPC void merchant(boolean b): handle (V) | merchant (N) 	++ :: [ boolean (N) - b (N) ] :: NPC (N)  :: void (N) 
ENDS_WITH_ED:NAME:void ancestorRemoved(AncestorEvent e): handle (V) | ancestor (NM) removed (N) 	++ :: [ ancestor (NM) event (NI) - e (N) ] :: ANONYMOUS (N)  :: void (N) 
EMPTY:NONE:JavaParser boolean jj_3R_290():  | jj (PRE) 3 (D) R (PRE) 290 (D) 
SPECIAL:NAME:POAOperations ImplicitActivationPolicy create_implicit_activation_policy(ImplicitActivationPolicyValue a_value): create (V)  | EQUIV[implicit (NM) activation (NM) policy (N) , [ implicit (NM) activation (NM) policy (NM) value (NI) - a (NM) value (NI) ]]	++ :: implicit (NM) activation (NM) policy (N)  :: POA (NM) operations (N) 
BASE_VERB:FORM:Transformer void transform(Source xmlSource, Result outputTarget): transform (V)  | [ source (NI) - xml (NM) source (NI) ]	++ :: [ result (N) - output (NM) target (N) ] :: transformer (N) 
SPECIAL:NAME:RequestPasswordCommand void addFormRow(Vector<Element> Cols, String txt, String name, String content, Element msg): add (V)  | form (NM) row (N) 	++ :: [ vector (NM) element (NI) - cols (N) ] :: [ string (NI) - txt (N) ] :: [ string (NI) - name (NI) ] :: [ string (NI) - content (N) ] :: [ element (NI) - msg (NI) ] :: request (NM) password (NM) command (N) 
SPECIAL:NAME:EntryComparator EntryComparator getInstance(String field, String order): get (V)  | instance (NI) 	++ :: [ string (NI) - field (N) ] :: [ string (NI) - order (N) ] :: entry (NM) comparator (N)  :: entry (NM) comparator (N) 
SPECIAL:NAME:WingRootPane void addPopup(WingComponent c): add (V)  | popup (N) 	++ :: [ wing (NM) component (N) - c (N) ] :: wing (NM) root (NM) pane (N) 
SPECIAL:NAME:JavaliSessionImpl JavaliMessagePart getPartClipboard(): get (V)  | part (NM) clipboard (N) 	++ :: javali (NM) message (NM) part (N)  :: javali (NM) session (NM) impl (NI) 
SPECIAL:NAME:Service String getString(): get (V)  | string (NI) 	++ :: string (NI)  :: service (N) 
ENDS_WITH_ED:NAME:void stateChanged(ChangeEvent e): handle (V) | state (NM) changed (N) 	++ :: [ change (NM) event (NI) - e (N) ] :: ANONYMOUS (N)  :: void (N) 
SPECIAL:NAME:RDBMSAdapter String getDropTableStatement(DatastoreContainerObject table): get (V)  | drop (NM) table (NM) statement (NI) 	++ :: [ datastore (NM) container (NM) object (NI) - table (N) ] :: string (NI)  :: RDBMS (NM) adapter (NI) 
SPECIAL:NAME:DCUserSession InetSocketAddress getRemoteSocketAddress(): get (V)  | remote (NM) socket (NM) address (NI) 	++ :: inet (NM) socket (NM) address (NI)  :: DC (NM) user (NM) session (N) 
SPECIAL:NAME:JreepadView void addChildrenFromTextFiles(File inFiles): add (V)  | children (N) -- from (P) EQUIV[text (NM) files (N) , [ file (NI) - in (NM) files (N) ]]	++ :: jreepad (NM) view (NI) 
SPECIAL:NAME:BencodedElement byte getEncoded(): get (V)  | encoded (N) 	++ :: byte (N)  :: bencoded (NM) element (NI) 
SPECIAL:NAME:FoldingSectionTag String getLabel(): get (V)  | label (NI) 	++ :: string (NI)  :: folding (NM) section (NM) tag (NI) 
SPECIAL:NAME:ByteBufferArray void copyBytesFrom(byte srcBytes, int srcOffset, int nbBytesToCopy, int destOffset): copy (V)  | EQUIV[bytes (NI) , [ byte (N) - src (NM) bytes (NI) ]]-- from (P) [ byte (N) - src (NM) bytes (NI) ]	++ :: [ int (N) - src (NM) offset (N) ] :: [ int (N) - nb (NM) bytes (NM) to (NM) copy (N) ] :: [ int (N) - dest (NM) offset (N) ] :: byte (NM) buffer (NM) array (N) 
SPECIAL:NAME:SendSettingData void setSendType(int aSendType): set (V)  | send (NM) type (N) 	++ :: [ int (N) - a (NM) send (NM) type (N) ] :: send (NM) setting (NM) data (NI) 
ENDS_WITH_ED:NAME:Menu_ActionAdapter void actionPerformed(ActionEvent actionEvent): handle (V) | action (NM) performed (N) 	++ :: [ action (NM) event (NI) - action (NM) event (NI) ] :: menu (NM) action (NM) adapter (NI)  :: void (N) 
BASE_VERB:NAME:ConnectionWrapper PreparedStatement prepareStatement(String arg0, int arg1, int arg2, int arg3): prepare (V)  | statement (NI) 	++ :: [ string (NI) - arg (NM) 0 (N) ] :: [ int (N) - arg (NM) 1 (N) ] :: [ int (N) - arg (NM) 2 (N) ] :: [ int (N) - arg (NM) 3 (N) ] :: prepared (NM) statement (NI)  :: connection (NM) wrapper (NI) 
ENDS_WITH_ED:NAME:void mouseReleased(MouseEvent evt): handle (V) | mouse (NM) released (N) 	++ :: [ mouse (NM) event (NI) - evt (N) ] :: ANONYMOUS (N)  :: void (N) 
SPECIAL:CLAS:AlertDAO List findByCreateTimeAndPriority(Integer subj, long begin, long end, int priority, PageInfo pageInfo): find (V)  | alert (NM) DAO (N) -- by (P) EQUIV[create (NM) time (NM) and (NM) priority (N) , [ int (N) - priority (N) ]]	++ :: [ integer (N) - subj (N) ] :: [ long (N) - begin (N) ] :: [ long (N) - end (N) ] :: [ page (NM) info (NI) - page (NM) info (NI) ] :: list (N) 
SPECIAL:NAME:DiceRoll List<Die> getRolls(int rollAt): get (V)  | rolls (N) 	++ :: [ int (N) - roll (NM) at (N) ] :: list (NM) die (N)  :: dice (NM) roll (N) 
BASE_VERB:FORM:WctDbClient_1 void connect(String driver, String url, String username, String password): connect (V)  | [ string (NI) - driver (N) ]	++ :: [ string (NI) - url (NI) ] :: [ string (NI) - username (N) ] :: [ string (NI) - password (N) ] :: wct (NM) db (NM) client (NM) 1 (N) 
V_3PS:FORM:Priority boolean equals(Object o): equals (V)  | [ object (NI) - o (N) ]	++ :: priority (N)  :: boolean (N) 
SPECIAL:CLAS:Queue Object remove(): remove (V)  | queue (N) 	++ :: object (NI) 
SPECIAL:NAME:RelInput void enqueueReceiveBuffer(RelReceiveBuffer packet): enqueue (VI) receive (V)  | EQUIV[buffer (NI) , [ rel (NM) receive (NM) buffer (NI) - packet (N) ]]	++ :: rel (NM) input (NI) 
SPECIAL:NAME:SimpleActionsTaskSpecificationImpl void addXml(SimpleActions simpleActionsXml): add (V)  | EQUIV[xml (N) , [ simple (NM) actions (N) - simple (NM) actions (NM) xml (N) ]]	++ :: simple (NM) actions (NM) task (NM) specification (NM) impl (NI) 
SPECIAL:NAME:ValueOperand Object getValue(): get (V)  | value (NI) 	++ :: object (NI)  :: value (NM) operand (N) 
ENDS_WITH_ED:NAME:ConnectInterface void windowOpened(WindowEvent e): handle (V) | window (NM) opened (N) 	++ :: [ window (NM) event (NI) - e (N) ] :: connect (NM) interface (NI)  :: void (N) 
SPECIAL:NAME:Query Answer executeQuery(Graph graph, QueryEngine queryEngine): execute (VI)  | query (N) 	++ :: [ graph (N) - graph (N) ] :: [ query (NM) engine (N) - query (NM) engine (N) ] :: answer (N)  :: query (N) 
ENDS_WITH_ED:NAME:CharacterBlock int nextSetBit(): handle (V) | next (DT) set (NM) bit (N) 	++ :: character (NM) block (N)  :: int (N) 
SPECIAL:NAME:User Date getLastVisit(): get (V)  | last (DT) visit (N) 	++ :: date (N)  :: user (N) 
SPECIAL:CLAS:OrgGroupRoleUtil static OrgGroupRole findByRoleId_Last(long roleId, OrderByComparator obc): find (V)  | org (NM) group (NM) role (NM) util (N) -- by (P) role (NM) id (NM) last (DT) 	++ :: [ long (N) - role (NM) id (NI) ] :: [ order (NM) by (NM) comparator (N) - obc (N) ] :: org (NM) group (NM) role (N) 
PREP:NAME:UploadItem String toString(): convert (V) | to (P) string (NI) 	++ :: upload (NM) item (NI)  :: string (NI) 
ENDS_WITH_ED:NAME:JProductFinder void jcmdCancelActionPerformed(ActionEvent evt): handle (V) | jcmd (NM) cancel (NM) action (NM) performed (N) 	++ :: [ action (NM) event (NI) - evt (N) ] :: J (NM) product (NM) finder (N)  :: void (N) 
BASE_VERB:NAME:custMsg void showMsgs(PrintWriter toClient): show (V)  | msgs (N) 	++ :: [ print (NM) writer (N) - to (NM) client (N) ] :: cust (NM) msg (NI) 
EVENT_PARAM:NAME:DebugUI void threadStart(ThreadStartEvent event): handle (V) | thread (NM) start (N) 	++ :: [ thread (NM) start (NM) event (NI) - event (NI) ] :: debug (NM) UI (N)  :: void (N) 
BASE_VERB:NAME:Builder void parseStage(String thisCommandLine): parse (V)  | stage (N) 	++ :: [ string (NI) - this (PR) command (NM) line (N) ] :: builder (N) 
PREP:NAME:ArrayUtil static String toString(Object a): convert (V) | to (P) string (NI) 	++ :: [ object (NI) - a (N) ] :: array (NM) util (N)  :: string (NI) 
SPECIAL:NAME:OS static int CreatePen(int fnPenStyle, int nWidth, int crColor): create (V)  | pen (N) 	++ :: [ int (N) - fn (NM) pen (NM) style (N) ] :: [ int (N) - n (NM) width (N) ] :: [ int (N) - cr (NM) color (N) ] :: int (N)  :: OS (N) 
PREP:NAME:CIM_ObjectManagerCommunicationMechanism String toString(): convert (V) | to (P) string (NI) 	++ :: CIM (NM) object (NM) manager (NM) communication (NM) mechanism (N)  :: string (NI) 
SPECIAL:NAME:TransmitterPdu RadioEntityType getRadioEntityType(): get (V)  | radio (NM) entity (NM) type (N) 	++ :: radio (NM) entity (NM) type (N)  :: transmitter (NM) pdu (N) 
V_3P_IRR:NAME:DocumentWordTokenizer boolean isNewSentence(): is (V)  | new (NM) sentence (N) 	++ :: boolean (N)  :: document (NM) word (NM) tokenizer (N) 
SPECIAL:NAME:Timing static Style createPolyStyle(String typeName): create (V)  | poly (NM) style (N) 	++ :: [ string (NI) - type (NM) name (NI) ] :: style (N)  :: timing (N) 
CONSTRUCTOR:NAME:tank tank tank():  | tank (N) 	++
SPECIAL:NAME:RMIServerIL Queue createQueue(ConnectionToken dc, String dest): create (V)  | queue (N) 	++ :: [ connection (NM) token (N) - dc (N) ] :: [ string (NI) - dest (N) ] :: queue (N)  :: RMI (NM) server (NM) IL (N) 
BASE_VERB:FORM:XQMsg String ask(int id, Properties args): ask (V)  | [ int (N) - id (NI) ]	++ :: [ properties (N) - args (N) ] :: XQ (NM) msg (NI)  :: string (NI) 
BASE_VERB:NAME:ANTLRParser void lexerSpec(String doc): lexer (V)  | spec (NI) 	++ :: [ string (NI) - doc (NI) ] :: ANTLR (NM) parser (N) 
SPECIAL:NAME:Group String getDesciption(): get (V)  | desciption (N) 	++ :: string (NI)  :: group (N) 
V_3P_IRR:NAME:KunststoffLookAndFeel boolean isNativeLookAndFeel(): is (V)  | native (NM) look (NM) and (NM) feel (N) 	++ :: boolean (N)  :: kunststoff (NM) look (NM) and (NM) feel (N) 
BASE_VERB:FORM:SmapGenVisitor void visit(JspText n): visit (V)  | [ jsp (NM) text (NI) - n (N) ]	++ :: smap (NM) gen (NM) visitor (N) 
CONSTRUCTOR:NAME:tt tt tt():  | tt (N) 	++
SPECIAL:NAME:Statistics static double getSlope(Number xData, Number yData): get (V)  | slope (N) 	++ :: [ number (NI) - x (NM) data (NI) ] :: [ number (NI) - y (NM) data (NI) ] :: double (N)  :: statistics (N) 
SPECIAL:NAME:XJLReader void read_interface(IXOLElement $IXOLElement): read (V)  | interface (NI) 	++ :: [ IXOL (NM) element (NI) - IXOL (NM) element (NI) ] :: XJL (NM) reader (N) 
SPECIAL:NAME:GncCountDataImpl UnmarshallingEventHandler createUnmarshaller(UnmarshallingContext context): create (V)  | unmarshaller (N) 	++ :: [ unmarshalling (NM) context (N) - context (N) ] :: unmarshalling (NM) event (NM) handler (N)  :: gnc (NM) count (NM) data (NM) impl (NI) 
SPECIAL:NAME:TextTag int doEndTag(): do (VI)  | end (NM) tag (NI) 	++ :: int (N)  :: text (NM) tag (NI) 
SPECIAL:NAME:FileStream String getMessage(): get (V)  | message (NI) 	++ :: string (NI)  :: file (NM) stream (NI) 
BASE_VERB:NAME:ExportViewUtils static String escapeChars(String value): escape (V)  | chars (N) 	++ :: [ string (NI) - value (NI) ] :: string (NI)  :: export (NM) view (NM) utils (N) 
V_3P_IRR:NAME:SecurityUtils static boolean isUserAuthorisedForBlogAsBlogContributor(Blog blog): is (V)  | user (NM) authorised (N) -- for (P) blog (NM) as (NM) blog (NM) contributor (N) 	++ :: [ blog (N) - blog (N) ] :: boolean (N)  :: security (NM) utils (N) 
BASE_VERB:NAME:ComponentFacadeLogicImpl Collection handleGetManifestingArtifacts(): handle (VI) get (V)  | manifesting (NM) artifacts (N) 	++ :: collection (N)  :: component (NM) facade (NM) logic (NM) impl (NI) 
BASE_VERB:NAME:Grass void drawHerbe(GL gl, int px, int py, int pz, int rx, int ry, int rz): draw (V)  | herbe (N) 	++ :: [ GL (N) - gl (N) ] :: [ int (N) - px (N) ] :: [ int (N) - py (N) ] :: [ int (N) - pz (N) ] :: [ int (N) - rx (N) ] :: [ int (N) - ry (N) ] :: [ int (N) - rz (N) ] :: grass (N) 
VOID_NP:NAME:Sys static void alert(String title, String message): handle (V) | alert (N) 	++ :: [ string (NI) - title (N) ] :: [ string (NI) - message (NI) ] :: sys (N)  :: void (N) 
CONSTRUCTOR:NAME:DbPersistedEngine DbPersistedEngine DbPersistedEngine(Connection con):  | db (NM) persisted (NM) engine (N) 	++ :: [ connection (N) - con (N) ]
SPECIAL:NAME:FormatCharacterFileTask FormatCharacterFileTask getThis(): get (V)  | this (PR) 	++ :: format (NM) character (NM) file (NM) task (N)  :: format (NM) character (NM) file (NM) task (N) 
CONSTRUCTOR:NAME:Oid Oid Oid():  | oid (N) 	++
CONSTRUCTOR:NAME:CloseConfirmationListener CloseConfirmationListener CloseConfirmationListener(IBufferManager manager, IResult result):  | close (NM) confirmation (NM) listener (N) 	++ :: [ I (NM) buffer (NM) manager (N) - manager (N) ] :: [ I (NM) result (N) - result (N) ]
V_3P_IRR:NAME:WrapperManagerMBean boolean isDebugEnabled(): is (V)  | debug (NM) enabled (N) 	++ :: boolean (N)  :: wrapper (NM) manager (NM) M (NM) bean (NI) 
SPECIAL:NAME:PendingMsg long getDeadline(): get (V)  | deadline (N) 	++ :: long (N)  :: pending (NM) msg (NI) 
PREP:NAME:String toString(): convert (V) | to (P) string (NI) 	++ :: ANONYMOUS (N)  :: string (NI) 
NOUN_PHRASE:NAME:Matrix static _gsl_matrix_uchar_const_view gsl_matrix_uchar_const_view_vector_with_tda(gsl_vector_uchar arg0, Integer2 arg1, Integer2 arg2, Integer2 arg3): get (V) | gsl (PRE) matrix (NM) uchar (NM) const (NM) view (NM) vector (NM) with (NM) tda (N) 	++ :: [ gsl (NM) vector (NM) uchar (N) - arg (NM) 0 (N) ] :: [ integer (NM) 2 (N) - arg (NM) 1 (N) ] :: [ integer (NM) 2 (N) - arg (NM) 2 (N) ] :: [ integer (NM) 2 (N) - arg (NM) 3 (N) ] :: matrix (N)  :: gsl (NM) matrix (NM) uchar (NM) const (NM) view (NI) 
SPECIAL:NAME:JRImageLoader static Image loadImage(byte bytes): load (V)  | image (N) 	++ :: [ byte (N) - bytes (NI) ] :: image (N)  :: JR (NM) image (NM) loader (N) 
SPECIAL:NAME:RevengTreeNode List getPropertyPages(): get (V)  | property (NM) pages (N) 	++ :: list (N)  :: reveng (NM) tree (NM) node (NI) 
SPECIAL:NAME:ProxyAssembler void setField(Object cls, String name): set (V)  | field (N) 	++ :: [ object (NI) - cls (N) ] :: [ string (NI) - name (NI) ] :: proxy (NM) assembler (N) 
SPECIAL:NAME:OrderFormBean void setDateOrdered_Date(Date dateOrdered_Date): set (V)  | date (NM) ordered (NM) date (N) 	++ :: [ date (N) - date (NM) ordered (NM) date (N) ] :: order (NM) form (NM) bean (NI) 
CONSTRUCTOR:NAME:SwingSynchronizedCache SwingSynchronizedCache SwingSynchronizedCache(SwingListListener listener):  | swing (NM) synchronized (NM) cache (N) 	++ :: [ swing (NM) list (NM) listener (N) - listener (N) ]
ENDS_WITH_ED:NAME:ToolTip void mouseReleased(MouseEvent mouseEvent): handle (V) | mouse (NM) released (N) 	++ :: [ mouse (NM) event (NI) - mouse (NM) event (NI) ] :: tool (NM) tip (N)  :: void (N) 
BASE_VERB:NAME:Sockets static Socket connectHard(String host, int port, int timeout): connect (V)  | hard (N) 	++ :: [ string (NI) - host (N) ] :: [ int (N) - port (N) ] :: [ int (N) - timeout (N) ] :: socket (N)  :: sockets (N) 
BASE_VERB:NAME:ResultContext long numTerms(): num (V)  | terms (N) 	++ :: long (N)  :: result (NM) context (N) 
ENDS_WITH_ED:NAME:void internalFrameDeiconified(InternalFrameEvent evt): handle (V) | internal (NM) frame (NM) deiconified (N) 	++ :: [ internal (NM) frame (NM) event (NI) - evt (N) ] :: ANONYMOUS (N)  :: void (N) 
SPECIAL:NAME:FreeRotator void setPivot(int x, int y): set (V)  | pivot (N) 	++ :: [ int (N) - x (N) ] :: [ int (N) - y (N) ] :: free (NM) rotator (N) 
SPECIAL:NAME:X_AD_PrintLabel int getLabelWidth(): get (V)  | label (NM) width (N) 	++ :: int (N)  :: X (NM) AD (NM) print (NM) label (NI) 
ING_VERB:NAME:HitData int glancingMod(): glancing (V)  | mod (N) 	++ :: int (N)  :: hit (NM) data (NI) 
SPECIAL:NAME:UserImpl void setSession(Session session): set (V)  | session (N) 	++ :: [ session (N) - session (N) ] :: user (NM) impl (NI) 
SPECIAL:NAME:Period boolean getThursday(): get (V)  | thursday (N) 	++ :: boolean (N)  :: period (N) 
SPECIAL:NAME:ScriptObject void setProperty(String arg0, Object arg1): set (V)  | property (N) 	++ :: [ string (NI) - arg (NM) 0 (N) ] :: [ object (NI) - arg (NM) 1 (N) ] :: script (NM) object (NI) 
SPECIAL:NAME:Shipment int getQuantity(): get (V)  | quantity (N) 	++ :: int (N)  :: shipment (N) 
SPECIAL:NAME:AvailabilityDecorator void setResourceId(String resourceId): set (V)  | resource (NM) id (NI) 	++ :: [ string (NI) - resource (NM) id (NI) ] :: availability (NM) decorator (N) 
SPECIAL:NAME:PdfPatternPainter void setColorStroke(Color color): set (V)  | color (NM) stroke (N) 	++ :: [ color (N) - color (N) ] :: pdf (NM) pattern (NM) painter (N) 
SPECIAL:NAME:MdDataStore boolean checkSchema(PrintWriter perror, PrintWriter pfix): check (VI)  | schema (N) 	++ :: [ print (NM) writer (N) - perror (N) ] :: [ print (NM) writer (N) - pfix (N) ] :: boolean (N)  :: md (NM) data (NM) store (N) 
SPECIAL:NAME:TwoLocalExtremaPanel int getNumberSinks(): get (V)  | number (NM) sinks (N) 	++ :: int (N)  :: two (NM) local (NM) extrema (NM) panel (N) 
SPECIAL:NAME:EnvelopeVersion void setWorkflowID(String workflowID): set (V)  | workflow (NM) ID (NI) 	++ :: [ string (NI) - workflow (NM) ID (NI) ] :: envelope (NM) version (N) 
SPECIAL:NAME:CommonUserManager long getUserId(String login): get (V)  | user (NM) id (NI) 	++ :: [ string (NI) - login (N) ] :: long (N)  :: common (NM) user (NM) manager (N) 
ENDS_WITH_ED:NAME:TestAgentFrame void sendMenuItem_actionPerformed(ActionEvent e): handle (V) | send (NM) menu (NM) item (NM) action (NM) performed (N) 	++ :: [ action (NM) event (NI) - e (N) ] :: test (NM) agent (NM) frame (N)  :: void (N) 
SPECIAL:NAME:AbstractPool void doDestroyIfNeeded(): do (VI) destroy (V)  | if (NM) needed (N) 	++ :: abstract (NM) pool (N) 
SPECIAL:NAME:AnyType Class getInstanceType(): get (V)  | instance (NM) type (N) 	++ :: class (NI)  :: any (DT) type (N) 
SPECIAL:NAME:FileSystemCrawlFilterHandler Class retrieveClassHandled(): retrieve (V)  | class (NM) handled (N) 	++ :: class (NI)  :: file (NM) system (NM) crawl (NM) filter (NM) handler (N) 
BASE_VERB:FORM:OSCache void put(Object key, Object value): put (V)  | [ object (NI) - key (NI) ]	++ :: [ object (NI) - value (NI) ] :: OS (NM) cache (N) 
CONSTRUCTOR:NAME:AbstractCdrInput AbstractCdrInput AbstractCdrInput():  | abstract (NM) cdr (NM) input (NI) 	++
SPECIAL:NAME:ConnectionPool String getStats(): get (V)  | stats (N) 	++ :: string (NI)  :: connection (NM) pool (N) 
SPECIAL:NAME:MySqlReplContext void setDbName(String value): set (V)  | db (NM) name (NI) 	++ :: [ string (NI) - value (NI) ] :: my (PR) sql (NM) repl (NM) context (N) 
SPECIAL:CLAS:ReferenceGroupService void initialize(): initialize (V)  | reference (NM) group (NM) service (N) 	++
V_3PS:CLAS:CollectionMap Collection values(): values (V)  | collection (NM) map (N) 	++ :: collection (N) 
VOID_NP:NAME:GL11 static void glFrustum(double left, double right, double bottom, double top, double zNear, double zFar): handle (V) | gl (PRE) frustum (N) 	++ :: [ double (N) - left (N) ] :: [ double (N) - right (N) ] :: [ double (N) - bottom (N) ] :: [ double (N) - top (N) ] :: [ double (N) - z (NM) near (N) ] :: [ double (N) - z (NM) far (N) ] :: GL (NM) 11 (N)  :: void (N) 
V_3PS:FORM:InstanceTupel boolean equals(Object o): equals (V)  | [ object (NI) - o (N) ]	++ :: instance (NM) tupel (N)  :: boolean (N) 
ENDS_WITH_ED:NAME:FuncHashService void waitUntilDone(): handle (V) | wait (NM) until (NM) done (N) 	++ :: func (NM) hash (NM) service (N)  :: void (N) 
SPECIAL:NAME:TGeoAGDDBuilder static void SetOutputFileName(String fn_): set (V)  | output (NM) file (NM) name (NI) 	++ :: [ string (NI) - fn (N) ] :: T (NM) geo (NM) AGDD (NM) builder (N) 
BASE_VERB:NAME:DocBook2ManBase void titleEnd(SAXElement element): title (V)  | end (N) 	++ :: [ SAX (NM) element (NI) - element (NI) ] :: doc (NM) book (NM) 2 (NM) man (NM) base (N) 
SPECIAL:NAME:AssignablePlan void deleteAllOwners(): delete (V)  | all (DT) owners (N) 	++ :: assignable (NM) plan (N) 
NOUN_PHRASE:NAME:PortletManagementTestCase static Test suite(): get (V) | suite (N) 	++ :: portlet (NM) management (NM) test (NM) case (N)  :: test (N) 
SPECIAL:NAME:DbAssociatedRadioTag void setName(String name): set (V)  | name (NI) 	++ :: [ string (NI) - name (NI) ] :: db (NM) associated (NM) radio (NM) tag (NI) 
SPECIAL:NAME:HListElement void setLabel(String label): set (V)  | label (NI) 	++ :: [ string (NI) - label (NI) ] :: H (NM) list (NM) element (NI) 
NOUN_PHRASE:NAME:RPG static int radius(int r2): get (V) | radius (N) 	++ :: [ int (N) - r (NM) 2 (N) ] :: RPG (N)  :: int (N) 
SPECIAL:NAME:StaticChecker void printModuleTree(IRodinFile file, IModuleFactory moduleFactory): print (V)  | module (NM) tree (NI) 	++ :: [ I (NM) rodin (NM) file (NI) - file (NI) ] :: [ I (NM) module (NM) factory (N) - module (NM) factory (N) ] :: static (NM) checker (N) 
CONSTRUCTOR:NAME:OPAInternalHelper OPAInternalHelper OPAInternalHelper(JInternalFrame master):  | OPA (NM) internal (NM) helper (N) 	++ :: [ J (NM) internal (NM) frame (N) - master (N) ]
NOUN_PHRASE:NAME:PlayerEventHelper static TypeCode type(): get (V) | type (N) 	++ :: player (NM) event (NM) helper (N)  :: type (NM) code (NI) 
SPECIAL:NAME:InterleavedInputComponentBase String getName(): get (V)  | name (NI) 	++ :: string (NI)  :: interleaved (NM) input (NM) component (NM) base (N) 
SPECIAL:NAME:AniCheckboxGroup void setSelectedAniCheckbox(AniCheckbox box): set (V)  | selected (NM) ani (NM) checkbox (N) 	++ :: [ ani (NM) checkbox (N) - box (N) ] :: ani (NM) checkbox (NM) group (N) 
ENDS_WITH_ED:NAME:TripTreeModel TreePath fireNodeInserted(VirtualNodeInfo nodeinfo): handle (V) | fire (NM) node (NM) inserted (N) 	++ :: [ virtual (NM) node (NM) info (NI) - nodeinfo (N) ] :: trip (NM) tree (NM) model (NI)  :: tree (NM) path (NI) 
SPECIAL:NAME:CopperCoreAdminSoapBindingImpl void createUser(String in0): create (V)  | user (N) 	++ :: [ string (NI) - in (NM) 0 (N) ] :: copper (NM) core (NM) admin (NM) soap (NM) binding (NM) impl (NI) 
SPECIAL:NAME:AbstractHttpModule SourceBean getSharedData(): get (V)  | shared (NM) data (NI) 	++ :: source (NM) bean (NI)  :: abstract (NM) http (NM) module (N) 
SPECIAL:NAME:DLPUserInfo Calendar getLastSuccessfulSyncDate(): get (V)  | last (DT) successful (NM) sync (NM) date (N) 	++ :: calendar (N)  :: DLP (NM) user (NM) info (NI) 
SPECIAL:NAME:SwingUtils static JButton addButton(JComponent p, String name, String tooltiptext, String imageName): add (V)  | button (N) 	++ :: [ J (NM) component (N) - p (NI) ] :: [ string (NI) - name (NI) ] :: [ string (NI) - tooltiptext (N) ] :: [ string (NI) - image (NM) name (NI) ] :: J (NM) button (N)  :: swing (NM) utils (N) 
SPECIAL:NAME:AddStep void doNotifies(String notifierMethodName): do (VI)  | notifies (N) 	++ :: [ string (NI) - notifier (NM) method (NM) name (NI) ] :: add (NM) step (N) 
SPECIAL:NAME:LocationDialog void setCity(String cityName): set (V)  | city (N) 	++ :: [ string (NI) - city (NM) name (NI) ] :: location (NM) dialog (N) 
SPECIAL:NAME:AutoOperation void setColumnIndex(short column): set (V)  | column (NM) index (NI) 	++ :: [ short (N) - column (N) ] :: auto (NM) operation (N) 
BASE_VERB:FORM:URIParser int convert(char high, char low): convert (V)  | [ char (N) - high (N) ]	++ :: [ char (N) - low (N) ] :: URI (NM) parser (N)  :: int (N) 
SPECIAL:NAME:OptionsCollectionTag void setValue(String value): set (V)  | value (NI) 	++ :: [ string (NI) - value (NI) ] :: options (NM) collection (NM) tag (NI) 
SPECIAL:NAME:XmlParser int getAttributeDefaultValueType(String name, String aname): get (V)  | attribute (NM) default (NM) value (NM) type (N) 	++ :: [ string (NI) - name (NI) ] :: [ string (NI) - aname (N) ] :: int (N)  :: xml (NM) parser (N) 
BASE_VERB:NAME:ClassReferenceFixer void visitConstantElementValue(Clazz clazz, Annotation annotation, ConstantElementValue constantElementValue): visit (V)  | EQUIV[constant (NM) element (NM) value (NI) , [ constant (NM) element (NM) value (NI) - constant (NM) element (NM) value (NI) ]]	++ :: [ clazz (N) - clazz (N) ] :: [ annotation (N) - annotation (N) ] :: class (NM) reference (NM) fixer (N) 
SPECIAL:NAME:PageTool String getPageEncoding(): get (V)  | page (NM) encoding (N) 	++ :: string (NI)  :: page (NM) tool (N) 
SPECIAL:CLAS:Assembly void reset(): reset (V)  | assembly (N) 	++
SPECIAL:NAME:Page int getLastResultNumber(): get (V)  | last (DT) result (NM) number (NI) 	++ :: int (N)  :: page (N) 
SPECIAL:NAME:CategoryManager int getNextIndex(Vector categories): get (V)  | next (DT) index (NI) 	++ :: [ vector (N) - categories (N) ] :: int (N)  :: category (NM) manager (N) 
CONSTRUCTOR:NAME:OnlineResourceType OnlineResourceType OnlineResourceType(OnlineResourceType node):  | online (NM) resource (NM) type (N) 	++ :: [ online (NM) resource (NM) type (N) - node (NI) ]
SPECIAL:FORM:SMPPConnectorRunner static void main(String args): main (V)  | [ string (NI) - args (N) ]	++ :: SMPP (NM) connector (NM) runner (N) 
SPECIAL:NAME:SudokuMove void setLocation(Point val): set (V)  | location (NI) 	++ :: [ point (N) - val (NI) ] :: sudoku (NM) move (N) 
CONSTRUCTOR:NAME:MDialog MDialog MDialog(Window parent, String title, Icon icon):  | M (NM) dialog (N) 	++ :: [ window (N) - parent (N) ] :: [ string (NI) - title (N) ] :: [ icon (N) - icon (N) ]
SPECIAL:NAME:InterningUnmarshallerHandler Object getResult(): get (V)  | result (N) 	++ :: object (NI)  :: interning (NM) unmarshaller (NM) handler (N) 
SPECIAL:NAME:QuantLibJNI static void delete_EuriborSwapFixIFR1Y(long jarg1): delete (V)  | euribor (NM) swap (NM) fix (NM) IFR (NM) 1 (D) Y (N) 	++ :: [ long (N) - jarg (NM) 1 (N) ] :: quant (NM) lib (NM) JNI (N) 
SPECIAL:NAME:AEnv static CButton getButton(String iconName): get (V)  | button (N) 	++ :: [ string (NI) - icon (NM) name (NI) ] :: C (NM) button (N)  :: A (NM) env (N) 
SPECIAL:NAME:ProcessChainEditor boolean getStateOfDeleteMenuItem(): get (V)  | state (N) -- of (P) delete (NM) menu (NM) item (NI) 	++ :: boolean (N)  :: process (NM) chain (NM) editor (N) 
VOID_NP:NAME:GLImpl void glConvolutionFilter1D(int target, int internalformat, int width, int format, int type, ByteBuffer image): handle (V) | gl (PRE) convolution (NM) filter (NM) 1 (D) D (N) 	++ :: [ int (N) - target (N) ] :: [ int (N) - internalformat (N) ] :: [ int (N) - width (N) ] :: [ int (N) - format (NI) ] :: [ int (N) - type (N) ] :: [ byte (NM) buffer (NI) - image (N) ] :: GL (NM) impl (NI)  :: void (N) 
BASE_VERB:NAME:EmptyVisitor AnnotationVisitor visitParameterAnnotation(int parameter, String desc, boolean visible): visit (V)  | parameter (NM) annotation (N) 	++ :: [ int (N) - parameter (N) ] :: [ string (NI) - desc (NI) ] :: [ boolean (N) - visible (N) ] :: annotation (NM) visitor (N)  :: empty (NM) visitor (N) 
SPECIAL:FORM:ControlPanel Component add(Component comp): add (V)  | [ component (N) - comp (N) ]	++ :: control (NM) panel (N)  :: component (N) 
ENDS_WITH_ED:NAME:DustMaker void keyReleased(int kc): handle (V) | key (NM) released (N) 	++ :: [ int (N) - kc (N) ] :: dust (NM) maker (N)  :: void (N) 
V_3PS:NAME:OrderedHashSet boolean containsAll(Collection<?> source): contains (V)  | all (DT) 	++ :: [ collection (N) - source (NI) ] :: boolean (N)  :: ordered (NM) hash (NM) set (N) 
BASE_VERB:NAME:ManagedEntityItem void initialVersion(): initial (V)  | version (N) 	++ :: managed (NM) entity (NM) item (NI) 
SPECIAL:NAME:CacheTest void testPutNull(): test (VI) put (V)  | null (N) 	++ :: cache (NM) test (N) 
SPECIAL:NAME:GridBagObject void setGridy(String v): set (V)  | gridy (N) 	++ :: [ string (NI) - v (N) ] :: grid (NM) bag (NM) object (NI) 
SPECIAL:NAME:Any_Reader Classified_Object read_TypeCode(TypeCode tc): read (V)  | EQUIV[type (NM) code (NI) , [ type (NM) code (NI) - tc (N) ]]	++ :: classified (NM) object (NI)  :: any (DT) reader (N) 
BASE_VERB:NAME:MoveEffect void stopEffect(MFlipPanel fp): stop (VI)  | effect (N) 	++ :: [ M (NM) flip (NM) panel (N) - fp (N) ] :: move (NM) effect (N) 
V_MODAL:NAME:ActionHandler boolean canExecuteAction(String actionId): can (VI) execute (VI)  | EQUIV[action (N) , [ string (NI) - action (NM) id (NI) ]]	++ :: boolean (N)  :: action (NM) handler (N) 
PREP:NAME:CarSegmentCountResult String toString(): convert (V) | to (P) string (NI) 	++ :: car (NM) segment (NM) count (NM) result (N)  :: string (NI) 
SPECIAL:CLAS:UserManagerHome UserManager create(): create (V)  | user (NM) manager (NM) home (N) 	++ :: user (NM) manager (N) 
BASE_VERB:NAME:BufferCoefficientsDataPanel String getpKa(): getp (V)  | ka (N) 	++ :: string (NI)  :: buffer (NM) coefficients (NM) data (NM) panel (N) 
BASE_VERB:NAME:DialogController void showDocumentWithSameNameExists(String title, File file): show (V)  | document (NI) -- with (P) same (NM) name (NM) exists (N) 	++ :: [ string (NI) - title (N) ] :: [ file (NI) - file (NI) ] :: dialog (NM) controller (N) 
BASE_VERB:NAME:BlockParser void parseError(String msg): parse (V)  | error (N) 	++ :: [ string (NI) - msg (NI) ] :: block (NM) parser (N) 
CONSTRUCTOR:NAME:FarragoTupleIterResultSet FarragoTupleIterResultSet FarragoTupleIterResultSet(TupleIter tupleIter, Class clazz, RelDataType rowType, FarragoSessionRuntimeContext runtimeContext):  | farrago (NM) tuple (NM) iter (NM) result (NM) set (N) 	++ :: [ tuple (NM) iter (N) - tuple (NM) iter (N) ] :: [ class (NI) - clazz (N) ] :: [ rel (NM) data (NM) type (N) - row (NM) type (N) ] :: [ farrago (NM) session (NM) runtime (NM) context (N) - runtime (NM) context (N) ]
BASE_VERB:FORM:B_2 byte t(byte bs): t (V)  | [ byte (N) - bs (N) ]	++ :: B (NM) 2 (N)  :: byte (N) 
CONSTRUCTOR:NAME:Directive Directive Directive(int column, int direction):  | directive (N) 	++ :: [ int (N) - column (N) ] :: [ int (N) - direction (N) ]
SPECIAL:NAME:Project NmrReferenceStore getCurrentNmrReferenceStore(): get (V)  | current (NM) nmr (NM) reference (NM) store (N) 	++ :: nmr (NM) reference (NM) store (N)  :: project (N) 
SPECIAL:NAME:JApplet Container getContentPane(): get (V)  | content (NM) pane (N) 	++ :: container (NI)  :: J (NM) applet (N) 
SPECIAL:NAME:ArchteaQuery String getQuery(): get (V)  | query (N) 	++ :: string (NI)  :: archtea (NM) query (N) 
CONSTRUCTOR:NAME:DatabaseTools DatabaseTools DatabaseTools(String databaseName, DatabaseTypes databaseType):  | database (NM) tools (N) 	++ :: [ string (NI) - database (NM) name (NI) ] :: [ database (NM) types (N) - database (NM) type (N) ]
CONSTRUCTOR:NAME:Aglet Aglet Aglet():  | aglet (N) 	++
VOID_NP:NAME:GenMS void collectionPhase(int phaseId): handle (V) | collection (NM) phase (N) 	++ :: [ int (N) - phase (NM) id (NI) ] :: gen (NM) MS (N)  :: void (N) 
CONSTRUCTOR:NAME:CustomEndOfLineRule CustomEndOfLineRule CustomEndOfLineRule(IToken successToken):  | custom (NM) end (NM) of (NM) line (NM) rule (N) 	++ :: [ I (NM) token (N) - success (NM) token (N) ]
SPECIAL:NAME:BaseRoleFunctionMapDOPeer static TableMap getTableMap(): get (V)  | table (NM) map (N) 	++ :: table (NM) map (N)  :: base (NM) role (NM) function (NM) map (NM) DO (NM) peer (N) 
BASE_VERB:NAME:void updateUI(): update (V)  | UI (N) 	++ :: ANONYMOUS (N) 
SPECIAL:NAME:AbstractFloatSet int addCount(float e, int count): add (V)  | EQUIV[count (N) , [ int (N) - count (N) ]]	++ :: [ float (N) - e (N) ] :: int (N)  :: abstract (NM) float (NM) set (N) 
SPECIAL:NAME:Messages static String getString(String key): get (V)  | EQUIV[string (NI) , [ string (NI) - key (NI) ]]	++ :: string (NI)  :: messages (N) 
NOUN_PHRASE:NAME:BooleanList int indexOf(BooleanList seq): get (V) | index (NM) of (N) 	++ :: [ boolean (NM) list (N) - seq (N) ] :: boolean (NM) list (N)  :: int (N) 
SPECIAL:NAME:PageImpl XmlObject getAnimationElement(): get (V)  | animation (NM) element (NI) 	++ :: xml (NM) object (NI)  :: page (NM) impl (NI) 
SPECIAL:NAME:HtmlAdaptorMBean void setAuthenticationMethod(String method): set (V)  | authentication (NM) method (N) 	++ :: [ string (NI) - method (N) ] :: html (NM) adaptor (NM) M (NM) bean (NI) 
CONSTRUCTOR:NAME:D3KohonenNetworkPanel D3KohonenNetworkPanel D3KohonenNetworkPanel(D3KohonenNetwork newKN):  | D (NM) 3 (NM) kohonen (NM) network (NM) panel (N) 	++ :: [ D (NM) 3 (NM) kohonen (NM) network (N) - new (NM) KN (N) ]
BASE_VERB:NAME:boolean showTitle(): show (V)  | title (N) 	++ :: boolean (N)  :: ANONYMOUS (N) 
ENDS_WITH_ED:NAME:MyCanvas void mouseEntered(MouseEvent e): handle (V) | mouse (NM) entered (N) 	++ :: [ mouse (NM) event (NI) - e (N) ] :: my (PR) canvas (N)  :: void (N) 
SPECIAL:NAME:VisualizerTabs Map<Population,Integer> getVisualizerMap(): get (V)  | visualizer (NM) map (N) 	++ :: map (NM) population (NM) integer (N)  :: visualizer (NM) tabs (N) 
CONSTRUCTOR:NAME:QualificationsDashboardPanel QualificationsDashboardPanel QualificationsDashboardPanel():  | qualifications (NM) dashboard (NM) panel (N) 	++
SPECIAL:NAME:WSCbase static WSCbase getFocusInstance(): get (V)  | focus (NM) instance (NI) 	++ :: WS (NM) cbase (N)  :: WS (NM) cbase (N) 
SPECIAL:NAME:Utility s_acs_acs getPackageDependencies(String s_baseDir, int i_subDirLevels, Outputter optr_dbg, String as_acceptPkgPre, boolean b_crashIfSelfDependent, FileFilter file_filter): get (V)  | package (NM) dependencies (N) 	++ :: [ string (NI) - s (NM) base (NM) dir (NI) ] :: [ int (N) - i (NM) sub (NM) dir (NM) levels (N) ] :: [ outputter (N) - optr (NM) dbg (N) ] :: [ string (NI) - as (NM) accept (NM) pkg (NM) pre (N) ] :: [ file (NM) filter (N) - file (NM) filter (N) ] :: [ boolean (N) - b (NM) crash (NM) if (NM) self (NM) dependent (N) ] :: s (NM) acs (NM) acs (N)  :: utility (N) 
BASE_VERB:NAME:DTOPropertyController void restoreValue(): restore (V)  | value (NI) 	++ :: DTO (NM) property (NM) controller (N) 
SPECIAL:NAME:directoryObj String getCreated(): get (V)  | created (N) 	++ :: string (NI)  :: directory (NM) obj (NI) 
SPECIAL:NAME:TaskTable void addTask(String summary, Priority priority, int complete, long dateTime, long startDateTime, long completeDateTime, boolean select): add (V)  | task (N) 	++ :: [ string (NI) - summary (N) ] :: [ priority (N) - priority (N) ] :: [ int (N) - complete (N) ] :: [ long (N) - date (NM) time (N) ] :: [ long (N) - start (NM) date (NM) time (N) ] :: [ long (N) - complete (NM) date (NM) time (N) ] :: [ boolean (N) - select (N) ] :: task (NM) table (N) 
NOUN_PHRASE:NAME:JNDIProviderFactory TopicMapProvider newTopicMapProvider(Properties props): get (V) | new (NM) topic (NM) map (NM) provider (N) 	++ :: [ properties (N) - props (N) ] :: JNDI (NM) provider (NM) factory (N)  :: topic (NM) map (NM) provider (N) 
SPECIAL:NAME:ScheduleSummary Map getDescription(): get (V)  | description (NI) 	++ :: map (N)  :: schedule (NM) summary (N) 
CONSTRUCTOR:NAME:ListSourceTypeImpl ListSourceTypeImpl ListSourceTypeImpl(SchemaType sType):  | list (NM) source (NM) type (NM) impl (NI) 	++ :: [ schema (NM) type (N) - s (NM) type (N) ]
BASE_VERB:FORM:StressTester void p(String s): p (V)  | [ string (NI) - s (N) ]	++ :: stress (NM) tester (N) 
CONSTRUCTOR:NAME:CPFormToolkit CPFormToolkit CPFormToolkit(Display display):  | CP (NM) form (NM) toolkit (N) 	++ :: [ display (N) - display (N) ]
VOID_NP:NAME:InnerHotspotServer void serverLoop(): handle (V) | server (NM) loop (N) 	++ :: inner (NM) hotspot (NM) server (N)  :: void (N) 
SPECIAL:NAME:FaqUser String getEmail(): get (V)  | email (N) 	++ :: string (NI)  :: faq (NM) user (N) 
SPECIAL:FORM:ContextServlet void init(ServletConfig config): init (V)  | [ servlet (NM) config (NI) - config (NI) ]	++ :: context (NM) servlet (N) 
CONSTRUCTOR:NAME:PortModel PortModel PortModel(String fileName):  | port (NM) model (NI) 	++ :: [ string (NI) - file (NM) name (NI) ]
SPECIAL:NAME:NullExpression int getType(): get (V)  | type (N) 	++ :: int (N)  :: null (NM) expression (N) 
CONSTRUCTOR:NAME:LocalAccountFactory LocalAccountFactory LocalAccountFactory():  | local (NM) account (NM) factory (N) 	++
SPECIAL:FORM:ChunkStreamTest static void print(byte b): print (V)  | [ byte (N) - b (N) ]	++ :: chunk (NM) stream (NM) test (N) 
BASE_VERB:FORM:Requirement void marshal(Writer out): marshal (V)  | [ writer (N) - out (N) ]	++ :: requirement (N) 
SPECIAL:NAME:AbstractStandardImage String getOnlineHelpDefaultLocation(): get (V)  | online (NM) help (NM) default (NM) location (NI) 	++ :: string (NI)  :: abstract (NM) standard (NM) image (N) 
SPECIAL:NAME:AbstractOutputComponent String getMarginLeft(FacesContext facesContext): get (V)  | margin (NM) left (N) 	++ :: [ faces (NM) context (N) - faces (NM) context (N) ] :: string (NI)  :: abstract (NM) output (NM) component (N) 
V_3P_IRR:NAME:DiscreteConfig boolean isSumViewMaximized(): is (V)  | sum (NM) view (NM) maximized (N) 	++ :: boolean (N)  :: discrete (NM) config (NI) 
SPECIAL:NAME:IConstraint createConstraint(int aNbDigits): create (V)  | constraint (N) 	++ :: [ int (N) - a (NM) nb (NM) digits (N) ] :: I (NM) constraint (N)  :: ANONYMOUS (N) 
NOUN_PHRASE:NAME:Jtime static double deltaT(double JD): get (V) | delta (NM) T (N) 	++ :: [ double (N) - JD (N) ] :: jtime (N)  :: double (N) 
SPECIAL:NAME:Parser boolean findClosingPair(char chars): find (V)  | closing (NM) pair (N) 	++ :: [ char (N) - chars (N) ] :: boolean (N)  :: parser (N) 
VOID_NP:NAME:ContentHandlerAdaptor void ignorableWhitespace(char ch, int start, int length): handle (V) | ignorable (NM) whitespace (N) 	++ :: [ char (N) - ch (N) ] :: [ int (N) - start (N) ] :: [ int (N) - length (N) ] :: content (NM) handler (NM) adaptor (N)  :: void (N) 
BASE_VERB:NAME:MSchedHash void stretchOutLoops(int ii): stretch (V)  | out (NM) loops (N) 	++ :: [ int (N) - ii (N) ] :: M (NM) sched (NM) hash (N) 
SPECIAL:NAME:HTMLOListElement void setStart(int start): set (V)  | start (N) 	++ :: [ int (N) - start (N) ] :: HTMLO (NM) list (NM) element (NI) 
BASE_VERB:NAME:TestIsPrefixOf String failMessage(JMLAssertionError e$): fail (V)  | message (NI) 	++ :: [ JML (NM) assertion (NM) error (N) - e (N) ] :: string (NI)  :: test (NM) is (NM) prefix (NM) of (N) 
SPECIAL:NAME:WMLMetaElementImpl String getClassName(): get (V)  | class (NM) name (NI) 	++ :: string (NI)  :: WML (NM) meta (NM) element (NM) impl (NI) 
V_3P_IRR:NAME:QSValidationTokenizerData boolean isLast(): is (V)  | last (DT) 	++ :: boolean (N)  :: QS (NM) validation (NM) tokenizer (NM) data (NI) 
SPECIAL:NAME:BaseField void setOptions(int options): set (V)  | options (N) 	++ :: [ int (N) - options (N) ] :: base (NM) field (N) 
CONSTRUCTOR:NAME:JobStateMessage JobStateMessage JobStateMessage(String value, Locale locale):  | job (NM) state (NM) message (NI) 	++ :: [ string (NI) - value (NI) ] :: [ locale (N) - locale (N) ]
CONSTRUCTOR:NAME:FrameUSER FrameUSER FrameUSER(ID3V2Frame frm, DataSource ds):  | frame (NM) USER (N) 	++ :: [ ID (NM) 3 (NM) V (NM) 2 (NM) frame (N) - frm (N) ] :: [ data (NM) source (NI) - ds (N) ]
SPECIAL:NAME:SearchProductsPage String getKeyword(): get (V)  | keyword (N) 	++ :: string (NI)  :: search (NM) products (NM) page (N) 
CONSTRUCTOR:NAME:FeedsMetaDataVisitor FeedsMetaDataVisitor FeedsMetaDataVisitor(String root):  | feeds (NM) meta (NM) data (NM) visitor (N) 	++ :: [ string (NI) - root (N) ]
SPECIAL:NAME:VagFilleCalques void setInteractif(String _name): set (V)  | interactif (N) 	++ :: [ string (NI) - name (NI) ] :: vag (NM) fille (NM) calques (N) 
SPECIAL:NAME:ExecutorRNG Executor getExecutor(): get (V)  | executor (N) 	++ :: executor (N)  :: executor (NM) RNG (N) 
BASE_VERB:FORM:Factory static WidowsAttribute parse(InputStream is): parse (V)  | [ input (NM) stream (NI) - is (N) ]	++ :: factory (N)  :: widows (NM) attribute (N) 
SPECIAL:NAME:ParameterSet Object getParameterObjects(): get (V)  | parameter (NM) objects (N) 	++ :: object (NI)  :: parameter (NM) set (N) 
V_3P_IRR:NAME:Plugin static boolean isMonitoring(JID jid): is (V)  | monitoring (N) 	++ :: [ JID (N) - jid (N) ] :: boolean (N)  :: plugin (N) 
SPECIAL:NAME:ScaleCalculator void setMinValue(double minValue): set (V)  | min (NM) value (NI) 	++ :: [ double (N) - min (NM) value (NI) ] :: scale (NM) calculator (N) 
SPECIAL:FORM:network byte read(int len): read (V)  | [ int (N) - len (N) ]	++ :: network (N)  :: byte (N) 
SPECIAL:NAME:UtilConfig String getValueString(VWObject acosbsbc_cfgVars, int i_idx, String s_rqdName): get (V)  | EQUIV[value (NM) string (NI) , [ string (NI) - s (NM) rqd (NM) name (NI) ]]	++ :: [ VW (NM) object (NI) - acosbsbc (NM) cfg (NM) vars (N) ] :: [ int (N) - i (NM) idx (N) ] :: string (NI)  :: util (NM) config (NI) 
BASE_VERB:NAME:SettingKey static SettingKey assembleKey(SettingKey baseKey, String s1, String s2, String s3, String s4): assemble (V)  | EQUIV[key (NI) , [ setting (NM) key (NI) - base (NM) key (NI) ]]	++ :: [ string (NI) - s (NM) 1 (N) ] :: [ string (NI) - s (NM) 2 (N) ] :: [ string (NI) - s (NM) 3 (N) ] :: [ string (NI) - s (NM) 4 (N) ] :: setting (NM) key (NI)  :: setting (NM) key (NI) 
SPECIAL:NAME:WikiArticle String getDecodedName(): get (V)  | decoded (NM) name (NI) 	++ :: string (NI)  :: wiki (NM) article (N) 
BASE_VERB:NAME:DummyConnectionProvider void closeConnection(Connection conn): close (V)  | EQUIV[connection (N) , [ connection (N) - conn (N) ]]	++ :: dummy (NM) connection (NM) provider (N) 
ENDS_WITH_ING:NAME:GuiObjects void markGameForLinking(): handle (V) | mark (NM) game (NM) for (NM) linking (N) 	++ :: gui (NM) objects (N)  :: void (N) 
SPECIAL:NAME:TestDataFactory AnotherSubClass getAnotherSubClass(): get (V)  | another (DT) sub (NM) class (NI) 	++ :: another (DT) sub (NM) class (NI)  :: test (NM) data (NM) factory (N) 
SPECIAL:NAME:User int getMaxLoginNumber(): get (V)  | max (NM) login (NM) number (NI) 	++ :: int (N)  :: user (N) 
V_3P_IRR:NAME:VersantEmbeddedRefDirtyFinderStateManager boolean isPersistent(PersistenceCapable pc): is (V)  | persistent (N) 	++ :: [ persistence (NM) capable (N) - pc (N) ] :: boolean (N)  :: versant (NM) embedded (NM) ref (NM) dirty (NM) finder (NM) state (NM) manager (N) 
SPECIAL:NAME:JVMClassName String getShortName(): get (V)  | short (NM) name (NI) 	++ :: string (NI)  :: JVM (NM) class (NM) name (NI) 
V_3PS:NAME:KbValidationEvent boolean containsLink(Object arg0): contains (V)  | link (N) 	++ :: [ object (NI) - arg (NM) 0 (N) ] :: boolean (N)  :: kb (NM) validation (NM) event (NI) 
SPECIAL:NAME:Row void addCell(Object value): add (V)  | cell (N) 	++ :: [ object (NI) - value (NI) ] :: row (N) 
SPECIAL:NAME:ComponentFactory static Object getValueFromComponent(JComponent component, Field field): get (V)  | value (NI) -- from (P) EQUIV[component (N) , [ J (NM) component (N) - component (N) ]]	++ :: [ field (N) - field (N) ] :: object (NI)  :: component (NM) factory (N) 
CONSTRUCTOR:NAME:Cl_jtable Cl_jtable Cl_jtable(String pilote, String host, String login, String pw, String query):  | cl (NM) jtable (N) 	++ :: [ string (NI) - pilote (N) ] :: [ string (NI) - host (N) ] :: [ string (NI) - login (N) ] :: [ string (NI) - pw (N) ] :: [ string (NI) - query (N) ]
SPECIAL:NAME:Util static OpenFileFilter getFileFilterForField(String fieldName): get (V)  | file (NM) filter (N) -- for (P) EQUIV[field (N) , [ string (NI) - field (NM) name (NI) ]]	++ :: open (NM) file (NM) filter (N)  :: util (N) 
BASE_VERB:NAME:BasicScrollBarUI void installListeners(): install (V)  | listeners (N) 	++ :: basic (NM) scroll (NM) bar (NM) UI (N) 
BASE_VERB:NAME:CIM_CollectionHelper static ArrayList enumerateInstances(CIMClient cimClient, boolean deep): enumerate (V)  | instances (N) 	++ :: [ CIM (NM) client (N) - cim (NM) client (N) ] :: [ boolean (N) - deep (N) ] :: array (NM) list (N)  :: CIM (NM) collection (NM) helper (N) 
SPECIAL:NAME:PeerImpl Object getUserData(Object key): get (V)  | user (NM) data (NI) 	++ :: [ object (NI) - key (NI) ] :: object (NI)  :: peer (NM) impl (NI) 
SPECIAL:NAME:initex int read_font_info(int u, int nom, int aire, int s): read (V)  | font (NM) info (NI) 	++ :: [ int (N) - u (N) ] :: [ int (N) - nom (N) ] :: [ int (N) - aire (N) ] :: [ int (N) - s (N) ] :: int (N)  :: initex (N) 
SPECIAL:FORM:NoStrikes StrikePrice get(StrikePrice value): get (V)  | [ strike (NM) price (N) - value (NI) ]	++ :: no (DT) strikes (N)  :: strike (NM) price (N) 
PREP:NAME:HostImplInOut ClientIn asClientIn():  | as (P) client (NM) in (NI) 	++ :: host (NM) impl (NM) in (NM) out (N)  :: client (NM) in (NI) 
SPECIAL:FORM:HibernateOperations Object load(Class entityClass, Serializable id, LockMode lockMode): load (V)  | [ class (NI) - entity (NM) class (NI) ]	++ :: [ serializable (N) - id (NI) ] :: [ lock (NM) mode (N) - lock (NM) mode (N) ] :: hibernate (NM) operations (N)  :: object (NI) 
BASE_VERB:NAME:Common static void updateProgressBar(long position, long size): update (V)  | progress (NM) bar (N) 	++ :: [ long (N) - position (N) ] :: [ long (N) - size (N) ] :: common (N) 
SPECIAL:NAME:EditorTab JPanel getButtonPanel(): get (V)  | button (NM) panel (N) 	++ :: J (NM) panel (N)  :: editor (NM) tab (N) 
SPECIAL:CLAS:PatternsMainFrame_AboutBox void jbInit(): jb (PRE) init (V)  | patterns (NM) main (NM) frame (NM) about (NM) box (N) 	++
SPECIAL:NAME:RSSGenerator String getAttachmentDescription(Attachment att): get (V)  | attachment (NM) description (NI) 	++ :: [ attachment (N) - att (N) ] :: string (NI)  :: RSS (NM) generator (N) 
SPECIAL:NAME:StartState Transition addArrivingTransition(Transition t): add (V)  | EQUIV[arriving (NM) transition (N) , [ transition (N) - t (N) ]]	++ :: transition (N)  :: start (NM) state (N) 
NOUN_PHRASE:NAME:AttributeType static Class thisClass(): get (V) | this (PR) class (NI) 	++ :: attribute (NM) type (N)  :: class (NI) 
SPECIAL:NAME:UserSoap void setAgreedToTermsOfUse(boolean agreedToTermsOfUse): set (V)  | agreed (N) -- to (P) terms (NM) of (NM) use (N) 	++ :: [ boolean (N) - agreed (NM) to (NM) terms (NM) of (NM) use (N) ] :: user (NM) soap (N) 
BASE_VERB:NAME:Plugins void populateTable(StatusTable table): populate (V)  | EQUIV[table (N) , [ status (NM) table (N) - table (N) ]]	++ :: plugins (N) 
ENDS_WITH_ED:NAME:BioMDI void mnuSilverActionPerformed(ActionEvent evt): handle (V) | mnu (PRE) silver (NM) action (NM) performed (N) 	++ :: [ action (NM) event (NI) - evt (N) ] :: bio (NM) MDI (N)  :: void (N) 
SPECIAL:NAME:XMLReaderFactory static XMLReader createXMLReader(String className): create (V)  | XML (NM) reader (N) 	++ :: [ string (NI) - class (NM) name (NI) ] :: XML (NM) reader (N)  :: XML (NM) reader (NM) factory (N) 
SPECIAL:FORM:CheckAttribs void check(Lexer lexer, Node node): check (VI)  | [ lexer (N) - lexer (N) ]	++ :: [ node (NI) - node (NI) ] :: check (NM) attribs (N) 
CONSTRUCTOR:NAME:ListAction ListAction ListAction():  | list (NM) action (N) 	++
V_3P_IRR:NAME:XDateCombo boolean isGridVisible(): is (V)  | grid (NM) visible (N) 	++ :: boolean (N)  :: X (NM) date (NM) combo (N) 
SPECIAL:NAME:SimpleCondition void setLeftField(String leftField): set (V)  | left (NM) field (N) 	++ :: [ string (NI) - left (NM) field (N) ] :: simple (NM) condition (N) 
CONSTRUCTOR:NAME:HeaderFieldHelper HeaderFieldHelper HeaderFieldHelper(int size):  | header (NM) field (NM) helper (N) 	++ :: [ int (N) - size (N) ]
SPECIAL:NAME:DebugMolecule void removeListener(IChemObjectListener col): remove (V)  | EQUIV[listener (N) , [ I (NM) chem (NM) object (NM) listener (N) - col (N) ]]	++ :: debug (NM) molecule (N) 
SPECIAL:NAME:Property void setName(String value): set (V)  | name (NI) 	++ :: [ string (NI) - value (NI) ] :: property (N) 
V_3PS:CLAS:ORMapping List<Guide> guidesToAssociationEnds(String classifier, String assEnd): guides (V)  | OR (NM) mapping (N) -- to (P) association (NM) ends (N) 	++ :: [ string (NI) - classifier (N) ] :: [ string (NI) - ass (NM) end (N) ] :: list (NM) guide (N) 
SPECIAL:FORM:SymbolpPrimitive void Execute(SECDMachine machine): execute (VI)  | [ SECD (NM) machine (N) - machine (N) ]	++ :: symbolp (NM) primitive (N) 
V_3P_IRR:NAME:DataPilotLevel boolean isSetShowEmpty(): is (V)  | set (NM) show (NM) empty (N) 	++ :: boolean (N)  :: data (NM) pilot (NM) level (N) 
NOUN_PHRASE:NAME:DefaultChemObjectBuilder IBond newBond(IAtom atom1, IAtom atom2, double order, int stereo): get (V) | new (NM) bond (N) 	++ :: [ I (NM) atom (N) - atom (NM) 1 (N) ] :: [ I (NM) atom (N) - atom (NM) 2 (N) ] :: [ double (N) - order (N) ] :: [ int (N) - stereo (N) ] :: default (NM) chem (NM) object (NM) builder (N)  :: I (NM) bond (N) 
BASE_VERB:NAME:VMPlainSocketImpl static void shutdownInput(int native_fd): shutdown (V)  | input (NI) 	++ :: [ int (N) - native (NM) fd (N) ] :: VM (NM) plain (NM) socket (NM) impl (NI) 
CONSTRUCTOR:NAME:MatchCondition MatchCondition MatchCondition():  | match (NM) condition (N) 	++
SPECIAL:NAME:TBSCertificateStructure static TBSCertificateStructure getInstance(Object obj): get (V)  | instance (NI) 	++ :: [ object (NI) - obj (NI) ] :: TBS (NM) certificate (NM) structure (N)  :: TBS (NM) certificate (NM) structure (N) 
SPECIAL:NAME:JavaSourceWriter void endConstant(): end (V)  | constant (N) 	++ :: java (NM) source (NM) writer (N) 
CONSTRUCTOR:NAME:ArrayLength ArrayLength ArrayLength():  | array (NM) length (N) 	++
BASE_VERB:FORM:JadFile void save(Writer w): save (V)  | [ writer (N) - w (N) ]	++ :: jad (NM) file (NI) 
BASE_VERB:NAME:FormatUnicodeCallout void formatCallout(Emitter rtfEmitter, Callout callout): format (V)  | EQUIV[callout (N) , [ callout (N) - callout (N) ]]	++ :: [ emitter (N) - rtf (NM) emitter (N) ] :: format (NM) unicode (NM) callout (N) 
SPECIAL:NAME:WorkflowEngineEvent String getCoordinatorSite(): get (V)  | coordinator (NM) site (N) 	++ :: string (NI)  :: workflow (NM) engine (NM) event (NI) 
SPECIAL:NAME:Light long _getWorldBoundingSphere__bv_const(long _pointer_, boolean derive): get (V)  | world (NM) bounding (NM) sphere (NM) bv (NM) const (N) 	++ :: [ long (N) - pointer (N) ] :: [ boolean (N) - derive (N) ] :: long (N)  :: light (N) 
ENDS_WITH_ED:NAME:TreeSelectionController void treeChanged(): handle (V) | tree (NM) changed (N) 	++ :: tree (NM) selection (NM) controller (N)  :: void (N) 
SPECIAL:NAME:GeneralPathPrimitive Paint getPaint(): get (V)  | paint (N) 	++ :: paint (N)  :: general (NM) path (NM) primitive (N) 
SPECIAL:CLAS:TestOffsetDateTimeField void test_getAsText_long(): test (VI) get (V)  | test (NM) offset (NM) date (NM) time (NM) field (N) -- as (P) text (NM) long (N) 	++
BASE_VERB:NAME:GetStageConfigWizardPanel void setupRightPanel(): setup (V)  | right (NM) panel (N) 	++ :: get (NM) stage (NM) config (NM) wizard (NM) panel (N) 
SPECIAL:NAME:ImportContainer char getHandleMementoDelimiter(): get (V)  | handle (NM) memento (NM) delimiter (N) 	++ :: char (N)  :: import (NM) container (NI) 
SPECIAL:NAME:ROCPoint double getFalsePositives(): get (V)  | false (NM) positives (N) 	++ :: double (N)  :: ROC (NM) point (N) 
SPECIAL:NAME:JEditTextArea void processKeyEvent(KeyEvent evt): process (VI)  | EQUIV[key (NM) event (NI) , [ key (NM) event (NI) - evt (N) ]]	++ :: J (NM) edit (NM) text (NM) area (N) 
SPECIAL:NAME:AbstractTextAction JTextComponent getCurrentFocusedComponent(): get (V)  | current (NM) focused (NM) component (N) 	++ :: J (NM) text (NM) component (N)  :: abstract (NM) text (NM) action (N) 
SPECIAL:NAME:ComboColumnComponent void setHiddenMode(String hiddenMode): set (V)  | hidden (NM) mode (N) 	++ :: [ string (NI) - hidden (NM) mode (N) ] :: combo (NM) column (NM) component (N) 
SPECIAL:NAME:Jsp12TagLibraryDescriptorParser TagInfo createTag(Node node): create (V)  | tag (NI) 	++ :: [ node (NI) - node (NI) ] :: tag (NM) info (NI)  :: jsp (NM) 12 (NM) tag (NM) library (NM) descriptor (NM) parser (N) 
V_3P_IRR:NAME:Null boolean isIntersecting(OrthoShape val): is (V)  | intersecting (N) 	++ :: [ ortho (NM) shape (N) - val (NI) ] :: boolean (N)  :: null (N) 
SPECIAL:CLAS:TestQueryDialog void setUp(): set (V) up (VP)  | test (NM) query (NM) dialog (N) 	++
SPECIAL:NAME:JvBrowsePageAction void setLoadCompleteScript(String loadCompleteScript): set (V)  | load (NM) complete (NM) script (N) 	++ :: [ string (NI) - load (NM) complete (NM) script (N) ] :: jv (NM) browse (NM) page (NM) action (N) 
CONSTRUCTOR:NAME:DefaultAnyAccountViewBlock DefaultAnyAccountViewBlock DefaultAnyAccountViewBlock(AnyLogicContext alc):  | default (NM) any (DT) account (NM) view (NM) block (N) 	++ :: [ any (DT) logic (NM) context (N) - alc (N) ]
VOID_NP:NAME:SLDTranslator void element(String element, Expression e): handle (V) | element (NI) 	++ :: [ string (NI) - element (NI) ] :: [ expression (N) - e (N) ] :: SLD (NM) translator (N)  :: void (N) 
SPECIAL:FORM:OrderCancelReplaceRequest BenchmarkCurvePoint get(BenchmarkCurvePoint value): get (V)  | [ benchmark (NM) curve (NM) point (N) - value (NI) ]	++ :: order (NM) cancel (NM) replace (NM) request (N)  :: benchmark (NM) curve (NM) point (N) 
SPECIAL:NAME:SimpleTextTag void setValue(String value): set (V)  | value (NI) 	++ :: [ string (NI) - value (NI) ] :: simple (NM) text (NM) tag (NI) 
BASE_VERB:CLAS:DependenceFlowGraph DependenceFlowNode sTOP(): s (PRE) TOP (V)  | dependence (NM) flow (NM) graph (N) 	++ :: dependence (NM) flow (NM) node (NI) 
BASE_VERB:NAME:PatchXML static void outputDoc(Document doc, Document patch): output (V)  | EQUIV[doc (NI) , [ document (NI) - doc (NI) ]]	++ :: [ document (NI) - patch (N) ] :: patch (NM) XML (N) 
SPECIAL:NAME:JTextComponent void setEditable(boolean b): set (V)  | editable (N) 	++ :: [ boolean (N) - b (N) ] :: J (NM) text (NM) component (N) 
ENDS_WITH_ED:NAME:Listener void actionPerformed(ActionEvent e): handle (V) | action (NM) performed (N) 	++ :: [ action (NM) event (NI) - e (N) ] :: listener (N)  :: void (N) 
SPECIAL:NAME:ConnectionRepository void addDescriptor(JdbcConnectionDescriptor jcd): add (V)  | EQUIV[descriptor (NI) , [ jdbc (NM) connection (NM) descriptor (NI) - jcd (N) ]]	++ :: connection (NM) repository (N) 
SPECIAL:NAME:DM01EOffenmTest void testResult3(): test (VI)  | result (N) 3 (D) 	++ :: DM (NM) 01 (NM) E (NM) offenm (NM) test (N) 
EVENT_PARAM:NAME:PatchBuilder void menuItem20_click(Object source, Event e): handle (V) | menu (NM) item (NM) 20 (D) click (N) 	++ :: [ object (NI) - source (NI) ] :: [ event (NI) - e (N) ] :: patch (NM) builder (N)  :: void (N) 
PREP:NAME:Character static char toLowerCase(char ch): convert (V) | to (P) lower (NM) case (N) 	++ :: [ char (N) - ch (N) ] :: character (N)  :: char (N) 
SPECIAL:NAME:X_C_JobRemuneration void setC_Job_ID(int C_Job_ID): set (V)  | C (NM) job (NM) ID (NI) 	++ :: [ int (N) - C (NM) job (NM) ID (NI) ] :: X (NM) C (NM) job (NM) remuneration (N) 
SPECIAL:NAME:OxerpActionController ActionForm getBean(String id, String scope): get (V)  | bean (NI) 	++ :: [ string (NI) - id (NI) ] :: [ string (NI) - scope (N) ] :: action (NM) form (N)  :: oxerp (NM) action (NM) controller (N) 
SPECIAL:NAME:ContactEvent void setCommodities(Collection newCommodities): set (V)  | commodities (N) 	++ :: [ collection (N) - new (NM) commodities (N) ] :: contact (NM) event (NI) 
SPECIAL:NAME:ForceArrowGraphic void setVerticalOffset(double verticalOffset): set (V)  | vertical (NM) offset (N) 	++ :: [ double (N) - vertical (NM) offset (N) ] :: force (NM) arrow (NM) graphic (N) 
CONSTRUCTOR:NAME:Armour Armour Armour(String aName, int aRS, int aBE, int aWeight, int aWorth):  | armour (N) 	++ :: [ string (NI) - a (NM) name (NI) ] :: [ int (N) - a (NM) RS (N) ] :: [ int (N) - a (NM) BE (N) ] :: [ int (N) - a (NM) weight (N) ] :: [ int (N) - a (NM) worth (N) ]
SPECIAL:NAME:CIM_ElementConfigurationHelper static CIM_ElementConfiguration createInstance(CIMClient cimClient, CIM_ElementConfiguration dataInstance, boolean notifyDifferencies): create (V)  | EQUIV[instance (NI) , [ CIM (NM) element (NM) configuration (NI) - data (NM) instance (NI) ]]	++ :: [ CIM (NM) client (N) - cim (NM) client (N) ] :: [ boolean (N) - notify (NM) differencies (N) ] :: CIM (NM) element (NM) configuration (NI)  :: CIM (NM) element (NM) configuration (NM) helper (N) 
BASE_VERB:FORM:RemoteReferenceResolverHelperImpl double sfResolve(Reference reference, double defaultValue, boolean mandatory): sf (PRE) resolve (V)  | [ reference (NI) - reference (NI) ]	++ :: [ double (N) - default (NM) value (NI) ] :: remote (NM) reference (NM) resolver (NM) helper (NM) impl (NI)  :: [ boolean (N) - mandatory (N) ] :: double (N) 
SPECIAL:NAME:SpotLitePrefs void setSelected(JComboBox box, int attn): set (V)  | selected (N) 	++ :: [ J (NM) combo (NM) box (N) - box (N) ] :: [ int (N) - attn (N) ] :: spot (NM) lite (NM) prefs (N) 
ED_VERB:NAME:RemoteTableLoadReport void selectedList1(ListValueLabel item): selected (V)  | list (N) 1 (D) 	++ :: [ list (NM) value (NM) label (NI) - item (NI) ] :: remote (NM) table (NM) load (NM) report (N) 
BASE_VERB:FORM:NtlmSsp static NtlmPasswordAuthentication authenticate(HttpServletRequest req, HttpServletResponse resp, byte challenge): authenticate (V)  | [ http (NM) servlet (NM) request (N) - req (N) ]	++ :: [ http (NM) servlet (NM) response (N) - resp (N) ] :: [ byte (N) - challenge (N) ] :: ntlm (NM) ssp (N)  :: ntlm (NM) password (NM) authentication (N) 
V_3PS:FORM:GrantPermission boolean equals(Object obj): equals (V)  | [ object (NI) - obj (NI) ]	++ :: grant (NM) permission (N)  :: boolean (N) 
SPECIAL:NAME:RepositoryDAO void removeComponent(String manifestId, String uri): remove (V)  | component (N) 	++ :: [ string (NI) - manifest (NM) id (NI) ] :: [ string (NI) - uri (NI) ] :: repository (NM) DAO (N) 
BASE_VERB:NAME:BasicDrawingView void drawPainters(Graphics g, Vector v): draw (V)  | painters (N) 	++ :: [ graphics (N) - g (N) ] :: [ vector (N) - v (N) ] :: basic (NM) drawing (NM) view (NI) 
CONSTRUCTOR:NAME:SqlideHostConfigDescriptor SqlideHostConfigDescriptor SqlideHostConfigDescriptor():  | sqlide (NM) host (NM) config (NM) descriptor (NI) 	++
SPECIAL:NAME:PdfLayer void setName(String name): set (V)  | name (NI) 	++ :: [ string (NI) - name (NI) ] :: pdf (NM) layer (N) 
SPECIAL:NAME:AbstractStandardGlobalCatalogAccount String getFullNameAndLoginHTML(): get (V)  | full (NM) name (NM) and (NM) login (NM) HTML (N) 	++ :: string (NI)  :: abstract (NM) standard (NM) global (NM) catalog (NM) account (N) 
V_3PS:FORM:JGimpSelection boolean equals(Object inRight): equals (V)  | [ object (NI) - in (NM) right (N) ]	++ :: J (NM) gimp (NM) selection (N)  :: boolean (N) 
PREP:NAME:ObjectArray T toArray(T dest): convert (V) | to (P) array (N) 	++ :: [ T (N) - dest (N) ] :: object (NM) array (N)  :: T (N) 
CONSTRUCTOR:NAME:AddressIPV4Field AddressIPV4Field AddressIPV4Field(String number, boolean notEmpty, FocusListener focus):  | address (NM) IPV (NM) 4 (NM) field (N) 	++ :: [ string (NI) - number (NI) ] :: [ boolean (N) - not (DT) empty (N) ] :: [ focus (NM) listener (N) - focus (N) ]
CONSTRUCTOR:NAME:UnexpectedPropertySetTypeException UnexpectedPropertySetTypeException UnexpectedPropertySetTypeException(String msg):  | unexpected (NM) property (NM) set (NM) type (NM) exception (N) 	++ :: [ string (NI) - msg (NI) ]
CONSTRUCTOR:NAME:Children Children Children(VirtualMachineImpl vm, PacketStream ps):  | children (N) 	++ :: [ virtual (NM) machine (NM) impl (NI) - vm (N) ] :: [ packet (NM) stream (NI) - ps (N) ]
SPECIAL:NAME:Record short readLEShort(byte byteArray): read (V)  | LE (NM) short (N) 	++ :: [ byte (N) - byte (NM) array (N) ] :: short (N)  :: record (N) 
SPECIAL:NAME:SINS int setProzL(long vishandle, String s): set (V)  | proz (NM) L (N) 	++ :: [ long (N) - vishandle (N) ] :: [ string (NI) - s (N) ] :: int (N)  :: SINS (N) 
SPECIAL:NAME:TransactionHandlerBase SuspendedTransaction popSuspendedTransaction(): pop (V)  | suspended (NM) transaction (N) 	++ :: suspended (NM) transaction (N)  :: transaction (NM) handler (NM) base (N) 
CONSTRUCTOR:NAME:DefaultRawHandler DefaultRawHandler DefaultRawHandler():  | default (NM) raw (NM) handler (N) 	++
CONSTRUCTOR:NAME:Light Light Light(float am, float dif, float spe, float po, float rang):  | light (N) 	++ :: [ float (N) - am (N) ] :: [ float (N) - dif (N) ] :: [ float (N) - spe (N) ] :: [ float (N) - po (N) ] :: [ float (N) - rang (N) ]
SPECIAL:FORM:void set(Object o): set (V)  | [ object (NI) - o (N) ]	++ :: ANONYMOUS (N) 
SPECIAL:NAME:VersionedEntity String getName(): get (V)  | name (NI) 	++ :: string (NI)  :: versioned (NM) entity (N) 
SPECIAL:NAME:LocatorImpl String getSystemId(): get (V)  | system (NM) id (NI) 	++ :: string (NI)  :: locator (NM) impl (NI) 
BASE_VERB:NAME:Connector void setup_tight_export_passive(Checked_Connection checked): setup (V)  | tight (NM) export (NM) passive (N) 	++ :: [ checked (NM) connection (N) - checked (N) ] :: connector (N) 
SPECIAL:FORM:TransformedList void add(int index, Object object): add (V)  | [ int (N) - index (NI) ]	++ :: [ object (NI) - object (NI) ] :: transformed (NM) list (N) 
CONSTRUCTOR:NAME:Header Header Header(HeaderLcinfo lcinfo, String session_id, boolean include_non_active_rows, boolean include_CRIS_ref_data_rows, boolean include_row_info_columns, boolean include_lc_info_columns):  | header (N) 	++ :: [ header (NM) lcinfo (N) - lcinfo (N) ] :: [ string (NI) - session (NM) id (NI) ] :: [ boolean (N) - include (NM) non (NM) active (NM) rows (N) ] :: [ boolean (N) - include (NM) CRIS (NM) ref (NM) data (NM) rows (N) ] :: [ boolean (N) - include (NM) row (NM) info (NM) columns (N) ] :: [ boolean (N) - include (NM) lc (NM) info (NM) columns (N) ]
CONSTRUCTOR:NAME:LinkableRecord LinkableRecord LinkableRecord(String uri):  | linkable (NM) record (N) 	++ :: [ string (NI) - uri (NI) ]
V_3P_IRR:NAME:ProcessEnvironment boolean isValid(): is (V)  | valid (N) 	++ :: boolean (N)  :: process (NM) environment (N) 
SPECIAL:NAME:Annotation void setEndY(String endY): set (V)  | end (NM) Y (N) 	++ :: [ string (NI) - end (NM) Y (N) ] :: annotation (N) 
BASE_VERB:NAME:ComboboxImpl NamespacedToken xgetControlImplementation(): xget (V)  | control (NM) implementation (N) 	++ :: namespaced (NM) token (N)  :: combobox (NM) impl (NI) 
BASE_VERB:NAME:MustFightBattle void retreatUnits(Collection<Unit> retreating, Territory to, boolean defender, IDelegateBridge bridge): retreat (V)  | units (N) 	++ :: [ collection (NM) unit (N) - retreating (N) ] :: [ territory (N) - to (N) ] :: [ I (NM) delegate (NM) bridge (N) - bridge (N) ] :: [ boolean (N) - defender (N) ] :: must (NM) fight (NM) battle (N) 
EVENT_PARAM:NAME:CompassGpsPBLifecycleListener void beforeDelete(PBLifeCycleEvent lifeCycleEvent): handle (V) | before (NM) delete (N) 	++ :: [ PB (NM) life (NM) cycle (NM) event (NI) - life (NM) cycle (NM) event (NI) ] :: compass (NM) gps (NM) PB (NM) lifecycle (NM) listener (N)  :: void (N) 
BASE_VERB:NAME:Any void insert_Value(Serializable serializable, TypeCode typeCode): insert (V)  | value (NI) 	++ :: [ serializable (N) - serializable (N) ] :: [ type (NM) code (NI) - type (NM) code (NI) ] :: any (DT) 
BASE_VERB:CLAS:CStatement void close(): close (V)  | C (NM) statement (NI) 	++
SPECIAL:NAME:MoveUploadedFileToEPDocumentAction void setSignDateKey(String signDateKey): set (V)  | sign (NM) date (NM) key (NI) 	++ :: [ string (NI) - sign (NM) date (NM) key (NI) ] :: move (NM) uploaded (NM) file (NM) to (NM) EP (NM) document (NM) action (N) 
CONSTRUCTOR:NAME:XAction XAction XAction(String name, Icon icon, String tooltip):  | X (NM) action (N) 	++ :: [ string (NI) - name (NI) ] :: [ icon (N) - icon (N) ] :: [ string (NI) - tooltip (N) ]
SPECIAL:NAME:GM_LineString DirectPositionList getControlPoint(): get (V)  | control (NM) point (N) 	++ :: direct (NM) position (NM) list (N)  :: GM (NM) line (NM) string (NI) 
SPECIAL:FORM:ThreadAccountGroup void start(Thread self): start (V)  | [ thread (N) - self (N) ]	++ :: thread (NM) account (NM) group (N) 
BASE_VERB:FORM:RE String split(String s): split (V)  | [ string (NI) - s (N) ]	++ :: RE (N)  :: string (NI) 
BASE_VERB:NAME:DateDialog void makepanelMonth(): makepanel (V)  | month (N) 	++ :: date (NM) dialog (N) 
SPECIAL:NAME:KernelImageData String getName(): get (V)  | name (NI) 	++ :: string (NI)  :: kernel (NM) image (NM) data (NI) 
BASE_VERB:NAME:CPDDuplicateCodeViewer void collapseAll(): collapse (V)  | all (DT) 	++ :: CPD (NM) duplicate (NM) code (NM) viewer (N) 
BASE_VERB:NAME:SleeDeployer void activateComponents(ComponentID components): activate (VI)  | EQUIV[components (N) , [ component (NM) ID (NI) - components (N) ]]	++ :: slee (NM) deployer (N) 
SPECIAL:NAME:ABTFlatObject String printTransTable(int transp): print (V)  | trans (NM) table (N) 	++ :: [ int (N) - transp (N) ] :: string (NI)  :: ABT (NM) flat (NM) object (NI) 
SPECIAL:NAME:HTTPHelper String getRequestHeaders(String name): get (V)  | request (NM) headers (N) 	++ :: [ string (NI) - name (NI) ] :: string (NI)  :: HTTP (NM) helper (N) 
SPECIAL:NAME:RulesBasedAgent void orderInvalid(TurnEvent e): order (V)  | invalid (N) 	++ :: [ turn (NM) event (NI) - e (N) ] :: rules (NM) based (NM) agent (N) 
SPECIAL:NAME:PanelFactory JPanel getPanel(Object o, Configuration aConfiguration, Version aVersion): get (V)  | panel (N) 	++ :: [ object (NI) - o (N) ] :: [ configuration (NI) - a (NM) configuration (NI) ] :: [ version (N) - a (NM) version (N) ] :: J (NM) panel (N)  :: panel (NM) factory (N) 
PREP:NAME:SeekableByteArrayOutputStream byte toByteArray(): convert (V) | to (P) byte (NM) array (N) 	++ :: seekable (NM) byte (NM) array (NM) output (NM) stream (NI)  :: byte (N) 
BASE_VERB:NAME:Sprite void drawSprite(Graphics g): draw (V)  | sprite (N) 	++ :: [ graphics (N) - g (N) ] :: sprite (N) 
SPECIAL:NAME:Image static Image getInstance(PRIndirectReference ref): get (V)  | instance (NI) 	++ :: [ PR (NM) indirect (NM) reference (NI) - ref (NI) ] :: image (N)  :: image (N) 
BASE_VERB:NAME:AbstractStyleover StyleoverEvent makeStartEvent(Object newvalue, int start, Object basic, String txt): make (V)  | start (NM) event (NI) 	++ :: [ object (NI) - newvalue (N) ] :: [ int (N) - start (N) ] :: [ object (NI) - basic (N) ] :: [ string (NI) - txt (N) ] :: styleover (NM) event (NI)  :: abstract (NM) styleover (N) 
NOUN_PHRASE:NAME:RowDataDynamic byte next(): get (V) | next (DT) 	++ :: row (NM) data (NM) dynamic (N)  :: byte (N) 
SPECIAL:NAME:FixedURLWebRequestSource void loadPresetParameters(): load (V)  | preset (NM) parameters (N) 	++ :: fixed (NM) URL (NM) web (NM) request (NM) source (NI) 
NOUN_PHRASE:NAME:LcsIndexGuide FemSortingStreamDef newBitmapSorter(): get (V) | new (NM) bitmap (NM) sorter (N) 	++ :: lcs (NM) index (NM) guide (N)  :: fem (NM) sorting (NM) stream (NM) def (NI) 
BASE_VERB:FORM:DObjet Request _request(String _operation): request (V)  | [ string (NI) - operation (N) ]	++ :: D (NM) objet (N)  :: request (N) 
SPECIAL:NAME:EmptyLabels Looper getSpansWithProperty(String prop, String id): get (V)  | spans (N) -- with (P) property (N) 	++ :: [ string (NI) - prop (N) ] :: [ string (NI) - id (NI) ] :: looper (N)  :: empty (NM) labels (N) 
V_3P_IRR:NAME:Enableable boolean isEnabled(): is (V)  | enabled (N) 	++ :: boolean (N)  :: enableable (N) 
BASE_VERB:NAME:SQLParser Exp SQLPrimaryExpression(): SQL (V)  | primary (NM) expression (N) 	++ :: exp (N)  :: SQL (NM) parser (N) 
BASE_VERB:NAME:ColorGrid NiceLabel getlblColorMagenta(): getlbl (V)  | color (NM) magenta (N) 	++ :: nice (NM) label (NI)  :: color (NM) grid (N) 
SPECIAL:NAME:DBConfigUtil void setOnlineUserDataSourceName(String dataSourceName): set (V)  | online (NM) user (NM) data (NM) source (NM) name (NI) 	++ :: [ string (NI) - data (NM) source (NM) name (NI) ] :: DB (NM) config (NM) util (N) 
SPECIAL:NAME:AddAu void doPlugins(Element root): do (VI)  | plugins (N) 	++ :: [ element (NI) - root (N) ] :: add (NM) au (N) 
CONSTRUCTOR:NAME:IMAPFolderPullOperator IMAPFolderPullOperator IMAPFolderPullOperator(IMeMexIMAPFolder rootImapFolder):  | IMAP (NM) folder (NM) pull (NM) operator (N) 	++ :: [ I (NM) me (PR) mex (NM) IMAP (NM) folder (N) - root (NM) imap (NM) folder (N) ]
NOUN_PHRASE:NAME:MatchIterator Object next(): get (V) | next (DT) 	++ :: match (NM) iterator (N)  :: object (NI) 
CONSTRUCTOR:NAME:DomainValueParserGeneralManagerImplTest DomainValueParserGeneralManagerImplTest DomainValueParserGeneralManagerImplTest(String name):  | domain (NM) value (NM) parser (NM) general (NM) manager (NM) impl (NM) test (N) 	++ :: [ string (NI) - name (NI) ]
SPECIAL:NAME:MetaDataViewerTableModel boolean getShowColumn(int index): get (V)  | show (NM) column (N) 	++ :: [ int (N) - index (NI) ] :: boolean (N)  :: meta (NM) data (NM) viewer (NM) table (NM) model (NI) 
SPECIAL:NAME:PCTLibrary void setIncludes(String includes): set (V)  | includes (N) 	++ :: [ string (NI) - includes (N) ] :: PCT (NM) library (N) 
CONSTRUCTOR:NAME:EisManagedConnection EisManagedConnection EisManagedConnection(Subject subject, ConnectionRequestInfo cri):  | eis (NM) managed (NM) connection (N) 	++ :: [ subject (N) - subject (N) ] :: [ connection (NM) request (NM) info (NI) - cri (N) ]
ENDS_WITH_ED:NAME:void widgetSelected(SelectionEvent e): handle (V) | widget (NM) selected (N) 	++ :: [ selection (NM) event (NI) - e (N) ] :: ANONYMOUS (N)  :: void (N) 
SPECIAL:NAME:HeaderTag void setHeadingClass(String value): set (V)  | heading (NM) class (NI) 	++ :: [ string (NI) - value (NI) ] :: header (NM) tag (NI) 
VOID_NP:NAME:HTMLTagDetail static void state7(String html, char ch, HTMLTagDetail htd, Vector<HTMLTagDetail> v, Stack<HTMLTagDetail> stack, int n, int m, StateReturn ret): handle (V) | state (N) 7 (D) 	++ :: [ string (NI) - html (N) ] :: [ char (N) - ch (N) ] :: [ HTML (NM) tag (NM) detail (NI) - htd (N) ] :: [ vector (NM) HTML (NM) tag (NM) detail (NI) - v (N) ] :: [ stack (NM) HTML (NM) tag (NM) detail (NI) - stack (N) ] :: [ int (N) - n (N) ] :: [ int (N) - m (N) ] :: [ state (NM) return (N) - ret (N) ] :: HTML (NM) tag (NM) detail (NI)  :: void (N) 
VOID_NP:NAME:AnalysisAdapter void caseTLabeldef(TLabeldef node): handle (V) | case (NM) T (NM) labeldef (N) 	++ :: [ T (NM) labeldef (N) - node (NI) ] :: analysis (NM) adapter (NI)  :: void (N) 
BASE_VERB:FORM:IntBuffer IntBuffer put(int b): put (V)  | [ int (N) - b (N) ]	++ :: int (NM) buffer (NI)  :: int (NM) buffer (NI) 
SPECIAL:NAME:SuperWabaPDB InputStream getInputStream(int index): get (V)  | input (NM) stream (NI) 	++ :: [ int (N) - index (NI) ] :: input (NM) stream (NI)  :: super (NM) waba (NM) PDB (N) 
SPECIAL:FORM:BaseDalImpl void find(NonLockingSelectQuery q): find (V)  | [ non (NM) locking (NM) select (NM) query (N) - q (N) ]	++ :: base (NM) dal (NM) impl (NI) 
SPECIAL:CLAS:RuleBasedCollator Object clone(): clone (V)  | rule (NM) based (NM) collator (N) 	++ :: object (NI) 
SPECIAL:NAME:Feed int getStatus(): get (V)  | status (N) 	++ :: int (N)  :: feed (N) 
SPECIAL:NAME:TableData int setSelectMode(int msMode): set (V)  | select (NM) mode (N) 	++ :: [ int (N) - ms (NM) mode (N) ] :: int (N)  :: table (NM) data (NI) 
BASE_VERB:NAME:JDBCBuilder void buildServer(String databaseList, String tableList): build (V)  | server (N) 	++ :: [ string (NI) - database (NM) list (N) ] :: [ string (NI) - table (NM) list (N) ] :: JDBC (NM) builder (N) 
SPECIAL:NAME:ResultsHeaderCell void setWidth(String width): set (V)  | width (N) 	++ :: [ string (NI) - width (N) ] :: results (NM) header (NM) cell (N) 
SPECIAL:NAME:TermTextHistoryItem String getShortName(): get (V)  | short (NM) name (NI) 	++ :: string (NI)  :: term (NM) text (NM) history (NM) item (NI) 
SPECIAL:NAME:ChildParentChooserWindow void setListSelection(List relTypes): set (V)  | list (NM) selection (N) 	++ :: [ list (N) - rel (NM) types (N) ] :: child (NM) parent (NM) chooser (NM) window (N) 
ENDS_WITH_ED:NAME:void actionPerformed(ActionEvent evt): handle (V) | action (NM) performed (N) 	++ :: [ action (NM) event (NI) - evt (N) ] :: ANONYMOUS (N)  :: void (N) 
CONSTRUCTOR:NAME:PSReadDataIntegrityViolationException PSReadDataIntegrityViolationException PSReadDataIntegrityViolationException(String pMessage):  | PS (NM) read (NM) data (NM) integrity (NM) violation (NM) exception (N) 	++ :: [ string (NI) - p (NM) message (NI) ]
SPECIAL:NAME:SepInterpreter String getValue(String token): get (V)  | value (NI) 	++ :: [ string (NI) - token (N) ] :: string (NI)  :: sep (NM) interpreter (N) 
BASE_VERB:NAME:TableAliases void unregisterAlias(String pElementRef): unregister (V)  | alias (N) 	++ :: [ string (NI) - p (NM) element (NM) ref (NI) ] :: table (NM) aliases (N) 
SPECIAL:NAME:PermissiblePublishChannels String getActivityTokens(): get (V)  | activity (NM) tokens (N) 	++ :: string (NI)  :: permissible (NM) publish (NM) channels (N) 
V_3P_IRR:NAME:Document boolean hasKeydef(Keydef keydef): has (V)  | EQUIV[keydef (N) , [ keydef (N) - keydef (N) ]]	++ :: boolean (N)  :: document (NI) 
SPECIAL:NAME:LRUDAO List findAll(): find (V)  | all (DT) 	++ :: list (N)  :: LRUDAO (N) 
SPECIAL:CLAS:Configuration boolean write(): write (V)  | configuration (NI) 	++ :: boolean (N) 
BASE_VERB:NAME:ParsableToken Token parseToken(boolean allowEmpty, ParsePattern tokenPatterns): parse (V)  | token (N) 	++ :: [ parse (NM) pattern (N) - token (NM) patterns (N) ] :: [ boolean (N) - allow (NM) empty (N) ] :: token (N)  :: parsable (NM) token (N) 
BASE_VERB:NAME:PanelDiagICD9 void notifyUnlockVisit(String str, int status): notify (VI) unlock (V)  | visit (N) 	++ :: [ string (NI) - str (NI) ] :: [ int (N) - status (N) ] :: panel (NM) diag (NM) ICD (NM) 9 (N) 
V_3P_IRR:NAME:Concept boolean hasFeature(Feature f): has (V)  | EQUIV[feature (N) , [ feature (N) - f (N) ]]	++ :: boolean (N)  :: concept (N) 
BASE_VERB:NAME:IJAPConfSavePoint void restoreDefaults(): restore (V)  | defaults (N) 	++ :: IJAP (NM) conf (NM) save (NM) point (N) 
SPECIAL:NAME:TestSchema QName getQName(): get (V)  | Q (NM) name (NI) 	++ :: Q (NM) name (NI)  :: test (NM) schema (N) 
SPECIAL:NAME:MyTableModel void setValueAt(Object value, int row, int col): set (V)  | value (NI) -- at (P) [ object (NI) - value (NI) ]	++ :: [ object (NI) - value (NI) ] :: [ int (N) - row (N) ] :: [ int (N) - col (N) ] :: my (PR) table (NM) model (NI) 
SPECIAL:NAME:SqlDouble float getFloat(): get (V)  | float (N) 	++ :: float (N)  :: sql (NM) double (N) 
BASE_VERB:CLAS:GraphImpl void sfDeploy(): sf (PRE) deploy (V)  | graph (NM) impl (NI) 	++
CONSTRUCTOR:NAME:X1PDefinition X1PDefinition X1PDefinition():  | X (NM) 1 (NM) P (NM) definition (NI) 	++
CONSTRUCTOR:NAME:MRfQLineQty MRfQLineQty MRfQLineQty(MRfQLine line):  | M (NM) rf (NM) Q (NM) line (NM) qty (N) 	++ :: [ M (NM) rf (NM) Q (NM) line (N) - line (N) ]
BASE_VERB:NAME:OperationDelete PreparedStatement makePSToDeleteFromChildTables(String childTableName, String primaryColumnNames): make (V)  | PS (N) -- to (P) delete (NM) from (NM) child (NM) tables (N) 	++ :: [ string (NI) - child (NM) table (NM) name (NI) ] :: [ string (NI) - primary (NM) column (NM) names (N) ] :: prepared (NM) statement (NI)  :: operation (NM) delete (N) 
SPECIAL:NAME:ColorImpl String ____jaxb_ri____getNamespaceURI(): jaxb (PRE) ri (PRE) get (V)  | namespace (NM) URI (NI) 	++ :: string (NI)  :: color (NM) impl (NI) 
BASE_VERB:CLAS:IFactory boolean terminate(): terminate (V)  | I (NM) factory (N) 	++ :: boolean (N) 
NOUN_PHRASE:NAME:Raster2 double redCovariance(): get (V) | red (NM) covariance (N) 	++ :: raster (NM) 2 (N)  :: double (N) 
SPECIAL:NAME:PersonMapping String getMiddleInitial(): get (V)  | middle (NM) initial (N) 	++ :: string (NI)  :: person (NM) mapping (N) 
SPECIAL:NAME:Not void getVariables(Collection variables): get (V)  | EQUIV[variables (N) , [ collection (N) - variables (N) ]]	++ :: not (DT) 
CONSTRUCTOR:NAME:XWriter XWriter XWriter(File file):  | X (NM) writer (N) 	++ :: [ file (NI) - file (NI) ]
BASE_VERB:NAME:MyInternalFrame void redoLastEdit(): redo (V)  | last (DT) edit (N) 	++ :: my (PR) internal (NM) frame (N) 
CONSTRUCTOR:NAME:Position Position Position(int new_num_vectors, Position_Vector new_vectors):  | position (N) 	++ :: [ int (N) - new (NM) num (NM) vectors (N) ] :: [ position (NM) vector (N) - new (NM) vectors (N) ]
V_3P_IRR:NAME:ApplicationDefinition boolean isDirectInvocable(): is (V)  | direct (NM) invocable (N) 	++ :: boolean (N)  :: application (NM) definition (NI) 
SPECIAL:NAME:BoardImpl OutputStream getRecordOutputStream(): get (V)  | record (NM) output (NM) stream (NI) 	++ :: output (NM) stream (NI)  :: board (NM) impl (NI) 
CONSTRUCTOR:NAME:SelectionListenerHandler SelectionListenerHandler SelectionListenerHandler(TagConfig config):  | selection (NM) listener (NM) handler (N) 	++ :: [ tag (NM) config (NI) - config (NI) ]
SPECIAL:FORM:ColumnSorter int compare(Object a, Object b): compare (V)  | [ object (NI) - a (N) ]	++ :: [ object (NI) - b (N) ] :: column (NM) sorter (N)  :: int (N) 
SPECIAL:NAME:EPPPrinter void printResponse(epp_ContactDeleteRsp response, String indent): print (V)  | EQUIV[response (N) , [ epp (NM) contact (NM) delete (NM) rsp (N) - response (N) ]]	++ :: [ string (NI) - indent (N) ] :: EPP (NM) printer (N) 
CONSTRUCTOR:NAME:SteppedComboBox SteppedComboBox SteppedComboBox(Vector items):  | stepped (NM) combo (NM) box (N) 	++ :: [ vector (N) - items (N) ]
BASE_VERB:NAME:Hir_2c_Convert String convertFile(String loadName, String saveName, int imageDataStart): convert (V)  | file (NI) 	++ :: [ string (NI) - load (NM) name (NI) ] :: [ string (NI) - save (NM) name (NI) ] :: [ int (N) - image (NM) data (NM) start (N) ] :: string (NI)  :: hir (NM) 2 (NM) c (NM) convert (N) 
CONSTRUCTOR:NAME:HyperMenuItem HyperMenuItem HyperMenuItem(String desc):  | hyper (NM) menu (NM) item (NI) 	++ :: [ string (NI) - desc (NI) ]
SPECIAL:NAME:Minefield static Minefield createThunderActiveMF(Coords coords, int playerId, int damage): create (V)  | thunder (NM) active (NM) MF (N) 	++ :: [ coords (N) - coords (N) ] :: [ int (N) - player (NM) id (NI) ] :: [ int (N) - damage (N) ] :: minefield (N)  :: minefield (N) 
ED_VERB:NAME:MainPanelLayout Dimension preferredLayoutSize(Container parent): preferred (V)  | layout (NM) size (N) 	++ :: [ container (NI) - parent (N) ] :: dimension (N)  :: main (NM) panel (NM) layout (N) 
SPECIAL:NAME:MCellContent BitSet getValue(): get (V)  | value (NI) 	++ :: bit (NM) set (N)  :: M (NM) cell (NM) content (N) 
SPECIAL:NAME:To1 UnaryMinus getUnaryMinus1(): get (V)  | unary (NM) minus (N) 1 (D) 	++ :: unary (NM) minus (N)  :: to (NM) 1 (N) 
BASE_VERB:NAME:MoleculeMerger void handleThermFit(ThermFitFacade tff): handle (VI)  | EQUIV[therm (NM) fit (N) , [ therm (NM) fit (NM) facade (NI) - tff (N) ]]	++ :: molecule (NM) merger (N) 
BASE_VERB:NAME:AbstractStandardPerson void storeMainAddress(String postAddress1, String postAddress2, String postAddress3, String postAddress4, PrimaryKey cityPk, PrimaryKey zipCodePk, PrimaryKey statePk, PrimaryKey countryPk, AnyLogicContext alc): store (V)  | main (NM) address (NI) 	++ :: [ string (NI) - post (NM) address (NM) 1 (N) ] :: [ string (NI) - post (NM) address (NM) 2 (N) ] :: [ string (NI) - post (NM) address (NM) 3 (N) ] :: [ string (NI) - post (NM) address (NM) 4 (N) ] :: [ primary (NM) key (NI) - city (NM) pk (NI) ] :: [ primary (NM) key (NI) - zip (NM) code (NM) pk (NI) ] :: [ primary (NM) key (NI) - state (NM) pk (NI) ] :: [ primary (NM) key (NI) - country (NM) pk (NI) ] :: [ any (DT) logic (NM) context (N) - alc (N) ] :: abstract (NM) standard (NM) person (N) 
SPECIAL:NAME:X_Test void setT_Date(Timestamp T_Date): set (V)  | T (NM) date (N) 	++ :: [ timestamp (N) - T (NM) date (N) ] :: X (NM) test (N) 
BASE_VERB:FORM:AccountPersistenceImpl Account update(Account account): update (V)  | [ account (N) - account (N) ]	++ :: account (NM) persistence (NM) impl (NI)  :: account (N) 
SPECIAL:NAME:AttributesImplImpl Variant addAttribute(Variant uri, Variant LocalName, Variant qName, Variant type): add (V)  | attribute (N) 	++ :: [ variant (N) - uri (NI) ] :: [ variant (N) - local (NM) name (NI) ] :: [ variant (N) - q (NM) name (NI) ] :: [ variant (N) - type (N) ] :: variant (N)  :: attributes (NM) impl (NM) impl (NI) 
SPECIAL:FORM:I18nBundle void load(Locale locale, String pkg): load (V)  | [ locale (N) - locale (N) ]	++ :: [ string (NI) - pkg (N) ] :: I (NM) 18 (NM) n (NM) bundle (N) 
SPECIAL:NAME:KnowledgeObjectAncestors String getVal(): get (V)  | val (NI) 	++ :: string (NI)  :: knowledge (NM) object (NM) ancestors (N) 
ENDS_WITH_ED:NAME:UnorderedListener void collapseAdded(Unordered source, Thing newValue): handle (V) | collapse (NM) added (N) 	++ :: [ unordered (N) - source (NI) ] :: [ thing (N) - new (NM) value (NI) ] :: unordered (NM) listener (N)  :: void (N) 
SPECIAL:NAME:NumexToken static ArrayList<ArrayList<String>> readList(String path): read (V)  | list (N) 	++ :: [ string (NI) - path (NI) ] :: array (NM) list (NM) array (NM) list (NM) string (NI)  :: numex (NM) token (N) 
SPECIAL:NAME:TimePanel void setTime(Calendar cal): set (V)  | time (N) 	++ :: [ calendar (N) - cal (N) ] :: time (NM) panel (N) 
CONSTRUCTOR:NAME:AiSendReport_args AiSendReport_args AiSendReport_args(ScanStateCore core):  | ai (NM) send (NM) report (NM) args (N) 	++ :: [ scan (NM) state (NM) core (N) - core (N) ]
BASE_VERB:CLAS:BasicArray BasicArray rifft(): rifft (V)  | basic (NM) array (N) 	++ :: basic (NM) array (N) 
SPECIAL:NAME:TestPellucidArcFile void testJarArchive(): test (VI)  | jar (NM) archive (N) 	++ :: test (NM) pellucid (NM) arc (NM) file (NI) 
BASE_VERB:NAME:WordNode void updateReadingText(): update (V)  | reading (NM) text (NI) 	++ :: word (NM) node (NI) 
BASE_VERB:NAME:Fields static int hashCode(byte b): hash (V)  | code (NI) 	++ :: [ byte (N) - b (N) ] :: int (N)  :: fields (N) 
SPECIAL:NAME:JspServletWrapper List getDependants(): get (V)  | dependants (N) 	++ :: list (N)  :: jsp (NM) servlet (NM) wrapper (NI) 
SPECIAL:NAME:BaseCommonAttribute URI getDefaultMep(): get (V)  | default (NM) mep (N) 	++ :: URI (NI)  :: base (NM) common (NM) attribute (N) 
SPECIAL:NAME:MyService String getDummy(): get (V)  | dummy (N) 	++ :: string (NI)  :: my (PR) service (N) 
BASE_VERB:NAME:Unmarshaller void enterElement(String ___uri, String ___local, String ___qname, Attributes __atts): enter (V)  | element (NI) 	++ :: [ string (NI) - uri (NI) ] :: [ string (NI) - local (N) ] :: [ string (NI) - qname (N) ] :: [ attributes (N) - atts (N) ] :: unmarshaller (N) 
SPECIAL:NAME:USAddress String getCity(): get (V)  | city (N) 	++ :: string (NI)  :: US (PR) address (NI) 
BASE_VERB:FORM:ArrayLib static void insertionsort(double a, int b, int p, int r): insertionsort (V)  | [ double (N) - a (N) ]	++ :: [ int (N) - b (N) ] :: [ int (N) - p (NI) ] :: [ int (N) - r (N) ] :: array (NM) lib (N) 
VOID_NP:NAME:XmlConverter void characters(char chars, int start, int len): handle (V) | characters (N) 	++ :: [ char (N) - chars (N) ] :: [ int (N) - start (N) ] :: [ int (N) - len (N) ] :: xml (NM) converter (N)  :: void (N) 
V_3P_IRR:NAME:Message boolean isPrimitiveEquals(Message o): is (V)  | primitive (NM) equals (N) 	++ :: [ message (NI) - o (N) ] :: boolean (N)  :: message (NI) 
SPECIAL:NAME:PooledStatement int executeBatch(): execute (VI)  | batch (N) 	++ :: int (N)  :: pooled (NM) statement (NI) 
SPECIAL:NAME:EdgeStyleAction EdgeStyleFormatAction createNodeStyleFormatAction(MindMapNode selected, String style): create (V)  | node (NM) style (NM) format (NM) action (N) 	++ :: [ mind (NM) map (NM) node (NI) - selected (N) ] :: [ string (NI) - style (N) ] :: edge (NM) style (NM) format (NM) action (N)  :: edge (NM) style (NM) action (N) 
BASE_VERB:CLAS:NsPg String number(): number (V)  | ns (NM) pg (N) 	++ :: string (NI) 
BASE_VERB:FORM:TabChange static StructureElement parse(Environment env, RecordTokenizer recordTokenizer): parse (V)  | [ environment (N) - env (N) ]	++ :: [ record (NM) tokenizer (N) - record (NM) tokenizer (N) ] :: tab (NM) change (N)  :: structure (NM) element (NI) 
SPECIAL:NAME:JRSortFieldFactory Object createObject(Attributes atts): create (V)  | object (NI) 	++ :: [ attributes (N) - atts (N) ] :: object (NI)  :: JR (NM) sort (NM) field (NM) factory (N) 
VOID_NP:NAME:ContentMD5Module void trailerHandler(Response resp, RoRequest req): handle (V) | trailer (NM) handler (N) 	++ :: [ response (N) - resp (N) ] :: [ ro (NM) request (N) - req (N) ] :: content (NM) MD (NM) 5 (NM) module (N)  :: void (N) 
SPECIAL:NAME:MatrixTable void setElements(Matrix matrix): set (V)  | elements (N) 	++ :: [ matrix (N) - matrix (N) ] :: matrix (NM) table (N) 
BASE_VERB:NAME:TransformManager Point3i transformPoint(Point3f pointAngstroms, Vector3f vibrationVector): transform (V)  | point (N) 	++ :: [ point (NM) 3 (NM) f (N) - point (NM) angstroms (N) ] :: [ vector (NM) 3 (NM) f (N) - vibration (NM) vector (N) ] :: point (NM) 3 (NM) i (N)  :: transform (NM) manager (N) 
V_3PS:NAME:DatabaseAdapter boolean supportsNullsInCandidateKeys(): supports (V)  | nulls (N) -- in (P) candidate (NM) keys (N) 	++ :: boolean (N)  :: database (NM) adapter (NI) 
SPECIAL:NAME:PaymentTermsControllerImpl DBOrderClause getObjectsOrderClause(BasicDBO _c): get (V)  | objects (NM) order (NM) clause (N) 	++ :: [ basic (NM) DBO (N) - c (N) ] :: DB (NM) order (NM) clause (N)  :: payment (NM) terms (NM) controller (NM) impl (NI) 
CONSTRUCTOR:NAME:EfistoClientError EfistoClientError EfistoClientError():  | efisto (NM) client (NM) error (N) 	++
BASE_VERB:NAME:XmlLoggerFactory void buildLoggerMap(Element rootElem): build (V)  | logger (NM) map (N) 	++ :: [ element (NI) - root (NM) elem (NI) ] :: xml (NM) logger (NM) factory (N) 
SPECIAL:NAME:SynchronousQueue void readObject(ObjectInputStream s): read (V)  | object (NI) 	++ :: [ object (NM) input (NM) stream (NI) - s (N) ] :: synchronous (NM) queue (N) 
BASE_VERB:CLAS:CSeparator Element saveAsXML(): save (V)  | C (NM) separator (N) -- as (P) XML (N) 	++ :: element (NI) 
NOUN_PHRASE:NAME:ArmN IState successorState(IState s, IAction a): get (V) | successor (NM) state (N) 	++ :: [ I (NM) state (N) - s (N) ] :: [ I (NM) action (N) - a (N) ] :: arm (NM) N (N)  :: I (NM) state (N) 
SPECIAL:NAME:HTMLSelectElement HTMLFormElement getForm(): get (V)  | form (N) 	++ :: HTML (NM) form (NM) element (NI)  :: HTML (NM) select (NM) element (NI) 
SPECIAL:NAME:WaitAndRetryListener void checkOk(Object obj): check (VI)  | ok (N) 	++ :: [ object (NI) - obj (NI) ] :: wait (NM) and (NM) retry (NM) listener (N) 
SPECIAL:NAME:ParseExpression int getPartCount(): get (V)  | part (NM) count (N) 	++ :: int (N)  :: parse (NM) expression (N) 
BASE_VERB:NAME:view_jsp boolean _jspx_meth_portlet_005fnamespace_005f105(JspTag _jspx_th_c_005fif_005f18, PageContext _jspx_page_context): jspx (PRE) meth (V)  | portlet (NM) 005 (D) fnamespace (NM) 005 (D) f (N) 105 (D) 	++ :: [ jsp (NM) tag (NI) - jspx (NM) th (NM) c (NM) 005 (NM) fif (NM) 005 (NM) f (NM) 18 (N) ] :: [ page (NM) context (N) - jspx (NM) page (NM) context (N) ] :: boolean (N)  :: view (NM) jsp (N) 
CONSTRUCTOR:NAME:MyBaseConversionError MyBaseConversionError MyBaseConversionError(String str):  | my (PR) base (NM) conversion (NM) error (N) 	++ :: [ string (NI) - str (NI) ]
SPECIAL:NAME:DialogHandler AllowHeader getAllowHeader(): get (V)  | allow (NM) header (N) 	++ :: allow (NM) header (N)  :: dialog (NM) handler (N) 
SPECIAL:NAME:EmployeeForm void setEmpMgrID(String empMgrID): set (V)  | emp (NM) mgr (NM) ID (NI) 	++ :: [ string (NI) - emp (NM) mgr (NM) ID (NI) ] :: employee (NM) form (N) 
SPECIAL:NAME:ReportItemProviderAdapterFactory void setParentAdapterFactory(ComposedAdapterFactory parentAdapterFactory): set (V)  | parent (NM) adapter (NM) factory (N) 	++ :: [ composed (NM) adapter (NM) factory (N) - parent (NM) adapter (NM) factory (N) ] :: report (NM) item (NM) provider (NM) adapter (NM) factory (N) 
SPECIAL:NAME:SplashWindow ImageIcon getImageResource(String imageName): get (V)  | image (NM) resource (N) 	++ :: [ string (NI) - image (NM) name (NI) ] :: image (NM) icon (N)  :: splash (NM) window (N) 
BASE_VERB:FORM:FileUtils static void save(String realName, byte content): save (V)  | [ string (NI) - real (NM) name (NI) ]	++ :: [ byte (N) - content (N) ] :: file (NM) utils (N) 
BASE_VERB:NAME:Bean String stripPrefix(String name, int offset): strip (V)  | prefix (N) 	++ :: [ string (NI) - name (NI) ] :: [ int (N) - offset (N) ] :: string (NI)  :: bean (NI) 
SPECIAL:NAME:NoAllocs IndividualAllocID getIndividualAllocID(): get (V)  | individual (NM) alloc (NM) ID (NI) 	++ :: individual (NM) alloc (NM) ID (NI)  :: no (DT) allocs (N) 
SPECIAL:NAME:JProgramSettingsWebPanel boolean getSettingsChanged(): get (V)  | settings (NM) changed (N) 	++ :: boolean (N)  :: J (NM) program (NM) settings (NM) web (NM) panel (N) 
SPECIAL:NAME:AllTypesEntityData void setALongArray(long ALongArray): set (V)  | A (NM) long (NM) array (N) 	++ :: [ long (N) - A (NM) long (NM) array (N) ] :: all (DT) types (NM) entity (NM) data (NI) 
SPECIAL:FORM:ComputeHttpmdCodebase static void main(String args): main (V)  | [ string (NI) - args (N) ]	++ :: compute (NM) httpmd (NM) codebase (N) 
SPECIAL:NAME:ServiceAvailability double getPercentTotalTimeUnknown(): get (V)  | percent (NM) total (NM) time (NM) unknown (N) 	++ :: double (N)  :: service (NM) availability (N) 
ENDS_WITH_ED:NAME:ERD2WFactory SelectPageInterface selectPageForEntityNamed(String entityName, WOSession session): handle (V) | select (NM) page (NM) for (NM) entity (NM) named (N) 	++ :: [ string (NI) - entity (NM) name (NI) ] :: [ WO (NM) session (N) - session (N) ] :: ERD (NM) 2 (NM) W (NM) factory (N)  :: select (NM) page (NM) interface (NI) 
SPECIAL:NAME:PdfResource ImageDescriptor getMyThumbnailDescriptor(): get (V)  | my (PR) thumbnail (NM) descriptor (NI) 	++ :: image (NM) descriptor (NI)  :: pdf (NM) resource (N) 
SPECIAL:CLAS:TestChannelFileSource void testGet(): test (VI) get (V)  | test (NM) channel (NM) file (NM) source (NI) 	++
BASE_VERB:NAME:JFormattedDateTextField String convertDateToStr(Date date): convert (V)  | EQUIV[date (N) , [ date (N) - date (N) ]]-- to (P) str (NI) 	++ :: string (NI)  :: J (NM) formatted (NM) date (NM) text (NM) field (N) 
SPECIAL:NAME:MatchSelector void setKey(Object key): set (V)  | key (NI) 	++ :: [ object (NI) - key (NI) ] :: match (NM) selector (N) 
SPECIAL:NAME:JIoSTable void setDoubleBuffered(boolean f): set (V)  | double (NM) buffered (N) 	++ :: [ boolean (N) - f (N) ] :: J (NM) io (NM) S (NM) table (N) 
SPECIAL:NAME:ImageDecorator void setBorder(String border_el): set (V)  | border (N) 	++ :: [ string (NI) - border (NM) el (N) ] :: image (NM) decorator (N) 
PREP:NAME:Token String toString(): convert (V) | to (P) string (NI) 	++ :: token (N)  :: string (NI) 
SPECIAL:NAME:mStation Station getStation(): get (V)  | station (N) 	++ :: station (N)  :: m (NM) station (N) 
SPECIAL:NAME:AssociationInstanceService Map getStagingLevel2AttrsMap(): get (V)  | staging (NM) level (NM) 2 (D) attrs (NM) map (N) 	++ :: map (N)  :: association (NM) instance (NM) service (N) 
NOUN_PHRASE:NAME:StringCharacterIterator char next(): get (V) | next (DT) 	++ :: string (NM) character (NM) iterator (N)  :: char (N) 
NOUN_PHRASE:NAME:libsbmlJNI static long new_Date__SWIG_9(): get (V) | new (NM) date (NM) SWIG (N) 9 (D) 	++ :: libsbml (NM) JNI (N)  :: long (N) 
SPECIAL:NAME:ToolWindowManager static ToolWindowManager getInstance(): get (V)  | instance (NI) 	++ :: tool (NM) window (NM) manager (N)  :: tool (NM) window (NM) manager (N) 
SPECIAL:NAME:UnmodifiableDate void setDate(int arg0): set (V)  | date (N) 	++ :: [ int (N) - arg (NM) 0 (N) ] :: unmodifiable (NM) date (N) 
BASE_VERB:FORM:Factory static PointsMeasureType parse(URL u): parse (V)  | [ URL (NI) - u (N) ]	++ :: factory (N)  :: points (NM) measure (NM) type (N) 
BASE_VERB:FORM:ChecksDefaultReportingStrategy void warn(MetaEnvironmentSource context, String msg, Object helpContext): warn (V)  | [ meta (NM) environment (NM) source (NI) - context (N) ]	++ :: [ string (NI) - msg (NI) ] :: [ object (NI) - help (NM) context (N) ] :: checks (NM) default (NM) reporting (NM) strategy (N) 
PREP:NAME:DTS String toString(): convert (V) | to (P) string (NI) 	++ :: DTS (N)  :: string (NI) 
SPECIAL:NAME:DbLoginDialog JLabel getLblId(): get (V)  | lbl (NM) id (NI) 	++ :: J (NM) label (NI)  :: db (NM) login (NM) dialog (N) 
SPECIAL:FORM:FileRenamer static void main(String argv): main (V)  | [ string (NI) - argv (N) ]	++ :: file (NM) renamer (N) 
SPECIAL:NAME:X_RV_MPC_Product_BOMLine void setSeqNo(int SeqNo): set (V)  | seq (NM) no (DT) 	++ :: [ int (N) - seq (NM) no (DT) ] :: X (NM) RV (NM) MPC (NM) product (NM) BOM (NM) line (N) 
SPECIAL:NAME:JRBaseFactory Object createObject(Attributes attributes): create (V)  | object (NI) 	++ :: [ attributes (N) - attributes (N) ] :: object (NI)  :: JR (NM) base (NM) factory (N) 
SPECIAL:NAME:SaveDial void initComponents(): init (V)  | components (N) 	++ :: save (NM) dial (N) 
SPECIAL:NAME:MCRHIBClassificationStore String getAllClassificationID(): get (V)  | all (DT) classification (NM) ID (NI) 	++ :: string (NI)  :: MCRHIB (NM) classification (NM) store (N) 
BASE_VERB:NAME:ManageDiagnosisResp void notifyManageDiagIcd10(String str, int status): notify (VI) manage (V)  | diag (NM) icd (N) 10 (D) 	++ :: [ string (NI) - str (NI) ] :: [ int (N) - status (N) ] :: manage (NM) diagnosis (NM) resp (N) 
SPECIAL:NAME:Vim int coGetEditorMode(): co (PRE) get (V)  | editor (NM) mode (N) 	++ :: int (N)  :: vim (N) 
CONSTRUCTOR:NAME:Gds_jButtonOpen_actionAdapter Gds_jButtonOpen_actionAdapter Gds_jButtonOpen_actionAdapter(Gds adaptee):  | gds (NM) j (NM) button (NM) open (NM) action (NM) adapter (NI) 	++ :: [ gds (N) - adaptee (N) ]
SPECIAL:NAME:Text void setAdjustForWindow(boolean TF): set (V)  | adjust (N) -- for (P) window (N) 	++ :: [ boolean (N) - TF (N) ] :: text (NI) 
SPECIAL:CLAS:RequestHandler void run(): run (VI)  | request (NM) handler (N) 	++
SPECIAL:NAME:CustomThingElement void setThingInterface(String thingInterface): set (V)  | thing (NM) interface (NI) 	++ :: [ string (NI) - thing (NM) interface (NI) ] :: custom (NM) thing (NM) element (NI) 
SPECIAL:FORM:ParagraphComparator int compare(String o1, String o2): compare (V)  | [ string (NI) - o (NM) 1 (N) ]	++ :: [ string (NI) - o (NM) 2 (N) ] :: paragraph (NM) comparator (N)  :: int (N) 
CONSTRUCTOR:NAME:Comment Comment Comment(String comment):  | comment (N) 	++ :: [ string (NI) - comment (N) ]
SPECIAL:FORM:CompressablePathTrieEntry void doCompress(String prefix): do (VI) compress (V)  | [ string (NI) - prefix (N) ]	++ :: compressable (NM) path (NM) trie (NM) entry (NI) 
BASE_VERB:CLAS:SelectDialog boolean open(): open (V)  | select (NM) dialog (N) 	++ :: boolean (N) 
ENDS_WITH_ED:NAME:AccessibleAWTFocusHandler void focusGained(FocusEvent e): handle (V) | focus (NM) gained (N) 	++ :: [ focus (NM) event (NI) - e (N) ] :: accessible (NM) AWT (NM) focus (NM) handler (N)  :: void (N) 
SPECIAL:NAME:EmptyEmblemModel int getMaxEmblemCount(): get (V)  | max (NM) emblem (NM) count (N) 	++ :: int (N)  :: empty (NM) emblem (NM) model (NI) 
SPECIAL:NAME:FtpFilterStreamManager static ImageFilterOutputStream getImageOutputStream(OutputStream output): get (V)  | EQUIV[image (NM) output (NM) stream (NI) , [ output (NM) stream (NI) - output (N) ]]	++ :: image (NM) filter (NM) output (NM) stream (NI)  :: ftp (NM) filter (NM) stream (NM) manager (N) 
SPECIAL:NAME:SOCTextMsg String getText(): get (V)  | text (NI) 	++ :: string (NI)  :: SOC (NM) text (NM) msg (NI) 
SPECIAL:NAME:RelatorioExcecaoVO String getTelecentro(): get (V)  | telecentro (N) 	++ :: string (NI)  :: relatorio (NM) excecao (NM) VO (NI) 
BASE_VERB:NAME:VerticalAlignment int hashCode(): hash (V)  | code (NI) 	++ :: int (N)  :: vertical (NM) alignment (N) 
SPECIAL:NAME:CIM_Configuration ArrayList getAssociated_CIM_CollectionOfMSEs_CIM_CollectionConfigurations(CIMClient cimClient, boolean includeQualifiers, boolean includeClassOrigin, String propertyList): get (V)  | associated (NM) CIM (NM) collection (N) -- of (P) MS (NM) es (NM) CIM (NM) collection (NM) configurations (N) 	++ :: [ CIM (NM) client (N) - cim (NM) client (N) ] :: [ string (NI) - property (NM) list (N) ] :: [ boolean (N) - include (NM) qualifiers (N) ] :: [ boolean (N) - include (NM) class (NM) origin (N) ] :: array (NM) list (N)  :: CIM (NM) configuration (NI) 
SPECIAL:NAME:ActivityExtVO void setTaskID(int i): set (V)  | task (NM) ID (NI) 	++ :: [ int (N) - i (N) ] :: activity (NM) ext (NM) VO (NI) 
V_3P_IRR:NAME:OxerpHttpRequest boolean isUserInRole(String arg0): is (V)  | user (N) -- in (P) role (N) 	++ :: [ string (NI) - arg (NM) 0 (N) ] :: boolean (N)  :: oxerp (NM) http (NM) request (N) 
SPECIAL:NAME:MolResLinkEnd void checkValid(boolean complete): check (VI)  | valid (N) 	++ :: [ boolean (N) - complete (N) ] :: mol (NM) res (NM) link (NM) end (N) 
SPECIAL:NAME:GF_PropertyType void setFeatureType(GF_FeatureType FeatureType): set (V)  | feature (NM) type (N) 	++ :: [ GF (NM) feature (NM) type (N) - feature (NM) type (N) ] :: GF (NM) property (NM) type (N) 
CONSTRUCTOR:NAME:LinkType LinkType LinkType(String typeString):  | link (NM) type (N) 	++ :: [ string (NI) - type (NM) string (NI) ]
CONSTRUCTOR:NAME:MailNotFoundException MailNotFoundException MailNotFoundException(String mail, Throwable cause):  | mail (NM) not (DT) found (NM) exception (N) 	++ :: [ string (NI) - mail (N) ] :: [ throwable (N) - cause (N) ]
SPECIAL:NAME:RecordJSF WebLink getRecordLink(): get (V)  | record (NM) link (N) 	++ :: web (NM) link (N)  :: record (NM) JSF (N) 
BASE_VERB:FORM:exposed_rjust PyBuiltinFunction bind(PyObject self): bind (V)  | [ py (NM) object (NI) - self (N) ]	++ :: exposed (NM) rjust (N)  :: py (NM) builtin (NM) function (N) 
BASE_VERB:FORM:GraphView void repaint(long tm, int x, int y, int width, int height): repaint (V)  | [ long (N) - tm (N) ]	++ :: [ int (N) - x (N) ] :: [ int (N) - y (N) ] :: [ int (N) - width (N) ] :: [ int (N) - height (N) ] :: graph (NM) view (NI) 
SPECIAL:NAME:BreakupCriteriaFieldImpl Class getPrimaryInterfaceClass(): get (V)  | primary (NM) interface (NM) class (NI) 	++ :: class (NI)  :: breakup (NM) criteria (NM) field (NM) impl (NI) 
NOUN_PHRASE:NAME:GenericRecord Record newRecord(): get (V) | new (NM) record (N) 	++ :: generic (NM) record (N)  :: record (N) 
SPECIAL:NAME:RoleDAOImplHibernateTest void setUserDao(ApplicationUserDAO userDao): set (V)  | user (NM) dao (N) 	++ :: [ application (NM) user (NM) DAO (N) - user (NM) dao (N) ] :: role (NM) DAO (NM) impl (NM) hibernate (NM) test (N) 
SPECIAL:NAME:OWLIM String getAnnotationPropertyValue(String repositoryID, String theResourceURI, String theAnnotationPropertyURI, String language): get (V)  | annotation (NM) property (NM) value (NI) 	++ :: [ string (NI) - repository (NM) ID (NI) ] :: [ string (NI) - the (DT) resource (NM) URI (NI) ] :: [ string (NI) - the (DT) annotation (NM) property (NM) URI (NI) ] :: [ string (NI) - language (N) ] :: string (NI)  :: OWLIM (N) 
BASE_VERB:NAME:JxpParserTokenManager int jjMoveStringLiteralDfa4_2(long old0, long active0, long old1, long active1, long old2, long active2): jj (PRE) move (V)  | EQUIV[string (NM) literal (NM) dfa (N) 4 (D) 2 (D) , [ long (N) - old (NM) 2 (N) ], [ long (N) - active (NM) 2 (N) ]]	++ :: [ long (N) - old (NM) 0 (N) ] :: [ long (N) - active (NM) 0 (N) ] :: [ long (N) - old (NM) 1 (N) ] :: [ long (N) - active (NM) 1 (N) ] :: int (N)  :: jxp (NM) parser (NM) token (NM) manager (N) 
V_MODAL:CLAS:RemoveStateType boolean canTransitToUpdate(): can (VI) transit (V)  | remove (NM) state (NM) type (N) -- to (P) update (N) 	++ :: boolean (N) 
SPECIAL:NAME:SourceStreamReaderWrapper long getLastModified(): get (V)  | last (DT) modified (N) 	++ :: long (N)  :: source (NM) stream (NM) reader (NM) wrapper (NI) 
CONSTRUCTOR:NAME:UserFilterPattern UserFilterPattern UserFilterPattern(String searchPattern, FilterInterval interval, int from, String order):  | user (NM) filter (NM) pattern (N) 	++ :: [ string (NI) - search (NM) pattern (N) ] :: [ filter (NM) interval (N) - interval (N) ] :: [ int (N) - from (N) ] :: [ string (NI) - order (N) ]
NOUN_PHRASE:NAME:Py static PyFloat newFloat(float v): get (V) | new (NM) float (N) 	++ :: [ float (N) - v (N) ] :: py (N)  :: py (NM) float (N) 
BASE_VERB:NAME:_TypedProxyPushSupplierStub void validate_qos(Property _ob_a0, NamedPropertyRangeSeqHolder _ob_ah1): validate (VI)  | qos (N) 	++ :: [ property (N) - ob (NM) a (NM) 0 (N) ] :: [ named (NM) property (NM) range (NM) seq (NM) holder (NI) - ob (NM) ah (NM) 1 (N) ] :: typed (NM) proxy (NM) push (NM) supplier (NM) stub (N) 
SPECIAL:NAME:JQBStandardDataFile JQBWriteStream getAppendStream(int rec): get (V)  | append (NM) stream (NI) 	++ :: [ int (N) - rec (N) ] :: JQB (NM) write (NM) stream (NI)  :: JQB (NM) standard (NM) data (NM) file (NI) 
SPECIAL:NAME:ServiceManagerEJBImpl ServiceLightValue getServiceLightValue(AuthzSubjectValue subject, Integer id): get (V)  | EQUIV[service (NM) light (NM) value (NI) , [ authz (NM) subject (NM) value (NI) - subject (N) ]]	++ :: [ integer (N) - id (NI) ] :: service (NM) light (NM) value (NI)  :: service (NM) manager (NM) EJB (NM) impl (NI) 
NOUN_PHRASE:NAME:Divisor Object next(): get (V) | next (DT) 	++ :: divisor (N)  :: object (NI) 
BASE_VERB:CLAS:AnonymousLoginModule boolean login(): login (V)  | anonymous (NM) login (NM) module (N) 	++ :: boolean (N) 
SPECIAL:NAME:BpelCorrelationSetsState int getType(): get (V)  | type (N) 	++ :: int (N)  :: bpel (NM) correlation (NM) sets (NM) state (N) 
BASE_VERB:FORM:GBoxElement void move(Point2D position): move (V)  | [ point (NM) 2 (NM) D (N) - position (N) ]	++ :: G (NM) box (NM) element (NI) 
CONSTRUCTOR:NAME:MacroRenderer MacroRenderer MacroRenderer():  | macro (NM) renderer (N) 	++
CONSTRUCTOR:NAME:JComponentHelperTextAreaInputFactory JComponentHelperTextAreaInputFactory JComponentHelperTextAreaInputFactory(UiComponentTypeHint pUiComponentTypeHint, Integer pUsageFor):  | J (NM) component (NM) helper (NM) text (NM) area (NM) input (NM) factory (N) 	++ :: [ ui (NM) component (NM) type (NM) hint (N) - p (NM) ui (NM) component (NM) type (NM) hint (N) ] :: [ integer (N) - p (NM) usage (NM) for (N) ]
SPECIAL:NAME:KerberosNameCreator void createKerberosName(String host, String name, String pwd): create (V)  | EQUIV[kerberos (NM) name (NI) , [ string (NI) - name (NI) ]]	++ :: [ string (NI) - host (N) ] :: [ string (NI) - pwd (N) ] :: kerberos (NM) name (NM) creator (N) 
BASE_VERB:NAME:SQLStatements String clearTaskTableStatement(): clear (V)  | task (NM) table (NM) statement (NI) 	++ :: string (NI)  :: SQL (NM) statements (N) 
SPECIAL:NAME:TransportProtocolState void setDisconnectReason(String reason): set (V)  | disconnect (NM) reason (N) 	++ :: [ string (NI) - reason (N) ] :: transport (NM) protocol (NM) state (N) 
BASE_VERB:NAME:void moveDot(FilterBypass fb, int dot, Bias bias): move (V)  | EQUIV[dot (N) , [ int (N) - dot (N) ]]	++ :: [ filter (NM) bypass (N) - fb (N) ] :: [ bias (N) - bias (N) ] :: ANONYMOUS (N) 
SPECIAL:NAME:VerifyOptionsDialog void addCheck(String letter, String text): add (V)  | check (N) 	++ :: [ string (NI) - letter (N) ] :: [ string (NI) - text (NI) ] :: verify (NM) options (NM) dialog (N) 
BASE_VERB:NAME:CharTrie void putIndexData(UCharacterProperty friend): put (V)  | index (NM) data (NI) 	++ :: [ U (NM) character (NM) property (N) - friend (N) ] :: char (NM) trie (N) 
SPECIAL:NAME:BaseDBAuthor void setPrimaryKey(ObjectKey key): set (V)  | primary (NM) key (NI) 	++ :: [ object (NM) key (NI) - key (NI) ] :: base (NM) DB (NM) author (N) 
BASE_VERB:NAME:GuiMap Hashtable setupLabels(): setup (V)  | labels (N) 	++ :: hashtable (N)  :: gui (NM) map (N) 
SPECIAL:NAME:Bundle static String getBundleString(String key, Object args): get (V)  | EQUIV[bundle (NM) string (NI) , [ string (NI) - key (NI) ]]	++ :: [ object (NI) - args (N) ] :: string (NI)  :: bundle (N) 
CONSTRUCTOR:NAME:Frame1_jMenuFileExit_ActionAdapter Frame1_jMenuFileExit_ActionAdapter Frame1_jMenuFileExit_ActionAdapter(Frame1 adaptee):  | frame (NM) 1 (NM) j (NM) menu (NM) file (NM) exit (NM) action (NM) adapter (NI) 	++ :: [ frame (NM) 1 (N) - adaptee (N) ]
BASE_VERB:FORM:Synset void insert(Connection thisConnection): insert (V)  | [ connection (N) - this (PR) connection (N) ]	++ :: synset (N) 
BASE_VERB:FORM:EngineImpl Object doquery(String query, Object subst): doquery (V)  | [ string (NI) - query (N) ]	++ :: [ object (NI) - subst (N) ] :: engine (NM) impl (NI)  :: object (NI) 
V_3P_IRR:NAME:FourDDatabaseMetaData boolean isCatalogAtStart(): is (V)  | catalog (N) -- at (P) start (N) 	++ :: boolean (N)  :: four (NM) D (NM) database (NM) meta (NM) data (NI) 
ED_VERB:NAME:Sbb3Sbb void sbbRolledBack(RolledBackContext context): sbb (PRE) rolled (V)  | back (N) 	++ :: [ rolled (NM) back (NM) context (N) - context (N) ] :: sbb (NM) 3 (NM) sbb (N) 
CONSTRUCTOR:NAME:UnmarshalException UnmarshalException UnmarshalException(String s, Exception e):  | unmarshal (NM) exception (N) 	++ :: [ string (NI) - s (N) ] :: [ exception (N) - e (N) ]
SPECIAL:NAME:DM05M15wTest void testResult24(): test (VI)  | result (N) 24 (D) 	++ :: DM (NM) 05 (NM) M (NM) 15 (NM) w (NM) test (N) 
CONSTRUCTOR:NAME:ResolveResult ResolveResult ResolveResult():  | resolve (NM) result (N) 	++
BASE_VERB:NAME:Hierarchy void clearNodes(): clear (V)  | nodes (N) 	++ :: hierarchy (N) 
SPECIAL:NAME:AttributeOptionInterface Object getValue(): get (V)  | value (NI) 	++ :: object (NI)  :: attribute (NM) option (NM) interface (NI) 
SPECIAL:NAME:ClsCelluleTableau String getData(int num): get (V)  | data (NI) 	++ :: [ int (N) - num (NI) ] :: string (NI)  :: cls (NM) cellule (NM) tableau (N) 
V_MODAL:NAME:ShortCellEditor boolean canParseString(String value): can (VI) parse (V)  | EQUIV[string (NI) , [ string (NI) - value (NI) ]]	++ :: boolean (N)  :: short (NM) cell (NM) editor (N) 
BASE_VERB:NAME:AwkParser boolean opt_newline(): opt (V)  | newline (N) 	++ :: boolean (N)  :: awk (NM) parser (N) 
SPECIAL:NAME:Status HeaderLcinfo getLcinfo(): get (V)  | lcinfo (N) 	++ :: header (NM) lcinfo (N)  :: status (N) 
SPECIAL:NAME:TableCopy void readSrc(): read (V)  | src (N) 	++ :: table (NM) copy (N) 
BASE_VERB:NAME:PageNumberImpl Boolean xgetNumLetterSync(): xget (V)  | num (NM) letter (NM) sync (N) 	++ :: boolean (N)  :: page (NM) number (NM) impl (NI) 
SPECIAL:FORM:AskQuestionAction void go(Object actor): go (VI)  | [ object (NI) - actor (N) ]	++ :: ask (NM) question (NM) action (N) 
SPECIAL:FORM:EmailedResumeWizardAction String doExecute(VectricsActionData actionData): do (VI) execute (VI)  | [ vectrics (NM) action (NM) data (NI) - action (NM) data (NI) ]	++ :: emailed (NM) resume (NM) wizard (NM) action (N)  :: string (NI) 
SPECIAL:NAME:TextAreaPainter void setCaretColor(Color caretColor): set (V)  | caret (NM) color (N) 	++ :: [ color (N) - caret (NM) color (N) ] :: text (NM) area (NM) painter (N) 
BASE_VERB:NAME:Process10 FuzzyIndicator postProcessIt(Vector allRes, DbSymbol dbs): post (V)  | process (NM) it (PR) 	++ :: [ vector (N) - all (DT) res (N) ] :: [ db (NM) symbol (N) - dbs (N) ] :: fuzzy (NM) indicator (N)  :: process (NM) 10 (N) 
ENDS_WITH_ED:NAME:void actionPerformed(ActionEvent e): handle (V) | action (NM) performed (N) 	++ :: [ action (NM) event (NI) - e (N) ] :: ANONYMOUS (N)  :: void (N) 
SPECIAL:NAME:Editor JPanel getJPanel(): get (V)  | J (NM) panel (N) 	++ :: J (NM) panel (N)  :: editor (N) 
NOUN_PHRASE:NAME:NativeValueIterator String actualName(): get (V) | actual (NM) name (NI) 	++ :: native (NM) value (NM) iterator (N)  :: string (NI) 
SPECIAL:NAME:HTMLScriptElementImpl void setText(String text): set (V)  | text (NI) 	++ :: [ string (NI) - text (NI) ] :: HTML (NM) script (NM) element (NM) impl (NI) 
BASE_VERB:NAME:XmlExporter static Document generateStartkarten(AWettkampf<T> wk): generate (V)  | startkarten (N) 	++ :: [ A (NM) wettkampf (NM) T (N) - wk (N) ] :: document (NI)  :: xml (NM) exporter (N) 
CONSTRUCTOR:NAME:FloatTest FloatTest FloatTest(String name):  | float (NM) test (N) 	++ :: [ string (NI) - name (NI) ]
SPECIAL:NAME:FreeMind Controller getController(): get (V)  | controller (N) 	++ :: controller (N)  :: free (NM) mind (N) 
BASE_VERB:NAME:AFP_Session int cmdGetVolumeParams(ByteReader rr, ByteWriter ww): cmd (V)  | get (NM) volume (NM) params (N) 	++ :: [ byte (NM) reader (N) - rr (N) ] :: [ byte (NM) writer (N) - ww (N) ] :: int (N)  :: AFP (NM) session (N) 
SPECIAL:NAME:FSLAbstractLearningUnitViewManager URL getMainHelpPageUrl(): get (V)  | main (NM) help (NM) page (NM) url (NI) 	++ :: URL (NI)  :: FSL (NM) abstract (NM) learning (NM) unit (NM) view (NM) manager (N) 
VOID_NP:NAME:LinkFigure void basicMoveBy(int dx, int dy): handle (V) | basic (NM) move (NM) by (N) 	++ :: [ int (N) - dx (N) ] :: [ int (N) - dy (N) ] :: link (NM) figure (N)  :: void (N) 
V_3P_IRR:NAME:NoMDEntries boolean isSetEncodedTextLen(): is (V)  | set (NM) encoded (NM) text (NM) len (N) 	++ :: boolean (N)  :: no (DT) MD (NM) entries (N) 
SPECIAL:NAME:SortKeywordRelevancy void setSortOrder(ProductSearchContext productSearchContext): set (V)  | sort (NM) order (N) 	++ :: [ product (NM) search (NM) context (N) - product (NM) search (NM) context (N) ] :: sort (NM) keyword (NM) relevancy (N) 
SPECIAL:CLAS:CharViewBufferImpl CharBuffer duplicate(boolean readOnly): duplicate (V)  | char (NM) view (NM) buffer (NM) impl (NI) 	++ :: [ boolean (N) - read (NM) only (N) ] :: char (NM) buffer (NI) 
BASE_VERB:CLAS:AbstractHashGEDigraph GEDigraph intersectWithGEDigraph(GEDigraph digraph): intersect (V)  | abstract (NM) hash (NM) GE (NM) digraph (N) -- with (P) EQUIV[GE (NM) digraph (N) , [ GE (NM) digraph (N) - digraph (N) ]]	++ :: GE (NM) digraph (N) 
BASE_VERB:CLAS:ExportarCoberturas void centrar(): centrar (V)  | exportar (NM) coberturas (N) 	++
SPECIAL:NAME:Manifest String getDescription(): get (V)  | description (NI) 	++ :: string (NI)  :: manifest (N) 
SPECIAL:NAME:UpdateVizRunnable void setDoReset(boolean doReset): set (V)  | do (NM) reset (N) 	++ :: [ boolean (N) - do (NM) reset (N) ] :: update (NM) viz (NM) runnable (N) 
SPECIAL:NAME:ColumnInfoRecord int getWidth(): get (V)  | width (N) 	++ :: int (N)  :: column (NM) info (NM) record (N) 
CONSTRUCTOR:NAME:SubListItem SubListItem SubListItem():  | sub (NM) list (NM) item (NI) 	++
SPECIAL:CLAS:TestViewServiceHelper void setUp(): set (V) up (VP)  | test (NM) view (NM) service (NM) helper (N) 	++
SPECIAL:FORM:GroupMembersForm void reset(ActionMapping mapping, HttpServletRequest request): reset (V)  | [ action (NM) mapping (N) - mapping (N) ]	++ :: [ http (NM) servlet (NM) request (N) - request (N) ] :: group (NM) members (NM) form (N) 
CONSTRUCTOR:NAME:ValidatorImpl ValidatorImpl ValidatorImpl(DefaultJAXBContextImpl c):  | validator (NM) impl (NI) 	++ :: [ default (NM) JAXB (NM) context (NM) impl (NI) - c (N) ]
SPECIAL:NAME:LeadOS long getId(): get (V)  | id (NI) 	++ :: long (N)  :: lead (NM) OS (N) 
SPECIAL:NAME:Source Collection<Attribute> getAttributes(): get (V)  | attributes (N) 	++ :: collection (NM) attribute (N)  :: source (NI) 
BASE_VERB:FORM:HarnessOutput void marshal(Marshaller m): marshal (V)  | [ marshaller (N) - m (N) ]	++ :: harness (NM) output (N) 
SPECIAL:NAME:Thesaurus String getDate(): get (V)  | date (N) 	++ :: string (NI)  :: thesaurus (N) 
BASE_VERB:CLAS:USBUIRTApp void transmit(): transmit (V)  | USBUIRT (NM) app (N) 	++
BASE_VERB:NAME:JSlider Dimension calculatePreferredSize(): calculate (V)  | preferred (NM) size (N) 	++ :: dimension (N)  :: J (NM) slider (N) 
SPECIAL:NAME:StreamingMSDataSourceInformation void setPanel(DataSource ds): set (V)  | panel (N) 	++ :: [ data (NM) source (NI) - ds (N) ] :: streaming (NM) MS (NM) data (NM) source (NM) information (N) 
BASE_VERB:FORM:fireflier void sendmsg(int id, int chain, int rulenum): sendmsg (V)  | [ int (N) - id (NI) ]	++ :: [ int (N) - chain (N) ] :: [ int (N) - rulenum (N) ] :: fireflier (N) 
SPECIAL:NAME:SendMailMP boolean processRequest(Client session, ESServletRequest req, DynHtml page, Object info): process (VI)  | EQUIV[request (N) , [ ES (NM) servlet (NM) request (N) - req (N) ]]	++ :: [ client (N) - session (N) ] :: [ dyn (NM) html (N) - page (N) ] :: [ object (NI) - info (NI) ] :: boolean (N)  :: send (NM) mail (NM) MP (N) 
BASE_VERB:FORM:DegreeFormat StringBuffer format(long number, StringBuffer toAppendTo, FieldPosition pos): format (V)  | [ long (N) - number (NI) ]	++ :: [ string (NM) buffer (NI) - to (NM) append (NM) to (N) ] :: [ field (NM) position (N) - pos (N) ] :: degree (NM) format (NI)  :: string (NM) buffer (NI) 
SPECIAL:FORM:StringAppender StringAppender append(String str): append (V)  | [ string (NI) - str (NI) ]	++ :: string (NM) appender (N)  :: string (NM) appender (N) 
EVENT_PARAM:NAME:RulesEditingEventListener void saveData(RulesEditingEvent event): handle (V) | save (NM) data (NI) 	++ :: [ rules (NM) editing (NM) event (NI) - event (NI) ] :: rules (NM) editing (NM) event (NM) listener (N)  :: void (N) 
SPECIAL:NAME:ConfiguratorTest void testConfigure_RealmSyntax(): test (VI) configure (V)  | realm (NM) syntax (N) 	++ :: configurator (NM) test (N) 
BASE_VERB:CLAS:Student ArrayList drin(): drin (V)  | student (N) 	++ :: array (NM) list (N) 
BASE_VERB:NAME:Unmarshaller void enterElement(String ___uri, String ___local, String ___qname, Attributes __atts): enter (V)  | element (NI) 	++ :: [ string (NI) - uri (NI) ] :: [ string (NI) - local (N) ] :: [ string (NI) - qname (N) ] :: [ attributes (N) - atts (N) ] :: unmarshaller (N) 
SPECIAL:NAME:DirectoryTest void testCompareSame(): test (VI) compare (V)  | same (N) 	++ :: directory (NM) test (N) 
SPECIAL:NAME:XorExpr void setPackage(String s): set (V)  | package (N) 	++ :: [ string (NI) - s (N) ] :: xor (NM) expr (NI) 
ENDS_WITH_ED:NAME:void actionPerformed(ActionEvent evt): handle (V) | action (NM) performed (N) 	++ :: [ action (NM) event (NI) - evt (N) ] :: ANONYMOUS (N)  :: void (N) 
SPECIAL:NAME:VitalAuthRequest void setStoreNumber(short storeNumber): set (V)  | store (NM) number (NI) 	++ :: [ short (N) - store (NM) number (NI) ] :: vital (NM) auth (NM) request (N) 
CONSTRUCTOR:NAME:DocumentSender DocumentSender DocumentSender(NodeInfo top):  | document (NM) sender (N) 	++ :: [ node (NM) info (NI) - top (N) ]
CONSTRUCTOR:NAME:OperatorGlobalState OperatorGlobalState OperatorGlobalState():  | operator (NM) global (NM) state (N) 	++
SPECIAL:NAME:SAXUnmarshallerHandlerImpl void addPatcher(Runnable job): add (V)  | patcher (N) 	++ :: [ runnable (N) - job (N) ] :: SAX (NM) unmarshaller (NM) handler (NM) impl (NI) 
SPECIAL:CLAS:AbstractResultsBodyCell Object clone(): clone (V)  | abstract (NM) results (NM) body (NM) cell (N) 	++ :: object (NI) 
CONSTRUCTOR:NAME:LetterWizardDialogImpl LetterWizardDialogImpl LetterWizardDialogImpl(XMultiServiceFactory xmsf):  | letter (NM) wizard (NM) dialog (NM) impl (NI) 	++ :: [ X (NM) multi (NM) service (NM) factory (N) - xmsf (N) ]
SPECIAL:NAME:Token Object getValue(): get (V)  | value (NI) 	++ :: object (NI)  :: token (N) 
BASE_VERB:NAME:SegmentTermDocs void skipProx(long proxPointer): skip (V)  | prox (N) 	++ :: [ long (N) - prox (NM) pointer (N) ] :: segment (NM) term (NM) docs (N) 
SPECIAL:FORM:SelectSongQuery ObjectPredicate execute(Object args): execute (VI)  | [ object (NI) - args (N) ]	++ :: select (NM) song (NM) query (N)  :: object (NM) predicate (N) 
V_3P_IRR:CLAS:WikiWordsConverter boolean isIn(String firstPart, String start, String end): is (V)  | wiki (NM) words (NM) converter (N) -- in (P) [ string (NI) - first (NM) part (N) ]	++ :: [ string (NI) - first (NM) part (N) ] :: [ string (NI) - start (N) ] :: [ string (NI) - end (N) ] :: boolean (N) 
CONSTRUCTOR:NAME:CreateFieldInstrumentor CreateFieldInstrumentor CreateFieldInstrumentor(int modifiers, String type, String name):  | create (NM) field (NM) instrumentor (N) 	++ :: [ int (N) - modifiers (N) ] :: [ string (NI) - type (N) ] :: [ string (NI) - name (NI) ]
BASE_VERB:CLAS:FruchtermanReingoldLayouter void setup(): setup (V)  | fruchterman (NM) reingold (NM) layouter (N) 	++
CONSTRUCTOR:NAME:AbstractLongKeyBooleanMap AbstractLongKeyBooleanMap AbstractLongKeyBooleanMap():  | abstract (NM) long (NM) key (NM) boolean (NM) map (N) 	++
BASE_VERB:CLAS:IntegerToEnum Object convertTo(Object object): convert (V)  | integer (NM) to (NM) enum (NI) -- to (P) [ object (NI) - object (NI) ]	++ :: [ object (NI) - object (NI) ] :: object (NI) 
SPECIAL:NAME:Row float getFloat(int colIndex): get (V)  | float (N) 	++ :: [ int (N) - col (NM) index (NI) ] :: float (N)  :: row (N) 
VOID_NP:NAME:ANTLRGrammarParseBehavior void noASTSubRule(): handle (V) | no (DT) AST (NM) sub (NM) rule (N) 	++ :: ANTLR (NM) grammar (NM) parse (NM) behavior (N)  :: void (N) 
PREP:NAME:ASTAnalysisContainer void inAOrchForallOrchestrationRule(AOrchForallOrchestrationRule node):  | in (P) A (NM) orch (NM) forall (NM) orchestration (NM) rule (N) 	++ :: [ A (NM) orch (NM) forall (NM) orchestration (NM) rule (N) - node (NI) ] :: AST (NM) analysis (NM) container (NI)  :: void (N) 
SPECIAL:NAME:AnnotationLayer startAndEndTimes getStartAndEndTimesForOnTheFlyAnnotation(startAndEndTimes times): get (V)  | EQUIV[start (NM) and (NM) end (NM) times (N) , [ start (NM) and (NM) end (NM) times (N) - times (N) ]]-- for (P) on (NM) the (DT) fly (NM) annotation (N) 	++ :: start (NM) and (NM) end (NM) times (N)  :: annotation (NM) layer (N) 
ENDS_WITH_ED:NAME:ChatLogFilter void exceptionCaught(SessionFilterChain filterChain, Throwable cause): handle (V) | exception (NM) caught (N) 	++ :: [ session (NM) filter (NM) chain (N) - filter (NM) chain (N) ] :: [ throwable (N) - cause (N) ] :: chat (NM) log (NM) filter (N)  :: void (N) 
CONSTRUCTOR:NAME:EmbeddedJetty EmbeddedJetty EmbeddedJetty(File root):  | embedded (NM) jetty (N) 	++ :: [ file (NI) - root (N) ]
EVENT_PARAM:NAME:void modifyText(ModifyEvent e): handle (V) | modify (NM) text (NI) 	++ :: [ modify (NM) event (NI) - e (N) ] :: ANONYMOUS (N)  :: void (N) 
SPECIAL:NAME:HtgLoadMults int getCatID(): get (V)  | cat (NM) ID (NI) 	++ :: int (N)  :: htg (NM) load (NM) mults (N) 
SPECIAL:NAME:ZSeparator ZWidgetProperties getWidgetProperties(): get (V)  | widget (NM) properties (N) 	++ :: Z (NM) widget (NM) properties (N)  :: Z (NM) separator (N) 
SPECIAL:NAME:BigBundle void addBundle(String strPath): add (V)  | bundle (N) 	++ :: [ string (NI) - str (NM) path (NI) ] :: big (NM) bundle (N) 
SPECIAL:FORM:EditCustomFieldValueFormAction ActionForward execute(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response): execute (VI)  | [ action (NM) mapping (N) - mapping (N) ]	++ :: [ action (NM) form (N) - form (N) ] :: [ http (NM) servlet (NM) request (N) - request (N) ] :: [ http (NM) servlet (NM) response (N) - response (N) ] :: edit (NM) custom (NM) field (NM) value (NM) form (NM) action (N)  :: action (NM) forward (N) 
SPECIAL:NAME:ErrorAnn int getColumn(): get (V)  | column (N) 	++ :: int (N)  :: error (NM) ann (N) 
SPECIAL:CLAS:Database void init(): init (V)  | database (N) 	++
BASE_VERB:FORM:Painter void paint(Graphics g, int displayWidth, int displayHeight): paint (V)  | [ graphics (N) - g (N) ]	++ :: [ int (N) - display (NM) width (N) ] :: [ int (N) - display (NM) height (N) ] :: painter (N) 
BASE_VERB:CLAS:UsefulPropertiesTest void tearDown(): tear (V) down (VP)  | useful (NM) properties (NM) test (N) 	++
SPECIAL:NAME:Listbox int getVisibleBegin(): get (V)  | visible (NM) begin (N) 	++ :: int (N)  :: listbox (N) 
BASE_VERB:NAME:JavaEmitter void emitObjectInput(String indent, String fname, TypeInterface ftype, CompoundType ctype): emit (V)  | object (NM) input (NI) 	++ :: [ string (NI) - indent (N) ] :: [ string (NI) - fname (N) ] :: [ type (NM) interface (NI) - ftype (N) ] :: [ compound (NM) type (N) - ctype (N) ] :: java (NM) emitter (N) 
BASE_VERB:NAME:CompoundContentElement void updateNumber(StructuredCounter counter, HashSet<INumberedElement> changedStructures): update (V)  | number (NI) 	++ :: [ structured (NM) counter (N) - counter (N) ] :: [ hash (NM) set (NM) I (NM) numbered (NM) element (NI) - changed (NM) structures (N) ] :: compound (NM) content (NM) element (NI) 
SPECIAL:NAME:TGPanel void setMaintainMouseOver(boolean maintain): set (V)  | maintain (NM) mouse (N) -- over (P) [ boolean (N) - maintain (N) ]	++ :: [ boolean (N) - maintain (N) ] :: TG (NM) panel (N) 
CONSTRUCTOR:NAME:SimpleWeaponSystem SimpleWeaponSystem SimpleWeaponSystem():  | simple (NM) weapon (NM) system (N) 	++
SPECIAL:FORM:ConcurrentSnapshotKeeper V get(Object key): get (V)  | [ object (NI) - key (NI) ]	++ :: concurrent (NM) snapshot (NM) keeper (N)  :: V (N) 
SPECIAL:NAME:WCheckList Color getBackgroundColor(): get (V)  | background (NM) color (N) 	++ :: color (N)  :: W (NM) check (NM) list (N) 
SPECIAL:NAME:IPageSettings boolean getAutomaticMultiWindowSupport(): get (V)  | automatic (NM) multi (NM) window (NM) support (N) 	++ :: boolean (N)  :: I (NM) page (NM) settings (N) 
ENDS_WITH_ED:NAME:AlgernonServerAction void actionPerformed(ActionEvent event): handle (V) | action (NM) performed (N) 	++ :: [ action (NM) event (NI) - event (NI) ] :: algernon (NM) server (NM) action (N)  :: void (N) 
SPECIAL:NAME:Account void setIncoming(String incoming): set (V)  | incoming (N) 	++ :: [ string (NI) - incoming (N) ] :: account (N) 
SPECIAL:FORM:RandomStream int read(byte b, int off, int len): read (V)  | [ byte (N) - b (N) ]	++ :: [ int (N) - off (N) ] :: [ int (N) - len (N) ] :: random (NM) stream (NI)  :: int (N) 
CONSTRUCTOR:NAME:TurtleState TurtleState TurtleState(double x, double y):  | turtle (NM) state (N) 	++ :: [ double (N) - x (N) ] :: [ double (N) - y (N) ]
BASE_VERB:FORM:Factory static ExtrusionSecondLightLevelAttribute parse(String xmlAsString): parse (V)  | [ string (NI) - xml (NM) as (NM) string (NI) ]	++ :: factory (N)  :: extrusion (NM) second (NM) light (NM) level (NM) attribute (N) 
BASE_VERB:CLAS:Window void show(): show (V)  | window (N) 	++
SPECIAL:FORM:NoUnderlyings UnderlyingStrikePrice get(UnderlyingStrikePrice value): get (V)  | [ underlying (NM) strike (NM) price (N) - value (NI) ]	++ :: no (DT) underlyings (N)  :: underlying (NM) strike (NM) price (N) 
SPECIAL:NAME:RobotCommand void setLocation(String location): set (V)  | location (NI) 	++ :: [ string (NI) - location (NI) ] :: robot (NM) command (N) 
PREP:NAME:PrefixQuery String toString(String field): convert (V) | to (P) string (NI) 	++ :: [ string (NI) - field (N) ] :: prefix (NM) query (N)  :: string (NI) 
SPECIAL:CLAS:ThreadPoolManager void run(): run (VI)  | thread (NM) pool (NM) manager (N) 	++
SPECIAL:NAME:Main static void executeQueue(): execute (VI)  | queue (N) 	++ :: main (N) 
ENDS_WITH_ED:NAME:ExtendedCommandAction void actionPerformed(ActionEvent e): handle (V) | action (NM) performed (N) 	++ :: [ action (NM) event (NI) - e (N) ] :: extended (NM) command (NM) action (N)  :: void (N) 
SPECIAL:NAME:InputMap void writeObject(ObjectOutputStream stream): write (V)  | object (NI) 	++ :: [ object (NM) output (NM) stream (NI) - stream (NI) ] :: input (NM) map (N) 
CONSTRUCTOR:NAME:AssemblerX86TokenMaker AssemblerX86TokenMaker AssemblerX86TokenMaker(InputStream in):  | assembler (NM) X (NM) 86 (NM) token (NM) maker (N) 	++ :: [ input (NM) stream (NI) - in (NI) ]
SPECIAL:FORM:SudokuPlugin void start(BundleContext context_p): start (V)  | [ bundle (NM) context (N) - context (NM) p (NI) ]	++ :: sudoku (NM) plugin (N) 
ENDS_WITH_ED:NAME:MediatorListener void valueChanged(ListSelectionEvent e): handle (V) | value (NM) changed (N) 	++ :: [ list (NM) selection (NM) event (NI) - e (N) ] :: mediator (NM) listener (N)  :: void (N) 
CONSTRUCTOR:NAME:MessageParameter MessageParameter MessageParameter(String value):  | message (NM) parameter (N) 	++ :: [ string (NI) - value (NI) ]
ENDS_WITH_ED:NAME:void actionPerformed(ActionEvent e): handle (V) | action (NM) performed (N) 	++ :: [ action (NM) event (NI) - e (N) ] :: ANONYMOUS (N)  :: void (N) 
ENDS_WITH_ED:NAME:void itemStateChanged(ItemEvent e): handle (V) | item (NM) state (NM) changed (N) 	++ :: [ item (NM) event (NI) - e (N) ] :: ANONYMOUS (N)  :: void (N) 
SPECIAL:FORM:BaseAvatarEquipmentPeer static void doInsert(AvatarEquipment obj, Connection con): do (VI) insert (V)  | [ avatar (NM) equipment (N) - obj (NI) ]	++ :: [ connection (N) - con (N) ] :: base (NM) avatar (NM) equipment (NM) peer (N) 
SPECIAL:NAME:SudokuBase int pushStack(): push (V)  | stack (N) 	++ :: int (N)  :: sudoku (NM) base (N) 
SPECIAL:NAME:PlainSourceView void initUI(): init (V)  | UI (N) 	++ :: plain (NM) source (NM) view (NI) 
BASE_VERB:NAME:DefaultSqlVisitor void visitValueListInsertSource(ValueListInsertSource self, ValueList value): visit (V)  | EQUIV[value (NM) list (NM) insert (NM) source (NI) , [ value (NM) list (NM) insert (NM) source (NI) - self (N) ]]	++ :: [ value (NM) list (N) - value (NI) ] :: default (NM) sql (NM) visitor (N) 
CONSTRUCTOR:NAME:FootnotesPositionImpl FootnotesPositionImpl FootnotesPositionImpl(SchemaType sType):  | footnotes (NM) position (NM) impl (NI) 	++ :: [ schema (NM) type (N) - s (NM) type (N) ]
SPECIAL:NAME:GenAlbumAlbumFolderBean String getFolderName(): get (V)  | folder (NM) name (NI) 	++ :: string (NI)  :: gen (NM) album (NM) album (NM) folder (NM) bean (NI) 
ENDS_WITH_ED:NAME:ShowingContextMenu void turnoutContextMenuHidden(Context context): handle (V) | turnout (NM) context (NM) menu (NM) hidden (N) 	++ :: [ context (N) - context (N) ] :: showing (NM) context (NM) menu (N)  :: void (N) 
V_3PS:FORM:SimpleNameClass boolean equals(Object obj): equals (V)  | [ object (NI) - obj (NI) ]	++ :: simple (NM) name (NM) class (NI)  :: boolean (N) 
SPECIAL:NAME:AbstractStandardContentSubscriptionType String getLongDescriptionEncoded(): get (V)  | long (NM) description (NM) encoded (N) 	++ :: string (NI)  :: abstract (NM) standard (NM) content (NM) subscription (NM) type (N) 
BASE_VERB:FORM:AbstractToken tokenize(String token, List tokens): tokenize (V)  | [ string (NI) - token (N) ]	++ :: [ list (N) - tokens (N) ] :: ANONYMOUS (N)  :: abstract (NM) token (N) 
NOUN_PHRASE:NAME:TransformerFactoryImpl Transformer newTransformer(): get (V) | new (NM) transformer (N) 	++ :: transformer (NM) factory (NM) impl (NI)  :: transformer (N) 
PREP:NAME:void onAction(): handle (V) | on (NM) action (N) 	++ :: ANONYMOUS (N)  :: void (N) 
SPECIAL:NAME:Tree BIN findBinForInsert(Key key, LogManager logManager, INList inMemoryINs): find (V)  | bin (N) -- for (P) insert (N) 	++ :: [ key (NI) - key (NI) ] :: [ log (NM) manager (N) - log (NM) manager (N) ] :: [ IN (NM) list (N) - in (NM) memory (NM) I (NM) ns (N) ] :: BIN (N)  :: tree (NI) 
CONSTRUCTOR:NAME:ConsensusColour ConsensusColour ConsensusColour(Color c, Consensus conses):  | consensus (NM) colour (N) 	++ :: [ color (N) - c (N) ] :: [ consensus (N) - conses (N) ]
CONSTRUCTOR:NAME:MockMethodBuilder MockMethodBuilder MockMethodBuilder(String source):  | mock (NM) method (NM) builder (N) 	++ :: [ string (NI) - source (NI) ]
SPECIAL:NAME:ResultPrinter void printDefect(TestFailure booBoo, int count): print (V)  | defect (N) 	++ :: [ test (NM) failure (N) - boo (NM) boo (N) ] :: [ int (N) - count (N) ] :: result (NM) printer (N) 
VOID_NP:NAME:ASTAnalysisContainer void caseAOomediatorAnykeyword(AOomediatorAnykeyword node): handle (V) | case (NM) A (NM) oomediator (NM) anykeyword (N) 	++ :: [ A (NM) oomediator (NM) anykeyword (N) - node (NI) ] :: AST (NM) analysis (NM) container (NI)  :: void (N) 
SPECIAL:NAME:ZhongWenClient String getName(): get (V)  | name (NI) 	++ :: string (NI)  :: zhong (NM) wen (NM) client (N) 
BASE_VERB:NAME:ByteCodeQCompareVisitor Field visitMultiNode(Node node, Object obj): visit (V)  | EQUIV[multi (NM) node (NI) , [ node (NI) - node (NI) ]]	++ :: [ object (NI) - obj (NI) ] :: field (N)  :: byte (NM) code (NM) Q (NM) compare (NM) visitor (N) 
SPECIAL:FORM:void Do(Command cmd): do (VI)  | [ command (N) - cmd (N) ]	++ :: ANONYMOUS (N) 
SPECIAL:FORM:ImageLoader static Image load(String imgName): load (V)  | [ string (NI) - img (NM) name (NI) ]	++ :: image (NM) loader (N)  :: image (N) 
BASE_VERB:CLAS:MainPlayerUI void pauseResume(): pause (VI) resume (VI)  | main (NM) player (NM) UI (N) 	++
ENDS_WITH_ING:NAME:void windowClosing(WindowEvent e): handle (V) | window (NM) closing (N) 	++ :: [ window (NM) event (NI) - e (N) ] :: ANONYMOUS (N)  :: void (N) 
SPECIAL:NAME:HibernateProperties Collection getJndiProperties(): get (V)  | jndi (NM) properties (N) 	++ :: collection (N)  :: hibernate (NM) properties (N) 
SPECIAL:NAME:JEditTextArea int getFirstLine(): get (V)  | first (NM) line (N) 	++ :: int (N)  :: J (NM) edit (NM) text (NM) area (N) 
SPECIAL:NAME:YamahaFS1RBankEditor Patch getBankPatch(): get (V)  | bank (NM) patch (N) 	++ :: patch (N)  :: yamaha (NM) FS (NM) 1 (NM) R (NM) bank (NM) editor (N) 
BASE_VERB:NAME:ArgumentRequest void putArgument(String key, Object value): put (V)  | argument (N) 	++ :: [ string (NI) - key (NI) ] :: [ object (NI) - value (NI) ] :: argument (NM) request (N) 
CONSTRUCTOR:NAME:JMXProxyHandler JMXProxyHandler JMXProxyHandler(MBeanServerConnection connection, ObjectName controllerName):  | JMX (NM) proxy (NM) handler (N) 	++ :: [ M (NM) bean (NM) server (NM) connection (N) - connection (N) ] :: [ object (NM) name (NI) - controller (NM) name (NI) ]
BASE_VERB:NAME:DepartmentPanel DepartmentMaintenanceMediator getmediator1(): getmediator (V)  | 1 (D) 	++ :: department (NM) maintenance (NM) mediator (N)  :: department (NM) panel (N) 
BASE_VERB:NAME:ImageTranslateCord double calcYPixel(double latitude): calc (V)  | Y (NM) pixel (N) 	++ :: [ double (N) - latitude (N) ] :: double (N)  :: image (NM) translate (NM) cord (N) 
V_3PS:FORM:MouseReshapeTracker boolean contains(double x, double y): contains (V)  | [ double (N) - x (N) ]	++ :: [ double (N) - y (N) ] :: mouse (NM) reshape (NM) tracker (N)  :: boolean (N) 
CONSTRUCTOR:NAME:TypedPushConsumerPOATie TypedPushConsumerPOATie TypedPushConsumerPOATie(TypedPushConsumerOperations delegate, POA poa):  | typed (NM) push (NM) consumer (NM) POA (NM) tie (N) 	++ :: [ typed (NM) push (NM) consumer (NM) operations (N) - delegate (N) ] :: [ POA (N) - poa (N) ]
BASE_VERB:FORM:SimpleQueryManager String encode(String s): encode (V)  | [ string (NI) - s (N) ]	++ :: simple (NM) query (NM) manager (N)  :: string (NI) 
BASE_VERB:FORM:Serializations void forward(HttpServletRequest request, HttpServletResponse response): forward (V)  | [ http (NM) servlet (NM) request (N) - request (N) ]	++ :: [ http (NM) servlet (NM) response (N) - response (N) ] :: serializations (N) 
V_3P_IRR:NAME:Language boolean isBaseLanguage(): is (V)  | base (NM) language (N) 	++ :: boolean (N)  :: language (N) 
CONSTRUCTOR:NAME:MoreResizeListener MoreResizeListener MoreResizeListener(MorePanel parent):  | more (DT) resize (NM) listener (N) 	++ :: [ more (DT) panel (N) - parent (N) ]
SPECIAL:NAME:ServletContextHelper static WaffleComponentRegistry getWaffleComponentRegistry(ServletContext servletContext): get (V)  | waffle (NM) component (NM) registry (N) 	++ :: [ servlet (NM) context (N) - servlet (NM) context (N) ] :: waffle (NM) component (NM) registry (N)  :: servlet (NM) context (NM) helper (N) 
ENDS_WITH_ED:NAME:void actionPerformed(ActionEvent e): handle (V) | action (NM) performed (N) 	++ :: [ action (NM) event (NI) - e (N) ] :: ANONYMOUS (N)  :: void (N) 
BASE_VERB:NAME:Controller void installEditActions(MultiProperties mp): install (V)  | edit (NM) actions (N) 	++ :: [ multi (NM) properties (N) - mp (N) ] :: controller (N) 
SPECIAL:NAME:ModelMappingDaoImpl boolean checkExistWithId(Long p_id): check (VI)  | exist (N) -- with (P) EQUIV[id (NI) , [ long (N) - p (NM) id (NI) ]]	++ :: boolean (N)  :: model (NM) mapping (NM) dao (NM) impl (NI) 
SPECIAL:NAME:StockPile int getAmount(): get (V)  | amount (N) 	++ :: int (N)  :: stock (NM) pile (N) 
SPECIAL:NAME:TestCharRules void setRules(CharRules newRules): set (V)  | rules (N) 	++ :: [ char (NM) rules (N) - new (NM) rules (N) ] :: test (NM) char (NM) rules (N) 
CONSTRUCTOR:NAME:SimpleCompiler SimpleCompiler SimpleCompiler(Scanner scanner, ClassLoader optionalParentClassLoader):  | simple (NM) compiler (N) 	++ :: [ scanner (N) - scanner (N) ] :: [ class (NM) loader (N) - optional (NM) parent (NM) class (NM) loader (N) ]
SPECIAL:NAME:Util static InputStream getInputStream(String location): get (V)  | input (NM) stream (NI) 	++ :: [ string (NI) - location (NI) ] :: input (NM) stream (NI)  :: util (N) 
SPECIAL:NAME:CDOInterface void endObject(String objectType): end (V)  | object (NI) 	++ :: [ string (NI) - object (NM) type (N) ] :: CDO (NM) interface (NI) 
CONSTRUCTOR:NAME:AERecordStruct AERecordStruct AERecordStruct(Struct struct, int i):  | AE (NM) record (NM) struct (N) 	++ :: [ struct (N) - struct (N) ] :: [ int (N) - i (N) ]
BASE_VERB:NAME:URLUtil static String buildName2ResourceURL(URN urn): build (V)  | name (NM) 2 (D) resource (NM) URL (NI) 	++ :: [ URN (N) - urn (N) ] :: string (NI)  :: URL (NM) util (N) 
CONSTRUCTOR:NAME:BasicHitFilter BasicHitFilter BasicHitFilter(File f):  | basic (NM) hit (NM) filter (N) 	++ :: [ file (NI) - f (N) ]
BASE_VERB:NAME:FooterDecl String xgetName(): xget (V)  | name (NI) 	++ :: string (NI)  :: footer (NM) decl (NI) 
SPECIAL:NAME:Sample1 void setAge(int value): set (V)  | age (N) 	++ :: [ int (N) - value (NI) ] :: sample (NM) 1 (N) 
SPECIAL:FORM:OrderMassCancelReport TransactTime get(TransactTime value): get (V)  | [ transact (NM) time (N) - value (NI) ]	++ :: order (NM) mass (NM) cancel (NM) report (N)  :: transact (NM) time (N) 
SPECIAL:NAME:BoxPanelImpl void setPeer(): set (V)  | peer (N) 	++ :: box (NM) panel (NM) impl (NI) 
VOID_NP:NAME:API void clockSet(Date date): handle (V) | clock (NM) set (N) 	++ :: [ date (N) - date (N) ] :: API (N)  :: void (N) 
ENDS_WITH_ED:NAME:void widgetSelected(SelectionEvent e): handle (V) | widget (NM) selected (N) 	++ :: [ selection (NM) event (NI) - e (N) ] :: ANONYMOUS (N)  :: void (N) 
SPECIAL:NAME:BuildBDDIR int getMethodID(jq_Method m): get (V)  | method (NM) ID (NI) 	++ :: [ jq (NM) method (N) - m (N) ] :: int (N)  :: build (NM) BDDIR (N) 
SPECIAL:NAME:I18N static String loadString(String ID, String b): load (V)  | EQUIV[string (NI) , [ string (NI) - ID (NI) ], [ string (NI) - b (N) ]]	++ :: string (NI)  :: I (NM) 18 (NM) N (N) 
SPECIAL:NAME:ContentType String getName(): get (V)  | name (NI) 	++ :: string (NI)  :: content (NM) type (N) 
BASE_VERB:CLAS:SharedSessionWrapper void invalidate(): invalidate (V)  | shared (NM) session (NM) wrapper (NI) 	++
EVENT_PARAM:NAME:WCMParserBean void propertyChange(PropertyChangeEvent evt): handle (V) | property (NM) change (N) 	++ :: [ property (NM) change (NM) event (NI) - evt (N) ] :: WCM (NM) parser (NM) bean (NI)  :: void (N) 
SPECIAL:NAME:DataFilterInterface Table getMetaData(boolean modified): get (V)  | meta (NM) data (NI) 	++ :: [ boolean (N) - modified (N) ] :: [ boolean (N) - modified (N) ] :: table (N)  :: data (NM) filter (NM) interface (NI) 
SPECIAL:FORM:OrderCancelRequest Issuer get(Issuer value): get (V)  | [ issuer (N) - value (NI) ]	++ :: order (NM) cancel (NM) request (N)  :: issuer (N) 
EVENT_PARAM:NAME:ToolBar void propertyChange(PropertyChangeEvent e): handle (V) | property (NM) change (N) 	++ :: [ property (NM) change (NM) event (NI) - e (N) ] :: tool (NM) bar (N)  :: void (N) 
SPECIAL:NAME:Item String getImagePath(): get (V)  | image (NM) path (NI) 	++ :: string (NI)  :: item (NI) 
SPECIAL:NAME:SecureServlet void processRequest(HttpServletRequest request, HttpServletResponse response): process (VI)  | EQUIV[request (N) , [ http (NM) servlet (NM) request (N) - request (N) ]]	++ :: [ http (NM) servlet (NM) response (N) - response (N) ] :: secure (NM) servlet (N) 
BASE_VERB:NAME:TextureUnitStates int max_size(): max (V)  | size (N) 	++ :: int (N)  :: texture (NM) unit (NM) states (N) 
VOID_NP:NAME:CHRParser void occurrenceList(): handle (V) | occurrence (NM) list (N) 	++ :: CHR (NM) parser (N)  :: void (N) 
SPECIAL:NAME:MnemonicTest void test_basic_operation_lower(): test (VI)  | basic (NM) operation (NM) lower (N) 	++ :: mnemonic (NM) test (N) 
SPECIAL:NAME:TestPathFunctions void testStripSessionIdWithQueryString(): test (VI) strip (V)  | session (NM) id (NI) -- with (P) query (NM) string (NI) 	++ :: test (NM) path (NM) functions (N) 
SPECIAL:NAME:LmcCreateFolderRequest Element getRequestXML(): get (V)  | request (NM) XML (N) 	++ :: element (NI)  :: lmc (NM) create (NM) folder (NM) request (N) 
SPECIAL:NAME:Client void enableMidiInputDevice(int deviceId, boolean enable): enable (VI)  | EQUIV[midi (NM) input (NM) device (N) , [ int (N) - device (NM) id (NI) ]]	++ :: [ boolean (N) - enable (N) ] :: client (N) 
SPECIAL:NAME:DefaultChemObjectBuilderTest void testNewAtomContainer(): test (VI)  | new (NM) atom (NM) container (NI) 	++ :: default (NM) chem (NM) object (NM) builder (NM) test (N) 
SPECIAL:NAME:ScreenComboBoxModel Object getElementAt(int index): get (V)  | element (NI) -- at (P) [ int (N) - index (NI) ]	++ :: [ int (N) - index (NI) ] :: object (NI)  :: screen (NM) combo (NM) box (NM) model (NI) 
NOUN_PHRASE:NAME:Float3CImage float tangentDirection(int x, int y): get (V) | tangent (NM) direction (N) 	++ :: [ int (N) - x (N) ] :: [ int (N) - y (N) ] :: float (NM) 3 (NM) C (NM) image (N)  :: float (N) 
SPECIAL:NAME:ManufacturerTYPE void setUs_ph_number(String us_ph_number): set (V)  | us (PR) ph (NM) number (NI) 	++ :: [ string (NI) - us (PR) ph (NM) number (NI) ] :: manufacturer (NM) TYPE (N) 
ENDS_WITH_ING:NAME:SymWindow void windowClosing(WindowEvent event): handle (V) | window (NM) closing (N) 	++ :: [ window (NM) event (NI) - event (NI) ] :: sym (NM) window (N)  :: void (N) 
SPECIAL:NAME:RecognitionException int getColumn(): get (V)  | column (N) 	++ :: int (N)  :: recognition (NM) exception (N) 
V_3P_IRR:NAME:AbstractElementRendererModule boolean isValidContentType(Element element): is (V)  | valid (NM) content (NM) type (N) 	++ :: [ element (NI) - element (NI) ] :: boolean (N)  :: abstract (NM) element (NM) renderer (NM) module (N) 
SPECIAL:NAME:AbstractPhysicalAddress static List<PrimaryKey> findEnabledByAddress2(String address): find (V)  | enabled (N) -- by (P) address (NI) 2 (D) 	++ :: [ string (NI) - address (NI) ] :: list (NM) primary (NM) key (NI)  :: abstract (NM) physical (NM) address (NI) 
BASE_VERB:NAME:DC void drawEllipticArc(Point pt, Size sz, double sa, double ea): draw (V)  | elliptic (NM) arc (N) 	++ :: [ point (N) - pt (N) ] :: [ size (N) - sz (N) ] :: [ double (N) - sa (N) ] :: [ double (N) - ea (N) ] :: DC (N) 
V_3P_IRR:NAME:IOPoolManager boolean isStarted(): is (V)  | started (N) 	++ :: boolean (N)  :: IO (NM) pool (NM) manager (N) 
SPECIAL:NAME:FrostUploadItem void setRetries(int newRetries): set (V)  | retries (N) 	++ :: [ int (N) - new (NM) retries (N) ] :: frost (NM) upload (NM) item (NI) 
BASE_VERB:FORM:Factory static ImageElt parse(InputStream is, XmlOptions options): parse (V)  | [ input (NM) stream (NI) - is (N) ]	++ :: [ xml (NM) options (N) - options (N) ] :: factory (N)  :: image (NM) elt (NI) 
CONSTRUCTOR:NAME:LoginFrame LoginFrame LoginFrame(GUI controller):  | login (NM) frame (N) 	++ :: [ GUI (N) - controller (N) ]
BASE_VERB:FORM:ProfileFrame void setname(String _jni_value_): setname (V)  | [ string (NI) - jni (NM) value (NI) ]	++ :: profile (NM) frame (N) 
SPECIAL:NAME:Generator Class getParentClass(PetalObject obj): get (V)  | parent (NM) class (NI) 	++ :: [ petal (NM) object (NI) - obj (NI) ] :: class (NI)  :: generator (N) 
BASE_VERB:NAME:ReliableLog void openLogFile(boolean truncate): open (V)  | log (NM) file (NI) 	++ :: [ boolean (N) - truncate (N) ] :: [ boolean (N) - truncate (N) ] :: reliable (NM) log (N) 
BASE_VERB:NAME:IcqPlugin boolean askPassword(): ask (V)  | password (N) 	++ :: boolean (N)  :: icq (NM) plugin (N) 
ENDS_WITH_ED:NAME:PropertiesTableModel void tableChanged(TableModelEvent e): handle (V) | table (NM) changed (N) 	++ :: [ table (NM) model (NM) event (NI) - e (N) ] :: properties (NM) table (NM) model (NI)  :: void (N) 
CONSTRUCTOR:NAME:GameCanvas GameCanvas GameCanvas():  | game (NM) canvas (N) 	++
BASE_VERB:FORM:Group void export(Exporter exp): export (V)  | [ exporter (N) - exp (N) ]	++ :: group (N) 
SPECIAL:CLAS:MPG123 void doPlay(): do (VI) play (V)  | MPG (NM) 123 (N) 	++
CONSTRUCTOR:NAME:NodeIteratorImpl NodeIteratorImpl NodeIteratorImpl(NodeImpl nextNode):  | node (NM) iterator (NM) impl (NI) 	++ :: [ node (NM) impl (NI) - next (DT) node (NI) ]
SPECIAL:CLAS:void run(): run (VI)  | ANONYMOUS (N) 	++
CONSTRUCTOR:NAME:DropGameException DropGameException DropGameException(String message, Exception source):  | drop (NM) game (NM) exception (N) 	++ :: [ string (NI) - message (NI) ] :: [ exception (N) - source (NI) ]
BASE_VERB:NAME:X509V1CertificateGenerator X509Certificate generateX509Certificate(PrivateKey key, String provider, SecureRandom random): generate (V)  | X (NM) 509 (D) certificate (N) 	++ :: [ private (NM) key (NI) - key (NI) ] :: [ string (NI) - provider (N) ] :: [ secure (NM) random (N) - random (N) ] :: X (NM) 509 (NM) certificate (N)  :: X (NM) 509 (NM) V (NM) 1 (NM) certificate (NM) generator (N) 
CONSTRUCTOR:NAME:RCFile RCFile RCFile(Reader stream):  | RC (NM) file (NI) 	++ :: [ reader (N) - stream (NI) ]
SPECIAL:NAME:StringTest void test3(): test (VI)  | 3 (D) 	++ :: string (NM) test (N) 
BASE_VERB:NAME:ConfigItemMapIndexed String xgetName(): xget (V)  | name (NI) 	++ :: string (NI)  :: config (NM) item (NM) map (NM) indexed (N) 
SPECIAL:NAME:JButtonList void addContextMenuAction(Action action): add (V)  | EQUIV[context (NM) menu (NM) action (N) , [ action (N) - action (N) ]]	++ :: J (NM) button (NM) list (N) 
VOID_NP:NAME:Tonto void eventEmailLogfile(): handle (V) | event (NM) email (NM) logfile (N) 	++ :: tonto (N)  :: void (N) 
BASE_VERB:NAME:Sequence ListIterator listIterator(): list (V)  | iterator (N) 	++ :: list (NM) iterator (N)  :: sequence (N) 
ENDS_WITH_ED:NAME:BasePanel boolean previewEnabled(): handle (V) | preview (NM) enabled (N) 	++ :: base (NM) panel (N)  :: boolean (N) 
NOUN_PHRASE:NAME:LLkGrammarAnalyzer boolean deterministic(ZeroOrMoreBlock blk): get (V) | deterministic (N) 	++ :: [ zero (PR) or (NM) more (DT) block (N) - blk (N) ] :: L (NM) lk (NM) grammar (NM) analyzer (N)  :: boolean (N) 
SPECIAL:NAME:AbstractConfigurationBlockPreferencePage Control createContents(Composite parent): create (V)  | contents (N) 	++ :: [ composite (N) - parent (N) ] :: control (N)  :: abstract (NM) configuration (NM) block (NM) preference (NM) page (N) 
BASE_VERB:FORM:Lemme Component cate(CatGram courante, SubCatGram sub): cate (V)  | [ cat (NM) gram (N) - courante (N) ]	++ :: [ sub (NM) cat (NM) gram (N) - sub (N) ] :: lemme (N)  :: component (N) 
BASE_VERB:NAME:SerializedListType int hashCode(Object object): hash (V)  | code (NI) 	++ :: [ object (NI) - object (NI) ] :: int (N)  :: serialized (NM) list (NM) type (N) 
BASE_VERB:FORM:XMLDocumentParser static XMLTag parse(Reader in): parse (V)  | [ reader (N) - in (NI) ]	++ :: XML (NM) document (NM) parser (N)  :: XML (NM) tag (NI) 
NOUN_PHRASE:NAME:XMLCatalogTest XMLCatalog newCatalog(): get (V) | new (NM) catalog (N) 	++ :: XML (NM) catalog (NM) test (N)  :: XML (NM) catalog (N) 
SPECIAL:NAME:BlorbMediaCollection void loadResource(int resourcenumber): load (V)  | resource (N) 	++ :: [ int (N) - resourcenumber (N) ] :: blorb (NM) media (NM) collection (N) 
BASE_VERB:FORM:TestComponent List merge(Map hm, List list, String keyName): merge (V)  | [ map (N) - hm (N) ]	++ :: [ list (N) - list (N) ] :: [ string (NI) - key (NM) name (NI) ] :: test (NM) component (N)  :: list (N) 
BASE_VERB:FORM:Factory static BrClearType parse(Node node, XmlOptions options): parse (V)  | [ node (NI) - node (NI) ]	++ :: [ xml (NM) options (N) - options (N) ] :: factory (N)  :: br (NM) clear (NM) type (N) 
CONSTRUCTOR:NAME:QOC QOC QOC():  | QOC (N) 	++
SPECIAL:NAME:CThumbnailPanel void setSelectedNode(Node n): set (V)  | selected (NM) node (NI) 	++ :: [ node (NI) - n (N) ] :: C (NM) thumbnail (NM) panel (N) 
SPECIAL:NAME:JADElement void setName(String suiteName): set (V)  | name (NI) 	++ :: [ string (NI) - suite (NM) name (NI) ] :: JAD (NM) element (NI) 
NOUN_PHRASE:NAME:UTF_16 CharsetEncoder newEncoder(): get (V) | new (NM) encoder (N) 	++ :: UTF (NM) 16 (N)  :: charset (NM) encoder (N) 
SPECIAL:NAME:DateTimeSyntax Date getValue(): get (V)  | value (NI) 	++ :: date (N)  :: date (NM) time (NM) syntax (N) 
SPECIAL:NAME:FilterTransformerTest void testVisitBBoxExpression(): test (VI) visit (V)  | B (NM) box (NM) expression (N) 	++ :: filter (NM) transformer (NM) test (N) 
BASE_VERB:NAME:ModelNotification String buildBcc(): build (V)  | bcc (N) 	++ :: string (NI)  :: model (NM) notification (N) 
BASE_VERB:CLAS:void tearDown(): tear (V) down (VP)  | ANONYMOUS (N) 	++
ENDS_WITH_ED:NAME:void mouseExited(MouseEvent e): handle (V) | mouse (NM) exited (N) 	++ :: [ mouse (NM) event (NI) - e (N) ] :: ANONYMOUS (N)  :: void (N) 
SPECIAL:NAME:KernelsForm Integer getMemoryModel(): get (V)  | memory (NM) model (NI) 	++ :: integer (N)  :: kernels (NM) form (N) 
BASE_VERB:NAME:XMLWriter static boolean spacePreserve(String tag): space (V)  | preserve (N) 	++ :: [ string (NI) - tag (NI) ] :: boolean (N)  :: XML (NM) writer (N) 
SPECIAL:NAME:PackageMetrics int getClassTotal(): get (V)  | class (NM) total (N) 	++ :: int (N)  :: package (NM) metrics (N) 
SPECIAL:NAME:TmpEventInfo void setPSuperactNameWf(String pSuperactNameWf): set (V)  | P (NM) superact (NM) name (NM) wf (N) 	++ :: [ string (NI) - p (NM) superact (NM) name (NM) wf (N) ] :: tmp (NM) event (NM) info (NI) 
SPECIAL:NAME:Event901 void setHandler(String handler): set (V)  | handler (N) 	++ :: [ string (NI) - handler (N) ] :: event (NM) 901 (N) 
BASE_VERB:NAME:ContractAnalyzer void enterLeftParen(Token node): enter (V)  | left (NM) paren (N) 	++ :: [ token (N) - node (NI) ] :: contract (NM) analyzer (N) 
BASE_VERB:FORM:Degree static double acos(double x): acos (V)  | [ double (N) - x (N) ]	++ :: degree (N)  :: double (N) 
SPECIAL:NAME:InquiryForm void setParentOneFirstName(String _p1_first_name): set (V)  | parent (NM) one (NM) first (NM) name (NI) 	++ :: [ string (NI) - p (NM) 1 (NM) first (NM) name (NI) ] :: inquiry (NM) form (N) 
BASE_VERB:NAME:DatabaseUtils static void closePreparedStatement(PreparedStatement ps): close (V)  | EQUIV[prepared (NM) statement (NI) , [ prepared (NM) statement (NI) - ps (N) ]]	++ :: database (NM) utils (N) 
BASE_VERB:NAME:ScanfReader String scanString(): scan (V)  | string (NI) 	++ :: string (NI)  :: scanf (NM) reader (N) 
SPECIAL:NAME:WebAppInstaller long getUsedSpace(): get (V)  | used (NM) space (N) 	++ :: long (N)  :: web (NM) app (NM) installer (N) 
SPECIAL:NAME:DSLParserTokenManager int jjStartNfa_0(int pos, long active0, long active1): jj (PRE) start (V)  | EQUIV[nfa (N) 0 (D) , [ long (N) - active (NM) 0 (N) ]]	++ :: [ int (N) - pos (N) ] :: [ long (N) - active (NM) 1 (N) ] :: int (N)  :: DSL (NM) parser (NM) token (NM) manager (N) 
SPECIAL:NAME:StockEntryControllerImpl Long getStockedAmount(Long soid, int aid, Long artOId): get (V)  | stocked (NM) amount (N) 	++ :: [ long (N) - soid (N) ] :: [ int (N) - aid (N) ] :: [ long (N) - art (NM) O (NM) id (NI) ] :: long (N)  :: stock (NM) entry (NM) controller (NM) impl (NI) 
V_3P_IRR:NAME:EXIFDirectoryGenerated boolean isFocalPlaneResolutionUnitAvailable(): is (V)  | focal (NM) plane (NM) resolution (NM) unit (NM) available (N) 	++ :: boolean (N)  :: EXIF (NM) directory (NM) generated (N) 
SPECIAL:NAME:LibraryArtifactImpl void checkExistence(): check (VI)  | existence (N) 	++ :: library (NM) artifact (NM) impl (NI) 
BASE_VERB:NAME:Unmarshaller void enterAttribute(String ___uri, String ___local, String ___qname): enter (V)  | attribute (N) 	++ :: [ string (NI) - uri (NI) ] :: [ string (NI) - local (N) ] :: [ string (NI) - qname (N) ] :: unmarshaller (N) 
CONSTRUCTOR:NAME:AbstractWorkingTimeCalendar AbstractWorkingTimeCalendar AbstractWorkingTimeCalendar(TimeZone timeZone, WorkingTimeCalendarDefinition calendarDef):  | abstract (NM) working (NM) time (NM) calendar (N) 	++ :: [ time (NM) zone (N) - time (NM) zone (N) ] :: [ working (NM) time (NM) calendar (NM) definition (NI) - calendar (NM) def (NI) ]
SPECIAL:NAME:JettyControl ServletMapping createServletMapping(ServletDefinition def, String authPrefix, List mappingList): create (V)  | servlet (NM) mapping (N) 	++ :: [ servlet (NM) definition (NI) - def (NI) ] :: [ string (NI) - auth (NM) prefix (N) ] :: [ list (N) - mapping (NM) list (N) ] :: servlet (NM) mapping (N)  :: jetty (NM) control (N) 
CONSTRUCTOR:NAME:ActionObject ActionObject ActionObject():  | action (NM) object (NI) 	++
SPECIAL:NAME:mfparam void setIsArray(String s): set (V)  | is (NM) array (N) 	++ :: [ string (NI) - s (N) ] :: mfparam (N) 
PREP:NAME:Span String asString():  | as (P) string (NI) 	++ :: span (N)  :: string (NI) 
SPECIAL:CLAS:NameDescriptionInputPanel void reset(): reset (V)  | name (NM) description (NM) input (NM) panel (N) 	++
BASE_VERB:NAME:jq_StaticMethod void parseMethodSignature(): parse (V)  | method (NM) signature (N) 	++ :: jq (NM) static (NM) method (N) 
CONSTRUCTOR:NAME:ConnectionConfig ConnectionConfig ConnectionConfig():  | connection (NM) config (NI) 	++
BASE_VERB:NAME:SVNClientImplTracker static void registerClient(SVNClientImpl client): register (V)  | EQUIV[client (N) , [ SVN (NM) client (NM) impl (NI) - client (N) ]]	++ :: SVN (NM) client (NM) impl (NM) tracker (N) 
SPECIAL:NAME:Material void setShininess(float value): set (V)  | shininess (N) 	++ :: [ float (N) - value (NI) ] :: material (N) 
BASE_VERB:FORM:TickQueryRestrictions void restrict(int dest, String col_name, String members): restrict (V)  | [ int (N) - dest (N) ]	++ :: [ string (NI) - col (NM) name (NI) ] :: [ string (NI) - members (N) ] :: tick (NM) query (NM) restrictions (N) 
SPECIAL:NAME:X_M_Substitute String getDescription(): get (V)  | description (NI) 	++ :: string (NI)  :: X (NM) M (NM) substitute (N) 
ENDS_WITH_ED:NAME:GraphicEdge void attributeChanged(String attribute, Object oldValue, Object newValue): handle (V) | attribute (NM) changed (N) 	++ :: [ string (NI) - attribute (N) ] :: [ object (NI) - old (NM) value (NI) ] :: [ object (NI) - new (NM) value (NI) ] :: graphic (NM) edge (N)  :: void (N) 
SPECIAL:NAME:MessageToken_v2 int getSequenceNumber(): get (V)  | sequence (NM) number (NI) 	++ :: int (N)  :: message (NM) token (NM) v (NM) 2 (N) 
SPECIAL:NAME:Note Date getDate(): get (V)  | date (N) 	++ :: date (N)  :: note (N) 
SPECIAL:NAME:ViewReportAction void setFlowAttributeDepth(String flowAttributeDepth): set (V)  | flow (NM) attribute (NM) depth (N) 	++ :: [ string (NI) - flow (NM) attribute (NM) depth (N) ] :: view (NM) report (NM) action (N) 
CONSTRUCTOR:NAME:DiscMenu DiscMenu DiscMenu():  | disc (NM) menu (N) 	++
SPECIAL:NAME:BaseEvent void setBubbles(boolean bubbles): set (V)  | bubbles (N) 	++ :: [ boolean (N) - bubbles (N) ] :: base (NM) event (NI) 
BASE_VERB:NAME:AnimatedGifEncoder void analyzePixels(): analyze (V)  | pixels (N) 	++ :: animated (NM) gif (NM) encoder (N) 
SPECIAL:NAME:SerializedJacObject void setACInfos(String acName, Object infos): set (V)  | AC (NM) infos (N) 	++ :: [ string (NI) - ac (NM) name (NI) ] :: [ object (NI) - infos (N) ] :: serialized (NM) jac (NM) object (NI) 
SPECIAL:NAME:VPAttributeDialog String getM_AttributeSetInstanceName(): get (V)  | M (NM) attribute (NM) set (NM) instance (NM) name (NI) 	++ :: string (NI)  :: VP (NM) attribute (NM) dialog (N) 
SPECIAL:NAME:PluginResURLConnection String getHeaderField(String name): get (V)  | header (NM) field (N) 	++ :: [ string (NI) - name (NI) ] :: string (NI)  :: plugin (NM) res (NM) URL (NM) connection (N) 
SPECIAL:NAME:Thinlet Object findNextItem(Object component, String classname, Object item): find (V)  | EQUIV[next (DT) item (NI) , [ object (NI) - item (NI) ]]	++ :: [ object (NI) - component (N) ] :: [ string (NI) - classname (N) ] :: object (NI)  :: thinlet (N) 
SPECIAL:NAME:NastyBenchmark Object getMinimum(): get (V)  | minimum (N) 	++ :: object (NI)  :: nasty (NM) benchmark (N) 
CONSTRUCTOR:NAME:ImmutableReel ImmutableReel ImmutableReel():  | immutable (NM) reel (N) 	++
SPECIAL:NAME:PropertyHelper Object getUserProperty(String ns, String name): get (V)  | user (NM) property (N) 	++ :: [ string (NI) - ns (N) ] :: [ string (NI) - name (NI) ] :: object (NI)  :: property (NM) helper (N) 
CONSTRUCTOR:NAME:expt expt expt(String name):  | expt (N) 	++ :: [ string (NI) - name (NI) ]
SPECIAL:NAME:SqlOperatorTests void testSessionUserFunc(): test (VI)  | session (NM) user (NM) func (N) 	++ :: sql (NM) operator (NM) tests (N) 
SPECIAL:NAME:XVCLNode String getVariableValue(String variableName): get (V)  | variable (NM) value (NI) 	++ :: [ string (NI) - variable (NM) name (NI) ] :: string (NI)  :: XVCL (NM) node (NI) 
SPECIAL:NAME:TilepalView void setForeground(Color c): set (V)  | foreground (N) 	++ :: [ color (N) - c (N) ] :: tilepal (NM) view (NI) 
SPECIAL:NAME:FreeDataPKImpl void setDataTypeId(Integer id): set (V)  | data (NM) type (NM) id (NI) 	++ :: [ integer (N) - id (NI) ] :: free (NM) data (NM) PK (NM) impl (NI) 
SPECIAL:NAME:FFTFilter static String getMARFSourceCodeRevision(): get (V)  | MARF (NM) source (NM) code (NM) revision (N) 	++ :: string (NI)  :: FFT (NM) filter (N) 
SPECIAL:NAME:NTriplesParser void setStatementHandler(StatementHandler sh): set (V)  | statement (NM) handler (N) 	++ :: [ statement (NM) handler (N) - sh (N) ] :: N (NM) triples (NM) parser (N) 
PREP:NAME:Block String toString(int tab): convert (V) | to (P) string (NI) 	++ :: [ int (N) - tab (N) ] :: block (N)  :: string (NI) 
SPECIAL:NAME:Market void setCouponMint(CouponBank couponMint): set (V)  | coupon (NM) mint (N) 	++ :: [ coupon (NM) bank (N) - coupon (NM) mint (N) ] :: market (N) 
SPECIAL:NAME:AutoExtract void createShortcuts(File installDir, String runnable, String folder, String name): create (V)  | shortcuts (N) 	++ :: [ file (NI) - install (NM) dir (NI) ] :: [ string (NI) - runnable (N) ] :: [ string (NI) - folder (N) ] :: [ string (NI) - name (NI) ] :: auto (NM) extract (N) 
BASE_VERB:FORM:InitialDirContext void bind(String name, Object obj, Attributes attrs): bind (V)  | [ string (NI) - name (NI) ]	++ :: [ object (NI) - obj (NI) ] :: [ attributes (N) - attrs (N) ] :: initial (NM) dir (NM) context (N) 
EVENT_PARAM:NAME:void windowLostFocus(WindowEvent evt): handle (V) | window (NM) lost (NM) focus (N) 	++ :: [ window (NM) event (NI) - evt (N) ] :: ANONYMOUS (N)  :: void (N) 
SPECIAL:NAME:CommonModelPackage ParameterClass getParameter(): get (V)  | parameter (N) 	++ :: parameter (NM) class (NI)  :: common (NM) model (NM) package (N) 
SPECIAL:NAME:NodeImpl void setDepth(int depth): set (V)  | depth (N) 	++ :: [ int (N) - depth (N) ] :: node (NM) impl (NI) 
SPECIAL:NAME:ValueListVO void setMoveTo(boolean moveToFlag): set (V)  | move (N) -- to (P) [ boolean (N) - move (NM) to (NM) flag (N) ]	++ :: [ boolean (N) - move (NM) to (NM) flag (N) ] :: value (NM) list (NM) VO (NI) 
SPECIAL:FORM:MRConvert static void main(String args): main (V)  | [ string (NI) - args (N) ]	++ :: MR (NM) convert (N) 
BASE_VERB:FORM:boolean accept(File f): accept (VI)  | [ file (NI) - f (N) ]	++ :: ANONYMOUS (N)  :: boolean (N) 
ENDS_WITH_ING:NAME:ShallowWater int liquidRemaining(): handle (V) | liquid (NM) remaining (N) 	++ :: shallow (NM) water (N)  :: int (N) 
SPECIAL:NAME:Style Hashtable getResultTags(): get (V)  | result (NM) tags (N) 	++ :: hashtable (N)  :: style (N) 
CONSTRUCTOR:NAME:CommandBuilder CommandBuilder CommandBuilder():  | command (NM) builder (N) 	++
SPECIAL:FORM:NoUnderlyings void set(UnderlyingIssuer value): set (V)  | [ underlying (NM) issuer (N) - value (NI) ]	++ :: no (DT) underlyings (N) 
SPECIAL:NAME:AbstractAppBlock byte getLastUniqueID(): get (V)  | last (DT) unique (NM) ID (NI) 	++ :: byte (N)  :: abstract (NM) app (NM) block (N) 
BASE_VERB:NAME:CRUDServiceParams void storeItemsMap(HttpServletRequest request, ActionForm form): store (V)  | items (NM) map (N) 	++ :: [ http (NM) servlet (NM) request (N) - request (N) ] :: [ action (NM) form (N) - form (N) ] :: CRUD (NM) service (NM) params (N) 
BASE_VERB:NAME:WidgetUI String escapeHTML(Object in): escape (V)  | HTML (N) 	++ :: [ object (NI) - in (NI) ] :: string (NI)  :: widget (NM) UI (N) 
SPECIAL:NAME:AgencyUserManager List getUserDTOs(): get (V)  | user (NM) DT (NM) os (N) 	++ :: list (N)  :: agency (NM) user (NM) manager (N) 
SPECIAL:NAME:Institution void setKassenart(String s): set (V)  | kassenart (N) 	++ :: [ string (NI) - s (N) ] :: institution (N) 
CONSTRUCTOR:NAME:JRDesignViewer JRDesignViewer JRDesignViewer(JRReport report):  | JR (NM) design (NM) viewer (N) 	++ :: [ JR (NM) report (N) - report (N) ]
SPECIAL:FORM:AssembleBookTask void run(PublicationContext context): run (VI)  | [ publication (NM) context (N) - context (N) ]	++ :: assemble (NM) book (NM) task (N) 
V_3P_IRR:NAME:ClientConfiguration boolean isShowSplashScreen(): is (V)  | show (NM) splash (NM) screen (N) 	++ :: boolean (N)  :: client (NM) configuration (NI) 
V_3P_IRR:NAME:Element boolean hasAttribute(String name): has (V)  | attribute (N) 	++ :: [ string (NI) - name (NI) ] :: boolean (N)  :: element (NI) 
SPECIAL:NAME:ResultSet boolean getBoolean(int columnIndex): get (V)  | boolean (N) 	++ :: [ int (N) - column (NM) index (NI) ] :: boolean (N)  :: result (NM) set (N) 
BASE_VERB:FORM:TicketFlags boolean match(LoginOptions options): match (V)  | [ login (NM) options (N) - options (N) ]	++ :: ticket (NM) flags (N)  :: boolean (N) 
NOUN_PHRASE:NAME:Switch boolean singleton(): get (V) | singleton (N) 	++ :: switch (N)  :: boolean (N) 
PREP:NAME:DefaultTreeCellEditor boolean inHitRegion(int x, int y):  | in (P) hit (NM) region (N) 	++ :: [ int (N) - x (N) ] :: [ int (N) - y (N) ] :: default (NM) tree (NM) cell (NM) editor (N)  :: boolean (N) 
ENDS_WITH_ED:NAME:void actionPerformed(ActionEvent e): handle (V) | action (NM) performed (N) 	++ :: [ action (NM) event (NI) - e (N) ] :: ANONYMOUS (N)  :: void (N) 
BASE_VERB:CLAS:TokenStreamRewriteEngine void insertBefore(String programName, int index, String text): insert (V)  | token (NM) stream (NM) rewrite (NM) engine (N) -- before (P) [ string (NI) - program (NM) name (NI) ]	++ :: [ string (NI) - program (NM) name (NI) ] :: [ int (N) - index (NI) ] :: [ string (NI) - text (NI) ]
V_3P_IRR:NAME:AddressBook CacheData hasValidBookmark(): has (V)  | valid (NM) bookmark (N) 	++ :: cache (NM) data (NI)  :: address (NM) book (N) 
SPECIAL:NAME:ComponentHierarchyViewer void renderContainerPaneUIData(Connection conn, Element parent, ContainerPaneUI ui): render (V)  | container (NM) pane (NM) UI (NM) data (NI) 	++ :: [ connection (N) - conn (N) ] :: [ element (NI) - parent (N) ] :: [ container (NM) pane (NM) UI (N) - ui (N) ] :: component (NM) hierarchy (NM) viewer (N) 
BASE_VERB:NAME:IntroductionPage void updateLabels(): update (V)  | labels (N) 	++ :: introduction (NM) page (N) 
SPECIAL:NAME:Options void setPlayerName(int no, String name): set (V)  | player (NM) name (NI) 	++ :: [ int (N) - no (DT) ] :: [ string (NI) - name (NI) ] :: options (N) 
BASE_VERB:CLAS:Cli void hcPlay(): hc (PRE) play (V)  | cli (N) 	++
SPECIAL:NAME:BuildSummariesServiceTest void testShouldBeAbleToReturnLastSuccessfulBuild(): test (VI)  | should (NM) be (NM) able (N) -- to (P) return (NM) last (DT) successful (NM) build (N) 	++ :: build (NM) summaries (NM) service (NM) test (N) 
BASE_VERB:CLAS:FudaaExecPostView void execOnFile(File _target, FudaaUI _ui): exec (V)  | fudaa (NM) exec (NM) post (NM) view (NI) -- on (P) EQUIV[file (NI) , [ file (NI) - target (N) ]]	++ :: [ fudaa (NM) UI (N) - ui (N) ]
SPECIAL:NAME:LomTechnical void setTextAreaLOMInstall(TextArea ta): set (V)  | text (NM) area (NM) LOM (NM) install (N) 	++ :: [ text (NM) area (N) - ta (N) ] :: lom (NM) technical (N) 
SPECIAL:CLAS:RawDataAtNode int initializeForWriting(int expectedNumberOfDatapoints, int expectedNumberOfScans): initialize (V)  | raw (NM) data (NM) at (NM) node (NI) -- for (P) writing (N) 	++ :: [ int (N) - expected (NM) number (NM) of (NM) datapoints (N) ] :: [ int (N) - expected (NM) number (NM) of (NM) scans (N) ] :: int (N) 
SPECIAL:NAME:DirectProxy void removeEventListeners(): remove (V)  | event (NM) listeners (N) 	++ :: direct (NM) proxy (NI) 
V_3P_IRR:NAME:Simple boolean isAddressLocked(): is (V)  | address (NM) locked (N) 	++ :: boolean (N)  :: simple (N) 
SPECIAL:NAME:TblElt void removeTr(int i): remove (V)  | tr (N) 	++ :: [ int (N) - i (N) ] :: tbl (NM) elt (NI) 
CONSTRUCTOR:NAME:Unmarshaller Unmarshaller Unmarshaller(UnmarshallingContext context, int startState):  | unmarshaller (N) 	++ :: [ unmarshalling (NM) context (N) - context (N) ] :: [ int (N) - start (NM) state (N) ]
BASE_VERB:NAME:AbstractDelegateDigraphOfCEPaths void clearEdges(): clear (V)  | edges (N) 	++ :: abstract (NM) delegate (NM) digraph (NM) of (NM) CE (NM) paths (N) 
SPECIAL:NAME:CrossOrderCancelRequest RedemptionDate getRedemptionDate(): get (V)  | redemption (NM) date (N) 	++ :: redemption (NM) date (N)  :: cross (NM) order (NM) cancel (NM) request (N) 
SPECIAL:NAME:IAMClient String getServer(): get (V)  | server (N) 	++ :: string (NI)  :: IAM (NM) client (N) 
CONSTRUCTOR:NAME:JPhotoAction JPhotoAction JPhotoAction(ActionListener listener, String text, int mnemonic, KeyStroke accelerator):  | J (NM) photo (NM) action (N) 	++ :: [ action (NM) listener (N) - listener (N) ] :: [ string (NI) - text (NI) ] :: [ int (N) - mnemonic (N) ] :: [ key (NM) stroke (N) - accelerator (N) ]
SPECIAL:CLAS:TextTest void testCopy(): test (VI) copy (V)  | text (NM) test (N) 	++
SPECIAL:NAME:ColumnMetadata int getColumnSize(): get (V)  | column (NM) size (N) 	++ :: int (N)  :: column (NM) metadata (N) 
SPECIAL:NAME:Icq void resetPeerCon(): reset (V)  | peer (NM) con (N) 	++ :: icq (N) 
CONSTRUCTOR:NAME:FieldPosition FieldPosition FieldPosition(Field field, int field_id):  | field (NM) position (N) 	++ :: [ field (N) - field (N) ] :: [ int (N) - field (NM) id (NI) ]
NOUN_PHRASE:NAME:GraphStructureIterator Object next(): get (V) | next (DT) 	++ :: graph (NM) structure (NM) iterator (N)  :: object (NI) 
NOUN_PHRASE:NAME:QuantLibJNI static boolean Calendar_isBusinessDay(long jarg1, Calendar jarg1_, long jarg2, Date jarg2_): get (V) | calendar (NM) is (NM) business (NM) day (N) 	++ :: [ long (N) - jarg (NM) 1 (N) ] :: [ calendar (N) - jarg (NM) 1 (N) ] :: [ long (N) - jarg (NM) 2 (N) ] :: [ date (N) - jarg (NM) 2 (N) ] :: quant (NM) lib (NM) JNI (N)  :: boolean (N) 
NOUN_PHRASE:NAME:FarragoReposImpl FarragoReposTxnContext newTxnContext(): get (V) | new (NM) txn (NM) context (N) 	++ :: farrago (NM) repos (NM) impl (NI)  :: farrago (NM) repos (NM) txn (NM) context (N) 
SPECIAL:FORM:DiagramDisplayPanel void add(RelationDisplayItem rdi): add (V)  | [ relation (NM) display (NM) item (NI) - rdi (N) ]	++ :: diagram (NM) display (NM) panel (N) 
SPECIAL:FORM:SDEFile void write(StyxFileClient client, long offset, int count, ByteBuffer data, boolean truncate, int tag): write (V)  | [ styx (NM) file (NM) client (N) - client (N) ]	++ :: [ long (N) - offset (N) ] :: [ int (N) - count (N) ] :: [ byte (NM) buffer (NI) - data (NI) ] :: [ int (N) - tag (NI) ] :: SDE (NM) file (NI)  :: [ boolean (N) - truncate (N) ]
ENDS_WITH_ED:NAME:void windowDeiconified(WindowEvent e): handle (V) | window (NM) deiconified (N) 	++ :: [ window (NM) event (NI) - e (N) ] :: ANONYMOUS (N)  :: void (N) 
SPECIAL:NAME:ThreaderM void findBBInd(): find (V)  | BB (NM) ind (N) 	++ :: threader (NM) M (N) 
ENDS_WITH_ED:NAME:void actionPerformed(ActionEvent e): handle (V) | action (NM) performed (N) 	++ :: [ action (NM) event (NI) - e (N) ] :: ANONYMOUS (N)  :: void (N) 
SPECIAL:NAME:EmployeeForm Integer getEmployeeTypeId(): get (V)  | employee (NM) type (NM) id (NI) 	++ :: integer (N)  :: employee (NM) form (N) 
SPECIAL:NAME:PersistentField Class getDeclaringClass(): get (V)  | declaring (NM) class (NI) 	++ :: class (NI)  :: persistent (NM) field (N) 
SPECIAL:NAME:PageMarTypeImpl long getFooter(): get (V)  | footer (N) 	++ :: long (N)  :: page (NM) mar (NM) type (NM) impl (NI) 
ENDS_WITH_ED:NAME:IvjEventHandler void mousePressed(MouseEvent e): handle (V) | mouse (NM) pressed (N) 	++ :: [ mouse (NM) event (NI) - e (N) ] :: ivj (NM) event (NM) handler (N)  :: void (N) 
BASE_VERB:CLAS:MetaClassImpl Variant IVVector(): IV (PRE) vector (V)  | meta (NM) class (NM) impl (NI) 	++ :: variant (N) 
BASE_VERB:NAME:MozAxPlugin void xsetProperty1(String dispid, String property): xset (V)  | property (N) 1 (D) 	++ :: [ string (NI) - dispid (N) ] :: [ string (NI) - property (N) ] :: moz (NM) ax (NM) plugin (N) 
SPECIAL:NAME:ObjectFactory DisableDisplay createDisableDisplay(): create (V)  | disable (NM) display (N) 	++ :: disable (NM) display (N)  :: object (NM) factory (N) 
V_3PS:FORM:BasicAclEntryAfterInvocationProvider boolean supports(Class clazz): supports (V)  | [ class (NI) - clazz (N) ]	++ :: basic (NM) acl (NM) entry (NM) after (NM) invocation (NM) provider (N)  :: boolean (N) 
BASE_VERB:NAME:Monitor void postDeregister(): post (V)  | deregister (N) 	++ :: monitor (N) 
SPECIAL:NAME:Language void setDateFormat(String javaDatePattern): set (V)  | date (NM) format (NI) 	++ :: [ string (NI) - java (NM) date (NM) pattern (N) ] :: language (N) 
BASE_VERB:CLAS:WebSeedPanel void show(): show (V)  | web (NM) seed (NM) panel (N) 	++
CONSTRUCTOR:NAME:Factory Factory Factory():  | factory (N) 	++
BASE_VERB:NAME:Repeat int hashCode(): hash (V)  | code (NI) 	++ :: int (N)  :: repeat (N) 
SPECIAL:NAME:MessageType String getParameterNames(): get (V)  | parameter (NM) names (N) 	++ :: string (NI)  :: message (NM) type (N) 
SPECIAL:NAME:Jdk12 void _setFileLength(RandomAccessFile f, int length): set (V)  | file (NM) length (N) 	++ :: [ random (NM) access (NM) file (NI) - f (N) ] :: [ int (N) - length (N) ] :: jdk (NM) 12 (N) 
SPECIAL:NAME:Param XmlAnySimpleType getName(): get (V)  | name (NI) 	++ :: xml (NM) any (DT) simple (NM) type (N)  :: param (N) 
SPECIAL:NAME:CMLUnitListTest void testGetSIUnitList(): test (VI) get (V)  | SI (NM) unit (NM) list (N) 	++ :: CML (NM) unit (NM) list (NM) test (N) 
SPECIAL:NAME:XMLHandler static String getNodeAttributes(Node node): get (V)  | node (NM) attributes (N) 	++ :: [ node (NI) - node (NI) ] :: string (NI)  :: XML (NM) handler (N) 
SPECIAL:NAME:LocationModel List getStableIDHistory(): get (V)  | stable (NM) ID (NM) history (N) 	++ :: list (N)  :: location (NM) model (NI) 
SPECIAL:NAME:CMClass static Armor getArmor(String calledThis): get (V)  | armor (N) 	++ :: [ string (NI) - called (NM) this (PR) ] :: armor (N)  :: CM (NM) class (NI) 
ENDS_WITH_ED:NAME:ApplicationDefinitionEditor void valueChanged(ListSelectionEvent lse): handle (V) | value (NM) changed (N) 	++ :: [ list (NM) selection (NM) event (NI) - lse (N) ] :: application (NM) definition (NM) editor (N)  :: void (N) 
NOUN_PHRASE:NAME:Kon static long randomLong(double max): get (V) | random (NM) long (N) 	++ :: [ double (N) - max (N) ] :: kon (N)  :: long (N) 
NOUN_PHRASE:NAME:RemoteSystem String remoteToString(): get (V) | remote (NM) to (NM) string (NI) 	++ :: remote (NM) system (N)  :: string (NI) 
SPECIAL:NAME:ActionXmlTest void testReadActionXmlConfiguration(): test (VI) read (V)  | action (NM) xml (NM) configuration (NI) 	++ :: action (NM) xml (NM) test (N) 
SPECIAL:NAME:Action void setOpenWindow(boolean _open): set (V)  | open (NM) window (N) 	++ :: [ boolean (N) - open (N) ] :: action (N) 
CONSTRUCTOR:NAME:CtuluCommandComposite CtuluCommandComposite CtuluCommandComposite():  | ctulu (NM) command (NM) composite (N) 	++
SPECIAL:NAME:FBFirmenstamm String getSzAutoTxt(): get (V)  | sz (NM) auto (NM) txt (N) 	++ :: string (NI)  :: FB (NM) firmenstamm (N) 
ENDS_WITH_ED:NAME:P_contentInformation void EButton2_actionPerformed(ActionEvent e): handle (V) | E (PRE) button (NM) 2 (D) action (NM) performed (N) 	++ :: [ action (NM) event (NI) - e (N) ] :: P (NM) content (NM) information (N)  :: void (N) 
CONSTRUCTOR:NAME:Perl5Substitution Perl5Substitution Perl5Substitution(String substitution, int numInterpolations):  | perl (NM) 5 (NM) substitution (N) 	++ :: [ string (NI) - substitution (N) ] :: [ int (N) - num (NM) interpolations (N) ]
SPECIAL:NAME:DisplayRenderer int getLeftMargin(): get (V)  | left (NM) margin (N) 	++ :: int (N)  :: display (NM) renderer (N) 
SPECIAL:NAME:UserPasswordDialog String getUserName(): get (V)  | user (NM) name (NI) 	++ :: string (NI)  :: user (NM) password (NM) dialog (N) 
CONSTRUCTOR:NAME:Node Node Node(Object key):  | node (NI) 	++ :: [ object (NI) - key (NI) ]
SPECIAL:NAME:TypePrivate void setDefaultString(String defaultString): set (V)  | default (NM) string (NI) 	++ :: [ string (NI) - default (NM) string (NI) ] :: type (NM) private (N) 
SPECIAL:NAME:DataBufferFloat void setElemFloat(int i, float val): set (V)  | elem (NM) float (N) 	++ :: [ int (N) - i (N) ] :: [ float (N) - val (NI) ] :: data (NM) buffer (NM) float (N) 
SPECIAL:NAME:Options void writeOptionFile(String filename): write (V)  | option (NM) file (NI) 	++ :: [ string (NI) - filename (N) ] :: options (N) 
SPECIAL:NAME:Completor void reInitListLater(): re (PRE) init (V)  | list (NM) later (N) 	++ :: completor (N) 
CONSTRUCTOR:NAME:MUserAgent MUserAgent MUserAgent(AffineTransform at):  | M (NM) user (NM) agent (N) 	++ :: [ affine (NM) transform (N) - at (N) ]
SPECIAL:NAME:ModelManager RefPackage getModel(String modelname): get (V)  | model (NI) 	++ :: [ string (NI) - modelname (N) ] :: ref (NM) package (N)  :: model (NM) manager (N) 
CONSTRUCTOR:NAME:DefaultConfigTestCase DefaultConfigTestCase DefaultConfigTestCase():  | default (NM) config (NM) test (NM) case (N) 	++
SPECIAL:NAME:PropertyDeclaration CSSName getCSSName(): get (V)  | CSS (NM) name (NI) 	++ :: CSS (NM) name (NI)  :: property (NM) declaration (NI) 
SPECIAL:NAME:IDataFlowNode SimpleNode getSimpleNode(): get (V)  | simple (NM) node (NI) 	++ :: simple (NM) node (NI)  :: I (NM) data (NM) flow (NM) node (NI) 
SPECIAL:NAME:DefaultInputHandler void addKeyBinding(String keyBinding, ActionListener action): add (V)  | EQUIV[key (NM) binding (N) , [ string (NI) - key (NM) binding (N) ]]	++ :: [ action (NM) listener (N) - action (N) ] :: default (NM) input (NM) handler (N) 
SPECIAL:NAME:JavaDoc2HTMLTextReader int findEndingTag(StringBuffer buffer): find (V)  | ending (NM) tag (NI) 	++ :: [ string (NM) buffer (NI) - buffer (NI) ] :: int (N)  :: java (NM) doc (NM) 2 (NM) HTML (NM) text (NM) reader (N) 
CONSTRUCTOR:NAME:I18Dialog I18Dialog I18Dialog(Frame owner, String titlekey, boolean modal):  | I (NM) 18 (NM) dialog (N) 	++ :: [ frame (N) - owner (N) ] :: [ string (NI) - titlekey (N) ] :: [ boolean (N) - modal (N) ]
SPECIAL:NAME:CompiereUtils static BufferedImage loadBufferedImage(String path, int imageType): load (V)  | buffered (NM) image (N) 	++ :: [ string (NI) - path (NI) ] :: [ int (N) - image (NM) type (N) ] :: buffered (NM) image (N)  :: compiere (NM) utils (N) 
SPECIAL:NAME:Member Class getDeclaringClass(): get (V)  | declaring (NM) class (NI) 	++ :: class (NI)  :: member (N) 
SPECIAL:NAME:SimpleHistogramDataset Number getStartX(int series, int item): get (V)  | start (NM) X (N) 	++ :: [ int (N) - series (N) ] :: [ int (N) - item (NI) ] :: number (NI)  :: simple (NM) histogram (NM) dataset (N) 
ENDS_WITH_ED:NAME:ListHandler void parseFinished(): handle (V) | parse (NM) finished (N) 	++ :: list (NM) handler (N)  :: void (N) 
SPECIAL:NAME:StdShipConsole void executeMsg(Environmental host, CMMsg msg): execute (VI)  | EQUIV[msg (NI) , [ CM (NM) msg (NI) - msg (NI) ]]	++ :: [ environmental (N) - host (N) ] :: std (NM) ship (NM) console (N) 
SPECIAL:NAME:Table void setClass(String _Class): set (V)  | class (NI) 	++ :: [ string (NI) - class (NI) ] :: table (N) 
SPECIAL:FORM:MethodRefCPInfo void read(DataInputStream cpStream): read (V)  | [ data (NM) input (NM) stream (NI) - cp (NM) stream (NI) ]	++ :: method (NM) ref (NM) CP (NM) info (NI) 
CONSTRUCTOR:NAME:Project Project Project():  | project (N) 	++
PREP:NAME:Enum static Enum forInt(int i):  | for (P) int (N) 	++ :: [ int (N) - i (N) ] :: enum (NI)  :: enum (NI) 
SPECIAL:NAME:X509DistinguishedName String getStateOrProvince(): get (V)  | state (NM) or (NM) province (N) 	++ :: string (NI)  :: X (NM) 509 (NM) distinguished (NM) name (NI) 
SPECIAL:NAME:UpdatingData Sister getSisData(): get (V)  | sis (NM) data (NI) 	++ :: sister (N)  :: updating (NM) data (NI) 
ED_VERB:NAME:SMTable User createdBy(): created (V)  | by (NM) 	++ :: user (N)  :: SM (NM) table (N) 
SPECIAL:NAME:PrototypeMIDlet void startApp(): start (V)  | app (N) 	++ :: prototype (NM) MI (NM) dlet (N) 
SPECIAL:CLAS:LoginMessage void process(): process (VI)  | login (NM) message (NI) 	++
SPECIAL:FORM:NameTypeCP void write(ClassEnv e, DataOutputStream out): write (V)  | [ class (NM) env (N) - e (N) ]	++ :: [ data (NM) output (NM) stream (NI) - out (N) ] :: name (NM) type (NM) CP (N) 
BASE_VERB:CLAS:PrimPtr2PtrTableStepper void step(): step (V)  | prim (NM) ptr (NM) 2 (NM) ptr (NM) table (NM) stepper (N) 	++
BASE_VERB:FORM:LayoutParser TableLayout parse(InputStream in): parse (V)  | [ input (NM) stream (NI) - in (NI) ]	++ :: layout (NM) parser (N)  :: table (NM) layout (N) 
CONSTRUCTOR:NAME:DeletedPanel DeletedPanel DeletedPanel(Login login):  | deleted (NM) panel (N) 	++ :: [ login (N) - login (N) ]
SPECIAL:NAME:HelperHeaderAst CompleteSignatureAst getP_complete_signature(): get (V)  | P (NM) complete (NM) signature (N) 	++ :: complete (NM) signature (NM) ast (N)  :: helper (NM) header (NM) ast (N) 
CONSTRUCTOR:NAME:ExtractStructEntry ExtractStructEntry ExtractStructEntry(Number modelIndex, MetaTable metaTables):  | extract (NM) struct (NM) entry (NI) 	++ :: [ number (NI) - model (NM) index (NI) ] :: [ meta (NM) table (N) - meta (NM) tables (N) ]
BASE_VERB:NAME:LocalStorageTest void cleanStorage(): clean (V)  | storage (N) 	++ :: local (NM) storage (NM) test (N) 
BASE_VERB:CLAS:LogManager String dump(): dump (V)  | log (NM) manager (N) 	++ :: string (NI) 
BASE_VERB:NAME:TracerController void enforceNodesLimit(TAgent agent): enforce (VI)  | nodes (NM) limit (N) 	++ :: [ T (NM) agent (N) - agent (N) ] :: tracer (NM) controller (N) 
SPECIAL:NAME:String getName(): get (V)  | name (NI) 	++ :: string (NI)  :: ANONYMOUS (N) 
SPECIAL:NAME:OFtheUser int getFontSize(int fontNr): get (V)  | font (NM) size (N) 	++ :: [ int (N) - font (NM) nr (N) ] :: int (N)  :: O (NM) fthe (NM) user (N) 
SPECIAL:NAME:HitUrl long getSlowestTime(): get (V)  | slowest (NM) time (N) 	++ :: long (N)  :: hit (NM) url (NI) 
SPECIAL:NAME:SessionBean void setIpAddr(String ipAddr): set (V)  | ip (NM) addr (N) 	++ :: [ string (NI) - ip (NM) addr (N) ] :: session (NM) bean (NI) 
SPECIAL:NAME:TagLibraryDescriptorTag TagLibraryInfo loadTldFromJar(TestContext testContext): load (V)  | tld (N) -- from (P) jar (N) 	++ :: [ test (NM) context (N) - test (NM) context (N) ] :: tag (NM) library (NM) info (NI)  :: tag (NM) library (NM) descriptor (NM) tag (NI) 
SPECIAL:NAME:VideoStreamChunk long getPictureHeight(): get (V)  | picture (NM) height (N) 	++ :: long (N)  :: video (NM) stream (NM) chunk (N) 
BASE_VERB:FORM:Solver Board solve(Board board): solve (V)  | [ board (N) - board (N) ]	++ :: solver (N)  :: board (N) 
SPECIAL:NAME:Word void setWord(String word): set (V)  | word (N) 	++ :: [ string (NI) - word (N) ] :: word (N) 
SPECIAL:NAME:Description JamochaType getParameterTypes(int parameter): get (V)  | parameter (NM) types (N) 	++ :: [ int (N) - parameter (N) ] :: jamocha (NM) type (N)  :: description (NI) 
BASE_VERB:NAME:gsl_histogram_pdf void setn_n(int index, Integer2 object): setn (V)  | n (N) 	++ :: [ int (N) - index (NI) ] :: [ integer (NM) 2 (N) - object (NI) ] :: gsl (NM) histogram (NM) pdf (N) 
SPECIAL:NAME:LayerFrame void printStuff(LinkedList list): print (V)  | stuff (N) 	++ :: [ linked (NM) list (N) - list (N) ] :: layer (NM) frame (N) 
CONSTRUCTOR:NAME:JMethod JMethod JMethod(Method m):  | J (NM) method (N) 	++ :: [ method (N) - m (N) ]
V_3P_IRR:NAME:Morphism boolean hasTotalExtensions(): has (V)  | total (NM) extensions (N) 	++ :: boolean (N)  :: morphism (N) 
BASE_VERB:NAME:OJClass Expression expandArrayAccess(Environment env, ArrayAccess expr): expand (V)  | EQUIV[array (NM) access (N) , [ array (NM) access (N) - expr (NI) ]]	++ :: [ environment (N) - env (N) ] :: expression (N)  :: OJ (NM) class (NI) 
V_MODAL:NAME:BaseNoad boolean canPrecedeBin(): can (VI) precede (V)  | bin (N) 	++ :: boolean (N)  :: base (NM) noad (N) 
BASE_VERB:NAME:ComplexityScanner void visitTypeTest(JCInstanceOf tree): visit (V)  | type (NM) test (N) 	++ :: [ JC (NM) instance (NM) of (N) - tree (NI) ] :: complexity (NM) scanner (N) 
VOID_NP:NAME:LinenumberingConfiguration void unsetIncrement(): handle (V) | unset (NM) increment (N) 	++ :: linenumbering (NM) configuration (NI)  :: void (N) 
SPECIAL:NAME:ADescendingAscendingOrDescending void setDescending(TDescending node): set (V)  | descending (N) 	++ :: [ T (NM) descending (N) - node (NI) ] :: A (NM) descending (NM) ascending (NM) or (NM) descending (N) 
CONSTRUCTOR:NAME:AminoAcidProperty AminoAcidProperty AminoAcidProperty():  | amino (NM) acid (NM) property (N) 	++
BASE_VERB:CLAS:GuiConf void askForParameters(String classExpr): ask (V)  | gui (NM) conf (N) -- for (P) parameters (N) 	++ :: [ string (NI) - class (NM) expr (NI) ]
SPECIAL:FORM:aabbox3df void reset(float x, float y, float z): reset (V)  | [ float (N) - x (N) ]	++ :: [ float (N) - y (N) ] :: [ float (N) - z (N) ] :: aabbox (NM) 3 (NM) df (N) 
SPECIAL:CLAS:TableSorter void sortByColumn(int column, boolean ascending): sort (V)  | table (NM) sorter (N) -- by (P) EQUIV[column (N) , [ int (N) - column (N) ]]	++ :: [ boolean (N) - ascending (N) ]
ENDS_WITH_ED:NAME:void actionPerformed(ActionEvent e): handle (V) | action (NM) performed (N) 	++ :: [ action (NM) event (NI) - e (N) ] :: ANONYMOUS (N)  :: void (N) 
CONSTRUCTOR:NAME:JOpenPGPCard JOpenPGPCard JOpenPGPCard(byte BArray, short bOffset, byte bLength):  | J (NM) open (NM) PGP (NM) card (N) 	++ :: [ byte (N) - B (NM) array (N) ] :: [ short (N) - b (NM) offset (N) ] :: [ byte (N) - b (NM) length (N) ]
SPECIAL:NAME:SavedGame Engine getReplayEngine(): get (V)  | replay (NM) engine (N) 	++ :: engine (N)  :: saved (NM) game (N) 
SPECIAL:CLAS:Pattern Object clone(): clone (V)  | pattern (N) 	++ :: object (NI) 
SPECIAL:NAME:CollectionMapper String getColumnNames(): get (V)  | column (NM) names (N) 	++ :: string (NI)  :: collection (NM) mapper (N) 
SPECIAL:NAME:Scope PackageBinding getCurrentPackage(): get (V)  | current (NM) package (N) 	++ :: package (NM) binding (N)  :: scope (N) 
NOUN_PHRASE:NAME:Tokenizer int currentOperator(): get (V) | current (NM) operator (N) 	++ :: tokenizer (N)  :: int (N) 
SPECIAL:NAME:Schedule void setTimeSlots(ArrayList timeSlots): set (V)  | time (NM) slots (N) 	++ :: [ array (NM) list (N) - time (NM) slots (N) ] :: schedule (N) 
CONSTRUCTOR:NAME:UndoMagnifyInFocus UndoMagnifyInFocus UndoMagnifyInFocus(Vector path, boolean fromExtents, boolean toExtents, SelectorBean selectorBean, DisplayBean displayBean):  | undo (NM) magnify (NM) in (NM) focus (N) 	++ :: [ vector (N) - path (NI) ] :: [ boolean (N) - from (NM) extents (N) ] :: [ boolean (N) - to (NM) extents (N) ] :: [ selector (NM) bean (NI) - selector (NM) bean (NI) ] :: [ display (NM) bean (NI) - display (NM) bean (NI) ]
SPECIAL:FORM:CollateralAssignment StateOrProvinceOfIssue get(StateOrProvinceOfIssue value): get (V)  | [ state (NM) or (NM) province (NM) of (NM) issue (N) - value (NI) ]	++ :: collateral (NM) assignment (N)  :: state (NM) or (NM) province (NM) of (NM) issue (N) 
BASE_VERB:NAME:Palette void putSample(int channelIndex, int entryIndex, int newValue): put (V)  | sample (N) 	++ :: [ int (N) - channel (NM) index (NI) ] :: [ int (N) - entry (NM) index (NI) ] :: [ int (N) - new (NM) value (NI) ] :: palette (N) 
CONSTRUCTOR:NAME:Signer Signer Signer(String name):  | signer (N) 	++ :: [ string (NI) - name (NI) ]
BASE_VERB:NAME:NodeDescriptionVisitor String visitZName(ZName zName): visit (V)  | EQUIV[Z (NM) name (NI) , [ Z (NM) name (NI) - z (NM) name (NI) ]]	++ :: string (NI)  :: node (NM) description (NM) visitor (N) 
SPECIAL:NAME:PoolConfiguration void setTestWhileIdle(boolean testWhileIdle): set (V)  | test (NM) while (NM) idle (N) 	++ :: [ boolean (N) - test (NM) while (NM) idle (N) ] :: pool (NM) configuration (NI) 
CONSTRUCTOR:NAME:TrekBot TrekBot TrekBot(TrekServer serverIn, String shipNameIn):  | trek (NM) bot (N) 	++ :: [ trek (NM) server (N) - server (NM) in (NI) ] :: [ string (NI) - ship (NM) name (NM) in (NI) ]
CONSTRUCTOR:NAME:Concept Concept Concept(String name, LabelComplex labelFR, LabelComplex labelEN, String comment, String origin):  | concept (N) 	++ :: [ string (NI) - name (NI) ] :: [ label (NM) complex (N) - label (NM) FR (N) ] :: [ label (NM) complex (N) - label (NM) EN (N) ] :: [ string (NI) - comment (N) ] :: [ string (NI) - origin (N) ]
SPECIAL:NAME:CopyEmitter void setDocumentLocator(Locator locator): set (V)  | document (NM) locator (N) 	++ :: [ locator (N) - locator (N) ] :: copy (NM) emitter (N) 
NOUN_PHRASE:NAME:Unmarshaller Object owner(): get (V) | owner (N) 	++ :: unmarshaller (N)  :: object (NI) 
SPECIAL:FORM:ToStringCreator ToStringCreator append(String fieldName, float value): append (V)  | [ string (NI) - field (NM) name (NI) ]	++ :: [ float (N) - value (NI) ] :: to (NM) string (NM) creator (N)  :: to (NM) string (NM) creator (N) 
CONSTRUCTOR:NAME:SpideringSummaryEvent SpideringSummaryEvent SpideringSummaryEvent(Summary summary):  | spidering (NM) summary (NM) event (NI) 	++ :: [ summary (N) - summary (N) ]
SPECIAL:NAME:NullIsTruePredicate static Predicate getInstance(Predicate predicate): get (V)  | instance (NI) 	++ :: [ predicate (N) - predicate (N) ] :: predicate (N)  :: null (NM) is (NM) true (NM) predicate (N) 
BASE_VERB:FORM:PrintWriterHandler void handle(String data): handle (VI)  | [ string (NI) - data (NI) ]	++ :: print (NM) writer (NM) handler (N) 
BASE_VERB:NAME:XLangProxy Object invokeMethod(Object object, String method_name, Object arguments): invoke (VI)  | EQUIV[method (N) , [ string (NI) - method (NM) name (NI) ]]	++ :: [ object (NI) - object (NI) ] :: [ object (NI) - arguments (N) ] :: object (NI)  :: X (NM) lang (NM) proxy (NI) 
BASE_VERB:FORM:CloneableArch void paste(WorkTab target, Point delta, Hashtable lookup): paste (V)  | [ work (NM) tab (N) - target (N) ]	++ :: [ point (N) - delta (N) ] :: [ hashtable (N) - lookup (N) ] :: cloneable (NM) arch (N) 
CONSTRUCTOR:NAME:ClassPropertiesAction ClassPropertiesAction ClassPropertiesAction(Thorn theApp, InterfaceDisplayItem theDisplayItem):  | class (NM) properties (NM) action (N) 	++ :: [ thorn (N) - the (DT) app (N) ] :: [ interface (NM) display (NM) item (NI) - the (DT) display (NM) item (NI) ]
BASE_VERB:CLAS:ConsumerEndpoint void close(): close (V)  | consumer (NM) endpoint (N) 	++
BASE_VERB:NAME:GSLVector static void gsl_vector_long_double_free(long arg0): gsl (PRE) vector (V)  | long (NM) double (NM) free (N) 	++ :: [ long (N) - arg (NM) 0 (N) ] :: GSL (NM) vector (N) 
CONSTRUCTOR:NAME:XY XY XY():  | XY (N) 	++
SPECIAL:NAME:ContextForm void setDocBase(String docBase): set (V)  | doc (NM) base (N) 	++ :: [ string (NI) - doc (NM) base (N) ] :: context (NM) form (N) 
SPECIAL:NAME:PlotRenderingInfo Rectangle2D getDataArea(): get (V)  | data (NM) area (N) 	++ :: rectangle (NM) 2 (NM) D (N)  :: plot (NM) rendering (NM) info (NI) 
V_3P_IRR:NAME:BeeNode boolean isLeaf(): is (V)  | leaf (N) 	++ :: boolean (N)  :: bee (NM) node (NI) 
V_MODAL:NAME:PullUpRefactoring boolean shouldAddMethodStubsToConcreteSubclassesOfTargetClass(): should (VI) add (V)  | method (NM) stubs (N) -- to (P) concrete (NM) subclasses (NM) of (NM) target (NM) class (NI) 	++ :: boolean (N)  :: pull (NM) up (NM) refactoring (N) 
SPECIAL:NAME:MockCallFactory void setExpectedCreateCallExpectationCalls(int calls): set (V)  | expected (NM) create (NM) call (NM) expectation (NM) calls (N) 	++ :: [ int (N) - calls (N) ] :: mock (NM) call (NM) factory (N) 
SPECIAL:NAME:XMLWriter Attr sortAttributes(NamedNodeMap attrs): sort (V)  | attributes (N) 	++ :: [ named (NM) node (NM) map (N) - attrs (N) ] :: attr (N)  :: XML (NM) writer (N) 
SPECIAL:NAME:StructuralFeature Multiplicity getMultiplicity(): get (V)  | multiplicity (N) 	++ :: multiplicity (N)  :: structural (NM) feature (N) 
BASE_VERB:NAME:Unmarshaller void leaveAttribute(String ___uri, String ___local): leave (V)  | attribute (N) 	++ :: [ string (NI) - uri (NI) ] :: [ string (NI) - local (N) ] :: unmarshaller (N) 
VOID_NP:NAME:void menuAboutToShow(IMenuManager manager): handle (V) | menu (NM) about (NM) to (NM) show (N) 	++ :: [ I (NM) menu (NM) manager (N) - manager (N) ] :: ANONYMOUS (N)  :: void (N) 
V_3P_IRR:NAME:DefaultUnInstrumentableSupport boolean isUnInstrumentable(CtClass cc): is (V)  | un (NM) instrumentable (N) 	++ :: [ ct (NM) class (NI) - cc (N) ] :: boolean (N)  :: default (NM) un (NM) instrumentable (NM) support (N) 
V_3P_IRR:NAME:Javap boolean isShowPublic(): is (V)  | show (NM) public (N) 	++ :: boolean (N)  :: javap (N) 
BASE_VERB:NAME:DoRemoveDependencies void undoIt(): undo (VI)  | it (PR) 	++ :: do (NM) remove (NM) dependencies (N) 
SPECIAL:CLAS:AllTypesHome AllTypes findByPrimaryKey(String name): find (V)  | all (DT) types (NM) home (N) -- by (P) primary (NM) key (NI) 	++ :: [ string (NI) - name (NI) ] :: all (DT) types (N) 
SPECIAL:NAME:BshMethod String getParameterNames(): get (V)  | parameter (NM) names (N) 	++ :: string (NI)  :: bsh (NM) method (N) 
SPECIAL:NAME:BusinessDetailDescriptor String getXMLName(): get (V)  | XML (NM) name (NI) 	++ :: string (NI)  :: business (NM) detail (NM) descriptor (NI) 
SPECIAL:NAME:Session String getAllowedCommands(): get (V)  | allowed (NM) commands (N) 	++ :: string (NI)  :: session (N) 
SPECIAL:NAME:Dimension getMinimumSize(): get (V)  | minimum (NM) size (N) 	++ :: dimension (N)  :: ANONYMOUS (N) 
BASE_VERB:NAME:CyclicBarrier int attemptBarrier(long msecs): attempt (VI)  | barrier (N) 	++ :: [ long (N) - msecs (N) ] :: int (N)  :: cyclic (NM) barrier (N) 
V_3P_IRR:NAME:PersonBean boolean isHomeOwner(): is (V)  | home (NM) owner (N) 	++ :: boolean (N)  :: person (NM) bean (NI) 
SPECIAL:NAME:SelectOperation void setInsets(Insets insets): set (V)  | insets (N) 	++ :: [ insets (N) - insets (N) ] :: select (NM) operation (N) 
SPECIAL:NAME:VideoMetaData int getWidth(): get (V)  | width (N) 	++ :: int (N)  :: video (NM) meta (NM) data (NI) 
SPECIAL:FORM:LinearDefinition Object remove(int index): remove (V)  | [ int (N) - index (NI) ]	++ :: linear (NM) definition (NI)  :: object (NI) 
NOUN_PHRASE:NAME:TexturePtr ITexture operatorMemberAccessFromAPointer(): get (V) | operator (NM) member (NM) access (NM) from (NM) A (NM) pointer (N) 	++ :: texture (NM) ptr (N)  :: I (NM) texture (N) 
SPECIAL:NAME:RecordStructure boolean addField(String fName, int fType): add (V)  | field (N) 	++ :: [ string (NI) - f (NM) name (NI) ] :: [ int (N) - f (NM) type (N) ] :: boolean (N)  :: record (NM) structure (N) 
CONSTRUCTOR:NAME:SynchronizedList SynchronizedList SynchronizedList(T2 initialData, boolean useDirectly):  | synchronized (NM) list (N) 	++ :: [ T (NM) 2 (N) - initial (NM) data (NI) ] :: [ boolean (N) - use (NM) directly (N) ]
SPECIAL:NAME:HtmlTreeControl boolean processParms(Hashtable ht, int rowNo): process (VI)  | parms (N) 	++ :: [ hashtable (N) - ht (N) ] :: [ int (N) - row (NM) no (DT) ] :: boolean (N)  :: html (NM) tree (NM) control (N) 
SPECIAL:FORM:ArrayUtilities static float clone(float array): clone (V)  | [ float (N) - array (N) ]	++ :: array (NM) utilities (N)  :: float (N) 
SPECIAL:NAME:ApprTextWriter void writeMainDeck(CardList main): write (V)  | main (NM) deck (N) 	++ :: [ card (NM) list (N) - main (N) ] :: appr (NM) text (NM) writer (N) 
SPECIAL:NAME:CommonDirectoryViewModel void setShowBackupFiles(boolean showBackupFiles): set (V)  | show (NM) backup (NM) files (N) 	++ :: [ boolean (N) - show (NM) backup (NM) files (N) ] :: common (NM) directory (NM) view (NM) model (NI) 
BASE_VERB:NAME:GiocatoreClient void riceviInformaGenerale(): ricevi (V)  | informa (NM) generale (N) 	++ :: giocatore (NM) client (N) 
BASE_VERB:NAME:QuotedPrintableInputStream void populatePushbackQueue(): populate (V)  | pushback (NM) queue (N) 	++ :: quoted (NM) printable (NM) input (NM) stream (NI) 
SPECIAL:NAME:XingVBRHeader int getLength(): get (V)  | length (N) 	++ :: int (N)  :: xing (NM) VBR (NM) header (N) 
SPECIAL:NAME:TwistTrack Track getSubtracks(): get (V)  | subtracks (N) 	++ :: track (N)  :: twist (NM) track (N) 
SPECIAL:NAME:AbstractRenderer Shape getSeriesShape(int series): get (V)  | series (NM) shape (N) 	++ :: [ int (N) - series (N) ] :: shape (N)  :: abstract (NM) renderer (N) 
NOUN_PHRASE:NAME:RKUtil static int NextYear(Date base, int period): get (V) | next (DT) year (N) 	++ :: [ date (N) - base (N) ] :: [ int (N) - period (N) ] :: RK (NM) util (N)  :: int (N) 
SPECIAL:NAME:InfoPane void addMediaInfoObject(MediaInfoObject minfo): add (V)  | EQUIV[media (NM) info (NM) object (NI) , [ media (NM) info (NM) object (NI) - minfo (N) ]]	++ :: info (NM) pane (N) 
SPECIAL:NAME:LogContextDynamicDateTime ILogContextFormatter getFormatter(): get (V)  | formatter (N) 	++ :: I (NM) log (NM) context (NM) formatter (N)  :: log (NM) context (NM) dynamic (NM) date (NM) time (N) 
SPECIAL:NAME:TestHttpServletResponseWrapper void addIntHeader(String s, int i): add (V)  | int (NM) header (N) 	++ :: [ string (NI) - s (N) ] :: [ int (N) - i (N) ] :: test (NM) http (NM) servlet (NM) response (NM) wrapper (NI) 
SPECIAL:NAME:OJClassByteCode ClassLoader getClassLoader(): get (V)  | class (NM) loader (N) 	++ :: class (NM) loader (N)  :: OJ (NM) class (NM) byte (NM) code (NI) 
SPECIAL:NAME:BasePrinter boolean printComments(SchemaObject obj, boolean leading): print (V)  | comments (N) 	++ :: [ schema (NM) object (NI) - obj (NI) ] :: [ boolean (N) - leading (N) ] :: boolean (N)  :: base (NM) printer (N) 
V_3PS:CLAS:MapToIntKeyBooleanMapAdapter IntKeyBooleanMapIterator entries(): entries (V)  | map (NM) to (NM) int (NM) key (NM) boolean (NM) map (NM) adapter (NI) 	++ :: int (NM) key (NM) boolean (NM) map (NM) iterator (N) 
BASE_VERB:NAME:MimeFormatter boolean visitMultipart(MimeMultipart mp, VisitPhase visitPhase): visit (V)  | EQUIV[multipart (N) , [ mime (NM) multipart (N) - mp (N) ]]	++ :: [ visit (NM) phase (N) - visit (NM) phase (N) ] :: boolean (N)  :: mime (NM) formatter (N) 
SPECIAL:NAME:RegistryManagementServicesTestCase void test38RegistryManagementServicesSoap12QuerySites(): test (VI)  | 38 (D) registry (NM) management (NM) services (NM) soap (NM) 12 (D) query (NM) sites (N) 	++ :: registry (NM) management (NM) services (NM) test (NM) case (N) 
BASE_VERB:FORM:InterceptableProxy Object intercept(Object obj, Method proxyMethod, Object paramVals, MethodProxy proxy): intercept (V)  | [ object (NI) - obj (NI) ]	++ :: [ method (N) - proxy (NM) method (N) ] :: [ object (NI) - param (NM) vals (N) ] :: [ method (NM) proxy (NI) - proxy (NI) ] :: interceptable (NM) proxy (NI)  :: object (NI) 
SPECIAL:NAME:Inflater int getTotalIn(): get (V)  | total (N) in (NM) 	++ :: int (N)  :: inflater (N) 
CONSTRUCTOR:NAME:DocumentDataModel DocumentDataModel DocumentDataModel(DocumentDataSet ds):  | document (NM) data (NM) model (NI) 	++ :: [ document (NM) data (NM) set (N) - ds (N) ]
CONSTRUCTOR:NAME:OscarEffortsParametresContraintesTableCellRenderer OscarEffortsParametresContraintesTableCellRenderer OscarEffortsParametresContraintesTableCellRenderer():  | oscar (NM) efforts (NM) parametres (NM) contraintes (NM) table (NM) cell (NM) renderer (N) 	++
ENDS_WITH_ED:NAME:PublicarTranslation void mouseReleased(MouseEvent event): handle (V) | mouse (NM) released (N) 	++ :: [ mouse (NM) event (NI) - event (NI) ] :: publicar (NM) translation (N)  :: void (N) 
SPECIAL:NAME:WWEStyleSheet AttributeSet getViewAttributes(View v): get (V)  | view (NM) attributes (N) 	++ :: [ view (NI) - v (N) ] :: attribute (NM) set (N)  :: WWE (NM) style (NM) sheet (N) 
BASE_VERB:NAME:SWRLConverter static void hdrSWRL(PrintWriter out, String name, Main p): hdr (V)  | SWRL (N) 	++ :: [ print (NM) writer (N) - out (N) ] :: [ string (NI) - name (NI) ] :: [ main (N) - p (NI) ] :: SWRL (NM) converter (N) 
SPECIAL:NAME:NotificationsDisplay void initComponents(): init (V)  | components (N) 	++ :: notifications (NM) display (N) 
SPECIAL:NAME:DomElement String getTagName(): get (V)  | tag (NM) name (NI) 	++ :: string (NI)  :: dom (NM) element (NI) 
SPECIAL:NAME:X_AD_EntityType void setName(String Name): set (V)  | name (NI) 	++ :: [ string (NI) - name (NI) ] :: X (NM) AD (NM) entity (NM) type (N) 
SPECIAL:NAME:xlDatabaseMetaData String getDatabaseProductVersion(): get (V)  | database (NM) product (NM) version (N) 	++ :: string (NI)  :: xl (NM) database (NM) meta (NM) data (NI) 
NOUN_PHRASE:NAME:XQParser Expression syntaxError(String message): get (V) | syntax (NM) error (N) 	++ :: [ string (NI) - message (NI) ] :: XQ (NM) parser (N)  :: expression (N) 
SPECIAL:NAME:Acl Enumeration getPermissions(Principal user): get (V)  | permissions (N) 	++ :: [ principal (N) - user (N) ] :: enumeration (N)  :: acl (N) 
SPECIAL:NAME:MessageBody MessageBodyWebRequest getRequest(): get (V)  | request (N) 	++ :: message (NM) body (NM) web (NM) request (N)  :: message (NM) body (N) 
BASE_VERB:NAME:VActionListener void performAsyncAction(KopiAction action): perform (VI)  | EQUIV[async (NM) action (N) , [ kopi (NM) action (N) - action (N) ]]	++ :: V (NM) action (NM) listener (N) 
SPECIAL:NAME:BasicToolTipUI Dimension getPreferredSize(JComponent c): get (V)  | preferred (NM) size (N) 	++ :: [ J (NM) component (N) - c (N) ] :: dimension (N)  :: basic (NM) tool (NM) tip (NM) UI (N) 
SPECIAL:NAME:CollectionImpl int getResourceCount(): get (V)  | resource (NM) count (N) 	++ :: int (N)  :: collection (NM) impl (NI) 
BASE_VERB:NAME:NamedGraphSetImpl int countQuads(): count (V)  | quads (N) 	++ :: int (N)  :: named (NM) graph (NM) set (NM) impl (NI) 
SPECIAL:NAME:SimpleHtmlParseTest void testLineBreaks(): test (VI)  | line (NM) breaks (N) 	++ :: simple (NM) html (NM) parse (NM) test (N) 
V_3PS:FORM:DynamicDoubleArray void equals(double doubles): equals (V)  | [ double (N) - doubles (N) ]	++ :: dynamic (NM) double (NM) array (N) 
SPECIAL:NAME:_initCookie RegistrationContext getRegistrationContext(): get (V)  | registration (NM) context (N) 	++ :: registration (NM) context (N)  :: init (NM) cookie (N) 
SPECIAL:NAME:Element void appendOffset(Writer out, int depth): append (V)  | offset (N) 	++ :: [ writer (N) - out (N) ] :: [ int (N) - depth (N) ] :: element (NI) 
BASE_VERB:FORM:IOverlayManager void destroy(String name): destroy (V)  | [ string (NI) - name (NI) ]	++ :: I (NM) overlay (NM) manager (N) 
BASE_VERB:NAME:DTSPathEvalEngine boolean handleCommand(String input, String command): handle (VI)  | EQUIV[command (N) , [ string (NI) - command (N) ]]	++ :: [ string (NI) - input (NI) ] :: boolean (N)  :: DTS (NM) path (NM) eval (NM) engine (N) 
SPECIAL:NAME:AttrString Point getLocation(): get (V)  | location (NI) 	++ :: point (N)  :: attr (NM) string (NI) 
CONSTRUCTOR:NAME:XMLTriple XMLTriple XMLTriple(XMLTriple orig):  | XML (NM) triple (N) 	++ :: [ XML (NM) triple (N) - orig (N) ]
SPECIAL:NAME:CharacterReference String getDecimalCharacterReferenceString(): get (V)  | decimal (NM) character (NM) reference (NM) string (NI) 	++ :: string (NI)  :: character (NM) reference (NI) 
SPECIAL:NAME:FarragoJdbcEngineDatabaseMetaData String getCatalogTerm(): get (V)  | catalog (NM) term (N) 	++ :: string (NI)  :: farrago (NM) jdbc (NM) engine (NM) database (NM) meta (NM) data (NI) 
BASE_VERB:NAME:VertexPopupMenu YAWLPopupMenuItem buildManageResourcingItem(): build (V)  | manage (NM) resourcing (NM) item (NI) 	++ :: YAWL (NM) popup (NM) menu (NM) item (NI)  :: vertex (NM) popup (NM) menu (N) 
SPECIAL:NAME:CSVReaderTest void testParsedLineWithInternalQuota(): test (VI)  | parsed (NM) line (N) -- with (P) internal (NM) quota (N) 	++ :: CSV (NM) reader (NM) test (N) 
SPECIAL:NAME:AutoSqlType String getWrite(): get (V)  | write (N) 	++ :: string (NI)  :: auto (NM) sql (NM) type (N) 
CONSTRUCTOR:NAME:OperatorException OperatorException OperatorException(String message, Throwable t):  | operator (NM) exception (N) 	++ :: [ string (NI) - message (NI) ] :: [ throwable (N) - t (N) ]
V_3PS:NAME:jdbcDatabaseMetaData boolean supportsOrderByUnrelated(): supports (V)  | order (N) -- by (P) unrelated (N) 	++ :: boolean (N)  :: jdbc (NM) database (NM) meta (NM) data (NI) 
BASE_VERB:FORM:r99$$desc void update(CleanVM vm, Object data, int idx): update (V)  | [ clean (NM) VM (N) - vm (N) ]	++ :: [ object (NI) - data (NI) ] :: [ int (N) - idx (N) ] :: r (NM) 99 (NM) desc (NI) 
SPECIAL:NAME:InitialLdapContext Control getResponseControls(): get (V)  | response (NM) controls (N) 	++ :: control (N)  :: initial (NM) ldap (NM) context (N) 
SPECIAL:NAME:TableElement void setRules(String attribute): set (V)  | rules (N) 	++ :: [ string (NI) - attribute (N) ] :: table (NM) element (NI) 
SPECIAL:FORM:Jpeg static void main(String args): main (V)  | [ string (NI) - args (N) ]	++ :: jpeg (N) 
CONSTRUCTOR:NAME:ProtocolDecoderPHE ProtocolDecoderPHE ProtocolDecoderPHE(TransportHelper _transport, byte _shared_secrets, ByteBuffer _header, ByteBuffer _initial_data, ProtocolDecoderAdapter _adapter):  | protocol (NM) decoder (NM) PHE (N) 	++ :: [ transport (NM) helper (N) - transport (N) ] :: [ byte (N) - shared (NM) secrets (N) ] :: [ byte (NM) buffer (NI) - header (N) ] :: [ byte (NM) buffer (NI) - initial (NM) data (NI) ] :: [ protocol (NM) decoder (NM) adapter (NI) - adapter (NI) ]
SPECIAL:NAME:DM05M15mTest void testResult20(): test (VI)  | result (N) 20 (D) 	++ :: DM (NM) 05 (NM) M (NM) 15 (NM) m (NM) test (N) 
SPECIAL:NAME:Entry Object getKey(): get (V)  | key (NI) 	++ :: object (NI)  :: entry (NI) 
SPECIAL:NAME:TableReferenceInput Object getValue(): get (V)  | value (NI) 	++ :: object (NI)  :: table (NM) reference (NM) input (NI) 
SPECIAL:NAME:XImage void setData(byte data, int offset): set (V)  | data (NI) 	++ :: [ byte (N) - data (NI) ] :: [ int (N) - offset (N) ] :: X (NM) image (N) 
ENDS_WITH_ED:NAME:void actionPerformed(ActionEvent e): handle (V) | action (NM) performed (N) 	++ :: [ action (NM) event (NI) - e (N) ] :: ANONYMOUS (N)  :: void (N) 
CONSTRUCTOR:NAME:NonValidatingConfiguration NonValidatingConfiguration NonValidatingConfiguration(SymbolTable symbolTable, XMLGrammarPool grammarPool, XMLComponentManager parentSettings):  | non (NM) validating (NM) configuration (NI) 	++ :: [ symbol (NM) table (N) - symbol (NM) table (N) ] :: [ XML (NM) grammar (NM) pool (N) - grammar (NM) pool (N) ] :: [ XML (NM) component (NM) manager (N) - parent (NM) settings (N) ]
BASE_VERB:NAME:EscherGraphics void fillPolygon(int xPoints, int yPoints, int nPoints): fill (V)  | polygon (N) 	++ :: [ int (N) - x (NM) points (N) ] :: [ int (N) - y (NM) points (N) ] :: [ int (N) - n (NM) points (N) ] :: escher (NM) graphics (N) 
SPECIAL:NAME:JEditTextArea void setSelectionStart(int selectionStart): set (V)  | selection (NM) start (N) 	++ :: [ int (N) - selection (NM) start (N) ] :: J (NM) edit (NM) text (NM) area (N) 
SPECIAL:NAME:C3P0PooledDataSourceMBean void setDebugUnreturnedConnectionStackTraces(boolean debugUnreturnedConnectionStackTraces): set (V)  | debug (NM) unreturned (NM) connection (NM) stack (NM) traces (N) 	++ :: [ boolean (N) - debug (NM) unreturned (NM) connection (NM) stack (NM) traces (N) ] :: C (NM) 3 (NM) P (NM) 0 (NM) pooled (NM) data (NM) source (NM) M (NM) bean (NI) 
SPECIAL:NAME:FtpClientSession String getOsDetails(): get (V)  | os (NM) details (N) 	++ :: string (NI)  :: ftp (NM) client (NM) session (N) 
SPECIAL:NAME:XmlParser String readExternalIds(boolean inNotation): read (V)  | external (NM) ids (N) 	++ :: [ boolean (N) - in (NM) notation (N) ] :: [ boolean (N) - in (NM) notation (N) ] :: string (NI)  :: xml (NM) parser (N) 
SPECIAL:NAME:Tokenizer void loadWord(): load (V)  | word (N) 	++ :: tokenizer (N) 
BASE_VERB:NAME:BytecodeToQuad void visitLALOAD(): visit (V)  | LALOAD (N) 	++ :: bytecode (NM) to (NM) quad (N) 
CONSTRUCTOR:NAME:EnsChannelFactory EnsChannelFactory EnsChannelFactory():  | ens (NM) channel (NM) factory (N) 	++
SPECIAL:NAME:VirtuosoDatabaseMetaData ResultSet getTableTypes(): get (V)  | table (NM) types (N) 	++ :: result (NM) set (N)  :: virtuoso (NM) database (NM) meta (NM) data (NI) 
SPECIAL:NAME:AjaxToggleTag String getParameters(): get (V)  | parameters (N) 	++ :: string (NI)  :: ajax (NM) toggle (NM) tag (NI) 
SPECIAL:NAME:Customer void setId(int id): set (V)  | id (NI) 	++ :: [ int (N) - id (NI) ] :: customer (N) 
CONSTRUCTOR:NAME:CaptureEventQueue CaptureEventQueue CaptureEventQueue(ClassLoader classLoader):  | capture (NM) event (NM) queue (N) 	++ :: [ class (NM) loader (N) - class (NM) loader (N) ]
SPECIAL:NAME:TrdSesID void initValue(Object s): init (V)  | value (NI) 	++ :: [ object (NI) - s (N) ] :: trd (NM) ses (NM) ID (NI) 
SPECIAL:CLAS:Node void copyFromConnections(Node n): copy (V)  | node (NI) -- from (P) connections (N) 	++ :: [ node (NI) - n (N) ]
SPECIAL:NAME:JTimePanel void setCheckDates(Date dMinDate, Date dMaxDate): set (V)  | check (NM) dates (N) 	++ :: [ date (N) - d (NM) min (NM) date (N) ] :: [ date (N) - d (NM) max (NM) date (N) ] :: J (NM) time (NM) panel (N) 
V_3P_IRR:NAME:PathElt boolean isSetGradientshapeok(): is (V)  | set (NM) gradientshapeok (N) 	++ :: boolean (N)  :: path (NM) elt (NI) 
BASE_VERB:NAME:AbstractMyServiceDMEnPckDaoDisSrv void saveMyEntityForSrvDMPckEnNoConfMyEntityForSrvDMPckEnNoConf(MyEntityForSrvDMPckEnNoConf myEntityForSrvDMPckEnNoConf): save (V)  | my (PR) entity (N) -- for (P) EQUIV[srv (NM) DM (NM) pck (NM) en (NM) no (DT) conf (NM) my (PR) entity (NM) for (NM) srv (NM) DM (NM) pck (NM) en (NM) no (DT) conf (N) , [ my (PR) entity (NM) for (NM) srv (NM) DM (NM) pck (NM) en (NM) no (DT) conf (N) - my (PR) entity (NM) for (NM) srv (NM) DM (NM) pck (NM) en (NM) no (DT) conf (N) ]]	++ :: abstract (NM) my (PR) service (NM) DM (NM) en (NM) pck (NM) dao (NM) dis (NM) srv (N) 
CONSTRUCTOR:NAME:XCMisc XCMisc XCMisc(Display display):  | XC (NM) misc (N) 	++ :: [ display (N) - display (N) ]
SPECIAL:NAME:DrawApplication void removeViewChangeListener(ViewChangeListener vsl): remove (V)  | EQUIV[view (NM) change (NM) listener (N) , [ view (NM) change (NM) listener (N) - vsl (N) ]]	++ :: draw (NM) application (N) 
CONSTRUCTOR:NAME:DrawFeature DrawFeature DrawFeature(JSObject element):  | draw (NM) feature (N) 	++ :: [ JS (NM) object (NI) - element (NI) ]
SPECIAL:NAME:ITimeRangeValue BigDecimal getValue(): get (V)  | value (NI) 	++ :: big (NM) decimal (N)  :: I (NM) time (NM) range (NM) value (NI) 
ENDS_WITH_ING:NAME:SimpleTreeCellEditor void cancelCellEditing(): handle (V) | cancel (NM) cell (NM) editing (N) 	++ :: simple (NM) tree (NM) cell (NM) editor (N)  :: void (N) 
PREP:NAME:LogEventPK String toString(): convert (V) | to (P) string (NI) 	++ :: log (NM) event (NM) PK (NI)  :: string (NI) 
BASE_VERB:NAME:WinJNI static long SWIGFindReplaceDialogUpcast(long jarg1): SWIG (V)  | find (NM) replace (NM) dialog (NM) upcast (N) 	++ :: [ long (N) - jarg (NM) 1 (N) ] :: long (N)  :: win (NM) JNI (N) 
SPECIAL:NAME:AnnotationImpl Region getRegion(): get (V)  | region (N) 	++ :: region (N)  :: annotation (NM) impl (NI) 
SPECIAL:NAME:ConnectionInPool Savepoint setSavepoint(String arg0): set (V)  | savepoint (N) 	++ :: [ string (NI) - arg (NM) 0 (N) ] :: savepoint (N)  :: connection (NM) in (NM) pool (N) 
SPECIAL:NAME:Info String get_class(): get (V)  | class (NI) 	++ :: string (NI)  :: info (NI) 
V_3P_IRR:NAME:ResultSetMetaData boolean isCaseSensitive(int column): is (V)  | case (NM) sensitive (N) 	++ :: [ int (N) - column (N) ] :: boolean (N)  :: result (NM) set (NM) meta (NM) data (NI) 
SPECIAL:NAME:Screen int getMonitorAtWindow(Window win): get (V)  | monitor (N) -- at (P) EQUIV[window (N) , [ window (N) - win (N) ]]	++ :: int (N)  :: screen (N) 
SPECIAL:NAME:SettInstCode String getTagValue(): get (V)  | tag (NM) value (NI) 	++ :: string (NI)  :: sett (NM) inst (NM) code (NI) 
SPECIAL:NAME:LARSPLOut boolean getPa3(): get (V)  | pa (N) 3 (D) 	++ :: boolean (N)  :: LARSPL (NM) out (N) 
BASE_VERB:NAME:FSCategoryCondition String changeSeparator(String path): change (V)  | separator (N) 	++ :: [ string (NI) - path (NI) ] :: string (NI)  :: FS (NM) category (NM) condition (N) 
SPECIAL:CLAS:AbstractColorManager Object clone(): clone (V)  | abstract (NM) color (NM) manager (N) 	++ :: object (NI) 
BASE_VERB:NAME:MapParser static MetaData parseMap(Reader xmlStreamReader, Parser pzparser): parse (V)  | map (N) 	++ :: [ reader (N) - xml (NM) stream (NM) reader (N) ] :: [ parser (N) - pzparser (N) ] :: meta (NM) data (NI)  :: map (NM) parser (N) 
SPECIAL:NAME:JMethodInvocationExpr String getExpressionCode(): get (V)  | expression (NM) code (NI) 	++ :: string (NI)  :: J (NM) method (NM) invocation (NM) expr (NI) 
BASE_VERB:NAME:NormalizedString void xsetHref(XmlAnyURI href): xset (V)  | EQUIV[href (N) , [ xml (NM) any (DT) URI (NI) - href (N) ]]	++ :: normalized (NM) string (NI) 
NOUN_PHRASE:NAME:SegmentIterator Object next(): get (V) | next (DT) 	++ :: segment (NM) iterator (N)  :: object (NI) 
V_3P_IRR:NAME:Area boolean isRectangular(): is (V)  | rectangular (N) 	++ :: boolean (N)  :: area (N) 
SPECIAL:NAME:MimeBodyPart int getFileSize(): get (V)  | file (NM) size (N) 	++ :: int (N)  :: mime (NM) body (NM) part (N) 
SPECIAL:NAME:void processComponent(Component c, boolean enabled): process (VI)  | EQUIV[component (N) , [ component (N) - c (N) ]]	++ :: [ boolean (N) - enabled (N) ] :: ANONYMOUS (N) 
BASE_VERB:FORM:ServiceController void restart(ObjectName serviceName): restart (V)  | [ object (NM) name (NI) - service (NM) name (NI) ]	++ :: service (NM) controller (N) 
SPECIAL:NAME:ValueRecord String getValueId(): get (V)  | value (NM) id (NI) 	++ :: string (NI)  :: value (NM) record (N) 
BASE_VERB:NAME:UIThreadUtils static void storeException(Throwable exception): store (V)  | EQUIV[exception (N) , [ throwable (N) - exception (N) ]]	++ :: UI (NM) thread (NM) utils (N) 
V_3PS:NAME:EmptyMap boolean containsValue(Object givenValue): contains (V)  | EQUIV[value (NI) , [ object (NI) - given (NM) value (NI) ]]	++ :: boolean (N)  :: empty (NM) map (N) 
CONSTRUCTOR:NAME:BodyContentImpl BodyContentImpl BodyContentImpl(JspWriter writer):  | body (NM) content (NM) impl (NI) 	++ :: [ jsp (NM) writer (N) - writer (N) ]
SPECIAL:NAME:MethodImpl Type returnType(): return (V)  | type (N) 	++ :: type (N)  :: method (NM) impl (NI) 
SPECIAL:NAME:NodeDalImpl NodeData addStatistics(NodeData node, NodeStatisticsData data): add (V)  | EQUIV[statistics (N) , [ node (NM) statistics (NM) data (NI) - data (NI) ]]	++ :: [ node (NM) data (NI) - node (NI) ] :: node (NM) data (NI)  :: node (NM) dal (NM) impl (NI) 
V_3P_IRR:NAME:TipoToken boolean isCursiva(): is (V)  | cursiva (N) 	++ :: boolean (N)  :: tipo (NM) token (N) 
SPECIAL:NAME:AbstractMessageLoadHandler void processElement(String namespaceUri, String localName, String qualifiedName, Attributes attributes, boolean isStart): process (VI)  | element (NI) 	++ :: [ string (NI) - namespace (NM) uri (NI) ] :: [ string (NI) - local (NM) name (NI) ] :: [ string (NI) - qualified (NM) name (NI) ] :: [ attributes (N) - attributes (N) ] :: [ boolean (N) - is (NM) start (N) ] :: abstract (NM) message (NM) load (NM) handler (N) 
SPECIAL:NAME:NetworkInteractor boolean executeAction(double x, double y): execute (VI)  | action (N) 	++ :: [ double (N) - x (N) ] :: [ double (N) - y (N) ] :: boolean (N)  :: network (NM) interactor (N) 
SPECIAL:FORM:Framework static void main(String args): main (V)  | [ string (NI) - args (N) ]	++ :: framework (N) 
SPECIAL:NAME:TestCrossSiteScript String getDescription(): get (V)  | description (NI) 	++ :: string (NI)  :: test (NM) cross (NM) site (NM) script (N) 
V_3PS:NAME:XMLArchiver static boolean containsGUI(Document archive): contains (V)  | GUI (N) 	++ :: [ document (NI) - archive (N) ] :: boolean (N)  :: XML (NM) archiver (N) 
EVENT_PARAM:NAME:PortTask void handleRun(RunEvent runEvent): handle (V) | handle (NM) run (N) 	++ :: [ run (NM) event (NI) - run (NM) event (NI) ] :: port (NM) task (N)  :: void (N) 
BASE_VERB:NAME:kXMLElement int scanOneAttribute(char input, int offset, int end, int lineNr): scan (V)  | one (NM) attribute (N) 	++ :: [ char (N) - input (NI) ] :: [ int (N) - offset (N) ] :: [ int (N) - end (N) ] :: [ int (N) - line (NM) nr (N) ] :: int (N)  :: k (NM) XML (NM) element (NI) 
BASE_VERB:NAME:LcsIndexSearchRel RelOptCost computeSelfCost(RelOptPlanner planner): compute (V)  | self (NM) cost (N) 	++ :: [ rel (NM) opt (NM) planner (N) - planner (N) ] :: rel (NM) opt (NM) cost (N)  :: lcs (NM) index (NM) search (NM) rel (N) 
VOID_NP:NAME:LineDistanceAttributeImpl void unsetLineDistance(): handle (V) | unset (NM) line (NM) distance (N) 	++ :: line (NM) distance (NM) attribute (NM) impl (NI)  :: void (N) 
NOUN_PHRASE:NAME:InlineContainerArea int traitPaddingEnd(): get (V) | trait (NM) padding (NM) end (N) 	++ :: inline (NM) container (NM) area (N)  :: int (N) 
BASE_VERB:CLAS:TestUserData void tearDown(): tear (V) down (VP)  | test (NM) user (NM) data (NI) 	++
SPECIAL:NAME:MoleculeBuilder void setNewAtomSymbol(String atomSymbol): set (V)  | new (NM) atom (NM) symbol (N) 	++ :: [ string (NI) - atom (NM) symbol (N) ] :: molecule (NM) builder (N) 
SPECIAL:NAME:CredsCRL rawDef getClientsList(): get (V)  | clients (NM) list (N) 	++ :: raw (NM) def (NI)  :: creds (NM) CRL (N) 
NOUN_PHRASE:NAME:Factory static XMLInputStream newValidatingXMLInputStream(XMLInputStream xis, XmlOptions options): get (V) | new (NM) validating (NM) XML (NM) input (NM) stream (NI) 	++ :: [ XML (NM) input (NM) stream (NI) - xis (N) ] :: [ xml (NM) options (N) - options (N) ] :: factory (N)  :: XML (NM) input (NM) stream (NI) 
CONSTRUCTOR:NAME:DefaultStandardEmailFactory DefaultStandardEmailFactory DefaultStandardEmailFactory():  | default (NM) standard (NM) email (NM) factory (N) 	++
BASE_VERB:NAME:CompilerBase Expression compileMethodInvocation(Type type, ExpressionFactory expr, String name, ArgumentTransformations implicit, Expression args, int flags, Scope scope, AST pos): compile (V)  | method (NM) invocation (N) 	++ :: [ type (N) - type (N) ] :: [ expression (NM) factory (N) - expr (NI) ] :: [ string (NI) - name (NI) ] :: [ argument (NM) transformations (N) - implicit (N) ] :: [ expression (N) - args (N) ] :: [ int (N) - flags (N) ] :: [ scope (N) - scope (N) ] :: [ AST (N) - pos (N) ] :: expression (N)  :: compiler (NM) base (N) 
SPECIAL:NAME:ViewTransformer NodeSorter getUserSorter(): get (V)  | user (NM) sorter (N) 	++ :: node (NM) sorter (N)  :: view (NM) transformer (N) 
SPECIAL:NAME:RechercherActesForm String getRechercher(): get (V)  | rechercher (N) 	++ :: string (NI)  :: rechercher (NM) actes (NM) form (N) 
EMPTY:NONE:ManyMembers2 void d1091():  | d (PRE) 1091 (D) 
BASE_VERB:NAME:TestJMLObjectToObjectRelation$1 String failMessage(JMLAssertionError e$): fail (V)  | message (NI) 	++ :: [ JML (NM) assertion (NM) error (N) - e (N) ] :: string (NI)  :: test (NM) JML (NM) object (NM) to (NM) object (NM) relation (NM) 1 (N) 
V_MODAL:NAME:Entry String shallIndexCacheForCrawler(): shall (VI) index (V)  | cache (N) -- for (P) crawler (N) 	++ :: string (NI)  :: entry (NI) 
BASE_VERB:FORM:exposed___getattribute__ PyBuiltinFunction bind(PyObject self): bind (V)  | [ py (NM) object (NI) - self (N) ]	++ :: exposed (NM) getattribute (N)  :: py (NM) builtin (NM) function (N) 
SPECIAL:NAME:SplitCooperativeAlgorithm ContributionUpdateStrategy getContributionUpdateStrategy(): get (V)  | contribution (NM) update (NM) strategy (N) 	++ :: contribution (NM) update (NM) strategy (N)  :: split (NM) cooperative (NM) algorithm (N) 
BASE_VERB:NAME:InvokeInterfaceMethodOp StackState initialStack(): initial (V)  | stack (N) 	++ :: stack (NM) state (N)  :: invoke (NM) interface (NM) method (NM) op (N) 
VOID_NP:NAME:QosContractRepositoryServer static void version(): handle (V) | version (N) 	++ :: qos (NM) contract (NM) repository (NM) server (N)  :: void (N) 
BASE_VERB:NAME:RelMdUtil static double guessSelectivity(RexNode predicate): guess (V)  | selectivity (N) 	++ :: [ rex (NM) node (NI) - predicate (N) ] :: double (N)  :: rel (NM) md (NM) util (N) 
SPECIAL:NAME:ServiceOneLocal void setAttribute(int attribute): set (V)  | attribute (N) 	++ :: [ int (N) - attribute (N) ] :: service (NM) one (NM) local (N) 
SPECIAL:NAME:Bandwith String getModifier(): get (V)  | modifier (N) 	++ :: string (NI)  :: bandwith (N) 
SPECIAL:NAME:GlyphVector Rectangle getPixelBounds(FontRenderContext renderFRC, float x, float y): get (V)  | pixel (NM) bounds (N) 	++ :: [ font (NM) render (NM) context (N) - render (NM) FRC (N) ] :: [ float (N) - x (N) ] :: [ float (N) - y (N) ] :: rectangle (N)  :: glyph (NM) vector (N) 
BASE_VERB:NAME:ServiceException static ServiceException WRONG_HOST(String target, Throwable cause): WRONG (V)  | HOST (N) 	++ :: [ string (NI) - target (N) ] :: [ throwable (N) - cause (N) ] :: service (NM) exception (N)  :: service (NM) exception (N) 
SPECIAL:NAME:XYLineAndShapeRenderer void setDrawOutlines(boolean flag): set (V)  | draw (NM) outlines (N) 	++ :: [ boolean (N) - flag (N) ] :: XY (NM) line (NM) and (NM) shape (NM) renderer (N) 
BASE_VERB:CLAS:Noeud void s(): s (V)  | noeud (N) 	++
SPECIAL:NAME:PersonName void setFamilyName(Name familyName): set (V)  | family (NM) name (NI) 	++ :: [ name (NI) - family (NM) name (NI) ] :: person (NM) name (NI) 
SPECIAL:NAME:PdfTransparencyGroup void setIsolated(boolean isolated): set (V)  | isolated (N) 	++ :: [ boolean (N) - isolated (N) ] :: pdf (NM) transparency (NM) group (N) 
SPECIAL:FORM:PsmMethodAction PsmEvent run(PsmEvent event, PsmInterp interp): run (VI)  | [ psm (NM) event (NI) - event (NI) ]	++ :: [ psm (NM) interp (N) - interp (N) ] :: psm (NM) method (NM) action (N)  :: psm (NM) event (NI) 
BASE_VERB:CLAS:FJTaskRunner FJTask take(): take (V)  | FJ (NM) task (NM) runner (N) 	++ :: FJ (NM) task (N) 
SPECIAL:NAME:GdkTextLayout float getBaselineOffsets(): get (V)  | baseline (NM) offsets (N) 	++ :: float (N)  :: gdk (NM) text (NM) layout (N) 
SPECIAL:CLAS:INRCurrency void delete(): delete (V)  | INR (NM) currency (N) 	++
SPECIAL:NAME:Delegate String getIds(String prefix, String suffix, boolean full): get (V)  | ids (N) 	++ :: [ string (NI) - prefix (N) ] :: [ string (NI) - suffix (N) ] :: [ boolean (N) - full (N) ] :: string (NI)  :: delegate (N) 
BASE_VERB:NAME:ProcessException static ProcessException CODE_system(String pContext): CODE (V)  | system (N) 	++ :: [ string (NI) - p (NM) context (N) ] :: process (NM) exception (N)  :: process (NM) exception (N) 
SPECIAL:NAME:RegexpCheckTest void testIgnoreCommentsCStyle(): test (VI)  | ignore (NM) comments (NM) C (NM) style (N) 	++ :: regexp (NM) check (NM) test (N) 
SPECIAL:NAME:TestBase_MethodCallUnmarshaller void testPrimitiveBooleanArrayField(): test (VI)  | primitive (NM) boolean (NM) array (NM) field (N) 	++ :: test (NM) base (NM) method (NM) call (NM) unmarshaller (N) 
CONSTRUCTOR:NAME:ClassHandle ClassHandle ClassHandle(Class rawClass, Class arrayClass):  | class (NM) handle (NI) 	++ :: [ class (NI) - raw (NM) class (NI) ] :: [ class (NI) - array (NM) class (NI) ]
CONSTRUCTOR:NAME:BadDirectManipulationException BadDirectManipulationException BadDirectManipulationException(String s):  | bad (NM) direct (NM) manipulation (NM) exception (N) 	++ :: [ string (NI) - s (N) ]
BASE_VERB:NAME:DefaultIteratorVisitor Instruction visitColon2Node(Colon2Node iVisited): visit (V)  | EQUIV[colon (NM) 2 (D) node (NI) , [ colon (NM) 2 (NM) node (NI) - i (NM) visited (N) ]]	++ :: instruction (N)  :: default (NM) iterator (NM) visitor (N) 
SPECIAL:NAME:RDFAdapter String getType(): get (V)  | type (N) 	++ :: string (NI)  :: RDF (NM) adapter (NI) 
SPECIAL:FORM:IntegerTransform Integer read(String value): read (V)  | [ string (NI) - value (NI) ]	++ :: integer (NM) transform (N)  :: integer (N) 
SPECIAL:NAME:MultiplePiePlot LegendItemCollection getLegendItems(): get (V)  | legend (NM) items (N) 	++ :: legend (NM) item (NM) collection (N)  :: multiple (NM) pie (NM) plot (N) 
SPECIAL:NAME:SessionFactoryImpl Type getReturnTypes(String queryString): get (V)  | return (NM) types (N) 	++ :: [ string (NI) - query (NM) string (NI) ] :: type (N)  :: session (NM) factory (NM) impl (NI) 
SPECIAL:CLAS:AbstractMatrixCEDigraph Set getFromNodes(Object node): get (V)  | abstract (NM) matrix (NM) CE (NM) digraph (N) -- from (P) nodes (N) 	++ :: [ object (NI) - node (NI) ] :: set (N) 
CONSTRUCTOR:NAME:HtmlTemplateDecorator HtmlTemplateDecorator HtmlTemplateDecorator(ModelScreen modelScreen, Element htmlTemplateDecoratorElement):  | html (NM) template (NM) decorator (N) 	++ :: [ model (NM) screen (N) - model (NM) screen (N) ] :: [ element (NI) - html (NM) template (NM) decorator (NM) element (NI) ]
CONSTRUCTOR:NAME:InvalidParameterSpecException InvalidParameterSpecException InvalidParameterSpecException(String msg):  | invalid (NM) parameter (NM) spec (NM) exception (N) 	++ :: [ string (NI) - msg (NI) ]
VOID_NP:NAME:SLLLexer void mDOLLAR(boolean _createToken): handle (V) | m (PRE) DOLLAR (N) 	++ :: [ boolean (N) - create (NM) token (N) ] :: SLL (NM) lexer (N)  :: void (N) 
V_3P_IRR:CLAS:Branch boolean isOnFire(): is (V)  | branch (N) -- on (P) fire (N) 	++ :: boolean (N) 
SPECIAL:CLAS:PrologNativePredicateTest void testAppend(): test (VI) append (V)  | prolog (NM) native (NM) predicate (NM) test (N) 	++
SPECIAL:NAME:TierProperty void addAnalysisType(FeatureProperty fp, String analysis): add (V)  | analysis (NM) type (N) 	++ :: [ feature (NM) property (N) - fp (N) ] :: [ string (NI) - analysis (N) ] :: tier (NM) property (N) 
BASE_VERB:NAME:AbstractMasterJVM void quitSlave(): quit (V)  | slave (N) 	++ :: abstract (NM) master (NM) JVM (N) 
SPECIAL:NAME:DataSet String getStringField(String fld): get (V)  | string (NM) field (N) 	++ :: [ string (NI) - fld (N) ] :: string (NI)  :: data (NM) set (N) 
V_3P_IRR:NAME:DefaultPersistenceContext boolean isInitialzedCollection(Object entityInstance, String fieldName): is (V)  | initialzed (NM) collection (N) 	++ :: [ object (NI) - entity (NM) instance (NI) ] :: [ string (NI) - field (NM) name (NI) ] :: boolean (N)  :: default (NM) persistence (NM) context (N) 
SPECIAL:NAME:ArticleBO void setLogo(String logo): set (V)  | logo (N) 	++ :: [ string (NI) - logo (N) ] :: article (NM) BO (N) 
SPECIAL:NAME:Listheader void setSortDirection(String sortDir): set (V)  | sort (NM) direction (N) 	++ :: [ string (NI) - sort (NM) dir (NI) ] :: listheader (N) 
BASE_VERB:NAME:BatchBuildGUI void specsAction(): specs (V)  | action (N) 	++ :: batch (NM) build (NM) GUI (N) 
SPECIAL:NAME:VLEContext double getLiquidMoleFractions(): get (V)  | liquid (NM) mole (NM) fractions (N) 	++ :: double (N)  :: VLE (NM) context (N) 
SPECIAL:NAME:Function int getArgCount(): get (V)  | arg (NM) count (N) 	++ :: int (N)  :: function (N) 
SPECIAL:NAME:Raster Raster createTranslatedChild(int childMinX, int childMinY): create (V)  | translated (NM) child (N) 	++ :: [ int (N) - child (NM) min (NM) X (N) ] :: [ int (N) - child (NM) min (NM) Y (N) ] :: raster (N)  :: raster (N) 
SPECIAL:NAME:CaPolicyUrl void setUrl(String url): set (V)  | url (NI) 	++ :: [ string (NI) - url (NI) ] :: ca (NM) policy (NM) url (NI) 
BASE_VERB:NAME:JXXMonthView void paintMonthStringBackground(Graphics g, int x, int y, int width, int height): paint (V)  | month (NM) string (NM) background (N) 	++ :: [ graphics (N) - g (N) ] :: [ int (N) - x (N) ] :: [ int (N) - y (N) ] :: [ int (N) - width (N) ] :: [ int (N) - height (N) ] :: JXX (NM) month (NM) view (NI) 
V_3P_IRR:NAME:IteratorImpl boolean hasNext(): has (V)  | next (DT) 	++ :: boolean (N)  :: iterator (NM) impl (NI) 
NOUN_PHRASE:NAME:EchoStream LispObject freshLine(): get (V) | fresh (NM) line (N) 	++ :: echo (NM) stream (NI)  :: lisp (NM) object (NI) 
BASE_VERB:NAME:StrutsUtil static boolean validateRequiredFormEnteredParam(String propertyKey, String value, ActionErrors errors): validate (VI)  | required (NM) form (NM) entered (NM) param (N) 	++ :: [ string (NI) - property (NM) key (NI) ] :: [ string (NI) - value (NI) ] :: [ action (NM) errors (N) - errors (N) ] :: boolean (N)  :: struts (NM) util (N) 
CONSTRUCTOR:NAME:JsonGroovyBuilder JsonGroovyBuilder JsonGroovyBuilder():  | json (NM) groovy (NM) builder (N) 	++
SPECIAL:CLAS:ChoiceItem int compareTo(Object other): compare (V)  | choice (NM) item (NI) -- to (P) [ object (NI) - other (DT) ]	++ :: [ object (NI) - other (DT) ] :: int (N) 
SPECIAL:NAME:ClasspathTextLayoutPeer TextHitInfo getNextRightHit(int offset, CaretPolicy policy): get (V)  | next (DT) right (NM) hit (N) 	++ :: [ int (N) - offset (N) ] :: [ caret (NM) policy (N) - policy (N) ] :: text (NM) hit (NM) info (NI)  :: classpath (NM) text (NM) layout (NM) peer (N) 
CONSTRUCTOR:NAME:PlaylistBranch PlaylistBranch PlaylistBranch(int _pos):  | playlist (NM) branch (N) 	++ :: [ int (N) - pos (N) ]
SPECIAL:NAME:FormEditor void setFields(String aForm): set (V)  | fields (N) 	++ :: [ string (NI) - a (NM) form (N) ] :: form (NM) editor (N) 
CONSTRUCTOR:NAME:AgletEventListener AgletEventListener AgletEventListener(MobilityListener l1, MobilityListener l2):  | aglet (NM) event (NM) listener (N) 	++ :: [ mobility (NM) listener (N) - l (NM) 1 (N) ] :: [ mobility (NM) listener (N) - l (NM) 2 (N) ]
SPECIAL:CLAS:ModelTestCase void doReset(boolean testing): do (VI) reset (V)  | model (NM) test (NM) case (N) 	++ :: [ boolean (N) - testing (N) ]
BASE_VERB:NAME:BaseDBSpectrumHyperlinkPeer static Criteria buildCriteria(ObjectKey pk): build (V)  | criteria (N) 	++ :: [ object (NM) key (NI) - pk (NI) ] :: criteria (N)  :: base (NM) DB (NM) spectrum (NM) hyperlink (NM) peer (N) 
VOID_NP:NAME:Hypothesis void nextGeneration(): handle (V) | next (DT) generation (N) 	++ :: hypothesis (N)  :: void (N) 
NOUN_PHRASE:NAME:PriorityQueue int size(): get (V) | size (N) 	++ :: priority (NM) queue (N)  :: int (N) 
CONSTRUCTOR:NAME:IntMatchFilter IntMatchFilter IntMatchFilter(int aMatchValue):  | int (NM) match (NM) filter (N) 	++ :: [ int (N) - a (NM) match (NM) value (NI) ]
BASE_VERB:CLAS:SwingWorker void interrupt(): interrupt (VI)  | swing (NM) worker (N) 	++
SPECIAL:NAME:ComboWrapper Component getComponent(): get (V)  | component (N) 	++ :: component (N)  :: combo (NM) wrapper (NI) 
V_3P_IRR:NAME:AbstractNode boolean isSentMessagesFolder(): is (V)  | sent (NM) messages (NM) folder (N) 	++ :: boolean (N)  :: abstract (NM) node (NI) 
SPECIAL:NAME:RangeValueType static Serializer getSerializer(String mechType, Class _javaType, QName _xmlType): get (V)  | serializer (N) 	++ :: [ string (NI) - mech (NM) type (N) ] :: [ class (NI) - java (NM) type (N) ] :: [ Q (NM) name (NI) - xml (NM) type (N) ] :: serializer (N)  :: range (NM) value (NM) type (N) 
SPECIAL:NAME:TestableOrderControllerEJB Handle getHandle(): get (V)  | handle (NI) 	++ :: handle (NI)  :: testable (NM) order (NM) controller (NM) EJB (N) 
CONSTRUCTOR:NAME:AddNoteCommand AddNoteCommand AddNoteCommand(Long requestingUserID, Long roomID, Long pageID, Map<String,Parameter> parameters):  | add (NM) note (NM) command (N) 	++ :: [ long (N) - requesting (NM) user (NM) ID (NI) ] :: [ long (N) - room (NM) ID (NI) ] :: [ long (N) - page (NM) ID (NI) ] :: [ parameter (N) - parameters (N) ]
SPECIAL:NAME:BPlusTree int getEntryIndex(Node<T> leaf, T entry): get (V)  | entry (NM) index (NI) 	++ :: [ node (NM) T (N) - leaf (N) ] :: [ T (N) - entry (NI) ] :: int (N)  :: B (NM) plus (NM) tree (NI) 
SPECIAL:NAME:OutputMappingFixReferenceRow String getId(): get (V)  | id (NI) 	++ :: string (NI)  :: output (NM) mapping (NM) fix (NM) reference (NM) row (N) 
BASE_VERB:CLAS:PythonGrammar24 void expr(): expr (V)  | python (NM) grammar (NM) 24 (N) 	++
BASE_VERB:CLAS:ExprModule OPort term(boolean get): term (V)  | expr (NM) module (N) 	++ :: [ boolean (N) - get (N) ] :: O (NM) port (N) 
SPECIAL:NAME:MapLink Hex getOtherHex(Hex loc): get (V)  | EQUIV[other (DT) hex (N) , [ hex (N) - loc (N) ]]	++ :: hex (N)  :: map (NM) link (N) 
BASE_VERB:CLAS:Nurse void collideWith(KObject obj): collide (V)  | nurse (N) -- with (P) [ K (NM) object (NI) - obj (NI) ]	++ :: [ K (NM) object (NI) - obj (NI) ]
SPECIAL:NAME:SimpleCharStream int getTabSize(int i): get (V)  | tab (NM) size (N) 	++ :: [ int (N) - i (N) ] :: int (N)  :: simple (NM) char (NM) stream (NI) 
SPECIAL:NAME:TextStreamGenerator Stream getStream(URL url): get (V)  | stream (NI) 	++ :: [ URL (NI) - url (NI) ] :: stream (NI)  :: text (NM) stream (NM) generator (N) 
CONSTRUCTOR:NAME:TextCalculator TextCalculator TextCalculator(int width, String aText, Font aFont, boolean antialiased, int tabSize):  | text (NM) calculator (N) 	++ :: [ int (N) - width (N) ] :: [ string (NI) - a (NM) text (NI) ] :: [ font (N) - a (NM) font (N) ] :: [ boolean (N) - antialiased (N) ] :: [ int (N) - tab (NM) size (N) ]
BASE_VERB:NAME:IntegerVarArray void storeIntegerVar(int index, int value): store (V)  | integer (NM) var (N) 	++ :: [ int (N) - index (NI) ] :: [ int (N) - value (NI) ] :: integer (NM) var (NM) array (N) 
SPECIAL:NAME:ViewAction String getSrc(RenderRequest req, RenderResponse res): get (V)  | src (N) 	++ :: [ render (NM) request (N) - req (N) ] :: [ render (NM) response (N) - res (N) ] :: string (NI)  :: view (NM) action (N) 
SPECIAL:NAME:CustomerPO void setNullUrl(): set (V)  | null (NM) url (NI) 	++ :: customer (NM) PO (N) 
SPECIAL:NAME:ParseException String add_escapes(String str): add (V)  | escapes (N) 	++ :: [ string (NI) - str (NI) ] :: string (NI)  :: parse (NM) exception (N) 
CONSTRUCTOR:NAME:DecodingException DecodingException DecodingException(Throwable cause):  | decoding (NM) exception (N) 	++ :: [ throwable (N) - cause (N) ]
BASE_VERB:NAME:LongKeyFloatChainedHashMap void ensureCapacity(int elements): ensure (VI)  | capacity (N) 	++ :: [ int (N) - elements (N) ] :: long (NM) key (NM) float (NM) chained (NM) hash (NM) map (N) 
BASE_VERB:NAME:Signature String shoreObjectType(): shore (V)  | object (NM) type (N) 	++ :: string (NI)  :: signature (N) 
PREP:NAME:SubsystemChannel void onChannelEOF(): handle (V) | on (NM) channel (NM) EOF (N) 	++ :: subsystem (NM) channel (N)  :: void (N) 
SPECIAL:NAME:Bass int getBassAlter(): get (V)  | bass (NM) alter (N) 	++ :: int (N)  :: bass (N) 
SPECIAL:NAME:Test_Volume void testGetVolumeOfFile(): test (VI) get (V)  | volume (N) -- of (P) file (NI) 	++ :: test (NM) volume (N) 
SPECIAL:FORM:void render(Map points): render (V)  | [ map (N) - points (N) ]	++ :: ANONYMOUS (N) 
SPECIAL:NAME:TemplateException String getPackage(): get (V)  | package (N) 	++ :: string (NI)  :: template (NM) exception (N) 
ENDS_WITH_ING:NAME:TimeSpan void stopTiming(): handle (V) | stop (NM) timing (N) 	++ :: time (NM) span (N)  :: void (N) 
BASE_VERB:NAME:ObjectMap boolean _empty_const(long _pointer_): empty (V)  | const (N) 	++ :: [ long (N) - pointer (N) ] :: boolean (N)  :: object (NM) map (N) 
SPECIAL:FORM:RPClib static void start(int code): start (V)  | [ int (N) - code (NI) ]	++ :: RP (NM) clib (N) 
BASE_VERB:NAME:MovieSynchronizer boolean onlineUpdate(DcObject dco, DcServer server, DcRegion region): online (V)  | update (N) 	++ :: [ dc (NM) object (NI) - dco (N) ] :: [ dc (NM) server (N) - server (N) ] :: [ dc (NM) region (N) - region (N) ] :: boolean (N)  :: movie (NM) synchronizer (N) 
SPECIAL:CLAS:XSLTProcess void execute(): execute (VI)  | XSLT (NM) process (N) 	++
SPECIAL:NAME:CliOption String getArgDescription(): get (V)  | arg (NM) description (NI) 	++ :: string (NI)  :: cli (NM) option (N) 
BASE_VERB:NAME:XmlParser void parseCDSect(): parse (V)  | CD (NM) sect (N) 	++ :: xml (NM) parser (N) 
SPECIAL:NAME:BaseDBAuthor String getSurname(): get (V)  | surname (N) 	++ :: string (NI)  :: base (NM) DB (NM) author (N) 
BASE_VERB:NAME:MakeGrammar void beginExceptionSpec(Token label): begin (V)  | exception (NM) spec (NI) 	++ :: [ token (N) - label (NI) ] :: make (NM) grammar (N) 
SPECIAL:CLAS:SchemeClass Object clone(): clone (V)  | scheme (NM) class (NI) 	++ :: object (NI) 
ENDS_WITH_ED:NAME:void gvtRenderingCompleted(GVTTreeRendererEvent e): handle (V) | gvt (NM) rendering (NM) completed (N) 	++ :: [ GVT (NM) tree (NM) renderer (NM) event (NI) - e (N) ] :: ANONYMOUS (N)  :: void (N) 
BASE_VERB:NAME:NodeVisitorAdapter Object arriveLikeNode(LikeNode node, Object msg): arrive (V)  | EQUIV[like (NM) node (NI) , [ like (NM) node (NI) - node (NI) ]]	++ :: [ object (NI) - msg (NI) ] :: object (NI)  :: node (NM) visitor (NM) adapter (NI) 
SPECIAL:NAME:ConfigurationManager String getValue(NamedNodeMap map, String attr): get (V)  | value (NI) 	++ :: [ named (NM) node (NM) map (N) - map (N) ] :: [ string (NI) - attr (N) ] :: string (NI)  :: configuration (NM) manager (N) 
BASE_VERB:NAME:Solver double calculate_rho(): calculate (V)  | rho (N) 	++ :: double (N)  :: solver (N) 
BASE_VERB:FORM:ADotZeeCharacterSubstring void apply(Switch sw): apply (V)  | [ switch (N) - sw (N) ]	++ :: A (NM) dot (NM) zee (NM) character (NM) substring (N) 
BASE_VERB:NAME:ListStore static void gtk_list_store_move_before(int listStore, int iter, int position): gtk (PRE) list (V)  | store (NM) move (N) -- before (P) [ int (N) - list (NM) store (N) ]	++ :: [ int (N) - list (NM) store (N) ] :: [ int (N) - iter (N) ] :: [ int (N) - position (N) ] :: list (NM) store (N) 
SPECIAL:NAME:Token_Type void setLowerCaseLetters(int addr, int v): set (V)  | lower (NM) case (NM) letters (N) 	++ :: [ int (N) - addr (N) ] :: [ int (N) - v (N) ] :: token (NM) type (N) 
SPECIAL:NAME:MutableTree void removeChild(Tree child): remove (V)  | EQUIV[child (N) , [ tree (NI) - child (N) ]]	++ :: mutable (NM) tree (NI) 
BASE_VERB:NAME:ResFailureEx01 static void linkNetwork(Router router, GridSimCore obj): link (V)  | network (N) 	++ :: [ router (N) - router (N) ] :: [ grid (NM) sim (NM) core (N) - obj (NI) ] :: res (NM) failure (NM) ex (NM) 01 (N) 
ENDS_WITH_ED:NAME:linxvideos2 void jButton1ActionPerformed(ActionEvent evt): handle (V) | j (PRE) button (NM) 1 (D) action (NM) performed (N) 	++ :: [ action (NM) event (NI) - evt (N) ] :: linxvideos (NM) 2 (N)  :: void (N) 
BASE_VERB:FORM:ZipFileFilter boolean accept(File f): accept (VI)  | [ file (NI) - f (N) ]	++ :: zip (NM) file (NM) filter (N)  :: boolean (N) 
SPECIAL:NAME:CommandLine String getDirectory(): get (V)  | directory (N) 	++ :: string (NI)  :: command (NM) line (N) 
SPECIAL:NAME:TestProcedureDelegate void testCreateProcedure(): test (VI) create (V)  | procedure (N) 	++ :: test (NM) procedure (NM) delegate (N) 
SPECIAL:NAME:MiscSettings String getPostConfigurationScript(): get (V)  | post (NM) configuration (NM) script (N) 	++ :: string (NI)  :: misc (NM) settings (N) 
SPECIAL:NAME:SFTPClient void setPROT_P(boolean p): set (V)  | PROT (NM) P (NI) 	++ :: [ boolean (N) - p (NI) ] :: SFTP (NM) client (N) 
SPECIAL:NAME:WebResponse void setDateHeader(String header, long date): set (V)  | date (NM) header (N) 	++ :: [ string (NI) - header (N) ] :: [ long (N) - date (N) ] :: web (NM) response (N) 
CONSTRUCTOR:NAME:ColorBar ColorBar ColorBar(String label):  | color (NM) bar (N) 	++ :: [ string (NI) - label (NI) ]
BASE_VERB:NAME:MessageFormat Object parseObject(String sourceStr, ParsePosition pos): parse (V)  | object (NI) 	++ :: [ string (NI) - source (NM) str (NI) ] :: [ parse (NM) position (N) - pos (N) ] :: object (NI)  :: message (NM) format (NI) 
SPECIAL:NAME:TimeChartGraphingArea static TimeChartBlock getSelectedTimeChartBlock(): get (V)  | selected (NM) time (NM) chart (NM) block (N) 	++ :: time (NM) chart (NM) block (N)  :: time (NM) chart (NM) graphing (NM) area (N) 
CONSTRUCTOR:NAME:ByteArrayDataSource ByteArrayDataSource ByteArrayDataSource(String asciiData, String type):  | byte (NM) array (NM) data (NM) source (NI) 	++ :: [ string (NI) - ascii (NM) data (NI) ] :: [ string (NI) - type (N) ]
SPECIAL:FORM:TestBeanToDOM static void main(String args): main (V)  | [ string (NI) - args (N) ]	++ :: test (NM) bean (NM) to (NM) DOM (N) 
SPECIAL:NAME:ExceptionWorkUnitImplTest void testDefaultImportExport(): test (VI)  | default (NM) import (NM) export (N) 	++ :: exception (NM) work (NM) unit (NM) impl (NM) test (N) 
BASE_VERB:FORM:SizeCounter void inc(int value): inc (V)  | [ int (N) - value (NI) ]	++ :: size (NM) counter (N) 
SPECIAL:NAME:JavaMailSenderImpl void setDefaultEncoding(String defaultEncoding): set (V)  | default (NM) encoding (N) 	++ :: [ string (NI) - default (NM) encoding (N) ] :: java (NM) mail (NM) sender (NM) impl (NI) 
SPECIAL:NAME:FGDCDataQualityForm String getAction(): get (V)  | action (N) 	++ :: string (NI)  :: FGDC (NM) data (NM) quality (NM) form (N) 
BASE_VERB:NAME:DefaultXMLFragmentHandler void emptyElement(String name, AttributesImpl attributes): empty (V)  | element (NI) 	++ :: [ string (NI) - name (NI) ] :: [ attributes (NM) impl (NI) - attributes (N) ] :: default (NM) XML (NM) fragment (NM) handler (N) 
SPECIAL:NAME:Resource void setNodeType(int type): set (V)  | node (NM) type (N) 	++ :: [ int (N) - type (N) ] :: resource (N) 
SPECIAL:NAME:JMSServerMessageHandler String getQueueName(String queueName): get (V)  | EQUIV[queue (NM) name (NI) , [ string (NI) - queue (NM) name (NI) ]]	++ :: string (NI)  :: JMS (NM) server (NM) message (NM) handler (N) 
BASE_VERB:NAME:ServerConn void cmdTime(): cmd (V)  | time (N) 	++ :: server (NM) conn (N) 
SPECIAL:NAME:PairNavigator String getAttributeName(Object obj): get (V)  | attribute (NM) name (NI) 	++ :: [ object (NI) - obj (NI) ] :: string (NI)  :: pair (NM) navigator (N) 
NOUN_PHRASE:NAME:PropertyNameHelper static String id(): get (V) | id (NI) 	++ :: property (NM) name (NM) helper (N)  :: string (NI) 
SPECIAL:NAME:AvailableLocalesDescriptor String getNameSpaceURI(): get (V)  | name (NM) space (NM) URI (NI) 	++ :: string (NI)  :: available (NM) locales (NM) descriptor (NI) 
CONSTRUCTOR:NAME:ScriptableOWThinlet ScriptableOWThinlet ScriptableOWThinlet(String scriptLangage):  | scriptable (NM) OW (NM) thinlet (N) 	++ :: [ string (NI) - script (NM) langage (N) ]
SPECIAL:NAME:AbstractWarningEntryBlock void initStandardBlock(): init (V)  | standard (NM) block (N) 	++ :: abstract (NM) warning (NM) entry (NM) block (N) 
V_3P_IRR:NAME:ReadFile boolean hasNext(): has (V)  | next (DT) 	++ :: boolean (N)  :: read (NM) file (NI) 
V_3P_IRR:NAME:Chain boolean hasCoordinates(): has (V)  | coordinates (N) 	++ :: boolean (N)  :: chain (N) 
CONSTRUCTOR:NAME:FixedActionGenerator FixedActionGenerator FixedActionGenerator():  | fixed (NM) action (NM) generator (N) 	++
BASE_VERB:CLAS:WatchTask boolean cancel(): cancel (VI)  | watch (NM) task (N) 	++ :: boolean (N) 
SPECIAL:NAME:TypeMetrics double getParameterAverage(): get (V)  | parameter (NM) average (N) 	++ :: double (N)  :: type (NM) metrics (N) 
SPECIAL:FORM:TreeLayoutFactory void add(String name, String className, String data): add (V)  | [ string (NI) - name (NI) ]	++ :: [ string (NI) - class (NM) name (NI) ] :: [ string (NI) - data (NI) ] :: tree (NM) layout (NM) factory (N) 
SPECIAL:NAME:SimpleParser Entity readEntity(): read (V)  | entity (N) 	++ :: entity (N)  :: simple (NM) parser (N) 
BASE_VERB:NAME:Lib static Predicate makeImpl(Collection<Predicate> left, Predicate right): make (V)  | impl (NI) 	++ :: [ collection (NM) predicate (N) - left (N) ] :: [ predicate (N) - right (N) ] :: predicate (N)  :: lib (N) 
SPECIAL:FORM:BTreeFilerPageHeader void read(ByteBuffer buf): read (V)  | [ byte (NM) buffer (NI) - buf (N) ]	++ :: B (NM) tree (NM) filer (NM) page (NM) header (N) 
SPECIAL:NAME:QuoteReceiveStreamThread void writeData(byte data): write (V)  | EQUIV[data (NI) , [ byte (N) - data (NI) ]]	++ :: quote (NM) receive (NM) stream (NM) thread (N) 
SPECIAL:FORM:DKit void add(Object component): add (V)  | [ object (NI) - component (N) ]	++ :: D (NM) kit (N) 
SPECIAL:NAME:OwnTreePanel void setTreeCellEditor(TreeCellEditor treeCellEditor): set (V)  | tree (NM) cell (NM) editor (N) 	++ :: [ tree (NM) cell (NM) editor (N) - tree (NM) cell (NM) editor (N) ] :: own (NM) tree (NM) panel (N) 
SPECIAL:NAME:TreeProviderBean ProjectAspect findSelectedProjectAspect(): find (V)  | selected (NM) project (NM) aspect (N) 	++ :: project (NM) aspect (N)  :: tree (NM) provider (NM) bean (NI) 
SPECIAL:NAME:ZHttpServletResponseWrapper void setStatus(int s): set (V)  | status (N) 	++ :: [ int (N) - s (N) ] :: Z (NM) http (NM) servlet (NM) response (NM) wrapper (NI) 
BASE_VERB:NAME:DomainEditor int changeBlockToAggregation(DomainBlock block): change (V)  | EQUIV[block (N) , [ domain (NM) block (N) - block (N) ]]-- to (P) aggregation (N) 	++ :: int (N)  :: domain (NM) editor (N) 
SPECIAL:NAME:AgentTYPE UnsignedInt getAgent_id(): get (V)  | agent (NM) id (NI) 	++ :: unsigned (NM) int (N)  :: agent (NM) TYPE (N) 
SPECIAL:NAME:CompanyBase Naf getNafCache(): get (V)  | naf (NM) cache (N) 	++ :: naf (N)  :: company (NM) base (N) 
BASE_VERB:NAME:ByteBuffer int arrayOffset(): array (V)  | offset (N) 	++ :: int (N)  :: byte (NM) buffer (NI) 
SPECIAL:NAME:VirtualToolkit Image createImage(byte imageData, int imageOffset, int imageLength): create (V)  | EQUIV[image (N) , [ byte (N) - image (NM) data (NI) ]]	++ :: [ int (N) - image (NM) offset (N) ] :: [ int (N) - image (NM) length (N) ] :: image (N)  :: virtual (NM) toolkit (N) 
ENDS_WITH_ED:NAME:HelpMenu void activeModuleChanged(ModuleEvent event): handle (V) | active (NM) module (NM) changed (N) 	++ :: [ module (NM) event (NI) - event (NI) ] :: help (NM) menu (N)  :: void (N) 
SPECIAL:NAME:X_GL_Distribution int getUser2_ID(): get (V)  | user (NM) 2 (D) ID (NI) 	++ :: int (N)  :: X (NM) GL (NM) distribution (N) 
CONSTRUCTOR:NAME:JCEAlgorithm JCEAlgorithm JCEAlgorithm(Controller controller, String name):  | JCE (NM) algorithm (N) 	++ :: [ controller (N) - controller (N) ] :: [ string (NI) - name (NI) ]
BASE_VERB:NAME:CustomFormatter String _format_i(int value): format (V)  | i (N) 	++ :: [ int (N) - value (NI) ] :: string (NI)  :: custom (NM) formatter (N) 
CONSTRUCTOR:NAME:GutterOptionPane GutterOptionPane GutterOptionPane():  | gutter (NM) option (NM) pane (N) 	++
SPECIAL:NAME:HTMLLinkElementImpl void setTarget(String target): set (V)  | target (N) 	++ :: [ string (NI) - target (N) ] :: HTML (NM) link (NM) element (NM) impl (NI) 
CONSTRUCTOR:NAME:Doc Doc Doc():  | doc (NI) 	++
SPECIAL:NAME:FilingVO void setMessageId(String messageId): set (V)  | message (NM) id (NI) 	++ :: [ string (NI) - message (NM) id (NI) ] :: filing (NM) VO (NI) 
SPECIAL:CLAS:BlankActionTag int doAfterBody(): do (VI)  | blank (NM) action (NM) tag (NI) -- after (P) body (N) 	++ :: int (N) 
BASE_VERB:NAME:FolderBean String seeParentCollectionFromFolder(): see (V)  | parent (NM) collection (N) -- from (P) folder (N) 	++ :: string (NI)  :: folder (NM) bean (NI) 
SPECIAL:NAME:TagTextField String getEncoding(): get (V)  | encoding (N) 	++ :: string (NI)  :: tag (NM) text (NM) field (N) 
V_3P_IRR:NAME:Group boolean isSelected(BitSet bs): is (V)  | selected (N) 	++ :: [ bit (NM) set (N) - bs (N) ] :: boolean (N)  :: group (N) 
SPECIAL:NAME:MockHttpServletRequest int getContentLength(): get (V)  | content (NM) length (N) 	++ :: int (N)  :: mock (NM) http (NM) servlet (NM) request (N) 
BASE_VERB:NAME:APDUSenderPanel void sendAll(byte a, byte b, byte c, int offset, boolean isWrapped): send (V)  | all (DT) 	++ :: [ byte (N) - a (N) ] :: [ byte (N) - b (N) ] :: [ byte (N) - c (N) ] :: [ int (N) - offset (N) ] :: [ boolean (N) - is (NM) wrapped (N) ] :: APDU (NM) sender (NM) panel (N) 
BASE_VERB:NAME:Bullet int modifyPoints(int _points): modify (V)  | EQUIV[points (N) , [ int (N) - points (N) ]]	++ :: int (N)  :: bullet (N) 
CONSTRUCTOR:NAME:Pair Pair Pair():  | pair (N) 	++
BASE_VERB:CLAS:PersistenceXmlParserTest void tearDown(): tear (V) down (VP)  | persistence (NM) xml (NM) parser (NM) test (N) 	++
SPECIAL:NAME:PortalSoapTest void testConcurrentAddUser(): test (VI)  | concurrent (NM) add (NM) user (N) 	++ :: portal (NM) soap (NM) test (N) 
BASE_VERB:FORM:Factory static ResourcePropertiesDocument parse(File file, XmlOptions options): parse (V)  | [ file (NI) - file (NI) ]	++ :: [ xml (NM) options (N) - options (N) ] :: factory (N)  :: resource (NM) properties (NM) document (NI) 
PREP:NAME:BranchInstruction String toString(int offset): convert (V) | to (P) string (NI) 	++ :: [ int (N) - offset (N) ] :: branch (NM) instruction (N)  :: string (NI) 
SPECIAL:NAME:LispListElement int getPosition(int pos): get (V)  | position (N) 	++ :: [ int (N) - pos (N) ] :: int (N)  :: lisp (NM) list (NM) element (NI) 
BASE_VERB:NAME:Base64 static int decode4to3(byte source, int srcOffset, byte destination, int destOffset): decode (V)  | 4 (D) -- to (P) 3 (D) 	++ :: [ byte (N) - source (NI) ] :: [ int (N) - src (NM) offset (N) ] :: [ byte (N) - destination (N) ] :: [ int (N) - dest (NM) offset (N) ] :: int (N)  :: base (NM) 64 (N) 
SPECIAL:NAME:HttpSessionTest String getValueNames(): get (V)  | value (NM) names (N) 	++ :: string (NI)  :: http (NM) session (NM) test (N) 
SPECIAL:CLAS:ShoppingItemUtil static List findByCategoryId(long categoryId): find (V)  | shopping (NM) item (NM) util (N) -- by (P) EQUIV[category (NM) id (NI) , [ long (N) - category (NM) id (NI) ]]	++ :: list (N) 
SPECIAL:NAME:JDive void setSurfaceTemperature(Double surfaceTemperature): set (V)  | surface (NM) temperature (N) 	++ :: [ double (N) - surface (NM) temperature (N) ] :: J (NM) dive (N) 
NOUN_PHRASE:NAME:EventSubscriptionEJB Collection ejbHomeXfindByCorrelationKeys(String keys, boolean exact): get (V) | ejb (PRE) home (NM) xfind (NM) by (NM) correlation (NM) keys (N) 	++ :: [ string (NI) - keys (N) ] :: [ boolean (N) - exact (N) ] :: event (NM) subscription (NM) EJB (N)  :: collection (N) 
BASE_VERB:CLAS:RsltFtch void flush(): flush (V)  | rslt (NM) ftch (N) 	++
CONSTRUCTOR:NAME:RunTargetCommand RunTargetCommand RunTargetCommand():  | run (NM) target (NM) command (N) 	++
SPECIAL:NAME:Association void setKey(String string): set (V)  | key (NI) 	++ :: [ string (NI) - string (NI) ] :: association (N) 
SPECIAL:NAME:BookMarkImpl String getUserName(): get (V)  | user (NM) name (NI) 	++ :: string (NI)  :: book (NM) mark (NM) impl (NI) 
CONSTRUCTOR:NAME:StopperExecution StopperExecution StopperExecution():  | stopper (NM) execution (N) 	++
SPECIAL:NAME:GUIPreferences void setMechSelectorIncludeLevel(boolean includeLevel): set (V)  | mech (NM) selector (NM) include (NM) level (N) 	++ :: [ boolean (N) - include (NM) level (N) ] :: GUI (NM) preferences (N) 
SPECIAL:NAME:SAXNullTransformerFactory Source getAssociatedStylesheet(Source source, String media, String title, String charset): get (V)  | associated (NM) stylesheet (N) 	++ :: [ source (NI) - source (NI) ] :: [ string (NI) - media (N) ] :: [ string (NI) - title (N) ] :: [ string (NI) - charset (N) ] :: source (NI)  :: SAX (NM) null (NM) transformer (NM) factory (N) 
EVENT_PARAM:NAME:OptionsAction boolean performAction(ActionEvent event): handle (V) | perform (NM) action (N) 	++ :: [ action (NM) event (NI) - event (NI) ] :: options (NM) action (N)  :: boolean (N) 
SPECIAL:NAME:DataFile String getColumnName(int i): get (V)  | column (NM) name (NI) 	++ :: [ int (N) - i (N) ] :: string (NI)  :: data (NM) file (NI) 
SPECIAL:NAME:DelegationOperations DepositOp get_connection_deposit(): get (V)  | connection (NM) deposit (N) 	++ :: deposit (NM) op (N)  :: delegation (NM) operations (N) 
BASE_VERB:FORM:JoSQLRule boolean match(Object o): match (V)  | [ object (NI) - o (N) ]	++ :: jo (NM) SQL (NM) rule (N)  :: boolean (N) 
SPECIAL:NAME:XPathTest void testQueryThatReturnsNumber(): test (VI)  | query (NM) that (PR) returns (NM) number (NI) 	++ :: X (NM) path (NM) test (N) 
V_3PS:CLAS:CompositeName boolean startsWith(Name n): starts (V)  | composite (NM) name (NI) -- with (P) [ name (NI) - n (N) ]	++ :: [ name (NI) - n (N) ] :: boolean (N) 
SPECIAL:NAME:World Event getUserEvent(String name, String optionString): get (V)  | user (NM) event (NI) 	++ :: [ string (NI) - name (NI) ] :: [ string (NI) - option (NM) string (NI) ] :: event (NI)  :: world (N) 
BASE_VERB:FORM:AbstractIntMap V put(Integer key, V value): put (V)  | [ integer (N) - key (NI) ]	++ :: [ V (N) - value (NI) ] :: abstract (NM) int (NM) map (N)  :: V (N) 
SPECIAL:NAME:NodoTree String getPadre(): get (V)  | padre (N) 	++ :: string (NI)  :: nodo (NM) tree (NI) 
SPECIAL:NAME:Transducer void setInputASName(String newInputASName): set (V)  | input (NI) -- AS (P) name (NI) 	++ :: [ string (NI) - new (NM) input (NM) AS (NM) name (NI) ] :: transducer (N) 
SPECIAL:FORM:SourceTermUsageIdSeqHelper static QualifiedCode read(InputStream in): read (V)  | [ input (NM) stream (NI) - in (NI) ]	++ :: source (NM) term (NM) usage (NM) id (NM) seq (NM) helper (N)  :: qualified (NM) code (NI) 
PREP:NAME:Util static String toString(long n): convert (V) | to (P) string (NI) 	++ :: [ long (N) - n (N) ] :: util (N)  :: string (NI) 
SPECIAL:NAME:ResourceBase int getOID(): get (V)  | OID (N) 	++ :: int (N)  :: resource (NM) base (N) 
BASE_VERB:NAME:T1_Calculator double calculateBackground(): calculate (V)  | background (N) 	++ :: double (N)  :: T (NM) 1 (NM) calculator (N) 
ENDS_WITH_ED:NAME:void actionPerformed(ActionEvent ae): handle (V) | action (NM) performed (N) 	++ :: [ action (NM) event (NI) - ae (N) ] :: ANONYMOUS (N)  :: void (N) 
SPECIAL:NAME:SenderThread void setEnvMimeType(String t): set (V)  | env (NM) mime (NM) type (N) 	++ :: [ string (NI) - t (N) ] :: sender (NM) thread (N) 
CONSTRUCTOR:NAME:Resource Resource Resource(InputStream inputStream):  | resource (N) 	++ :: [ input (NM) stream (NI) - input (NM) stream (NI) ]
BASE_VERB:NAME:OMGSystemException MARSHAL badNvlist(CompletionStatus cs): bad (V)  | nvlist (N) 	++ :: [ completion (NM) status (N) - cs (N) ] :: MARSHAL (N)  :: OMG (NM) system (NM) exception (N) 
ENDS_WITH_ED:NAME:RpcDispatcher void ChannelReconnected(Address new_addr): handle (V) | channel (NM) reconnected (N) 	++ :: [ address (NI) - new (NM) addr (N) ] :: rpc (NM) dispatcher (N)  :: void (N) 
SPECIAL:NAME:FiringDisplay void removeTempAttacks(): remove (V)  | temp (NM) attacks (N) 	++ :: firing (NM) display (N) 
SPECIAL:NAME:Tds5Test void testColMetaData(): test (VI)  | col (NM) meta (NM) data (NI) 	++ :: tds (NM) 5 (NM) test (N) 
BASE_VERB:CLAS:Atom Object eval(): eval (V)  | atom (N) 	++ :: object (NI) 
BASE_VERB:NAME:void fireEvent(): fire (V)  | event (NI) 	++ :: ANONYMOUS (N) 
BASE_VERB:CLAS:NativeJavaObject static Object coerceToNumber(Class type, Object value): coerce (V)  | native (NM) java (NM) object (NI) -- to (P) number (NI) 	++ :: [ class (NI) - type (N) ] :: [ object (NI) - value (NI) ] :: object (NI) 
ENDS_WITH_ED:NAME:MouseTracker void mousePressed(MouseEvent e): handle (V) | mouse (NM) pressed (N) 	++ :: [ mouse (NM) event (NI) - e (N) ] :: mouse (NM) tracker (N)  :: void (N) 
CONSTRUCTOR:NAME:AbortionError AbortionError AbortionError(String msg):  | abortion (NM) error (N) 	++ :: [ string (NI) - msg (NI) ]
BASE_VERB:NAME:RelateComputer void computeDisjointIM(IntersectionMatrix im): compute (V)  | EQUIV[disjoint (NM) IM (N) , [ intersection (NM) matrix (N) - im (N) ]]	++ :: relate (NM) computer (N) 
BASE_VERB:NAME:FetchDialog boolean soundRetrieval(): sound (V)  | retrieval (N) 	++ :: boolean (N)  :: fetch (NM) dialog (N) 
ENDS_WITH_ED:NAME:void mouseEntered(MouseEvent e): handle (V) | mouse (NM) entered (N) 	++ :: [ mouse (NM) event (NI) - e (N) ] :: ANONYMOUS (N)  :: void (N) 
SPECIAL:NAME:Graph List getConnections(): get (V)  | connections (N) 	++ :: list (N)  :: graph (N) 
BASE_VERB:CLAS:ViewNodeModelCache void close(): close (V)  | view (NM) node (NM) model (NM) cache (N) 	++
CONSTRUCTOR:NAME:RaplaDefaultContext RaplaDefaultContext RaplaDefaultContext(RaplaContext parent):  | rapla (NM) default (NM) context (N) 	++ :: [ rapla (NM) context (N) - parent (N) ]
SPECIAL:FORM:DSAElGamalKeyRingGenerator static void main(String args): main (V)  | [ string (NI) - args (N) ]	++ :: DSA (NM) el (NM) gamal (NM) key (NM) ring (NM) generator (N) 
BASE_VERB:FORM:MainWindowController void ed2kLink(Object sender): ed (PRE) 2 (D) k (PRE) link (V)  | [ object (NI) - sender (N) ]	++ :: main (NM) window (NM) controller (N) 
SPECIAL:NAME:NFacilityRoleServices static List findAllCache(GenericDelegator delegator): find (V)  | all (DT) cache (N) 	++ :: [ generic (NM) delegator (N) - delegator (N) ] :: list (N)  :: N (NM) facility (NM) role (NM) services (N) 
BASE_VERB:FORM:Clip void open(AudioInputStream audioInputStream): open (V)  | [ audio (NM) input (NM) stream (NI) - audio (NM) input (NM) stream (NI) ]	++ :: clip (N) 
SPECIAL:NAME:MTable Class getColumnClass(int index): get (V)  | column (NM) class (NI) 	++ :: [ int (N) - index (NI) ] :: class (NI)  :: M (NM) table (N) 
SPECIAL:NAME:DataConfiguration void setTitle(String string): set (V)  | title (N) 	++ :: [ string (NI) - string (NI) ] :: data (NM) configuration (NI) 
SPECIAL:NAME:LineMergeExample Collection getData(): get (V)  | data (NI) 	++ :: collection (N)  :: line (NM) merge (NM) example (N) 
SPECIAL:NAME:StrategyFeature void setCalendarSpread(CalendarSpread value): set (V)  | calendar (NM) spread (N) 	++ :: [ calendar (NM) spread (N) - value (NI) ] :: strategy (NM) feature (N) 
SPECIAL:NAME:AggregatedUnit void setEndDate(Date newDate): set (V)  | end (NM) date (N) 	++ :: [ date (N) - new (NM) date (N) ] :: aggregated (NM) unit (N) 
ENDS_WITH_ED:NAME:ViewerTracker void windowDeactivated(WindowEvent evt): handle (V) | window (NM) deactivated (N) 	++ :: [ window (NM) event (NI) - evt (N) ] :: viewer (NM) tracker (N)  :: void (N) 
SPECIAL:NAME:HttpState Credentials getProxyCredentials(AuthScope authscope): get (V)  | proxy (NM) credentials (N) 	++ :: [ auth (NM) scope (N) - authscope (N) ] :: credentials (N)  :: http (NM) state (N) 
SPECIAL:CLAS:ShoppingItemFieldPersistence List findWithDynamicQuery(DynamicQueryInitializer queryInitializer, int begin, int end): find (V)  | shopping (NM) item (NM) field (NM) persistence (N) -- with (P) dynamic (NM) query (N) 	++ :: [ dynamic (NM) query (NM) initializer (N) - query (NM) initializer (N) ] :: [ int (N) - begin (N) ] :: [ int (N) - end (N) ] :: list (N) 
SPECIAL:NAME:ORBUtils static void writeURLToFile(String name, String url): write (V)  | EQUIV[URL (NI) , [ string (NI) - url (NI) ]]-- to (P) file (NI) 	++ :: [ string (NI) - name (NI) ] :: ORB (NM) utils (N) 
SPECIAL:NAME:UpdateActivity void setDisplay(Display display): set (V)  | display (N) 	++ :: [ display (N) - display (N) ] :: update (NM) activity (N) 
SPECIAL:NAME:UpdateTransactionStatementDelParams long getProp(): get (V)  | prop (N) 	++ :: long (N)  :: update (NM) transaction (NM) statement (NM) del (NM) params (N) 
SPECIAL:NAME:LoptMetadataTest void testCumulativeCostFilter(): test (VI)  | cumulative (NM) cost (NM) filter (N) 	++ :: lopt (NM) metadata (NM) test (N) 
SPECIAL:FORM:StringBuffer StringBuffer append(char _cChar): append (V)  | [ char (N) - c (NM) char (N) ]	++ :: string (NM) buffer (NI)  :: string (NM) buffer (NI) 
SPECIAL:NAME:ClientSearchSettingsData int getSearchType(): get (V)  | search (NM) type (N) 	++ :: int (N)  :: client (NM) search (NM) settings (NM) data (NI) 
SPECIAL:NAME:SpringTestCase ApplicationContext getGlobalApplicationContext(): get (V)  | global (NM) application (NM) context (N) 	++ :: application (NM) context (N)  :: spring (NM) test (NM) case (N) 
BASE_VERB:NAME:SqlTool static void exitMain(int retval): exit (VI)  | main (N) 	++ :: [ int (N) - retval (N) ] :: sql (NM) tool (N) 
SPECIAL:NAME:Experience void jdoSetMedicalField(MedicalField mdc): jdo (PRE) set (V)  | medical (NM) field (N) 	++ :: [ medical (NM) field (N) - mdc (N) ] :: experience (N) 
BASE_VERB:NAME:Communications PhoneNumber listPhoneNumbersByType(int TYPE): list (V)  | phone (NM) numbers (N) -- by (P) EQUIV[type (N) , [ int (N) - TYPE (N) ]]	++ :: phone (NM) number (NI)  :: communications (N) 
EVENT_PARAM:NAME:IndicatorEditor void actSave(ActionEvent actionEvent): handle (V) | act (NM) save (N) 	++ :: [ action (NM) event (NI) - action (NM) event (NI) ] :: indicator (NM) editor (N)  :: void (N) 
ED_VERB:CLAS:ModifierMatcher boolean impliedBy(int and, int xor): implied (V)  | modifier (NM) matcher (N) -- by (P) [ int (N) - and (N) ]	++ :: [ int (N) - and (N) ] :: [ int (N) - xor (N) ] :: boolean (N) 
SPECIAL:NAME:OfficeWatcher int getPing(): get (V)  | ping (N) 	++ :: int (N)  :: office (NM) watcher (N) 
SPECIAL:NAME:Unpickler void load_mark(): load (V)  | mark (N) 	++ :: unpickler (N) 
SPECIAL:NAME:ItemLFImpl int lGetPreferredWidth(int h): l (PRE) get (V)  | preferred (NM) width (N) 	++ :: [ int (N) - h (N) ] :: int (N)  :: item (NM) LF (NM) impl (NI) 
BASE_VERB:CLAS:DefaultAgentManager boolean waitForRegistrationAndSynchronization(String ticket, int timeout): wait (V)  | default (NM) agent (NM) manager (N) -- for (P) registration (NM) and (NM) synchronization (N) 	++ :: [ string (NI) - ticket (N) ] :: [ int (N) - timeout (N) ] :: boolean (N) 
SPECIAL:NAME:IndicatorViewsForm String getMetric(): get (V)  | metric (N) 	++ :: string (NI)  :: indicator (NM) views (NM) form (N) 
BASE_VERB:NAME:ILodDistanceIterator float peekNext(): peek (V)  | next (DT) 	++ :: float (N)  :: I (NM) lod (NM) distance (NM) iterator (N) 
BASE_VERB:NAME:ModelTest void movePlayerToSquare(Player player, Point destination): move (V)  | EQUIV[player (N) , [ player (N) - player (N) ]]-- to (P) square (N) 	++ :: [ point (N) - destination (N) ] :: model (NM) test (N) 
PREP:NAME:String toString(): convert (V) | to (P) string (NI) 	++ :: ANONYMOUS (N)  :: string (NI) 
SPECIAL:NAME:Window_typeTYPE void setLast_upd_db_site(byte last_upd_db_site): set (V)  | last (DT) upd (NM) db (NM) site (N) 	++ :: [ byte (N) - last (DT) upd (NM) db (NM) site (N) ] :: window (NM) type (NM) TYPE (N) 
BASE_VERB:FORM:RoseGenerator void visit(MExtensionPoint obj): visit (V)  | [ M (NM) extension (NM) point (N) - obj (NI) ]	++ :: rose (NM) generator (N) 
SPECIAL:FORM:HtmlReader static void main(String args): main (V)  | [ string (NI) - args (N) ]	++ :: html (NM) reader (N) 
SPECIAL:CLAS:StatefulBeanContext void remove(): remove (V)  | stateful (NM) bean (NM) context (N) 	++
SPECIAL:NAME:LJGroup int getOrder(): get (V)  | order (N) 	++ :: int (N)  :: LJ (NM) group (N) 
BASE_VERB:CLAS:InputStreamAudioPlayer void cancel(): cancel (VI)  | input (NM) stream (NM) audio (NM) player (N) 	++
SPECIAL:NAME:HibernateConfigItem void setSessionFactory(SessionFactory sessionFactory): set (V)  | session (NM) factory (N) 	++ :: [ session (NM) factory (N) - session (NM) factory (N) ] :: hibernate (NM) config (NM) item (NI) 
SPECIAL:NAME:DebugContextTest void testNonStaticWatches(): test (VI)  | non (NM) static (NM) watches (N) 	++ :: debug (NM) context (NM) test (N) 
SPECIAL:NAME:User void setEmail(String email): set (V)  | email (N) 	++ :: [ string (NI) - email (N) ] :: user (N) 
SPECIAL:NAME:AbstractWizardAction AbstractWizardSequence createWizardSequence(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response): create (V)  | wizard (NM) sequence (N) 	++ :: [ action (NM) mapping (N) - mapping (N) ] :: [ action (NM) form (N) - form (N) ] :: [ http (NM) servlet (NM) request (N) - request (N) ] :: [ http (NM) servlet (NM) response (N) - response (N) ] :: abstract (NM) wizard (NM) sequence (N)  :: abstract (NM) wizard (NM) action (N) 
SPECIAL:NAME:ResourceLinksForm void setDomain(String domain): set (V)  | domain (N) 	++ :: [ string (NI) - domain (N) ] :: resource (NM) links (NM) form (N) 
SPECIAL:NAME:ObjectPropertyHandler Element processObjectReference(Element parentElement, String propertyName, Object value, Element referenceSourceElement, SerializeOption option): process (VI)  | object (NM) reference (NI) 	++ :: [ element (NI) - parent (NM) element (NI) ] :: [ string (NI) - property (NM) name (NI) ] :: [ object (NI) - value (NI) ] :: [ element (NI) - reference (NM) source (NM) element (NI) ] :: [ serialize (NM) option (N) - option (N) ] :: element (NI)  :: object (NM) property (NM) handler (N) 
PREP:NAME:SimsorderManager void afterInsert(SimsorderBean pObject): handle (V) | after (NM) insert (N) 	++ :: [ simsorder (NM) bean (NI) - p (NM) object (NI) ] :: simsorder (NM) manager (N)  :: void (N) 
V_3PS:FORM:TimerTaskComparator boolean equals(Object o): equals (V)  | [ object (NI) - o (N) ]	++ :: timer (NM) task (NM) comparator (N)  :: boolean (N) 
SPECIAL:NAME:WidgetUtils static PMValueLabel createValueLabel(int x, int y, String v, FontMetrics fm): create (V)  | value (NM) label (NI) 	++ :: [ int (N) - x (N) ] :: [ int (N) - y (N) ] :: [ string (NI) - v (N) ] :: [ font (NM) metrics (N) - fm (N) ] :: PM (NM) value (NM) label (NI)  :: widget (NM) utils (N) 
SPECIAL:NAME:ConfigurationActionImpl void processAction(PortletConfig config, ActionRequest req, ActionResponse res): process (VI)  | action (N) 	++ :: [ portlet (NM) config (NI) - config (NI) ] :: [ action (NM) request (N) - req (N) ] :: [ action (NM) response (N) - res (N) ] :: configuration (NM) action (NM) impl (NI) 
CONSTRUCTOR:NAME:SearchDialog SearchDialog SearchDialog(Window owner, Type dialogType, int y, String targetStr, String pathname, int lineIndex, int startOffset, int endOffset):  | search (NM) dialog (N) 	++ :: [ window (N) - owner (N) ] :: [ type (N) - dialog (NM) type (N) ] :: [ int (N) - y (N) ] :: [ string (NI) - target (NM) str (NI) ] :: [ string (NI) - pathname (N) ] :: [ int (N) - line (NM) index (NI) ] :: [ int (N) - start (NM) offset (N) ] :: [ int (N) - end (NM) offset (N) ]
SPECIAL:NAME:colgroup colgroup addElement(String element): add (V)  | EQUIV[element (NI) , [ string (NI) - element (NI) ]]	++ :: colgroup (N)  :: colgroup (N) 
SPECIAL:NAME:ImportButtonGroup ImportRadioButton getOldSelection(): get (V)  | old (NM) selection (N) 	++ :: import (NM) radio (NM) button (N)  :: import (NM) button (NM) group (N) 
ENDS_WITH_ED:NAME:void actionPerformed(ActionEvent e): handle (V) | action (NM) performed (N) 	++ :: [ action (NM) event (NI) - e (N) ] :: ANONYMOUS (N)  :: void (N) 
SPECIAL:NAME:JToolbar void addSeparator(): add (V)  | separator (N) 	++ :: J (NM) toolbar (N) 
SPECIAL:NAME:ValidAcMth void addClassMethodListener(PropertyChangeListener listener): add (V)  | EQUIV[class (NM) method (NM) listener (N) , [ property (NM) change (NM) listener (N) - listener (N) ]]	++ :: valid (NM) ac (NM) mth (N) 
SPECIAL:NAME:CompositePageUtil static List getProcessesFromViewMap(ActionHelper helper): get (V)  | processes (N) -- from (P) view (NM) map (N) 	++ :: [ action (NM) helper (N) - helper (N) ] :: list (N)  :: composite (NM) page (NM) util (N) 
SPECIAL:NAME:Employee Date getBirthDate(): get (V)  | birth (NM) date (N) 	++ :: date (N)  :: employee (N) 
SPECIAL:NAME:Project List getChampionsAsUsers(): get (V)  | champions (N) -- as (P) users (N) 	++ :: list (N)  :: project (N) 
SPECIAL:NAME:BaseDatabaseMeta String getName(): get (V)  | name (NI) 	++ :: string (NI)  :: base (NM) database (NM) meta (N) 
SPECIAL:NAME:PackageFactory static Element getReplaceContent(Replace _Replace, Element element, String reference): get (V)  | replace (NM) content (N) 	++ :: [ replace (N) - replace (N) ] :: [ element (NI) - element (NI) ] :: [ string (NI) - reference (NI) ] :: element (NI)  :: package (NM) factory (N) 
SPECIAL:NAME:MolecularScene void addMolecule(Molecule mol): add (V)  | EQUIV[molecule (N) , [ molecule (N) - mol (N) ]]	++ :: molecular (NM) scene (N) 
BASE_VERB:CLAS:ContextComponentTestCase void tearDown(): tear (V) down (VP)  | context (NM) component (NM) test (NM) case (N) 	++
SPECIAL:NAME:BeanInspectorPanel void setJTableFields(JTable jTableFields): set (V)  | J (NM) table (NM) fields (N) 	++ :: [ J (NM) table (N) - j (NM) table (NM) fields (N) ] :: bean (NM) inspector (NM) panel (N) 
SPECIAL:NAME:ClassInfo int createClassObject(ThreadInfo th, int cref): create (V)  | class (NM) object (NI) 	++ :: [ thread (NM) info (NI) - th (N) ] :: [ int (N) - cref (N) ] :: int (N)  :: class (NM) info (NI) 
SPECIAL:NAME:MonthViewDateEditor Element getHTML(Object value): get (V)  | HTML (N) 	++ :: [ object (NI) - value (NI) ] :: element (NI)  :: month (NM) view (NM) date (NM) editor (N) 
CONSTRUCTOR:NAME:ConversionSpecification ConversionSpecification ConversionSpecification(String fmtArg):  | conversion (NM) specification (N) 	++ :: [ string (NI) - fmt (NM) arg (N) ]
SPECIAL:NAME:Document EntityReference createEntityReference(String name): create (V)  | entity (NM) reference (NI) 	++ :: [ string (NI) - name (NI) ] :: entity (NM) reference (NI)  :: document (NI) 
SPECIAL:NAME:DefaultDataSet Object getObject(String column, Class classToConvertTo): get (V)  | object (NI) 	++ :: [ string (NI) - column (N) ] :: [ class (NI) - class (NM) to (NM) convert (NM) to (N) ] :: object (NI)  :: default (NM) data (NM) set (N) 
SPECIAL:NAME:Gui5250MDIFrame SessionGUI getSessionAt(int index): get (V)  | session (N) -- at (P) [ int (N) - index (NI) ]	++ :: [ int (N) - index (NI) ] :: session (NM) GUI (N)  :: gui (NM) 5250 (NM) MDI (NM) frame (N) 
SPECIAL:NAME:TestCharset void TestAvailableCharsets(): test (VI)  | available (NM) charsets (N) 	++ :: test (NM) charset (N) 
SPECIAL:NAME:Data PoolableObjectFactory getPoolableObjectFactory(): get (V)  | poolable (NM) object (NM) factory (N) 	++ :: poolable (NM) object (NM) factory (N)  :: data (NI) 
SPECIAL:NAME:Property void setClasspathRef(Reference r): set (V)  | classpath (NM) ref (NI) 	++ :: [ reference (NI) - r (N) ] :: property (N) 
CONSTRUCTOR:NAME:WotlasLocation WotlasLocation WotlasLocation(int worldMapID, int townMapID, int buildingID, int interiorMapID, int roomID):  | wotlas (NM) location (NI) 	++ :: [ int (N) - world (NM) map (NM) ID (NI) ] :: [ int (N) - town (NM) map (NM) ID (NI) ] :: [ int (N) - building (NM) ID (NI) ] :: [ int (N) - interior (NM) map (NM) ID (NI) ] :: [ int (N) - room (NM) ID (NI) ]
SPECIAL:NAME:MediatorSupport IDispatcher getServerDispatcher(): get (V)  | server (NM) dispatcher (N) 	++ :: I (NM) dispatcher (N)  :: mediator (NM) support (N) 
SPECIAL:NAME:PolarPlot void setAngleLabelsVisible(boolean visible): set (V)  | angle (NM) labels (NM) visible (N) 	++ :: [ boolean (N) - visible (N) ] :: polar (NM) plot (N) 
PREP:NAME:RETURN_V String toString(): convert (V) | to (P) string (NI) 	++ :: RETURN (NM) V (N)  :: string (NI) 
SPECIAL:NAME:ReportHandler String getName(): get (V)  | name (NI) 	++ :: string (NI)  :: report (NM) handler (N) 
SPECIAL:NAME:JavaBeanSource void addBeans(Object beans): add (V)  | EQUIV[beans (N) , [ object (NI) - beans (N) ]]	++ :: java (NM) bean (NM) source (NI) 
SPECIAL:NAME:DownloadCompleteShell Control createDialogArea(Composite parent): create (V)  | dialog (NM) area (N) 	++ :: [ composite (N) - parent (N) ] :: control (N)  :: download (NM) complete (NM) shell (N) 
BASE_VERB:CLAS:TestAlertManagerImpl void config(boolean enable): config (V)  | test (NM) alert (NM) manager (NM) impl (NI) 	++ :: [ boolean (N) - enable (N) ]
CONSTRUCTOR:NAME:AdminMenuTag AdminMenuTag AdminMenuTag():  | admin (NM) menu (NM) tag (NI) 	++
SPECIAL:NAME:CompositeProcessImpl void initHasPrecondition(): init (V)  | has (NM) precondition (N) 	++ :: composite (NM) process (NM) impl (NI) 
BASE_VERB:CLAS:Graph void display(boolean autoLayout): display (V)  | graph (N) 	++ :: [ boolean (N) - auto (NM) layout (N) ]
V_3P_IRR:NAME:ElementoResources boolean isUnico(): is (V)  | unico (N) 	++ :: boolean (N)  :: elemento (NM) resources (N) 
SPECIAL:NAME:DefaultTableXYDataset double getDomainLowerBound(boolean includeInterval): get (V)  | domain (NM) lower (NM) bound (N) 	++ :: [ boolean (N) - include (NM) interval (N) ] :: [ boolean (N) - include (NM) interval (N) ] :: double (N)  :: default (NM) table (NM) XY (NM) dataset (N) 
CONSTRUCTOR:NAME:ForAllRI ForAllRI ForAllRI(Variable variable, Condition condition, Set<Rule> rules):  | for (NM) all (DT) RI (N) 	++ :: [ variable (N) - variable (N) ] :: [ condition (N) - condition (N) ] :: [ set (NM) rule (N) - rules (N) ]
SPECIAL:NAME:PortfolioListing String getPath(): get (V)  | path (NI) 	++ :: string (NI)  :: portfolio (NM) listing (N) 
SPECIAL:NAME:ClassFile byte getAccessFlags(): get (V)  | access (NM) flags (N) 	++ :: byte (N)  :: class (NM) file (NI) 
PREP:NAME:FragmentInterface String toString(int indentLevel): convert (V) | to (P) string (NI) 	++ :: [ int (N) - indent (NM) level (N) ] :: fragment (NM) interface (NI)  :: string (NI) 
SPECIAL:NAME:ColumnLayout LAYOUT_ALIGNMENT getAlignment(): get (V)  | alignment (N) 	++ :: LAYOUT (NM) ALIGNMENT (N)  :: column (NM) layout (N) 
SPECIAL:NAME:TaskState void setReturnedValue(Object returnedValue): set (V)  | returned (NM) value (NI) 	++ :: [ object (NI) - returned (NM) value (NI) ] :: task (NM) state (N) 
SPECIAL:NAME:RemoteUrlGenerator void setFilterType(int filterType): set (V)  | filter (NM) type (N) 	++ :: [ int (N) - filter (NM) type (N) ] :: remote (NM) url (NM) generator (N) 
ED_VERB:NAME:ScrollLayout Dimension preferredLayoutSize(Container parent): preferred (V)  | layout (NM) size (N) 	++ :: [ container (NI) - parent (N) ] :: dimension (N)  :: scroll (NM) layout (N) 
BASE_VERB:NAME:AssignAcMth Variant RestoreDocumentation(Variant Merge, Variant Purge): restore (V)  | documentation (N) 	++ :: [ variant (N) - merge (N) ] :: [ variant (N) - purge (N) ] :: variant (N)  :: assign (NM) ac (NM) mth (N) 
SPECIAL:NAME:HasControls Control getControls(): get (V)  | controls (N) 	++ :: control (N)  :: has (NM) controls (N) 
SPECIAL:NAME:WTextBox void setText(String text): set (V)  | text (NI) 	++ :: [ string (NI) - text (NI) ] :: W (NM) text (NM) box (N) 
SPECIAL:NAME:XRefAuthority String getRootAuthority(): get (V)  | root (NM) authority (N) 	++ :: string (NI)  :: X (NM) ref (NM) authority (N) 
CONSTRUCTOR:NAME:AbstractEnum AbstractEnum AbstractEnum(String name):  | abstract (NM) enum (NI) 	++ :: [ string (NI) - name (NI) ]
PREP:NAME:Clone Object onCopy(Object value, UserDataContainer source, UserDataContainer target): handle (V) | on (NM) copy (N) 	++ :: [ object (NI) - value (NI) ] :: [ user (NM) data (NM) container (NI) - source (NI) ] :: [ user (NM) data (NM) container (NI) - target (N) ] :: clone (N)  :: object (NI) 
SPECIAL:NAME:Segment int getIndex(): get (V)  | index (NI) 	++ :: int (N)  :: segment (N) 
SPECIAL:NAME:FlexGroupInfo FlexKey createKey(Object ref): create (V)  | key (NI) 	++ :: [ object (NI) - ref (NI) ] :: flex (NM) key (NI)  :: flex (NM) group (NM) info (NI) 
BASE_VERB:FORM:Triangulator Quadrilateral tag(Quadrilateral sourceQuad, Quadrilateral destQuad): tag (V)  | [ quadrilateral (N) - source (NM) quad (N) ]	++ :: [ quadrilateral (N) - dest (NM) quad (N) ] :: triangulator (N)  :: quadrilateral (N) 
SPECIAL:NAME:X_C_AllocationHdr void setDocStatus(String DocStatus): set (V)  | doc (NM) status (N) 	++ :: [ string (NI) - doc (NM) status (N) ] :: X (NM) C (NM) allocation (NM) hdr (N) 
CONSTRUCTOR:NAME:D2L D2L D2L():  | D (NM) 2 (NM) L (N) 	++
SPECIAL:NAME:EventData void setThermoAverage4(double v): set (V)  | thermo (NM) average (N) 4 (D) 	++ :: [ double (N) - v (N) ] :: event (NM) data (NI) 
SPECIAL:NAME:SubscriptionProxy Response getIceCatalog(String productName): get (V)  | ice (NM) catalog (N) 	++ :: [ string (NI) - product (NM) name (NI) ] :: response (N)  :: subscription (NM) proxy (NI) 
CONSTRUCTOR:NAME:ChunkerEventStream ChunkerEventStream ChunkerEventStream(SentencesDataStream d):  | chunker (NM) event (NM) stream (NI) 	++ :: [ sentences (NM) data (NM) stream (NI) - d (N) ]
BASE_VERB:NAME:FilePropertiesRIFF int correctChunkSize(int chunkSize): correct (V)  | EQUIV[chunk (NM) size (N) , [ int (N) - chunk (NM) size (N) ]]	++ :: int (N)  :: file (NM) properties (NM) RIFF (N) 
SPECIAL:NAME:HtmlFormattedEntryComponent String getFont(): get (V)  | font (N) 	++ :: string (NI)  :: html (NM) formatted (NM) entry (NM) component (N) 
NOUN_PHRASE:NAME:TerrainSet int size(): get (V) | size (N) 	++ :: terrain (NM) set (N)  :: int (N) 
SPECIAL:CLAS:TestRefCountedSet void testAdd(): test (VI) add (V)  | test (NM) ref (NM) counted (NM) set (N) 	++
V_3PS:NAME:CancelAction boolean needsPosition(): needs (V)  | position (N) 	++ :: boolean (N)  :: cancel (NM) action (N) 
SPECIAL:NAME:PlanetSceneNode void createPlanetNameNode(Planet planet): create (V)  | planet (NM) name (NM) node (NI) 	++ :: [ planet (N) - planet (N) ] :: planet (NM) scene (NM) node (NI) 
SPECIAL:NAME:XMLCatalogTest void testAbsolutePath(): test (VI)  | absolute (NM) path (NI) 	++ :: XML (NM) catalog (NM) test (N) 
SPECIAL:CLAS:FICSGameCreatedParserTest void setUp(): set (V) up (VP)  | FICS (NM) game (NM) created (NM) parser (NM) test (N) 	++
BASE_VERB:FORM:MsgChatCommand boolean exec(String message, PlayerImpl player, SendTextMessage response): exec (V)  | [ string (NI) - message (NI) ]	++ :: [ player (NM) impl (NI) - player (N) ] :: [ send (NM) text (NM) message (NI) - response (N) ] :: msg (NM) chat (NM) command (N)  :: boolean (N) 
SPECIAL:NAME:BMDSTool boolean checkDoseGroups(): check (VI)  | dose (NM) groups (N) 	++ :: boolean (N)  :: BMDS (NM) tool (N) 
CONSTRUCTOR:NAME:XTextField XTextField XTextField(int columns):  | X (NM) text (NM) field (N) 	++ :: [ int (N) - columns (N) ]
BASE_VERB:NAME:void visitPhiJoinStmt(PhiJoinStmt stmt): visit (V)  | EQUIV[phi (NM) join (NM) stmt (N) , [ phi (NM) join (NM) stmt (N) - stmt (N) ]]	++ :: ANONYMOUS (N) 
CONSTRUCTOR:NAME:HorizonStatisticProvider HorizonStatisticProvider HorizonStatisticProvider(short type):  | horizon (NM) statistic (NM) provider (N) 	++ :: [ short (N) - type (N) ]
CONSTRUCTOR:NAME:jResetDatabaseThread jResetDatabaseThread jResetDatabaseThread(jPrologServices ps, PrintWriter e):  | j (NM) reset (NM) database (NM) thread (N) 	++ :: [ j (NM) prolog (NM) services (N) - ps (N) ] :: [ print (NM) writer (N) - e (N) ]
SPECIAL:NAME:Table static Table createNew(boolean addEmptyCell): create (V)  | new (NI) 	++ :: [ boolean (N) - add (NM) empty (NM) cell (N) ] :: [ boolean (N) - add (NM) empty (NM) cell (N) ] :: table (N)  :: table (N) 
CONSTRUCTOR:NAME:GPTHeader GPTHeader GPTHeader(byte data, int offset):  | GPT (NM) header (N) 	++ :: [ byte (N) - data (NI) ] :: [ int (N) - offset (N) ]
PREP:NAME:AbstractListCEPath String toString(): convert (V) | to (P) string (NI) 	++ :: abstract (NM) list (NM) CE (NM) path (NI)  :: string (NI) 
SPECIAL:NAME:CztParser void printErrors(List<? extends CztError> errors, Buffer buffer, DefaultErrorSource errorSource): print (V)  | errors (N) 	++ :: [ buffer (NI) - buffer (NI) ] :: [ default (NM) error (NM) source (NI) - error (NM) source (NI) ] :: czt (NM) parser (N) 
SPECIAL:NAME:JobLockUseListener void deleteLockUse(int index): delete (V)  | lock (NM) use (N) 	++ :: [ int (N) - index (NI) ] :: job (NM) lock (NM) use (NM) listener (N) 
VOID_NP:NAME:CompatElt void unsetWw6BorderRules(): handle (V) | unset (NM) ww (NM) 6 (D) border (NM) rules (N) 	++ :: compat (NM) elt (NI)  :: void (N) 
SPECIAL:NAME:SubmitChooseFiles void setEnterStudentId(String enterStudentId): set (V)  | enter (NM) student (NM) id (NI) 	++ :: [ string (NI) - enter (NM) student (NM) id (NI) ] :: submit (NM) choose (NM) files (N) 
V_3P_IRR:NAME:AccessManager2 boolean isEmulatorAllowed(String emulator): is (V)  | emulator (NM) allowed (N) 	++ :: [ string (NI) - emulator (N) ] :: boolean (N)  :: access (NM) manager (NM) 2 (N) 
CONSTRUCTOR:NAME:DirectConnectionAction DirectConnectionAction DirectConnectionAction(FileTransferMessage _ft):  | direct (NM) connection (NM) action (N) 	++ :: [ file (NM) transfer (NM) message (NI) - ft (N) ]
BASE_VERB:NAME:IF_SourceManager void updateSourceFile(SourceObject sourceToUpdate): update (V)  | source (NM) file (NI) 	++ :: [ source (NM) object (NI) - source (NM) to (NM) update (N) ] :: IF (NM) source (NM) manager (N) 
SPECIAL:NAME:LifecycleInfo String getIconPath(): get (V)  | icon (NM) path (NI) 	++ :: string (NI)  :: lifecycle (NM) info (NI) 
V_3P_IRR:NAME:XhStupidModel7 static boolean isProcessingComplete(): is (V)  | processing (NM) complete (N) 	++ :: boolean (N)  :: xh (NM) stupid (NM) model (NM) 7 (N) 
SPECIAL:FORM:RootDAO List find(String query, Object obj, Type type): find (V)  | [ string (NI) - query (N) ]	++ :: [ object (NI) - obj (NI) ] :: [ type (N) - type (N) ] :: root (NM) DAO (N)  :: list (N) 
VOID_NP:NAME:BeanPropertyTableModel void rollback(): handle (V) | rollback (N) 	++ :: bean (NM) property (NM) table (NM) model (NI)  :: void (N) 
SPECIAL:NAME:FichaWrapper void setAltaMinuto(String altaMinuto): set (V)  | alta (NM) minuto (N) 	++ :: [ string (NI) - alta (NM) minuto (N) ] :: ficha (NM) wrapper (NI) 
SPECIAL:NAME:CompiledSDD String getName(): get (V)  | name (NI) 	++ :: string (NI)  :: compiled (NM) SDD (N) 
CONSTRUCTOR:NAME:PropertyDefaultSource PropertyDefaultSource PropertyDefaultSource(String propertyFileName, boolean throwIOExceptions):  | property (NM) default (NM) source (NI) 	++ :: [ string (NI) - property (NM) file (NM) name (NI) ] :: [ boolean (N) - throw (NM) IO (NM) exceptions (N) ]
SPECIAL:NAME:Group void setId(Long id): set (V)  | id (NI) 	++ :: [ long (N) - id (NI) ] :: group (N) 
BASE_VERB:NAME:UIHandler void clearChannelList(): clear (V)  | channel (NM) list (N) 	++ :: UI (NM) handler (N) 
SPECIAL:NAME:ConcurrentReaderHashMap void readObject(ObjectInputStream s): read (V)  | object (NI) 	++ :: [ object (NM) input (NM) stream (NI) - s (N) ] :: concurrent (NM) reader (NM) hash (NM) map (N) 
BASE_VERB:FORM:MiscOp static void currentuserparams(Interpreter ip): currentuserparams (V)  | [ interpreter (N) - ip (N) ]	++ :: misc (NM) op (N) 
CONSTRUCTOR:NAME:ShortKeyDoubleOpenHashMap ShortKeyDoubleOpenHashMap ShortKeyDoubleOpenHashMap(ShortHashFunction keyhash, double loadFactor):  | short (NM) key (NM) double (NM) open (NM) hash (NM) map (N) 	++ :: [ short (NM) hash (NM) function (N) - keyhash (N) ] :: [ double (N) - load (NM) factor (N) ]
BASE_VERB:CLAS:FinalizableDelegatedExecutorService void finalize(): finalize (VI)  | finalizable (NM) delegated (NM) executor (NM) service (N) 	++
BASE_VERB:NAME:Group void validateAddMember(String groupIDs, String personIDs): validate (VI) add (V)  | member (N) 	++ :: [ string (NI) - group (NM) I (NM) ds (N) ] :: [ string (NI) - person (NM) I (NM) ds (N) ] :: group (N) 
SPECIAL:NAME:StartUpManager LoggingManager getLoggingManager(): get (V)  | logging (NM) manager (N) 	++ :: logging (NM) manager (N)  :: start (NM) up (NM) manager (N) 
SPECIAL:NAME:ChargeCRUD ChargeLocal createNewChargeLocal(ChargeInfo info): create (V)  | new (NM) charge (NM) local (N) 	++ :: [ charge (NM) info (NI) - info (NI) ] :: charge (NM) local (N)  :: charge (NM) CRUD (N) 
SPECIAL:NAME:XMLOutputter void setElementStackCapacity(int newCapacity): set (V)  | element (NM) stack (NM) capacity (N) 	++ :: [ int (N) - new (NM) capacity (N) ] :: XML (NM) outputter (N) 
CONSTRUCTOR:NAME:HostFilter HostFilter HostFilter(List rawhosts):  | host (NM) filter (N) 	++ :: [ list (N) - rawhosts (N) ]
SPECIAL:NAME:JAPConfMixminion String getTabTitle(): get (V)  | tab (NM) title (N) 	++ :: string (NI)  :: JAP (NM) conf (NM) mixminion (N) 
BASE_VERB:FORM:Fetch void scroll(int value, String mode): scroll (V)  | [ int (N) - value (NI) ]	++ :: [ string (NI) - mode (N) ] :: fetch (N) 
SPECIAL:NAME:UnboundVariableCollector ParameterList getParameterList(): get (V)  | parameter (NM) list (N) 	++ :: parameter (NM) list (N)  :: unbound (NM) variable (NM) collector (N) 
SPECIAL:NAME:AudioStreamChunk void setBitsPerSample(int bps): set (V)  | bits (N) -- per (P) sample (N) 	++ :: [ int (N) - bps (N) ] :: audio (NM) stream (NM) chunk (N) 
SPECIAL:NAME:EmbeddedServletOptions TagPluginManager getTagPluginManager(): get (V)  | tag (NM) plugin (NM) manager (N) 	++ :: tag (NM) plugin (NM) manager (N)  :: embedded (NM) servlet (NM) options (N) 
SPECIAL:NAME:ADT_A04 AL1 getAL1(int rep): get (V)  | AL (N) 1 (D) 	++ :: [ int (N) - rep (N) ] :: AL (NM) 1 (N)  :: ADT (NM) A (NM) 04 (N) 
SPECIAL:NAME:FavoritesVFS String getParentOfPath(String path): get (V)  | parent (N) -- of (P) EQUIV[path (NI) , [ string (NI) - path (NI) ]]	++ :: string (NI)  :: favorites (NM) VFS (N) 
SPECIAL:NAME:AbstractGlobalCatalogAccount static List<PrimaryKey> findEnabledByLogin(String login): find (V)  | enabled (N) -- by (P) EQUIV[login (N) , [ string (NI) - login (N) ]]	++ :: list (NM) primary (NM) key (NI)  :: abstract (NM) global (NM) catalog (NM) account (N) 
SPECIAL:NAME:ColumnAttr String getSep(): get (V)  | sep (N) 	++ :: string (NI)  :: column (NM) attr (N) 
SPECIAL:NAME:FileRoleXrefMapping void setFileId(String fileId): set (V)  | file (NM) id (NI) 	++ :: [ string (NI) - file (NM) id (NI) ] :: file (NM) role (NM) xref (NM) mapping (N) 
ENDS_WITH_ED:NAME:void actionPerformed(ActionEvent event): handle (V) | action (NM) performed (N) 	++ :: [ action (NM) event (NI) - event (NI) ] :: ANONYMOUS (N)  :: void (N) 
ENDS_WITH_ED:NAME:void actionPerformed(ActionEvent e): handle (V) | action (NM) performed (N) 	++ :: [ action (NM) event (NI) - e (N) ] :: ANONYMOUS (N)  :: void (N) 
SPECIAL:NAME:SkillDialog BOPanel createAttributePanel(): create (V)  | attribute (NM) panel (N) 	++ :: BO (NM) panel (N)  :: skill (NM) dialog (N) 
SPECIAL:NAME:Document void setCreator(String creator): set (V)  | creator (N) 	++ :: [ string (NI) - creator (N) ] :: document (NI) 
SPECIAL:NAME:SmoothTiming double getTiming(long time): get (V)  | timing (N) 	++ :: [ long (N) - time (N) ] :: double (N)  :: smooth (NM) timing (N) 
CONSTRUCTOR:NAME:TypeException TypeException TypeException(String name):  | type (NM) exception (N) 	++ :: [ string (NI) - name (NI) ]
ENDS_WITH_ED:NAME:EmbedContApp void mouseClicked(MouseEvent e): handle (V) | mouse (NM) clicked (N) 	++ :: [ mouse (NM) event (NI) - e (N) ] :: embed (NM) cont (NM) app (N)  :: void (N) 
SPECIAL:NAME:TestSecurity void testSecurityTables(): test (VI)  | security (NM) tables (N) 	++ :: test (NM) security (N) 
SPECIAL:FORM:DeleteAlarmAction ActionForward execute(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response): execute (VI)  | [ action (NM) mapping (N) - mapping (N) ]	++ :: [ action (NM) form (N) - form (N) ] :: [ http (NM) servlet (NM) request (N) - request (N) ] :: [ http (NM) servlet (NM) response (N) - response (N) ] :: delete (NM) alarm (NM) action (N)  :: action (NM) forward (N) 
ENDS_WITH_ED:NAME:DisplayControl void actionPerformed(ActionEvent e): handle (V) | action (NM) performed (N) 	++ :: [ action (NM) event (NI) - e (N) ] :: display (NM) control (N)  :: void (N) 
BASE_VERB:NAME:EJBWSClientComponentMonitor Response outboundCall(RemoteComponentStub component, Request request): outbound (V)  | call (N) 	++ :: [ remote (NM) component (NM) stub (N) - component (N) ] :: [ request (N) - request (N) ] :: response (N)  :: EJBWS (NM) client (NM) component (NM) monitor (N) 
BASE_VERB:CLAS:OutputStream void flush(): flush (V)  | output (NM) stream (NI) 	++
SPECIAL:NAME:CIM_ComputerSystemController String getNameFormat(): get (V)  | name (NM) format (NI) 	++ :: string (NI)  :: CIM (NM) computer (NM) system (NM) controller (N) 
BASE_VERB:NAME:ESDynHtml void handleErrorCase(RandomAccessFile in, PrintWriter out, boolean visible): handle (VI)  | error (NM) case (N) 	++ :: [ random (NM) access (NM) file (NI) - in (NI) ] :: [ print (NM) writer (N) - out (N) ] :: [ boolean (N) - visible (N) ] :: ES (NM) dyn (NM) html (N) 
SPECIAL:NAME:ReportReader void readChartTitleElement(Node xmlElement, ChartReportElement2 re): read (V)  | EQUIV[chart (NM) title (NM) element (NI) , [ node (NI) - xml (NM) element (NI) ]]	++ :: [ chart (NM) report (NM) element (NM) 2 (N) - re (N) ] :: report (NM) reader (N) 
SPECIAL:NAME:AssertStatementImpl int getComplexity(): get (V)  | complexity (N) 	++ :: int (N)  :: assert (NM) statement (NM) impl (NI) 
SPECIAL:NAME:IncludeTag String getId(): get (V)  | id (NI) 	++ :: string (NI)  :: include (NM) tag (NI) 
SPECIAL:NAME:ButtonComponent void setChecked(Boolean value): set (V)  | checked (N) 	++ :: [ boolean (N) - value (NI) ] :: button (NM) component (N) 
SPECIAL:NAME:ExportWizardData void removeColumn(String columnName): remove (V)  | EQUIV[column (N) , [ string (NI) - column (NM) name (NI) ]]	++ :: export (NM) wizard (NM) data (NI) 
SPECIAL:NAME:CDSRectangle void setHeight(float height): set (V)  | height (N) 	++ :: [ float (N) - height (N) ] :: CDS (NM) rectangle (N) 
BASE_VERB:NAME:WorkerThread String composeWorkerThreadName(String poolName, String workerName): compose (V)  | EQUIV[worker (NM) thread (NM) name (NI) , [ string (NI) - pool (NM) name (NI) ], [ string (NI) - worker (NM) name (NI) ]]	++ :: string (NI)  :: worker (NM) thread (N) 
SPECIAL:NAME:Lesson HashSet getExpCardsSet(String cat, int LearnType): get (V)  | exp (NM) cards (NM) set (N) 	++ :: [ string (NI) - cat (N) ] :: [ int (N) - learn (NM) type (N) ] :: hash (NM) set (N)  :: lesson (N) 
CONSTRUCTOR:NAME:EncryptedEntry EncryptedEntry EncryptedEntry():  | encrypted (NM) entry (NI) 	++
SPECIAL:NAME:ProcessInstanceListenerTest void processInstanceTerminated(ProcessInstanceEvent e): process (VI)  | instance (NM) terminated (N) 	++ :: [ process (NM) instance (NM) event (NI) - e (N) ] :: process (NM) instance (NM) listener (NM) test (N) 
SPECIAL:NAME:RawCopyFormat String getNameExtensions(): get (V)  | name (NM) extensions (N) 	++ :: string (NI)  :: raw (NM) copy (NM) format (NI) 
SPECIAL:NAME:ParameterDefinition ArrayList findAllParameters(): find (V)  | all (DT) parameters (N) 	++ :: array (NM) list (N)  :: parameter (NM) definition (NI) 
SPECIAL:NAME:TestAttribute void setDataSourceAttrb(DataSourceAttrb dataSourceAttrb): set (V)  | data (NM) source (NM) attrb (N) 	++ :: [ data (NM) source (NM) attrb (N) - data (NM) source (NM) attrb (N) ] :: test (NM) attribute (N) 
SPECIAL:NAME:TomcatServer String getTagLibraryDescriptor(String inNamespace, HashMap inNameAndClass): get (V)  | tag (NM) library (NM) descriptor (NI) 	++ :: [ string (NI) - in (NM) namespace (N) ] :: [ hash (NM) map (N) - in (NM) name (NM) and (NM) class (NI) ] :: string (NI)  :: tomcat (NM) server (N) 
SPECIAL:NAME:FileResolvedContent int getLength(): get (V)  | length (N) 	++ :: int (N)  :: file (NM) resolved (NM) content (N) 
ENDS_WITH_ED:NAME:void actionPerformed(ActionEvent ae): handle (V) | action (NM) performed (N) 	++ :: [ action (NM) event (NI) - ae (N) ] :: ANONYMOUS (N)  :: void (N) 
SPECIAL:FORM:DPAPreParser static void main(String args): main (V)  | [ string (NI) - args (N) ]	++ :: DPA (NM) pre (NM) parser (N) 
CONSTRUCTOR:NAME:SequencedHashMap SequencedHashMap SequencedHashMap(int initialSize, float loadFactor):  | sequenced (NM) hash (NM) map (N) 	++ :: [ int (N) - initial (NM) size (N) ] :: [ float (N) - load (NM) factor (N) ]
SPECIAL:NAME:AnimateMotionImpl String getAttributeName(): get (V)  | attribute (NM) name (NI) 	++ :: string (NI)  :: animate (NM) motion (NM) impl (NI) 
CONSTRUCTOR:NAME:NLPConcept NLPConcept NLPConcept(String syntacticClass, String semanticClass, String concept, String conceptID):  | NLP (NM) concept (N) 	++ :: [ string (NI) - syntactic (NM) class (NI) ] :: [ string (NI) - semantic (NM) class (NI) ] :: [ string (NI) - concept (N) ] :: [ string (NI) - concept (NM) ID (NI) ]
SPECIAL:NAME:ActionDescriptorTypeDescriptor Class getJavaClass(): get (V)  | java (NM) class (NI) 	++ :: class (NI)  :: action (NM) descriptor (NM) type (NM) descriptor (NI) 
BASE_VERB:NAME:CharacterGenerator static void buildSpells(Character character, SkillGroup group, String name, String type, int realm): build (V)  | spells (N) 	++ :: [ character (N) - character (N) ] :: [ skill (NM) group (N) - group (N) ] :: [ string (NI) - name (NI) ] :: [ string (NI) - type (N) ] :: [ int (N) - realm (N) ] :: character (NM) generator (N) 
SPECIAL:NAME:KEAModelBuilder void setDisallowIPeriods(boolean newdisallowIPeriods): set (V)  | disallow (NM) I (NM) periods (N) 	++ :: [ boolean (N) - newdisallow (NM) I (NM) periods (N) ] :: KEA (NM) model (NM) builder (N) 
SPECIAL:NAME:WSDLCacheTest void testNonWsISchemaImportExceptionMessage(): test (VI)  | non (NM) ws (NM) I (NM) schema (NM) import (NM) exception (NM) message (NI) 	++ :: WSDL (NM) cache (NM) test (N) 
SPECIAL:FORM:QueryTool Result execute(String expression): execute (VI)  | [ string (NI) - expression (N) ]	++ :: query (NM) tool (N)  :: result (N) 
ENDS_WITH_ED:NAME:IAdministrarGrupoCliente void cmbBusquedaItemStateChanged(ItemEvent evt): handle (V) | cmb (NM) busqueda (NM) item (NM) state (NM) changed (N) 	++ :: [ item (NM) event (NI) - evt (N) ] :: I (NM) administrar (NM) grupo (NM) cliente (N)  :: void (N) 
SPECIAL:CLAS:Bucket void load(): load (V)  | bucket (N) 	++
CONSTRUCTOR:NAME:TotalReceivedMessages TotalReceivedMessages TotalReceivedMessages(String key):  | total (NM) received (NM) messages (N) 	++ :: [ string (NI) - key (NI) ]
SPECIAL:NAME:Data_sourceTYPE void setLast_upd_db_site(byte last_upd_db_site): set (V)  | last (DT) upd (NM) db (NM) site (N) 	++ :: [ byte (N) - last (DT) upd (NM) db (NM) site (N) ] :: data (NM) source (NM) TYPE (N) 
BASE_VERB:FORM:GrandStave void paint(Graphics graphics): paint (V)  | [ graphics (N) - graphics (N) ]	++ :: grand (NM) stave (N) 
BASE_VERB:NAME:ThreadGroup boolean allowThreadSuspension(boolean allow): allow (VI)  | thread (NM) suspension (N) 	++ :: [ boolean (N) - allow (N) ] :: [ boolean (N) - allow (N) ] :: boolean (N)  :: thread (NM) group (N) 
SPECIAL:NAME:GraphPars void setLeftMargin(double lm): set (V)  | left (NM) margin (N) 	++ :: [ double (N) - lm (N) ] :: graph (NM) pars (N) 
CONSTRUCTOR:NAME:IdlStructSeqHolder IdlStructSeqHolder IdlStructSeqHolder():  | idl (NM) struct (NM) seq (NM) holder (NI) 	++
SPECIAL:NAME:PlaceholderParameterProgramLocation jq_Type getResultType(): get (V)  | result (NM) type (N) 	++ :: jq (NM) type (N)  :: placeholder (NM) parameter (NM) program (NM) location (NI) 
SPECIAL:NAME:SimpleExchanger void initializeContacts(EvolutionState state): initialize (V)  | contacts (N) 	++ :: [ evolution (NM) state (N) - state (N) ] :: simple (NM) exchanger (N) 
ENDS_WITH_ED:NAME:void actionPerformed(ActionEvent e): handle (V) | action (NM) performed (N) 	++ :: [ action (NM) event (NI) - e (N) ] :: ANONYMOUS (N)  :: void (N) 
SPECIAL:CLAS:ThreadContextLocatorImplementation ThreadContext get(): get (V)  | thread (NM) context (NM) locator (NM) implementation (N) 	++ :: thread (NM) context (N) 
SPECIAL:NAME:ClassLibraryImpl void removeObjectCodePrefixListener(PropertyChangeListener listener): remove (V)  | EQUIV[object (NM) code (NM) prefix (NM) listener (N) , [ property (NM) change (NM) listener (N) - listener (N) ]]	++ :: class (NM) library (NM) impl (NI) 
BASE_VERB:NAME:CEntity int hashCode(): hash (V)  | code (NI) 	++ :: int (N)  :: C (NM) entity (N) 
NOUN_PHRASE:NAME:OptAgentIDHelper static TypeCode type(): get (V) | type (N) 	++ :: opt (NM) agent (NM) ID (NM) helper (N)  :: type (NM) code (NI) 
ENDS_WITH_ING:NAME:void windowClosing(WindowEvent event): handle (V) | window (NM) closing (N) 	++ :: [ window (NM) event (NI) - event (NI) ] :: ANONYMOUS (N)  :: void (N) 
SPECIAL:NAME:ContentType String getMimeType(): get (V)  | mime (NM) type (N) 	++ :: string (NI)  :: content (NM) type (N) 
SPECIAL:NAME:SessionsView static SessionsView getDefault(): get (V)  | default (N) 	++ :: sessions (NM) view (NI)  :: sessions (NM) view (NI) 
SPECIAL:NAME:GameLoader Timer getTimer(): get (V)  | timer (N) 	++ :: timer (N)  :: game (NM) loader (N) 
SPECIAL:NAME:AbstractRenderer void setItemLabelPaint(Paint paint): set (V)  | item (NM) label (NM) paint (N) 	++ :: [ paint (N) - paint (N) ] :: abstract (NM) renderer (N) 
SPECIAL:NAME:NaturalSource MemopsBaseClass getParent(): get (V)  | parent (N) 	++ :: memops (NM) base (NM) class (NI)  :: natural (NM) source (NI) 
BASE_VERB:CLAS:PAParser int jj_ntk(): jj (PRE) ntk (V)  | PA (NM) parser (N) 	++ :: int (N) 
SPECIAL:NAME:RescueMap int getNeighbours(int node): get (V)  | neighbours (N) 	++ :: [ int (N) - node (NI) ] :: int (N)  :: rescue (NM) map (N) 
V_MODAL:NAME:Application boolean canStartSlaves(): can (VI) start (V)  | slaves (N) 	++ :: boolean (N)  :: application (N) 
SPECIAL:NAME:OPLL_CH void setVolume(int vol): set (V)  | volume (N) 	++ :: [ int (N) - vol (N) ] :: OPLL (NM) CH (N) 
ENDS_WITH_ED:NAME:void stateChanged(ChangeEvent e): handle (V) | state (NM) changed (N) 	++ :: [ change (NM) event (NI) - e (N) ] :: ANONYMOUS (N)  :: void (N) 
CONSTRUCTOR:NAME:MLotCtl MLotCtl MLotCtl(Properties ctx, ResultSet rs, String trxName):  | M (NM) lot (DT) ctl (N) 	++ :: [ properties (N) - ctx (N) ] :: [ result (NM) set (N) - rs (N) ] :: [ string (NI) - trx (NM) name (NI) ]
ENDS_WITH_ED:NAME:void actionPerformed(ActionEvent evt): handle (V) | action (NM) performed (N) 	++ :: [ action (NM) event (NI) - evt (N) ] :: ANONYMOUS (N)  :: void (N) 
SPECIAL:NAME:HitStatistics Date getLogEntriesEnd(): get (V)  | log (NM) entries (NM) end (N) 	++ :: date (N)  :: hit (NM) statistics (N) 
CONSTRUCTOR:NAME:J3DViewport J3DViewport J3DViewport(J3DViewCore pOwner, Locale pLocale, String pID):  | J (NM) 3 (NM) D (NM) viewport (N) 	++ :: [ J (NM) 3 (NM) D (NM) view (NM) core (N) - p (NM) owner (N) ] :: [ locale (N) - p (NM) locale (N) ] :: [ string (NI) - p (NM) ID (NI) ]
BASE_VERB:FORM:DictionaryProxy void __delitem__(PyObject key): delitem (V)  | [ py (NM) object (NI) - key (NI) ]	++ :: dictionary (NM) proxy (NI) 
SPECIAL:CLAS:ExporterWizard void loadFromObject(): load (V)  | exporter (NM) wizard (N) -- from (P) object (NI) 	++
SPECIAL:NAME:UniRemind String getNotes(): get (V)  | notes (N) 	++ :: string (NI)  :: uni (NM) remind (N) 
CONSTRUCTOR:NAME:ExecutionsInClassFilter ExecutionsInClassFilter ExecutionsInClassFilter(String regexp, int opMode):  | executions (NM) in (NM) class (NM) filter (N) 	++ :: [ string (NI) - regexp (N) ] :: [ int (N) - op (NM) mode (N) ]
BASE_VERB:FORM:Factory static WidowsAttribute parse(XMLStreamReader sr, XmlOptions options): parse (V)  | [ XML (NM) stream (NM) reader (N) - sr (N) ]	++ :: [ xml (NM) options (N) - options (N) ] :: factory (N)  :: widows (NM) attribute (N) 
BASE_VERB:NAME:_PullConsumerStub void disconnect_pull_consumer(): disconnect (V)  | pull (NM) consumer (N) 	++ :: pull (NM) consumer (NM) stub (N) 
ENDS_WITH_ED:NAME:DiscoveryService void inquiryCompleted(int discType): handle (V) | inquiry (NM) completed (N) 	++ :: [ int (N) - disc (NM) type (N) ] :: discovery (NM) service (N)  :: void (N) 
CONSTRUCTOR:NAME:panel panel panel():  | panel (N) 	++
BASE_VERB:CLAS:ExEntryPanel void deactivate(boolean changeFocus): deactivate (V)  | ex (NM) entry (NM) panel (N) 	++ :: [ boolean (N) - change (NM) focus (N) ]
BASE_VERB:NAME:ExtensionTree Action buildDeleteAction(Configurable target): build (V)  | delete (NM) action (N) 	++ :: [ configurable (N) - target (N) ] :: action (N)  :: extension (NM) tree (NI) 
CONSTRUCTOR:NAME:Dom4jResult Dom4jResult Dom4jResult(Node node):  | dom (NM) 4 (NM) j (NM) result (N) 	++ :: [ node (NI) - node (NI) ]
BASE_VERB:NAME:Domain Set queryObjectNames(QueryExp exp): query (V)  | object (NM) names (N) 	++ :: [ query (NM) exp (N) - exp (N) ] :: set (N)  :: domain (N) 
CONSTRUCTOR:NAME:ConfigurableTestSetupTest ConfigurableTestSetupTest ConfigurableTestSetupTest(String name):  | configurable (NM) test (NM) setup (NM) test (N) 	++ :: [ string (NI) - name (NI) ]
CONSTRUCTOR:NAME:RollingCalendar RollingCalendar RollingCalendar():  | rolling (NM) calendar (N) 	++
ENDS_WITH_ED:NAME:PitcherLineupTable void dragGestureRecognized(DragGestureEvent dragGestureEvent): handle (V) | drag (NM) gesture (NM) recognized (N) 	++ :: [ drag (NM) gesture (NM) event (NI) - drag (NM) gesture (NM) event (NI) ] :: pitcher (NM) lineup (NM) table (N)  :: void (N) 
SPECIAL:NAME:InvocationController void setComponent(Object component): set (V)  | component (N) 	++ :: [ object (NI) - component (N) ] :: invocation (NM) controller (N) 
SPECIAL:NAME:osmsEncoderInfo void setRightsInfo(String rightsInfo): set (V)  | rights (NM) info (NI) 	++ :: [ string (NI) - rights (NM) info (NI) ] :: osms (NM) encoder (NM) info (NI) 
SPECIAL:NAME:VarScope void addSymbol(Symbol s): add (V)  | EQUIV[symbol (N) , [ symbol (N) - s (N) ]]	++ :: var (NM) scope (N) 
SPECIAL:NAME:AccessibleAWTMenuComponent String getAccessibleDescription(): get (V)  | accessible (NM) description (NI) 	++ :: string (NI)  :: accessible (NM) AWT (NM) menu (NM) component (N) 
V_3P_IRR:NAME:CreateClass boolean isImportRequired(TypeSummary parentSummary): is (V)  | import (NM) required (N) 	++ :: [ type (NM) summary (N) - parent (NM) summary (N) ] :: boolean (N)  :: create (NM) class (NI) 
BASE_VERB:NAME:NodeVisitor Object visitUnaryNode(UnaryNode node, Object results): visit (V)  | EQUIV[unary (NM) node (NI) , [ unary (NM) node (NI) - node (NI) ]]	++ :: [ object (NI) - results (N) ] :: object (NI)  :: node (NM) visitor (N) 
ING_VERB:NAME:XRendererListenerSupport void renderingPage(int page_index): rendering (V)  | EQUIV[page (N) , [ int (N) - page (NM) index (NI) ]]	++ :: X (NM) renderer (NM) listener (NM) support (N) 
SPECIAL:NAME:HtmlSelectBooleanCheckbox void setOnmousedown(String onmousedown): set (V)  | onmousedown (N) 	++ :: [ string (NI) - onmousedown (N) ] :: html (NM) select (NM) boolean (NM) checkbox (N) 
SPECIAL:NAME:ClassBase void removeComponent(Component element): remove (V)  | EQUIV[component (N) , [ component (N) - element (NI) ]]	++ :: class (NM) base (N) 
SPECIAL:NAME:HtmlPartie String getTitre(): get (V)  | titre (N) 	++ :: string (NI)  :: html (NM) partie (N) 
SPECIAL:NAME:GuiTableRow void setValueAt(int col, float value): set (V)  | value (NI) -- at (P) [ int (N) - col (N) ]	++ :: [ int (N) - col (N) ] :: [ float (N) - value (NI) ] :: gui (NM) table (NM) row (N) 
ENDS_WITH_ED:NAME:MiserlyInputStream boolean markSupported(): handle (V) | mark (NM) supported (N) 	++ :: miserly (NM) input (NM) stream (NI)  :: boolean (N) 
BASE_VERB:NAME:JAPViewIconified void updateValues(boolean bSync): update (V)  | values (N) 	++ :: [ boolean (N) - b (NM) sync (N) ] :: [ boolean (N) - b (NM) sync (N) ] :: JAP (NM) view (NM) iconified (N) 
BASE_VERB:NAME:OpenHashTools static int countMatches(boolean iF, int maxCount, boolean stopOnDismatch, IntFilter condition, byte states, int elements, int size): count (V)  | matches (N) 	++ :: [ int (N) - max (NM) count (N) ] :: [ int (NM) filter (N) - condition (N) ] :: [ byte (N) - states (N) ] :: [ int (N) - elements (N) ] :: [ int (N) - size (N) ] :: [ boolean (N) - i (NM) F (N) ] :: [ boolean (N) - stop (NM) on (NM) dismatch (N) ] :: int (N)  :: open (NM) hash (NM) tools (N) 
CONSTRUCTOR:NAME:TransactionPolicyEnum TransactionPolicyEnum TransactionPolicyEnum(String literalName):  | transaction (NM) policy (NM) enum (NI) 	++ :: [ string (NI) - literal (NM) name (NI) ]
SPECIAL:NAME:Property void setValue(E value): set (V)  | value (NI) 	++ :: [ E (N) - value (NI) ] :: property (N) 
ENDS_WITH_ED:NAME:void actionPerformed(ActionEvent e): handle (V) | action (NM) performed (N) 	++ :: [ action (NM) event (NI) - e (N) ] :: ANONYMOUS (N)  :: void (N) 
BASE_VERB:NAME:TargetRoot void parseSubmissionTargets(Node parentNode): parse (V)  | submission (NM) targets (N) 	++ :: [ node (NI) - parent (NM) node (NI) ] :: target (NM) root (N) 
SPECIAL:NAME:UserQueries String getSql_SET_LAST_INTIME(): get (V)  | sql (NM) SET (NM) LAST (DT) INTIME (N) 	++ :: string (NI)  :: user (NM) queries (N) 
SPECIAL:NAME:initex void set_last_ins_ptr(int m, int l): set (V)  | last (DT) ins (NM) ptr (N) 	++ :: [ int (N) - m (N) ] :: [ int (N) - l (N) ] :: initex (N) 
SPECIAL:NAME:WebServerConnection String getConnectionThreadName(): get (V)  | connection (NM) thread (NM) name (NI) 	++ :: string (NI)  :: web (NM) server (NM) connection (N) 
SPECIAL:NAME:TestMessagesTag2 void testMessagesNamePropertyDefaultBundleEmpty(): test (VI)  | messages (NM) name (NM) property (NM) default (NM) bundle (NM) empty (N) 	++ :: test (NM) messages (NM) tag (NM) 2 (N) 
SPECIAL:NAME:HttpRequest void readHeader(LineInput in): read (V)  | header (N) 	++ :: [ line (NM) input (NI) - in (NI) ] :: http (NM) request (N) 
SPECIAL:NAME:MockDnaseqDelegate void setArchiveSampleGroup_CollectionDummy(Throwable toThrow): set (V)  | archive (NM) sample (NM) group (NM) collection (NM) dummy (N) 	++ :: [ throwable (N) - to (NM) throw (N) ] :: mock (NM) dnaseq (NM) delegate (N) 
SPECIAL:NAME:XMLSchemaType void setRequired(Boolean arg0): set (V)  | required (N) 	++ :: [ boolean (N) - arg (NM) 0 (N) ] :: XML (NM) schema (NM) type (N) 
ENDS_WITH_ED:NAME:WindowListener void windowDeactivated(WindowEvent e): handle (V) | window (NM) deactivated (N) 	++ :: [ window (NM) event (NI) - e (N) ] :: window (NM) listener (N)  :: void (N) 
SPECIAL:NAME:HistoryManager void setViewer(Viewer viewer): set (V)  | viewer (N) 	++ :: [ viewer (N) - viewer (N) ] :: history (NM) manager (N) 
BASE_VERB:CLAS:Piggies void destroy(): destroy (V)  | piggies (N) 	++
SPECIAL:NAME:RtfWriter void writeList(): write (V)  | list (N) 	++ :: rtf (NM) writer (N) 
SPECIAL:NAME:ProgramItem String getProperty(String key): get (V)  | property (N) 	++ :: [ string (NI) - key (NI) ] :: string (NI)  :: program (NM) item (NI) 
SPECIAL:NAME:GraphMenuAction Graph getGraph(): get (V)  | graph (N) 	++ :: graph (N)  :: graph (NM) menu (NM) action (N) 
BASE_VERB:NAME:gnuDynAny void insert_boolean(boolean a_x): insert (V)  | boolean (N) 	++ :: [ boolean (N) - a (NM) x (N) ] :: [ boolean (N) - a (NM) x (N) ] :: gnu (NM) dyn (NM) any (DT) 
SPECIAL:NAME:TaskListItem String getTeamLeaderGUID(): get (V)  | team (NM) leader (NM) GUID (N) 	++ :: string (NI)  :: task (NM) list (NM) item (NI) 
V_3P_IRR:NAME:OutputEvent_getSpec boolean isSuccess(): is (V)  | success (N) 	++ :: boolean (N)  :: output (NM) event (NM) get (NM) spec (NI) 
CONSTRUCTOR:NAME:JavaCharStream JavaCharStream JavaCharStream(Reader dstream):  | java (NM) char (NM) stream (NI) 	++ :: [ reader (N) - dstream (N) ]
SPECIAL:NAME:AgiOperations void setVariable(String name, String value): set (V)  | variable (N) 	++ :: [ string (NI) - name (NI) ] :: [ string (NI) - value (NI) ] :: agi (NM) operations (N) 
BASE_VERB:NAME:Continuation2 void handleResult(T1 par1, T2 par2): handle (VI)  | result (N) 	++ :: [ T (NM) 1 (N) - par (NM) 1 (N) ] :: [ T (NM) 2 (N) - par (NM) 2 (N) ] :: continuation (NM) 2 (N) 
CONSTRUCTOR:NAME:Frame2_jButton19_actionAdapter Frame2_jButton19_actionAdapter Frame2_jButton19_actionAdapter(Frame2 adaptee):  | frame (NM) 2 (NM) j (NM) button (NM) 19 (NM) action (NM) adapter (NI) 	++ :: [ frame (NM) 2 (N) - adaptee (N) ]
BASE_VERB:NAME:MethodValidator void validateTestMethods(Class<? extends Annotation> annotation, boolean isStatic): validate (VI) test (VI)  | methods (N) 	++ :: [ boolean (N) - is (NM) static (N) ] :: [ boolean (N) - is (NM) static (N) ] :: method (NM) validator (N) 
CONSTRUCTOR:NAME:ChatStreamListener ChatStreamListener ChatStreamListener(TextArea output, URL url):  | chat (NM) stream (NM) listener (N) 	++ :: [ text (NM) area (N) - output (N) ] :: [ URL (NI) - url (NI) ]
CONSTRUCTOR:NAME:LookupContext LookupContext LookupContext(Blackboard bb, RelNode rels):  | lookup (NM) context (N) 	++ :: [ blackboard (N) - bb (N) ] :: [ rel (NM) node (NI) - rels (N) ]
EVENT_PARAM:NAME:void itemChange(ItemChangeEvent ev): handle (V) | item (NM) change (N) 	++ :: [ item (NM) change (NM) event (NI) - ev (N) ] :: ANONYMOUS (N)  :: void (N) 
PREP:NAME:ElementOrderTypeEnum String toString(): convert (V) | to (P) string (NI) 	++ :: element (NM) order (NM) type (NM) enum (NI)  :: string (NI) 
SPECIAL:NAME:HibernateIndex void getAllTopicDataObjects(ProviderTransaction txn, Topic t, Collection params, Collection types, boolean includeMergedTopics): get (V)  | all (DT) topic (NM) data (NM) objects (N) 	++ :: [ provider (NM) transaction (N) - txn (N) ] :: [ topic (N) - t (N) ] :: [ collection (N) - params (N) ] :: [ collection (N) - types (N) ] :: [ boolean (N) - include (NM) merged (NM) topics (N) ] :: hibernate (NM) index (NI) 
V_3P_IRR:NAME:NullTerm boolean isStruct(): is (V)  | struct (N) 	++ :: boolean (N)  :: null (NM) term (N) 
BASE_VERB:FORM:Factory static WrapAnchorxElt parse(String xmlAsString, XmlOptions options): parse (V)  | [ string (NI) - xml (NM) as (NM) string (NI) ]	++ :: [ xml (NM) options (N) - options (N) ] :: factory (N)  :: wrap (NM) anchorx (NM) elt (NI) 
SPECIAL:NAME:SupplierByCityKeyCreator boolean createSecondaryKey(TupleInput primaryKeyInput, Object valueInput, TupleOutput indexKeyOutput): create (V)  | EQUIV[secondary (NM) key (NI) , [ tuple (NM) input (NI) - primary (NM) key (NM) input (NI) ]]	++ :: [ object (NI) - value (NM) input (NI) ] :: [ tuple (NM) output (N) - index (NM) key (NM) output (N) ] :: boolean (N)  :: supplier (NM) by (NM) city (NM) key (NM) creator (N) 
SPECIAL:CLAS:DefaultStandardPropertySetFactory Object clone(): clone (V)  | default (NM) standard (NM) property (NM) set (NM) factory (N) 	++ :: object (NI) 
SPECIAL:NAME:AgentInfo void setCpuType(String cpuType): set (V)  | cpu (NM) type (N) 	++ :: [ string (NI) - cpu (NM) type (N) ] :: agent (NM) info (NI) 
SPECIAL:NAME:ApplicationInformation void set_UID(String uid): set (V)  | UID (N) 	++ :: [ string (NI) - uid (N) ] :: application (NM) information (N) 
SPECIAL:NAME:NSMutableArray void replaceObjectsInRange(NSRange range, NSArray<E> otherArray, NSRange otherRange): replace (V)  | objects (N) -- in (P) EQUIV[range (N) , [ NS (NM) range (N) - range (N) ], [ NS (NM) range (N) - other (DT) range (N) ]]	++ :: [ NS (NM) array (NM) E (N) - other (DT) array (N) ] :: NS (NM) mutable (NM) array (N) 
CONSTRUCTOR:NAME:TimeInputSpecification TimeInputSpecification TimeInputSpecification(String label, int maxDays, int granularity):  | time (NM) input (NM) specification (N) 	++ :: [ string (NI) - label (NI) ] :: [ int (N) - max (NM) days (N) ] :: [ int (N) - granularity (N) ]
SPECIAL:NAME:AbstractEndpointTestCase void testStreamSourceReader(): test (VI)  | stream (NM) source (NM) reader (N) 	++ :: abstract (NM) endpoint (NM) test (NM) case (N) 
BASE_VERB:NAME:CopyFileListStepTypeImpl void serializeBody(XMLSerializer context): serialize (V)  | body (N) 	++ :: [ XML (NM) serializer (N) - context (N) ] :: copy (NM) file (NM) list (NM) step (NM) type (NM) impl (NI) 
BASE_VERB:NAME:DxRepaintManager void adjustRoots(JComponent root, List<Component> roots, int index): adjust (V)  | EQUIV[roots (N) , [ list (NM) component (N) - roots (N) ]]	++ :: [ J (NM) component (N) - root (N) ] :: [ int (N) - index (NI) ] :: dx (NM) repaint (NM) manager (N) 
SPECIAL:NAME:CallableStatement void setBoolean(String parameterName, boolean x): set (V)  | boolean (N) 	++ :: [ string (NI) - parameter (NM) name (NI) ] :: [ boolean (N) - x (N) ] :: callable (NM) statement (NI) 
BASE_VERB:NAME:BasicFlexMol2DWriter void constrainCenter(AtomProxy atom, HalfPlaneProxy plane): constrain (V)  | center (N) 	++ :: [ atom (NM) proxy (NI) - atom (N) ] :: [ half (NM) plane (NM) proxy (NI) - plane (N) ] :: basic (NM) flex (NM) mol (NM) 2 (NM) D (NM) writer (N) 
SPECIAL:NAME:Container void setRequest(HttpServletRequest request): set (V)  | request (N) 	++ :: [ http (NM) servlet (NM) request (N) - request (N) ] :: container (NI) 
BASE_VERB:NAME:DesignArea void paintComponent(Graphics g): paint (V)  | component (N) 	++ :: [ graphics (N) - g (N) ] :: design (NM) area (N) 
SPECIAL:FORM:Start static void main(String args): main (V)  | [ string (NI) - args (N) ]	++ :: start (N) 
ENDS_WITH_ED:NAME:DragSourceAdapter void dragMouseMoved(DragSourceDragEvent e): handle (V) | drag (NM) mouse (NM) moved (N) 	++ :: [ drag (NM) source (NM) drag (NM) event (NI) - e (N) ] :: drag (NM) source (NM) adapter (NI)  :: void (N) 
SPECIAL:NAME:RepoConnect URL getConnector(): get (V)  | connector (N) 	++ :: URL (NI)  :: repo (NM) connect (N) 
SPECIAL:NAME:SocketChannelSession void setChannel(SocketChannel channel): set (V)  | channel (N) 	++ :: [ socket (NM) channel (N) - channel (N) ] :: socket (NM) channel (NM) session (N) 
BASE_VERB:FORM:HtmlWriter void li(String type): li (V)  | [ string (NI) - type (N) ]	++ :: html (NM) writer (N) 
SPECIAL:NAME:ASelectAuthentication String getASelectUserId(HttpServletRequest request): get (V)  | A (NM) select (NM) user (NM) id (NI) 	++ :: [ http (NM) servlet (NM) request (N) - request (N) ] :: string (NI)  :: A (NM) select (NM) authentication (N) 
BASE_VERB:NAME:GMLPlaceNameSAXHandler double parseDouble(StringBuilder sb): parse (V)  | double (N) 	++ :: [ string (NM) builder (N) - sb (N) ] :: double (N)  :: GML (NM) place (NM) name (NM) SAX (NM) handler (N) 
VOID_NP:NAME:Parent void ambiguous(): handle (V) | ambiguous (N) 	++ :: parent (N)  :: void (N) 
ENDS_WITH_ED:NAME:void actionPerformed(ActionEvent e): handle (V) | action (NM) performed (N) 	++ :: [ action (NM) event (NI) - e (N) ] :: ANONYMOUS (N)  :: void (N) 
SPECIAL:NAME:NamespacesHistoryLocalBusiness void setModifierRole(String modifierRole): set (V)  | modifier (NM) role (N) 	++ :: [ string (NI) - modifier (NM) role (N) ] :: namespaces (NM) history (NM) local (NM) business (N) 
ENDS_WITH_ED:NAME:EditMovement void btnSelectOwnerActionPerformed(ActionEvent evt): handle (V) | btn (PRE) select (NM) owner (NM) action (NM) performed (N) 	++ :: [ action (NM) event (NI) - evt (N) ] :: edit (NM) movement (N)  :: void (N) 
SPECIAL:NAME:MetadataProcessor static Parameter getParameter(MetadataMethod accessor, MetadataMethod mutator): get (V)  | parameter (N) 	++ :: [ metadata (NM) method (N) - accessor (N) ] :: [ metadata (NM) method (N) - mutator (N) ] :: parameter (N)  :: metadata (NM) processor (N) 
SPECIAL:NAME:SMaterial void setBackfaceCulling(boolean BackfaceCulling): set (V)  | backface (NM) culling (N) 	++ :: [ boolean (N) - backface (NM) culling (N) ] :: S (NM) material (N) 
SPECIAL:NAME:ImageWriter void addIIOWriteWarningListener(IIOWriteWarningListener listener): add (V)  | EQUIV[IIO (NM) write (NM) warning (NM) listener (N) , [ IIO (NM) write (NM) warning (NM) listener (N) - listener (N) ]]	++ :: image (NM) writer (N) 
CONSTRUCTOR:NAME:FilterIterator FilterIterator FilterIterator(SequenceIterator base, Expression filter, XPathContext context):  | filter (NM) iterator (N) 	++ :: [ sequence (NM) iterator (N) - base (N) ] :: [ expression (N) - filter (N) ] :: [ X (NM) path (NM) context (N) - context (N) ]
SPECIAL:NAME:FourthDimensionInteger int getIntValue(): get (V)  | int (NM) value (NI) 	++ :: int (N)  :: fourth (NM) dimension (NM) integer (N) 
NOUN_PHRASE:NAME:Factory static ContourPath newInstance(): get (V) | new (NM) instance (NI) 	++ :: factory (N)  :: contour (NM) path (NI) 
SPECIAL:NAME:PrimaryKeyFetcher String getSql(): get (V)  | sql (N) 	++ :: string (NI)  :: primary (NM) key (NM) fetcher (N) 
SPECIAL:NAME:RequestWrapper String getLocalName(): get (V)  | local (NM) name (NI) 	++ :: string (NI)  :: request (NM) wrapper (NI) 
SPECIAL:NAME:MsnContactListImpl void setContactCount(int contactCount): set (V)  | contact (NM) count (N) 	++ :: [ int (N) - contact (NM) count (N) ] :: msn (NM) contact (NM) list (NM) impl (NI) 
BASE_VERB:CLAS:UserUtil static User fetchByPrimaryKey(long userId): fetch (VI)  | user (NM) util (N) -- by (P) primary (NM) key (NI) 	++ :: [ long (N) - user (NM) id (NI) ] :: user (N) 
PREP:NAME:ProxyCard void onApply(): handle (V) | on (NM) apply (N) 	++ :: proxy (NM) card (N)  :: void (N) 
SPECIAL:NAME:BlockScope void printLocals(): print (V)  | locals (N) 	++ :: block (NM) scope (N) 
BASE_VERB:FORM:EjbHomeObj int insert(Object obj): insert (V)  | [ object (NI) - obj (NI) ]	++ :: ejb (NM) home (NM) obj (NI)  :: int (N) 
BASE_VERB:NAME:UndoManager void undoOrRedo(): undo (VI)  | or (NM) redo (N) 	++ :: undo (NM) manager (N) 
CONSTRUCTOR:NAME:YUICalendarDayViewHandler YUICalendarDayViewHandler YUICalendarDayViewHandler(String containerId):  | YUI (NM) calendar (NM) day (NM) view (NM) handler (N) 	++ :: [ string (NI) - container (NM) id (NI) ]
SPECIAL:NAME:SelectRolePage void setPermissionSelection(String selection): set (V)  | permission (NM) selection (N) 	++ :: [ string (NI) - selection (N) ] :: select (NM) role (NM) page (N) 
SPECIAL:NAME:Span SenderInitials addNewSenderInitials(): add (V)  | new (NM) sender (NM) initials (N) 	++ :: sender (NM) initials (N)  :: span (N) 
CONSTRUCTOR:NAME:StyleTest StyleTest StyleTest(TestForEcho app):  | style (NM) test (N) 	++ :: [ test (NM) for (NM) echo (N) - app (N) ]
SPECIAL:NAME:IXholonClass int getXhType(): get (V)  | xh (NM) type (N) 	++ :: int (N)  :: I (NM) xholon (NM) class (NI) 
NOUN_PHRASE:NAME:Mode QuickCheckResult quickCheck(char src, int start, int limit, boolean allowMaybe, UnicodeSet nx): get (V) | quick (NM) check (N) 	++ :: [ char (N) - src (N) ] :: [ int (N) - start (N) ] :: [ int (N) - limit (N) ] :: [ boolean (N) - allow (NM) maybe (N) ] :: [ unicode (NM) set (N) - nx (N) ] :: mode (N)  :: quick (NM) check (NM) result (N) 
CONSTRUCTOR:NAME:Mpeg7DescriptionMetadata Mpeg7DescriptionMetadata Mpeg7DescriptionMetadata(String version, Element agent, Vector creationLocationAddressLines, String toolName, String freeText, String time):  | mpeg (NM) 7 (NM) description (NM) metadata (N) 	++ :: [ string (NI) - version (N) ] :: [ element (NI) - agent (N) ] :: [ vector (N) - creation (NM) location (NM) address (NM) lines (N) ] :: [ string (NI) - tool (NM) name (NI) ] :: [ string (NI) - free (NM) text (NI) ] :: [ string (NI) - time (N) ]
BASE_VERB:FORM:AddEncyclopedia ActionForward exec(HttpServletRequest request, HttpServletResponse response, VelocityContext vc, IModuleInfo info, String op, IUserInfo ui, IAdminInfo ai): exec (V)  | [ http (NM) servlet (NM) request (N) - request (N) ]	++ :: [ http (NM) servlet (NM) response (N) - response (N) ] :: [ velocity (NM) context (N) - vc (N) ] :: [ I (NM) module (NM) info (NI) - info (NI) ] :: [ string (NI) - op (N) ] :: [ I (NM) user (NM) info (NI) - ui (N) ] :: [ I (NM) admin (NM) info (NI) - ai (N) ] :: add (NM) encyclopedia (N)  :: action (NM) forward (N) 
SPECIAL:FORM:ManagedSet boolean add(Object arg0): add (V)  | [ object (NI) - arg (NM) 0 (N) ]	++ :: managed (NM) set (N)  :: boolean (N) 
SPECIAL:NAME:PhoneNumberBean void setNote(String note): set (V)  | note (N) 	++ :: [ string (NI) - note (N) ] :: phone (NM) number (NM) bean (NI) 
EVENT_PARAM:NAME:XML11Toolkit void postEvent(AWTEvent anEvent): handle (V) | post (NM) event (NI) 	++ :: [ AWT (NM) event (NI) - an (DT) event (NI) ] :: XML (NM) 11 (NM) toolkit (N)  :: void (N) 
SPECIAL:NAME:AttributeNameToken String getPrefix(): get (V)  | prefix (N) 	++ :: string (NI)  :: attribute (NM) name (NM) token (N) 
SPECIAL:CLAS:ClientRecieve void run(): run (VI)  | client (NM) recieve (N) 	++
ENDS_WITH_ED:NAME:InternListener void inquiryCompleted(int discType): handle (V) | inquiry (NM) completed (N) 	++ :: [ int (N) - disc (NM) type (N) ] :: intern (NM) listener (N)  :: void (N) 
SPECIAL:NAME:ConnectionCommand void setSource(MessageEvent newSource): set (V)  | source (NI) 	++ :: [ message (NM) event (NI) - new (NM) source (NI) ] :: connection (NM) command (N) 
ENDS_WITH_ED:NAME:PDOrder void jComboBoxFrequencyFocusGained(FocusEvent evt): handle (V) | j (PRE) combo (NM) box (NM) frequency (NM) focus (NM) gained (N) 	++ :: [ focus (NM) event (NI) - evt (N) ] :: PD (NM) order (N)  :: void (N) 
SPECIAL:NAME:MarkerHelpRegistryReader void readAttributeElement(IConfigurationElement element): read (V)  | EQUIV[attribute (NM) element (NI) , [ I (NM) configuration (NM) element (NI) - element (NI) ]]	++ :: marker (NM) help (NM) registry (NM) reader (N) 
SPECIAL:NAME:CapListComponent JComponent getJComponent(): get (V)  | J (NM) component (N) 	++ :: J (NM) component (N)  :: cap (NM) list (NM) component (N) 
BASE_VERB:NAME:CrcTableGenerator void genValueOfMethod(): gen (V)  | value (NI) -- of (P) method (N) 	++ :: crc (NM) table (NM) generator (N) 
SPECIAL:NAME:JOggTime String getHibernateSet(String methodName): get (V)  | hibernate (NM) set (N) 	++ :: [ string (NI) - method (NM) name (NI) ] :: string (NI)  :: J (NM) ogg (NM) time (N) 
BASE_VERB:NAME:EkitCore void insertFormElement(Tag baseTag, String baseElement, Hashtable attribs, String fieldNames, String fieldTypes, boolean hasClosingTag): insert (V)  | EQUIV[form (NM) element (NI) , [ string (NI) - base (NM) element (NI) ]]	++ :: [ tag (NI) - base (NM) tag (NI) ] :: [ hashtable (N) - attribs (N) ] :: [ string (NI) - field (NM) names (N) ] :: [ string (NI) - field (NM) types (N) ] :: [ boolean (N) - has (NM) closing (NM) tag (NI) ] :: ekit (NM) core (N) 
SPECIAL:NAME:LMSCommentEntityData String getLMSComment(): get (V)  | LMS (NM) comment (N) 	++ :: string (NI)  :: LMS (NM) comment (NM) entity (NM) data (NI) 
SPECIAL:NAME:JGRPS_RMIMulticastEndPoint void processGetStateEvent(GetStateEvent event): process (VI) get (V)  | EQUIV[state (NM) event (NI) , [ get (NM) state (NM) event (NI) - event (NI) ]]	++ :: JGRPS (NM) RMI (NM) multicast (NM) end (NM) point (N) 
SPECIAL:NAME:ModuleList void readFile(IFile file): read (V)  | EQUIV[file (NI) , [ I (NM) file (NI) - file (NI) ]]	++ :: module (NM) list (N) 
BASE_VERB:FORM:TestModule void service(HttpConnection connection, ServerConfiguration config, ZoneConfiguration zone): service (V)  | [ http (NM) connection (N) - connection (N) ]	++ :: [ server (NM) configuration (NI) - config (NI) ] :: [ zone (NM) configuration (NI) - zone (N) ] :: test (NM) module (N) 
NOUN_PHRASE:NAME:String int indexOf(int ch): get (V) | index (NM) of (N) 	++ :: [ int (N) - ch (N) ] :: string (NI)  :: int (N) 
SPECIAL:NAME:TimeIntStatVar int getValue(): get (V)  | value (NI) 	++ :: int (N)  :: time (NM) int (NM) stat (NM) var (N) 
SPECIAL:NAME:IMELookupPanel JButton getBtnFirst(): get (V)  | btn (NM) first (N) 	++ :: J (NM) button (N)  :: IME (NM) lookup (NM) panel (N) 
BASE_VERB:NAME:AlternateLocation String generateHTTPString(): generate (V)  | HTTP (NM) string (NI) 	++ :: string (NI)  :: alternate (NM) location (NI) 
BASE_VERB:NAME:DepthFirstAdapter void outSnmpModuleSupportPart(Node node): out (V)  | snmp (NM) module (NM) support (NM) part (N) 	++ :: [ node (NI) - node (NI) ] :: depth (NM) first (NM) adapter (NI) 
SPECIAL:NAME:FloatingPointGroup double getDouble(Matcher matcher): get (V)  | double (N) 	++ :: [ matcher (N) - matcher (N) ] :: double (N)  :: floating (NM) point (NM) group (N) 
SPECIAL:NAME:I_JoServletService int getMaxRequests(): get (V)  | max (NM) requests (N) 	++ :: int (N)  :: I (NM) jo (NM) servlet (NM) service (N) 
PREP:NAME:ColorSpace float toRGB(float colorvalue): convert (V) | to (P) RGB (N) 	++ :: [ float (N) - colorvalue (N) ] :: color (NM) space (N)  :: float (N) 
CONSTRUCTOR:NAME:StandardTypeManagerImpl StandardTypeManagerImpl StandardTypeManagerImpl():  | standard (NM) type (NM) manager (NM) impl (NI) 	++
NOUN_PHRASE:NAME:NumericalDerivative static double firstDerivative(UnivariateFunction f, double x): get (V) | first (NM) derivative (N) 	++ :: [ univariate (NM) function (N) - f (N) ] :: [ double (N) - x (N) ] :: numerical (NM) derivative (N)  :: double (N) 
SPECIAL:NAME:VizProjectLoaderImpl Vector getProjects(): get (V)  | projects (N) 	++ :: vector (N)  :: viz (NM) project (NM) loader (NM) impl (NI) 
ENDS_WITH_ED:NAME:PollCreateGui void windowIconified(WindowEvent we): handle (V) | window (NM) iconified (N) 	++ :: [ window (NM) event (NI) - we (PR) ] :: poll (NM) create (NM) gui (N)  :: void (N) 
BASE_VERB:NAME:SingleImplementationInliner void visitLocalVariableTableAttrInfo(ClassFile classFile, MethodInfo methodInfo, CodeAttrInfo codeAttrInfo, LocalVariableTableAttrInfo localVariableTableAttrInfo): visit (V)  | EQUIV[local (NM) variable (NM) table (NM) attr (NM) info (NI) , [ method (NM) info (NI) - method (NM) info (NI) ], [ code (NM) attr (NM) info (NI) - code (NM) attr (NM) info (NI) ], [ local (NM) variable (NM) table (NM) attr (NM) info (NI) - local (NM) variable (NM) table (NM) attr (NM) info (NI) ]]	++ :: [ class (NM) file (NI) - class (NM) file (NI) ] :: single (NM) implementation (NM) inliner (N) 
BASE_VERB:CLAS:DB void commit(): commit (VI)  | DB (N) 	++
BASE_VERB:CLAS:OpenOfficeEditor void dispose(): dispose (V)  | open (NM) office (NM) editor (N) 	++
SPECIAL:NAME:WorkingCalendar static WorkingCalendar getInstance(): get (V)  | instance (NI) 	++ :: working (NM) calendar (N)  :: working (NM) calendar (N) 
SPECIAL:NAME:TextFilterPluginManager void loadPlugins(): load (V)  | plugins (N) 	++ :: text (NM) filter (NM) plugin (NM) manager (N) 
SPECIAL:FORM:ProfeBaixaTemaTramitadaAction boolean execute(HttpServletRequest _req, HttpServletResponse _res): execute (VI)  | [ http (NM) servlet (NM) request (N) - req (N) ]	++ :: [ http (NM) servlet (NM) response (N) - res (N) ] :: profe (NM) baixa (NM) tema (NM) tramitada (NM) action (N)  :: boolean (N) 
SPECIAL:NAME:BeanContextServiceRevokedEvent BeanContextServices getSourceAsBeanContextServices(): get (V)  | source (NI) -- as (P) bean (NM) context (NM) services (N) 	++ :: bean (NM) context (NM) services (N)  :: bean (NM) context (NM) service (NM) revoked (NM) event (NI) 
V_3P_IRR:NAME:JavaToken boolean isWhiteSpace(): is (V)  | white (NM) space (N) 	++ :: boolean (N)  :: java (NM) token (N) 
BASE_VERB:CLAS:Expr boolean eval(): eval (V)  | expr (NI) 	++ :: boolean (N) 
SPECIAL:NAME:MasterStorableGenerator void addExitTransaction(CodeBuilder b, String opType, LocalVariable txnVar): add (V)  | exit (NM) transaction (N) 	++ :: [ code (NM) builder (N) - b (N) ] :: [ string (NI) - op (NM) type (N) ] :: [ local (NM) variable (N) - txn (NM) var (N) ] :: master (NM) storable (NM) generator (N) 
SPECIAL:NAME:ColorDialog String getBinning(): get (V)  | binning (N) 	++ :: string (NI)  :: color (NM) dialog (N) 
SPECIAL:NAME:PlanTableModel String getColumnName(int i): get (V)  | column (NM) name (NI) 	++ :: [ int (N) - i (N) ] :: string (NI)  :: plan (NM) table (NM) model (NI) 
SPECIAL:NAME:DataHandler void endElement(String uri, String localName, String qName): end (V)  | element (NI) 	++ :: [ string (NI) - uri (NI) ] :: [ string (NI) - local (NM) name (NI) ] :: [ string (NI) - q (NM) name (NI) ] :: data (NM) handler (N) 
ENDS_WITH_ED:NAME:void dataModified(): handle (V) | data (NM) modified (N) 	++ :: ANONYMOUS (N)  :: void (N) 
SPECIAL:NAME:GroupsDaoHibImp List getGroupsbyId(CaGroups caGroups): get (V)  | groupsby (NM) id (NI) 	++ :: [ ca (NM) groups (N) - ca (NM) groups (N) ] :: list (N)  :: groups (NM) dao (NM) hib (NM) imp (N) 
SPECIAL:NAME:AgendaPointBean void setMinutesText(String minutesText): set (V)  | minutes (NM) text (NI) 	++ :: [ string (NI) - minutes (NM) text (NI) ] :: agenda (NM) point (NM) bean (NI) 
SPECIAL:NAME:IThread void setState(int state): set (V)  | state (N) 	++ :: [ int (N) - state (N) ] :: I (NM) thread (N) 
V_3P_IRR:NAME:Viewer boolean isWindowCentered(): is (V)  | window (NM) centered (N) 	++ :: boolean (N)  :: viewer (N) 
SPECIAL:NAME:TCKUtils static Document getDocument(String fileName): get (V)  | document (NI) 	++ :: [ string (NI) - file (NM) name (NI) ] :: document (NI)  :: TCK (NM) utils (N) 
SPECIAL:CLAS:PanelEventPlantsMove void initialize(): initialize (V)  | panel (NM) event (NM) plants (NM) move (N) 	++
SPECIAL:NAME:_monitorexit void setParameters(Parameters params): set (V)  | parameters (N) 	++ :: [ parameters (N) - params (N) ] :: monitorexit (N) 
SPECIAL:NAME:HTTPApplicationConfiguration String getRxHostName(): get (V)  | rx (NM) host (NM) name (NI) 	++ :: string (NI)  :: HTTP (NM) application (NM) configuration (NI) 
SPECIAL:NAME:FastKey void writeExternal(ObjectOutput out): write (V)  | external (N) 	++ :: [ object (NM) output (N) - out (N) ] :: fast (NM) key (NI) 
CONSTRUCTOR:NAME:ParseException ParseException ParseException():  | parse (NM) exception (N) 	++
SPECIAL:NAME:Property String getMediaContainerType(): get (V)  | media (NM) container (NM) type (N) 	++ :: string (NI)  :: property (N) 
SPECIAL:NAME:SecurityDefReq_RelatedSym void setSide(String s): set (V)  | side (N) 	++ :: [ string (NI) - s (N) ] :: security (NM) def (NM) req (NM) related (NM) sym (N) 
BASE_VERB:CLAS:Interval Interval divideIntoParts(int multiplier, PrimeLimit limit): divide (V)  | interval (N) -- into (P) parts (N) 	++ :: [ int (N) - multiplier (N) ] :: [ prime (NM) limit (N) - limit (N) ] :: interval (N) 
BASE_VERB:NAME:SelectionExporter void exportZone(SimpleViewBuilder builder, int start, int end): export (V)  | zone (N) 	++ :: [ simple (NM) view (NM) builder (N) - builder (N) ] :: [ int (N) - start (N) ] :: [ int (N) - end (N) ] :: selection (NM) exporter (N) 
SPECIAL:NAME:FilterFacility int getBlockMapDices(boolean isTeamHome): get (V)  | block (NM) map (NM) dices (N) 	++ :: [ boolean (N) - is (NM) team (NM) home (N) ] :: [ boolean (N) - is (NM) team (NM) home (N) ] :: int (N)  :: filter (NM) facility (N) 
SPECIAL:NAME:ReceivableLO Boolean getOpen(): get (V)  | open (N) 	++ :: boolean (N)  :: receivable (NM) LO (N) 
SPECIAL:NAME:DrawVectorGUI void doStyle(int style): do (VI)  | EQUIV[style (N) , [ int (N) - style (N) ]]	++ :: draw (NM) vector (NM) GUI (N) 
SPECIAL:NAME:JHotel_Translator JTextField getJTextField1(): get (V)  | J (NM) text (NM) field (N) 1 (D) 	++ :: J (NM) text (NM) field (N)  :: J (NM) hotel (NM) translator (N) 
ENDS_WITH_ED:NAME:ReturnResultTabAction void actionPerformed(ActionEvent evt): handle (V) | action (NM) performed (N) 	++ :: [ action (NM) event (NI) - evt (N) ] :: return (NM) result (NM) tab (NM) action (N)  :: void (N) 
SPECIAL:NAME:Vector2D void removeAll(): remove (V)  | all (DT) 	++ :: vector (NM) 2 (NM) D (N) 
SPECIAL:CLAS:DeleteSelection void execute(): execute (VI)  | delete (NM) selection (N) 	++
VOID_NP:NAME:GenericCollectionWriter void writer__setArgs(int rNumArgs, String rArgs): handle (V) | writer (NM) set (NM) args (N) 	++ :: [ int (N) - r (NM) num (NM) args (N) ] :: [ string (NI) - r (NM) args (N) ] :: generic (NM) collection (NM) writer (N)  :: void (N) 
SPECIAL:NAME:SumSysV String getHexValue(): get (V)  | hex (NM) value (NI) 	++ :: string (NI)  :: sum (NM) sys (NM) V (N) 
ENDS_WITH_ED:NAME:TargetAglet void onCloned(CloneEvent event): handle (V) | on (NM) cloned (N) 	++ :: [ clone (NM) event (NI) - event (NI) ] :: target (NM) aglet (N)  :: void (N) 
BASE_VERB:FORM:AbstractBlock Size2D arrange(Graphics2D g2): arrange (V)  | [ graphics (NM) 2 (NM) D (N) - g (NM) 2 (N) ]	++ :: abstract (NM) block (N)  :: size (NM) 2 (NM) D (N) 
BASE_VERB:FORM:LdapPoolManager static void d(String msg, String o): d (V)  | [ string (NI) - msg (NI) ]	++ :: [ string (NI) - o (N) ] :: ldap (NM) pool (NM) manager (N) 
SPECIAL:NAME:ScriptForm void setScriptId(String id): set (V)  | script (NM) id (NI) 	++ :: [ string (NI) - id (NI) ] :: script (NM) form (N) 
SPECIAL:NAME:LabelImpl String getItemName(): get (V)  | item (NM) name (NI) 	++ :: string (NI)  :: label (NM) impl (NI) 
SPECIAL:NAME:AImpl void removeObjectCount(int i): remove (V)  | object (NM) count (N) 	++ :: [ int (N) - i (N) ] :: A (NM) impl (NI) 
SPECIAL:NAME:SSRowSetAdapter Timestamp getTimestamp(String columnName): get (V)  | timestamp (N) 	++ :: [ string (NI) - column (NM) name (NI) ] :: timestamp (N)  :: SS (NM) row (NM) set (NM) adapter (NI) 
NOUN_PHRASE:NAME:MPlayer Score nextScore(): get (V) | next (DT) score (N) 	++ :: M (NM) player (N)  :: score (N) 
BASE_VERB:FORM:FaceList void _clear(long _pointer_): clear (V)  | [ long (N) - pointer (N) ]	++ :: face (NM) list (N) 
SPECIAL:CLAS:StandardRegistryLoader void loadIntoRegistry(): load (V)  | standard (NM) registry (NM) loader (N) -- into (P) registry (N) 	++
SPECIAL:CLAS:Khazad Object clone(): clone (V)  | khazad (N) 	++ :: object (NI) 
CONSTRUCTOR:NAME:SubstringFunction SubstringFunction SubstringFunction(ValueConversionLogic converter):  | substring (NM) function (N) 	++ :: [ value (NM) conversion (NM) logic (N) - converter (N) ]
BASE_VERB:FORM:GlobalUtility static float asm_sqrt(float r): asm (PRE) sqrt (V)  | [ float (N) - r (N) ]	++ :: global (NM) utility (N)  :: float (N) 
SPECIAL:NAME:MultipleArrayData void setMaxRatio(float value): set (V)  | max (NM) ratio (N) 	++ :: [ float (N) - value (NI) ] :: multiple (NM) array (NM) data (NI) 
SPECIAL:NAME:ServerWelcomeMsgBehaviour void doBehaviour(Object sessionContext): do (VI)  | behaviour (N) 	++ :: [ object (NI) - session (NM) context (N) ] :: server (NM) welcome (NM) msg (NM) behaviour (N) 
CONSTRUCTOR:NAME:COWSubListIterator COWSubListIterator COWSubListIterator(int index):  | COW (NM) sub (NM) list (NM) iterator (N) 	++ :: [ int (N) - index (NI) ]
BASE_VERB:NAME:Apps void panelMenu(JMenuBar menuBar, JFrame frame): panel (V)  | menu (N) 	++ :: [ J (NM) menu (NM) bar (N) - menu (NM) bar (N) ] :: [ J (NM) frame (N) - frame (N) ] :: apps (N) 
BASE_VERB:NAME:InfoSenden void commandAction(Command c, Displayable d): command (V)  | action (N) 	++ :: [ command (N) - c (N) ] :: [ displayable (N) - d (N) ] :: info (NM) senden (N) 
SPECIAL:NAME:DBUserDBSpectrumEditMapBuilder DatabaseMap getDatabaseMap(): get (V)  | database (NM) map (N) 	++ :: database (NM) map (N)  :: DB (NM) user (NM) DB (NM) spectrum (NM) edit (NM) map (NM) builder (N) 
SPECIAL:NAME:TagsTypeImpl UnmarshallingEventHandler createUnmarshaller(UnmarshallingContext context): create (V)  | unmarshaller (N) 	++ :: [ unmarshalling (NM) context (N) - context (N) ] :: unmarshalling (NM) event (NM) handler (N)  :: tags (NM) type (NM) impl (NI) 
SPECIAL:FORM:void execute(Object o): execute (VI)  | [ object (NI) - o (N) ]	++ :: ANONYMOUS (N) 
CONSTRUCTOR:NAME:ADialogDialog ADialogDialog ADialogDialog(Frame frame, String title, String message, int messageType):  | A (NM) dialog (NM) dialog (N) 	++ :: [ frame (N) - frame (N) ] :: [ string (NI) - title (N) ] :: [ string (NI) - message (NI) ] :: [ int (N) - message (NM) type (N) ]
SPECIAL:NAME:CasesGroupImpl List getCases(): get (V)  | cases (N) 	++ :: list (N)  :: cases (NM) group (NM) impl (NI) 
SPECIAL:NAME:SelectQuery void setId(Integer id): set (V)  | id (NI) 	++ :: [ integer (N) - id (NI) ] :: select (NM) query (N) 
SPECIAL:NAME:WriteLog void setCubeTime(): set (V)  | cube (NM) time (N) 	++ :: write (NM) log (N) 
SPECIAL:CLAS:GuitarTunerApplet void start(): start (V)  | guitar (NM) tuner (NM) applet (N) 	++
SPECIAL:NAME:Connection String getSink(): get (V)  | sink (N) 	++ :: string (NI)  :: connection (N) 
V_3P_IRR:NAME:NoQuoteSets boolean isSet(UnderlyingSecurityType field): is (V)  | set (N) 	++ :: [ underlying (NM) security (NM) type (N) - field (N) ] :: boolean (N)  :: no (DT) quote (NM) sets (N) 
BASE_VERB:NAME:ASTAnalysis void outAInModeId(AInModeId node): out (V)  | A (N) -- in (P) EQUIV[mode (NM) id (NI) , [ A (NM) in (NM) mode (NM) id (NI) - node (NI) ]]	++ :: AST (NM) analysis (N) 
BASE_VERB:NAME:Const String numExpr(): num (V)  | expr (NI) 	++ :: string (NI)  :: const (N) 
SPECIAL:NAME:SimpleFunction double getVal(double arguments): get (V)  | val (NI) 	++ :: [ double (N) - arguments (N) ] :: double (N)  :: simple (NM) function (N) 
BASE_VERB:NAME:NodeConfiguration Instantiator makeInstantiator(BranchNode parentBranch, String nodeName): make (V)  | instantiator (N) 	++ :: [ branch (NM) node (NI) - parent (NM) branch (N) ] :: [ string (NI) - node (NM) name (NI) ] :: instantiator (N)  :: node (NM) configuration (NI) 
SPECIAL:NAME:TargetRoll void addModifier(Modifier modifier): add (V)  | EQUIV[modifier (N) , [ modifier (N) - modifier (N) ]]	++ :: target (NM) roll (N) 
BASE_VERB:NAME:ResultTransformer List transformList(List collection): transform (V)  | EQUIV[list (N) , [ list (N) - collection (N) ]]	++ :: list (N)  :: result (NM) transformer (N) 
SPECIAL:NAME:ModelWriter void writeOpenComment(Writer writer, Comments comments): write (V)  | open (NM) comment (N) 	++ :: [ writer (N) - writer (N) ] :: [ comments (N) - comments (N) ] :: model (NM) writer (N) 
BASE_VERB:FORM:ValenceCarbonConnectivityOrderZeroDescriptor DescriptorValue calculate(IAtomContainer atomContainer): calculate (V)  | [ I (NM) atom (NM) container (NI) - atom (NM) container (NI) ]	++ :: valence (NM) carbon (NM) connectivity (NM) order (NM) zero (PR) descriptor (NI)  :: descriptor (NM) value (NI) 
CONSTRUCTOR:NAME:InstanceDetailsHandler InstanceDetailsHandler InstanceDetailsHandler(HandlerMaker maker):  | instance (NM) details (NM) handler (N) 	++ :: [ handler (NM) maker (N) - maker (N) ]
SPECIAL:NAME:StreaminfoBlock int getMaximumBlockSize(): get (V)  | maximum (NM) block (NM) size (N) 	++ :: int (N)  :: streaminfo (NM) block (N) 
SPECIAL:FORM:ResourceConfigAction void doUpdate(ActionForm form, ActionContext context): do (VI) update (V)  | [ action (NM) form (N) - form (N) ]	++ :: [ action (NM) context (N) - context (N) ] :: resource (NM) config (NM) action (N) 
SPECIAL:NAME:DataBaseTable DataTableInfo getTableInfo(): get (V)  | table (NM) info (NI) 	++ :: data (NM) table (NM) info (NI)  :: data (NM) base (NM) table (N) 
SPECIAL:NAME:Verifier static void checkAttributeName(String name, Locator loc): check (VI)  | EQUIV[attribute (NM) name (NI) , [ string (NI) - name (NI) ]]	++ :: [ locator (N) - loc (N) ] :: verifier (N) 
BASE_VERB:NAME:PNMatrix int cardinalityCondition(): cardinality (V)  | condition (N) 	++ :: int (N)  :: PN (NM) matrix (N) 
CONSTRUCTOR:NAME:JEANFilePanel JEANFilePanel JEANFilePanel(JEANAPI api, JEANFileChooser chooser):  | JEAN (NM) file (NM) panel (N) 	++ :: [ JEANAPI (N) - api (N) ] :: [ JEAN (NM) file (NM) chooser (N) - chooser (N) ]
SPECIAL:NAME:CombinedTabbedPane void initializeActions(): initialize (V)  | actions (N) 	++ :: combined (NM) tabbed (NM) pane (N) 
CONSTRUCTOR:NAME:HeaderLcinfo HeaderLcinfo HeaderLcinfo(String attr_name, String value):  | header (NM) lcinfo (N) 	++ :: [ string (NI) - attr (NM) name (NI) ] :: [ string (NI) - value (NI) ]
SPECIAL:NAME:Acknowledgment Iterator getSignatureReferences(): get (V)  | signature (NM) references (N) 	++ :: iterator (N)  :: acknowledgment (N) 
V_3P_IRR:NAME:GenericHandler boolean isSuccessful(): is (V)  | successful (N) 	++ :: boolean (N)  :: generic (NM) handler (N) 
SPECIAL:NAME:Atom void setType(String type, boolean validate): set (V)  | type (N) 	++ :: [ string (NI) - type (N) ] :: [ boolean (N) - validate (N) ] :: atom (N) 
SPECIAL:NAME:LimsworkflowdetailManager PepsynanaloglistBean loadPepsynanaloglistViaPepsynanalogelement(LimsworkflowdetailBean pObject): load (V)  | pepsynanaloglist (N) -- via (P) pepsynanalogelement (N) 	++ :: [ limsworkflowdetail (NM) bean (NI) - p (NM) object (NI) ] :: pepsynanaloglist (NM) bean (NI)  :: limsworkflowdetail (NM) manager (N) 
CONSTRUCTOR:NAME:BaseDphrmPlanItem BaseDphrmPlanItem BaseDphrmPlanItem(String id):  | base (NM) dphrm (NM) plan (NM) item (NI) 	++ :: [ string (NI) - id (NI) ]
SPECIAL:NAME:I_IndexSession I_IndexManager getIndexManager(): get (V)  | index (NM) manager (N) 	++ :: I (NM) index (NM) manager (N)  :: I (NM) index (NM) session (N) 
CONSTRUCTOR:NAME:RowMapperResultSetExtractor RowMapperResultSetExtractor RowMapperResultSetExtractor(RowMapper rowMapper):  | row (NM) mapper (NM) result (NM) set (NM) extractor (N) 	++ :: [ row (NM) mapper (N) - row (NM) mapper (N) ]
BASE_VERB:NAME:MaxColumnNameLengthImpl void serializeURIs(XMLSerializer context): serialize (V)  | UR (NM) is (N) 	++ :: [ XML (NM) serializer (N) - context (N) ] :: max (NM) column (NM) name (NM) length (NM) impl (NI) 
SPECIAL:NAME:DataRow int getIndex(String label): get (V)  | index (NI) 	++ :: [ string (NI) - label (NI) ] :: int (N)  :: data (NM) row (N) 
NOUN_PHRASE:NAME:QSARWekaModelTests static Test suite(): get (V) | suite (N) 	++ :: QSAR (NM) weka (NM) model (NM) tests (N)  :: test (N) 
SPECIAL:NAME:OaiRepositoryFolder Permissions getPermissions(): get (V)  | permissions (N) 	++ :: permissions (N)  :: oai (NM) repository (NM) folder (N) 
BASE_VERB:NAME:StatementFindRdbWrapper static int insertStatementsByTripleNoAuth_6(PreparedStatementCache sqlCache, long subj, long prop, String sessionPrefix): insert (V)  | statements (N) -- by (P) triple (NM) no (DT) auth (N) 6 (D) 	++ :: [ prepared (NM) statement (NM) cache (N) - sql (NM) cache (N) ] :: [ long (N) - subj (N) ] :: [ long (N) - prop (N) ] :: [ string (NI) - session (NM) prefix (N) ] :: int (N)  :: statement (NM) find (NM) rdb (NM) wrapper (NI) 
SPECIAL:NAME:WSDLRegistry Property getProperty(QName name): get (V)  | property (N) 	++ :: [ Q (NM) name (NI) - name (NI) ] :: property (N)  :: WSDL (NM) registry (N) 
SPECIAL:CLAS:IPeopleDao List<People> findByName(String name): find (V)  | I (NM) people (NM) dao (N) -- by (P) EQUIV[name (NI) , [ string (NI) - name (NI) ]]	++ :: list (NM) people (N) 
SPECIAL:NAME:TableElement String getSingular(): get (V)  | singular (N) 	++ :: string (NI)  :: table (NM) element (NI) 
BASE_VERB:FORM:ApparatusPanel2 void repaint(long tm, int x, int y, int width, int height): repaint (V)  | [ long (N) - tm (N) ]	++ :: [ int (N) - x (N) ] :: [ int (N) - y (N) ] :: [ int (N) - width (N) ] :: [ int (N) - height (N) ] :: apparatus (NM) panel (NM) 2 (N) 
SPECIAL:NAME:ClassFinisher void addInterfaces(): add (V)  | interfaces (N) 	++ :: class (NM) finisher (N) 
CONSTRUCTOR:NAME:OurImageView OurImageView OurImageView(Element elem):  | our (PR) image (NM) view (NI) 	++ :: [ element (NI) - elem (NI) ]
ENDS_WITH_ED:NAME:void actionPerformed(ActionEvent evt): handle (V) | action (NM) performed (N) 	++ :: [ action (NM) event (NI) - evt (N) ] :: ANONYMOUS (N)  :: void (N) 
PREP:NAME:StringArray_Type String toArray(int addr): convert (V) | to (P) array (N) 	++ :: [ int (N) - addr (N) ] :: string (NM) array (NM) type (N)  :: string (NI) 
SPECIAL:NAME:DeputyTree List getSelectedProjectHolderTreeNodes(): get (V)  | selected (NM) project (NM) holder (NM) tree (NM) nodes (N) 	++ :: list (N)  :: deputy (NM) tree (NI) 
CONSTRUCTOR:NAME:RecvThread RecvThread RecvThread(String str, SocketChannel client):  | recv (NM) thread (N) 	++ :: [ string (NI) - str (NI) ] :: [ socket (NM) channel (N) - client (N) ]
SPECIAL:NAME:DomainObject Object getId(): get (V)  | id (NI) 	++ :: object (NI)  :: domain (NM) object (NI) 
SPECIAL:NAME:FarragoMetadataTest void testUniqueKeysAgg(): test (VI)  | unique (NM) keys (NM) agg (N) 	++ :: farrago (NM) metadata (NM) test (N) 
CONSTRUCTOR:NAME:CategoryArgument CategoryArgument CategoryArgument(String name, String description):  | category (NM) argument (N) 	++ :: [ string (NI) - name (NI) ] :: [ string (NI) - description (NI) ]
BASE_VERB:NAME:UnmodifiableMap Set entrySet(): entry (V)  | set (N) 	++ :: set (N)  :: unmodifiable (NM) map (N) 
ING_VERB:NAME:ResourceImpl long remainingWork(long start, long end): remaining (V)  | work (N) 	++ :: [ long (N) - start (N) ] :: [ long (N) - end (N) ] :: long (N)  :: resource (NM) impl (NI) 
SPECIAL:NAME:Assembly void setModule(Module module): set (V)  | module (N) 	++ :: [ module (N) - module (N) ] :: assembly (N) 
BASE_VERB:NAME:TermStructureTestCase void listEnd(String name): list (V)  | end (N) 	++ :: [ string (NI) - name (NI) ] :: term (NM) structure (NM) test (NM) case (N) 
SPECIAL:CLAS:FullUserInfo Date getOnSince(): get (V)  | full (NM) user (NM) info (NI) -- on (P) since (N) 	++ :: date (N) 
SPECIAL:FORM:CreateData static void main(String args): main (V)  | [ string (NI) - args (N) ]	++ :: create (NM) data (NI) 
ENDS_WITH_ED:NAME:StateReceiverCont void stateTransferCompleted(): handle (V) | state (NM) transfer (NM) completed (N) 	++ :: state (NM) receiver (NM) cont (N)  :: void (N) 
V_3PS:NAME:EjbcaJSFLanguageResource boolean containsValue(Object arg0): contains (V)  | value (NI) 	++ :: [ object (NI) - arg (NM) 0 (N) ] :: boolean (N)  :: ejbca (NM) JSF (NM) language (NM) resource (N) 
PREP:NAME:PRED_chart_file_1 String toString(): convert (V) | to (P) string (NI) 	++ :: PRED (NM) chart (NM) file (NM) 1 (N)  :: string (NI) 
BASE_VERB:NAME:AlarmManager void hideNotifications(MetaInfo metaInfo): hide (V)  | notifications (N) 	++ :: [ meta (NM) info (NI) - meta (NM) info (NI) ] :: alarm (NM) manager (N) 
BASE_VERB:FORM:SerialIO static void pause(int ms): pause (VI)  | [ int (N) - ms (N) ]	++ :: serial (NM) IO (N) 
CONSTRUCTOR:NAME:CertPathValidatorException CertPathValidatorException CertPathValidatorException(String msg, Throwable cause, CertPath certPath, int index):  | cert (NM) path (NM) validator (NM) exception (N) 	++ :: [ string (NI) - msg (NI) ] :: [ throwable (N) - cause (N) ] :: [ cert (NM) path (NI) - cert (NM) path (NI) ] :: [ int (N) - index (NI) ]
CONSTRUCTOR:NAME:CertStoreException CertStoreException CertStoreException(Throwable cause):  | cert (NM) store (NM) exception (N) 	++ :: [ throwable (N) - cause (N) ]
ENDS_WITH_ED:NAME:void keyPressed(KeyEvent evt): handle (V) | key (NM) pressed (N) 	++ :: [ key (NM) event (NI) - evt (N) ] :: ANONYMOUS (N)  :: void (N) 
SPECIAL:NAME:Target void resetFailureCount(): reset (V)  | failure (NM) count (N) 	++ :: target (N) 
SPECIAL:NAME:WebTestCase void addRequestParameter(String key, String values): add (V)  | request (NM) parameter (N) 	++ :: [ string (NI) - key (NI) ] :: [ string (NI) - values (N) ] :: web (NM) test (NM) case (N) 
SPECIAL:NAME:AbstractJavacTaskFactory T addArguments(Collection<String> c): add (V)  | arguments (N) 	++ :: [ collection (NM) string (NI) - c (N) ] :: T (N)  :: abstract (NM) javac (NM) task (NM) factory (N) 
ENDS_WITH_ING:NAME:WindowFrame void fireWindowReturning(): handle (V) | fire (NM) window (NM) returning (N) 	++ :: window (NM) frame (N)  :: void (N) 
V_3P_IRR:NAME:ANNModel boolean isOutputNeuron(int i): is (V)  | output (NM) neuron (N) 	++ :: [ int (N) - i (N) ] :: boolean (N)  :: ANN (NM) model (NI) 
NOUN_PHRASE:NAME:QCanvas boolean validChunk(int x, int y): get (V) | valid (NM) chunk (N) 	++ :: [ int (N) - x (N) ] :: [ int (N) - y (N) ] :: Q (NM) canvas (N)  :: boolean (N) 
ENDS_WITH_ED:NAME:IDebugListener void debugKeyPressed(): handle (V) | debug (NM) key (NM) pressed (N) 	++ :: I (NM) debug (NM) listener (N)  :: void (N) 
SPECIAL:NAME:ReportPdfExporter void setEngine(EngineService engine): set (V)  | engine (N) 	++ :: [ engine (NM) service (N) - engine (N) ] :: report (NM) pdf (NM) exporter (N) 
BASE_VERB:NAME:DEcluseFluviale void dureeMoyenneSortie(long _entree): duree (V)  | moyenne (NM) sortie (N) 	++ :: [ long (N) - entree (N) ] :: D (NM) ecluse (NM) fluviale (N) 
BASE_VERB:NAME:ZoomBean void updateZoomInButton(): update (V)  | zoom (N) -- in (P) button (N) 	++ :: zoom (NM) bean (NI) 
V_3P_IRR:NAME:DontKnowTrade boolean isSetCreditRating(): is (V)  | set (NM) credit (NM) rating (N) 	++ :: boolean (N)  :: dont (NM) know (NM) trade (N) 
ENDS_WITH_ED:NAME:TimeOfDay TimePoint asTimePointGiven(CalendarDate date, TimeZone timeZone): handle (V) | as (NM) time (NM) point (NM) given (N) 	++ :: [ calendar (NM) date (N) - date (N) ] :: [ time (NM) zone (N) - time (NM) zone (N) ] :: time (NM) of (NM) day (N)  :: time (NM) point (N) 
BASE_VERB:NAME:TreeScanner R visitCatch(CatchTree node, P p): visit (V)  | EQUIV[catch (N) , [ catch (NM) tree (NI) - node (NI) ]]	++ :: [ P (NI) - p (NI) ] :: R (N)  :: tree (NM) scanner (N) 
SPECIAL:NAME:OracleQueryMaker String createTableStructureQuery(): create (V)  | table (NM) structure (NM) query (N) 	++ :: string (NI)  :: oracle (NM) query (NM) maker (N) 
SPECIAL:NAME:DateTimeTransformer SourceField getSourceSecondFld(): get (V)  | source (NM) second (NM) fld (N) 	++ :: source (NM) field (N)  :: date (NM) time (NM) transformer (N) 
V_3P_IRR:NAME:DynamicTreeNode boolean isLeaf(): is (V)  | leaf (N) 	++ :: boolean (N)  :: dynamic (NM) tree (NM) node (NI) 
SPECIAL:NAME:DOMParser void setErrorFlag(boolean newErrorFlagSet): set (V)  | error (NM) flag (N) 	++ :: [ boolean (N) - new (NM) error (NM) flag (NM) set (N) ] :: DOM (NM) parser (N) 
SPECIAL:NAME:NoLegs EncodedLegSecurityDesc getEncodedLegSecurityDesc(): get (V)  | encoded (NM) leg (NM) security (NM) desc (NI) 	++ :: encoded (NM) leg (NM) security (NM) desc (NI)  :: no (DT) legs (N) 
EVENT_PARAM:NAME:SwingTextArea void handleMouseMotionEvent(MouseEvent ev): handle (V) | handle (NM) mouse (NM) motion (NM) event (NI) 	++ :: [ mouse (NM) event (NI) - ev (N) ] :: swing (NM) text (NM) area (N)  :: void (N) 
SPECIAL:CLAS:EndElementEvent void init(): init (V)  | end (NM) element (NM) event (NI) 	++
SPECIAL:NAME:meta meta setScheme(String scheme): set (V)  | scheme (N) 	++ :: [ string (NI) - scheme (N) ] :: meta (N)  :: meta (N) 
SPECIAL:NAME:PackageDescriptor void setGroup(String s): set (V)  | group (N) 	++ :: [ string (NI) - s (N) ] :: package (NM) descriptor (NI) 
SPECIAL:NAME:PredictionTrendAccuracy int getExampleCount(): get (V)  | example (NM) count (N) 	++ :: int (N)  :: prediction (NM) trend (NM) accuracy (N) 
SPECIAL:NAME:Tomcat55ServerDetector RuntimeDiscoverer getRuntimeDiscoverer(): get (V)  | runtime (NM) discoverer (N) 	++ :: runtime (NM) discoverer (N)  :: tomcat (NM) 55 (NM) server (NM) detector (N) 
BASE_VERB:NAME:AminoAcid boolean doesntMatch(AminoAcid aminoAcid): doesnt (V)  | match (N) 	++ :: [ amino (NM) acid (N) - amino (NM) acid (N) ] :: boolean (N)  :: amino (NM) acid (N) 
SPECIAL:NAME:InvoiceFreeLineEntryControllerImpl InvoiceFreeLineEntry createInvoiceFreeLineEntry(Long _invoiceOId, Long _orderLineEntryOId, String _descLines, Long _refNum, Long _lineNum, BigDecimal _amntPiece, Integer _numPieces, String _unit, String _comment, String _extRef, String _shortName, BigDecimal _VAT, String _createdFor, BigDecimal _discountPerc): create (V)  | invoice (NM) free (NM) line (NM) entry (NI) 	++ :: [ long (N) - invoice (NM) O (NM) id (NI) ] :: [ long (N) - order (NM) line (NM) entry (NM) O (NM) id (NI) ] :: [ string (NI) - desc (NM) lines (N) ] :: [ long (N) - ref (NM) num (NI) ] :: [ long (N) - line (NM) num (NI) ] :: [ big (NM) decimal (N) - amnt (NM) piece (N) ] :: [ integer (N) - num (NM) pieces (N) ] :: [ string (NI) - unit (N) ] :: [ string (NI) - comment (N) ] :: [ string (NI) - ext (NM) ref (NI) ] :: [ string (NI) - short (NM) name (NI) ] :: [ big (NM) decimal (N) - VAT (N) ] :: [ string (NI) - created (NM) for (N) ] :: [ big (NM) decimal (N) - discount (NM) perc (N) ] :: invoice (NM) free (NM) line (NM) entry (NI)  :: invoice (NM) free (NM) line (NM) entry (NM) controller (NM) impl (NI) 
SPECIAL:NAME:SourceFilter void setPicked(DefaultMutableTreeNode node, boolean isPicked): set (V)  | picked (N) 	++ :: [ default (NM) mutable (NM) tree (NM) node (NI) - node (NI) ] :: [ boolean (N) - is (NM) picked (N) ] :: source (NM) filter (N) 
SPECIAL:NAME:AbstractDynamicMenu void addTemporary(Component c): add (V)  | temporary (N) 	++ :: [ component (N) - c (N) ] :: abstract (NM) dynamic (NM) menu (N) 
V_3P_IRR:NAME:AttributeType boolean isObsolete(): is (V)  | obsolete (N) 	++ :: boolean (N)  :: attribute (NM) type (N) 
CONSTRUCTOR:NAME:CustomizationConfigTab CustomizationConfigTab CustomizationConfigTab(LayoutManager layoutManager):  | customization (NM) config (NM) tab (N) 	++ :: [ layout (NM) manager (N) - layout (NM) manager (N) ]
CONSTRUCTOR:NAME:ECNamedCurveParameterSpec ECNamedCurveParameterSpec ECNamedCurveParameterSpec(String name, ECCurve curve, ECPoint G, BigInteger n, BigInteger h, byte seed):  | EC (NM) named (NM) curve (NM) parameter (NM) spec (NI) 	++ :: [ string (NI) - name (NI) ] :: [ EC (NM) curve (N) - curve (N) ] :: [ EC (NM) point (N) - G (N) ] :: [ big (NM) integer (N) - n (N) ] :: [ big (NM) integer (N) - h (N) ] :: [ byte (N) - seed (N) ]
CONSTRUCTOR:NAME:NamingContextHolder NamingContextHolder NamingContextHolder():  | naming (NM) context (NM) holder (NI) 	++
ENDS_WITH_ED:NAME:ComboFocusListener void focusLost(FocusEvent e): handle (V) | focus (NM) lost (N) 	++ :: [ focus (NM) event (NI) - e (N) ] :: combo (NM) focus (NM) listener (N)  :: void (N) 
ENDS_WITH_ED:NAME:fireflier void tab_changed(): handle (V) | tab (NM) changed (N) 	++ :: fireflier (N)  :: void (N) 
PREP:NAME:MPEG7MediaTimePoint String toString(int indent): convert (V) | to (P) string (NI) 	++ :: [ int (N) - indent (N) ] :: MPEG (NM) 7 (NM) media (NM) time (NM) point (N)  :: string (NI) 
V_3P_IRR:NAME:SSHPropertyHandler boolean isAlias(String alias): is (V)  | EQUIV[alias (N) , [ string (NI) - alias (N) ]]	++ :: boolean (N)  :: SSH (NM) property (NM) handler (N) 
PREP:NAME:Adapter static LongKeyLongMap asLongKeyLongs(Map map):  | as (P) long (NM) key (NM) longs (N) 	++ :: [ map (N) - map (N) ] :: adapter (NI)  :: long (NM) key (NM) long (NM) map (N) 
SPECIAL:NAME:StAXDocumentSerializer void writeNamespace(String prefix, String namespaceURI): write (V)  | EQUIV[namespace (N) , [ string (NI) - namespace (NM) URI (NI) ]]	++ :: [ string (NI) - prefix (N) ] :: st (NM) AX (NM) document (NM) serializer (N) 
ENDS_WITH_ED:NAME:MyMouseListener void mouseEntered(MouseEvent me): handle (V) | mouse (NM) entered (N) 	++ :: [ mouse (NM) event (NI) - me (PR) ] :: my (PR) mouse (NM) listener (N)  :: void (N) 
SPECIAL:NAME:Spammer static Session getSession(): get (V)  | session (N) 	++ :: session (N)  :: spammer (N) 
CONSTRUCTOR:NAME:RandomAccessFileOrArray RandomAccessFileOrArray RandomAccessFileOrArray(Uri url):  | random (NM) access (NM) file (NM) or (NM) array (N) 	++ :: [ uri (NI) - url (NI) ]
SPECIAL:NAME:ToWindow OutputColumnset getOutputColumnset(): get (V)  | output (NM) columnset (N) 	++ :: output (NM) columnset (N)  :: to (NM) window (N) 
SPECIAL:NAME:SHPTest void testGetFieldValue(String dsName): test (VI) get (V)  | field (NM) value (NI) 	++ :: [ string (NI) - ds (NM) name (NI) ] :: SHP (NM) test (N) 
SPECIAL:NAME:PanelsDAO_Impl Panel getPanel(long id): get (V)  | panel (N) 	++ :: [ long (N) - id (NI) ] :: panel (N)  :: panels (NM) DAO (NM) impl (NI) 
BASE_VERB:NAME:iBatisTemplateGenerator void generarCodigo(): generar (V)  | codigo (N) 	++ :: i (NM) batis (NM) template (NM) generator (N) 
SPECIAL:NAME:SingleLine void setTimestamp(String timestamp): set (V)  | timestamp (N) 	++ :: [ string (NI) - timestamp (N) ] :: single (NM) line (N) 
SPECIAL:CLAS:void run(): run (VI)  | ANONYMOUS (N) 	++
SPECIAL:NAME:CIMProperty String getOverridingProperty(): get (V)  | overriding (NM) property (N) 	++ :: string (NI)  :: CIM (NM) property (N) 
SPECIAL:NAME:RPEntity void setATK(int atk): set (V)  | ATK (N) 	++ :: [ int (N) - atk (N) ] :: RP (NM) entity (N) 
BASE_VERB:NAME:FirstPassVisitor void visitAPUTSTATIC(jq_StaticField f): visit (V)  | APUTSTATIC (N) 	++ :: [ jq (NM) static (NM) field (N) - f (N) ] :: first (NM) pass (NM) visitor (N) 
SPECIAL:NAME:ExpressionTools static Set getCommonVariables(Expression expr1, Expression expr2): get (V)  | common (NM) variables (N) 	++ :: [ expression (N) - expr (NM) 1 (N) ] :: [ expression (N) - expr (NM) 2 (N) ] :: set (N)  :: expression (NM) tools (N) 
SPECIAL:NAME:DefaultHandler void startDocument(): start (V)  | document (NI) 	++ :: default (NM) handler (N) 
BASE_VERB:NAME:CapitalShip void applyDamageSummary(GameElementDamageSummary geds): apply (V)  | EQUIV[damage (NM) summary (N) , [ game (NM) element (NM) damage (NM) summary (N) - geds (N) ]]	++ :: capital (NM) ship (N) 
SPECIAL:FORM:void add(RootWindowControlSite site, RootWindow rootWindow, View view, float split, Direction direction, Style style): add (V)  | [ root (NM) window (NM) control (NM) site (N) - site (N) ]	++ :: [ root (NM) window (N) - root (NM) window (N) ] :: [ view (NI) - view (NI) ] :: [ float (N) - split (N) ] :: [ direction (N) - direction (N) ] :: [ style (N) - style (N) ] :: ANONYMOUS (N) 
CONSTRUCTOR:NAME:TestAngle TestAngle TestAngle(Complex receiver$):  | test (NM) angle (N) 	++ :: [ complex (N) - receiver (N) ]
BASE_VERB:NAME:ERXJSPopUpRelationPicker String defaultChildKey(): default (V)  | child (NM) key (NI) 	++ :: string (NI)  :: ERXJS (NM) pop (NM) up (NM) relation (NM) picker (N) 
SPECIAL:NAME:MyEntitySaveUndefEnabled void setField2(String field2): set (V)  | field (N) 2 (D) 	++ :: [ string (NI) - field (NM) 2 (N) ] :: my (PR) entity (NM) save (NM) undef (NM) enabled (N) 
CONSTRUCTOR:NAME:RuntimeModelerException RuntimeModelerException RuntimeModelerException(Localizable arg):  | runtime (NM) modeler (NM) exception (N) 	++ :: [ localizable (N) - arg (N) ]
BASE_VERB:NAME:SendFailedDialog void reactivatePanels(): reactivate (V)  | panels (N) 	++ :: send (NM) failed (NM) dialog (N) 
CONSTRUCTOR:NAME:ShowHide ShowHide ShowHide(String identifier, boolean show):  | show (NM) hide (N) 	++ :: [ string (NI) - identifier (NI) ] :: [ boolean (N) - show (N) ]
UNKOWN: :MakeProcedure static GenericProc makeProcedure$V(Object args):
SPECIAL:NAME:Node List getChildNodes(): get (V)  | child (NM) nodes (N) 	++ :: list (N)  :: node (NI) 
SPECIAL:NAME:PaymentGatewayServices static Map processCaptureSplitPayment(DispatchContext dctx, Map context): process (VI)  | capture (NM) split (NM) payment (N) 	++ :: [ dispatch (NM) context (N) - dctx (N) ] :: [ map (N) - context (N) ] :: map (N)  :: payment (NM) gateway (NM) services (N) 
SPECIAL:NAME:EventsEJB void setSessionContext(SessionContext context): set (V)  | session (NM) context (N) 	++ :: [ session (NM) context (N) - context (N) ] :: events (NM) EJB (N) 
SPECIAL:NAME:TinyNodeImpl String getSystemId(): get (V)  | system (NM) id (NI) 	++ :: string (NI)  :: tiny (NM) node (NM) impl (NI) 
SPECIAL:NAME:DBInterface Vector DBReadAreaData(String areaID, boolean reportStatus): DB (PRE) read (V)  | area (NM) data (NI) 	++ :: [ string (NI) - area (NM) ID (NI) ] :: [ boolean (N) - report (NM) status (N) ] :: vector (N)  :: DB (NM) interface (NI) 
SPECIAL:NAME:DLoginForm String getNewUserFormId(): get (V)  | new (NM) user (NM) form (NM) id (NI) 	++ :: string (NI)  :: D (NM) login (NM) form (N) 
SPECIAL:NAME:XSLSubDeployer void setValidateDTDs(boolean validate): set (V)  | validate (NM) DT (NM) ds (N) 	++ :: [ boolean (N) - validate (N) ] :: XSL (NM) sub (NM) deployer (N) 
SPECIAL:NAME:BeanRegistry TweekBean getBean(String name): get (V)  | bean (NI) 	++ :: [ string (NI) - name (NI) ] :: tweek (NM) bean (NI)  :: bean (NM) registry (N) 
SPECIAL:NAME:Visualization void removePropertyChangeListener(String propertyName, PropertyChangeListener listener): remove (V)  | EQUIV[property (NM) change (NM) listener (N) , [ property (NM) change (NM) listener (N) - listener (N) ]]	++ :: [ string (NI) - property (NM) name (NI) ] :: visualization (N) 
SPECIAL:NAME:SectionIterator static long __createSectionIterator__Ogre_ConfigFile_SettingsBySectionr(long c): create (V)  | section (NM) iterator (NM) ogre (NM) config (NM) file (NM) settings (N) -- by (P) sectionr (N) 	++ :: [ long (N) - c (N) ] :: long (N)  :: section (NM) iterator (N) 
SPECIAL:NAME:DefaultTypeConverter DataType getDataType(Class clazz): get (V)  | data (NM) type (N) 	++ :: [ class (NI) - clazz (N) ] :: data (NM) type (N)  :: default (NM) type (NM) converter (N) 
SPECIAL:FORM:GZIPResponseStream void write(int b): write (V)  | [ int (N) - b (N) ]	++ :: GZIP (NM) response (NM) stream (NI) 
NOUN_PHRASE:NAME:QMetaObject QMetaProperty property(String name): get (V) | property (N) 	++ :: [ string (NI) - name (NI) ] :: Q (NM) meta (NM) object (NI)  :: Q (NM) meta (NM) property (N) 
BASE_VERB:NAME:VerificationTypeVisitor void visitStackObjectType(Clazz clazz, Method method, CodeAttribute codeAttribute, int offset, int index, ObjectType objectType): visit (V)  | EQUIV[stack (NM) object (NM) type (N) , [ object (NM) type (N) - object (NM) type (N) ]]	++ :: [ clazz (N) - clazz (N) ] :: [ method (N) - method (N) ] :: [ code (NM) attribute (N) - code (NM) attribute (N) ] :: [ int (N) - offset (N) ] :: [ int (N) - index (NI) ] :: verification (NM) type (NM) visitor (N) 
PREP:NAME:FloatArray void toStream(int fromIndex, int toIndex, DataOutput dest): convert (V) | to (P) stream (NI) 	++ :: [ int (N) - from (NM) index (NI) ] :: [ int (N) - to (NM) index (NI) ] :: [ data (NM) output (N) - dest (N) ] :: float (NM) array (N)  :: void (N) 
EMPTY:NONE:MD5CheckSum static String md5(byte buffer):  | md (PRE) 5 (D) 
SPECIAL:NAME:WebNPreferences String getSMTPUserPass(): get (V)  | SMTP (NM) user (NM) pass (N) 	++ :: string (NI)  :: web (NM) N (NM) preferences (N) 
BASE_VERB:FORM:HiLoOptimizer Serializable generate(AccessCallback callback): generate (V)  | [ access (NM) callback (N) - callback (N) ]	++ :: hi (NM) lo (NM) optimizer (N)  :: serializable (N) 
BASE_VERB:FORM:JavadocListener void line(String s): line (V)  | [ string (NI) - s (N) ]	++ :: javadoc (NM) listener (N) 
SPECIAL:CLAS:InMemoryServerTestCase void testInit(): test (VI) init (V)  | in (NM) memory (NM) server (NM) test (NM) case (N) 	++
BASE_VERB:CLAS:ResultSetBuilder DataSet build(): build (V)  | result (NM) set (NM) builder (N) 	++ :: data (NM) set (N) 
BASE_VERB:NAME:CRViewSeries void applyView(): apply (V)  | view (NI) 	++ :: CR (NM) view (NM) series (N) 
SPECIAL:NAME:Cookie void setDomain(String domain): set (V)  | domain (N) 	++ :: [ string (NI) - domain (N) ] :: cookie (N) 
SPECIAL:NAME:PanelsFrame JPanel getPropertiesUI(): get (V)  | properties (NM) UI (N) 	++ :: J (NM) panel (N)  :: panels (NM) frame (N) 
BASE_VERB:FORM:PlainSocketImpl void listen(int queuelen): listen (V)  | [ int (N) - queuelen (N) ]	++ :: plain (NM) socket (NM) impl (NI) 
SPECIAL:FORM:AdaptingCatalog List search(String pattern, Envelope bbox, ProgressListener monitor): search (V)  | [ string (NI) - pattern (N) ]	++ :: [ envelope (N) - bbox (N) ] :: [ progress (NM) listener (N) - monitor (N) ] :: adapting (NM) catalog (N)  :: list (N) 
SPECIAL:FORM:IntlTestDateFormatAPIC static void main(String args): main (V)  | [ string (NI) - args (N) ]	++ :: intl (NM) test (NM) date (NM) format (NM) APIC (N) 
V_3P_IRR:NAME:NoPositions boolean isSet(LongQty field): is (V)  | set (N) 	++ :: [ long (NM) qty (N) - field (N) ] :: boolean (N)  :: no (DT) positions (N) 
CONSTRUCTOR:NAME:ReadonlyDynamicPropertyHolder ReadonlyDynamicPropertyHolder ReadonlyDynamicPropertyHolder(ReadonlyDynamicProperty initial):  | readonly (NM) dynamic (NM) property (NM) holder (NI) 	++ :: [ readonly (NM) dynamic (NM) property (N) - initial (N) ]
NOUN_PHRASE:NAME:SwingUtilities static Window windowForComponent(Component comp): get (V) | window (NM) for (NM) component (N) 	++ :: [ component (N) - comp (N) ] :: swing (NM) utilities (N)  :: window (N) 
SPECIAL:NAME:NumKind void addDescOn(int idx, Log log): add (V)  | desc (NI) -- on (P) [ int (N) - idx (N) ]	++ :: [ int (N) - idx (N) ] :: [ log (N) - log (N) ] :: num (NM) kind (N) 
SPECIAL:NAME:SimplePublishable boolean getAlwaysLive(): get (V)  | always (NM) live (N) 	++ :: boolean (N)  :: simple (NM) publishable (N) 
BASE_VERB:NAME:FractionImpl Integer xgetDenominatorValue(): xget (V)  | denominator (NM) value (NI) 	++ :: integer (N)  :: fraction (NM) impl (NI) 
SPECIAL:NAME:NamedInt void setInt(int value): set (V)  | int (N) 	++ :: [ int (N) - value (NI) ] :: named (NM) int (N) 
SPECIAL:NAME:OnmsUserNotification void setContactInfo(String contactInfo): set (V)  | contact (NM) info (NI) 	++ :: [ string (NI) - contact (NM) info (NI) ] :: onms (NM) user (NM) notification (N) 
SPECIAL:NAME:BeanRepository Class getBeanType(String bean): get (V)  | bean (NM) type (N) 	++ :: [ string (NI) - bean (NI) ] :: class (NI)  :: bean (NM) repository (N) 
SPECIAL:FORM:CSet void add(int i): add (V)  | [ int (N) - i (N) ]	++ :: C (NM) set (N) 
BASE_VERB:NAME:AffineTransform static Coordinate rotate90(Coordinate a, Coordinate b): rotate (V)  | 90 (D) 	++ :: [ coordinate (N) - a (N) ] :: [ coordinate (N) - b (N) ] :: coordinate (N)  :: affine (NM) transform (N) 
SPECIAL:NAME:CIM_MediaAccessStatData UnsignedInt64 get_RecoveredWriteOperations(): get (V)  | recovered (NM) write (NM) operations (N) 	++ :: unsigned (NM) int (NM) 64 (N)  :: CIM (NM) media (NM) access (NM) stat (NM) data (NI) 
CONSTRUCTOR:NAME:MySwingWorker MySwingWorker MySwingWorker():  | my (PR) swing (NM) worker (N) 	++
BASE_VERB:CLAS:AbstractUnmarshallingEventHandlerImpl void revertToParentFromLeaveAttribute(String uri, String local, String qname): revert (V)  | abstract (NM) unmarshalling (NM) event (NM) handler (NM) impl (NI) -- to (P) parent (NM) from (NM) leave (NM) attribute (N) 	++ :: [ string (NI) - uri (NI) ] :: [ string (NI) - local (N) ] :: [ string (NI) - qname (N) ]
SPECIAL:NAME:GraphPlanRepositorySource String getSourceDescription(): get (V)  | source (NM) description (NI) 	++ :: string (NI)  :: graph (NM) plan (NM) repository (NM) source (NI) 
SPECIAL:NAME:ZoneInfo SimpleTimeZone getLastRule(): get (V)  | last (DT) rule (N) 	++ :: simple (NM) time (NM) zone (N)  :: zone (NM) info (NI) 
SPECIAL:NAME:void resetTime(): reset (V)  | time (N) 	++ :: ANONYMOUS (N) 
BASE_VERB:NAME:NoticiationBocaHandler boolean handleSubRoleOf(boolean addition, Node roleUri, Node parentNode): handle (VI)  | EQUIV[sub (NM) role (N) , [ node (NI) - role (NM) uri (NI) ]]-- of (P) [ node (NI) - role (NM) uri (NI) ]	++ :: [ node (NI) - parent (NM) node (NI) ] :: [ boolean (N) - addition (N) ] :: boolean (N)  :: noticiation (NM) boca (NM) handler (N) 
SPECIAL:CLAS:PreparedStatement boolean execute(): execute (VI)  | prepared (NM) statement (NI) 	++ :: boolean (N) 
SPECIAL:NAME:SetUsers void setUsers(Set<PObject> users): set (V)  | users (N) 	++ :: [ set (NM) P (NM) object (NI) - users (N) ] :: set (NM) users (N) 
CONSTRUCTOR:NAME:FrameListener FrameListener FrameListener(InstancePointer p):  | frame (NM) listener (N) 	++ :: [ instance (NM) pointer (N) - p (NI) ]
BASE_VERB:NAME:VpnAttributeImpl void xsetVpn(Vector3D vpn): xset (V)  | EQUIV[vpn (N) , [ vector (NM) 3 (NM) D (N) - vpn (N) ]]	++ :: vpn (NM) attribute (NM) impl (NI) 
BASE_VERB:CLAS:AbstractMP3ObjectTest void tearDown(): tear (V) down (VP)  | abstract (NM) MP (NM) 3 (NM) object (NM) test (N) 	++
SPECIAL:FORM:FileFileFirstComparator int compare(Object o1, Object o2): compare (V)  | [ object (NI) - o (NM) 1 (N) ]	++ :: [ object (NI) - o (NM) 2 (N) ] :: file (NM) file (NM) first (NM) comparator (N)  :: int (N) 
V_3PS:NAME:InputEventRecordableEditor boolean handlesElement(StructureElement element): handles (V)  | EQUIV[element (NI) , [ structure (NM) element (NI) - element (NI) ]]	++ :: boolean (N)  :: input (NM) event (NM) recordable (NM) editor (N) 
SPECIAL:NAME:JoeFileFilter String getDescription(): get (V)  | description (NI) 	++ :: string (NI)  :: joe (NM) file (NM) filter (N) 
SPECIAL:NAME:LoadObject void loadList(DataSource dataSource, DataObject owner, IObjectList list): load (V)  | EQUIV[list (N) , [ I (NM) object (NM) list (N) - list (N) ]]	++ :: [ data (NM) source (NI) - data (NM) source (NI) ] :: [ data (NM) object (NI) - owner (N) ] :: load (NM) object (NI) 
V_3P_IRR:NAME:ProcessStartInfo boolean isQueued(): is (V)  | queued (N) 	++ :: boolean (N)  :: process (NM) start (NM) info (NI) 
V_3P_IRR:NAME:Refreshable boolean isTimeToRefresh(): is (V)  | time (N) -- to (P) refresh (N) 	++ :: boolean (N)  :: refreshable (N) 
PREP:NAME:Table String toString(): convert (V) | to (P) string (NI) 	++ :: table (N)  :: string (NI) 
VOID_NP:NAME:SqlAdmin void newConnection(): handle (V) | new (NM) connection (N) 	++ :: sql (NM) admin (N)  :: void (N) 
SPECIAL:NAME:ObjectRenderSpec Color getForegroundColor(): get (V)  | foreground (NM) color (N) 	++ :: color (N)  :: object (NM) render (NM) spec (NI) 
SPECIAL:NAME:SalesServlet void findSalesSettleLines(HttpServletRequest request, HttpServletResponse response): find (V)  | sales (NM) settle (NM) lines (N) 	++ :: [ http (NM) servlet (NM) request (N) - request (N) ] :: [ http (NM) servlet (NM) response (N) - response (N) ] :: sales (NM) servlet (N) 
SPECIAL:NAME:TestMain_Typecheck void test_reachable3(): test (VI)  | reachable (N) 3 (D) 	++ :: test (NM) main (NM) typecheck (N) 
BASE_VERB:NAME:UserSurvey void setsaveDir(String dir): setsave (V)  | EQUIV[dir (NI) , [ string (NI) - dir (NI) ]]	++ :: user (NM) survey (N) 
ENDS_WITH_ED:NAME:CheckBoxListener void itemStateChanged(ItemEvent e): handle (V) | item (NM) state (NM) changed (N) 	++ :: [ item (NM) event (NI) - e (N) ] :: check (NM) box (NM) listener (N)  :: void (N) 
ENDS_WITH_ED:NAME:DebugGraphListener void graphActionPerformed(GraphActionEvent e): handle (V) | graph (NM) action (NM) performed (N) 	++ :: [ graph (NM) action (NM) event (NI) - e (N) ] :: debug (NM) graph (NM) listener (N)  :: void (N) 
BASE_VERB:NAME:view_jsp boolean _jspx_meth_liferay_002dui_005fmessage_005f34(JspTag _jspx_th_c_005fwhen_005f4, PageContext _jspx_page_context): jspx (PRE) meth (V)  | liferay (NM) 002 (D) dui (NM) 005 (D) fmessage (NM) 005 (D) f (N) 34 (D) 	++ :: [ jsp (NM) tag (NI) - jspx (NM) th (NM) c (NM) 005 (NM) fwhen (NM) 005 (NM) f (NM) 4 (N) ] :: [ page (NM) context (N) - jspx (NM) page (NM) context (N) ] :: boolean (N)  :: view (NM) jsp (N) 
CONSTRUCTOR:NAME:OnBehalfOfSendingTime OnBehalfOfSendingTime OnBehalfOfSendingTime():  | on (NM) behalf (NM) of (NM) sending (NM) time (N) 	++
SPECIAL:NAME:UserMgrImplTests void testFindNextInternalNumberFirstCall(): test (VI) find (V)  | next (DT) internal (NM) number (NM) first (NM) call (N) 	++ :: user (NM) mgr (NM) impl (NM) tests (N) 
BASE_VERB:CLAS:ERDActionBar NSDictionary branch(): branch (V)  | ERD (NM) action (NM) bar (N) 	++ :: NS (NM) dictionary (N) 
SPECIAL:NAME:MutableCaretEvent int getDot(): get (V)  | dot (N) 	++ :: int (N)  :: mutable (NM) caret (NM) event (NI) 
V_3P_IRR:NAME:ZipEntryEnumeration boolean hasMoreElements(): has (V)  | more (DT) elements (N) 	++ :: boolean (N)  :: zip (NM) entry (NM) enumeration (N) 
BASE_VERB:FORM:request_getclientlist response invoke(Object target_object): invoke (VI)  | [ object (NI) - target (NM) object (NI) ]	++ :: request (NM) getclientlist (N)  :: response (N) 
SPECIAL:NAME:LocalAppDesc void setArgs(String args): set (V)  | args (N) 	++ :: [ string (NI) - args (N) ] :: local (NM) app (NM) desc (NI) 
CONSTRUCTOR:NAME:JLayeredPane JLayeredPane JLayeredPane():  | J (NM) layered (NM) pane (N) 	++
SPECIAL:NAME:SysTrayMenuItem void removeSysTrayMenuListener(SysTrayMenuListener listener): remove (V)  | EQUIV[sys (NM) tray (NM) menu (NM) listener (N) , [ sys (NM) tray (NM) menu (NM) listener (N) - listener (N) ]]	++ :: sys (NM) tray (NM) menu (NM) item (NI) 
SPECIAL:NAME:FileInfo int getCopyHandle(): get (V)  | copy (NM) handle (NI) 	++ :: int (N)  :: file (NM) info (NI) 
SPECIAL:FORM:HtmlGenerator void initialize(File srcHtmlDir): initialize (V)  | [ file (NI) - src (NM) html (NM) dir (NI) ]	++ :: html (NM) generator (N) 
BASE_VERB:NAME:boolean handleSolution(int solMatrix): handle (VI)  | solution (N) 	++ :: [ int (N) - sol (NM) matrix (N) ] :: boolean (N)  :: ANONYMOUS (N) 
CONSTRUCTOR:NAME:BoxPeer BoxPeer BoxPeer(IdPair idPair, BoxWrapper boxWrapper):  | box (NM) peer (N) 	++ :: [ id (NM) pair (N) - id (NM) pair (N) ] :: [ box (NM) wrapper (NI) - box (NM) wrapper (NI) ]
SPECIAL:FORM:HomeBroker HTTPResponse render(TransactionTracker TT, HTTPRequest req, WebSession thisSession): render (V)  | [ transaction (NM) tracker (N) - TT (N) ]	++ :: [ HTTP (NM) request (N) - req (N) ] :: [ web (NM) session (N) - this (PR) session (N) ] :: home (NM) broker (N)  :: HTTP (NM) response (N) 
NOUN_PHRASE:NAME:NonInferencingTaxonomyReasoner Set superClassesOf(OWLClass clazz): get (V) | super (NM) classes (NM) of (N) 	++ :: [ OWL (NM) class (NI) - clazz (N) ] :: non (NM) inferencing (NM) taxonomy (NM) reasoner (N)  :: set (N) 
V_3P_IRR:NAME:DTSNode boolean isTaxonomy(): is (V)  | taxonomy (N) 	++ :: boolean (N)  :: DTS (NM) node (NI) 
NOUN_PHRASE:NAME:DuplicateQualifiersHelper static TypeCode type(): get (V) | type (N) 	++ :: duplicate (NM) qualifiers (NM) helper (N)  :: type (NM) code (NI) 
SPECIAL:NAME:PathImpl List getViewBox(): get (V)  | view (NM) box (N) 	++ :: list (N)  :: path (NM) impl (NI) 
CONSTRUCTOR:NAME:X_S_TimeExpense X_S_TimeExpense X_S_TimeExpense(Properties ctx, int S_TimeExpense_ID):  | X (NM) S (NM) time (NM) expense (N) 	++ :: [ properties (N) - ctx (N) ] :: [ int (N) - S (NM) time (NM) expense (NM) ID (NI) ]
SPECIAL:NAME:Arrange float getN2(): get (V)  | N (N) 2 (D) 	++ :: float (N)  :: arrange (N) 
CONSTRUCTOR:NAME:AltImpl AltImpl AltImpl(Node n, EnhGraph g):  | alt (NM) impl (NI) 	++ :: [ node (NI) - n (N) ] :: [ enh (NM) graph (N) - g (N) ]
SPECIAL:CLAS:BaseDphrmUserState void initialize(): initialize (V)  | base (NM) dphrm (NM) user (NM) state (N) 	++
SPECIAL:NAME:ObjectPermissionServiceTest ObjectPermission createObjectPermission(InternalURI target, Object recipient, int permissionMask): create (V)  | object (NM) permission (N) 	++ :: [ internal (NM) URI (NI) - target (N) ] :: [ object (NI) - recipient (N) ] :: [ int (N) - permission (NM) mask (N) ] :: object (NM) permission (N)  :: object (NM) permission (NM) service (NM) test (N) 
BASE_VERB:NAME:JIS_X_0212_MS5022X_Encoder int encodeDouble(char ch): encode (V)  | double (N) 	++ :: [ char (N) - ch (N) ] :: int (N)  :: JIS (NM) X (NM) 0212 (NM) MS (NM) 5022 (NM) X (NM) encoder (N) 
SPECIAL:NAME:StorageHandler boolean GetState(): get (V)  | state (N) 	++ :: boolean (N)  :: storage (NM) handler (N) 
SPECIAL:NAME:TaskList String getSortColumn(int sortNo): get (V)  | sort (NM) column (N) 	++ :: [ int (N) - sort (NM) no (DT) ] :: string (NI)  :: task (NM) list (N) 
SPECIAL:NAME:Bug108825_Test String getTestMethodNames(): get (V)  | test (NM) method (NM) names (N) 	++ :: string (NI)  :: bug (NM) 108825 (NM) test (N) 
SPECIAL:NAME:HTMLTableRowElement String getBgColor(): get (V)  | bg (NM) color (N) 	++ :: string (NI)  :: HTML (NM) table (NM) row (NM) element (NI) 
SPECIAL:FORM:Instance V get(int index): get (V)  | [ int (N) - index (NI) ]	++ :: instance (NI)  :: V (N) 
BASE_VERB:CLAS:ResultSetDelegator void moveToCurrentRow(): move (V)  | result (NM) set (NM) delegator (N) -- to (P) current (NM) row (N) 	++
PREP:NAME:ByteArrayOutputStream String toString(String enc): convert (V) | to (P) string (NI) 	++ :: [ string (NI) - enc (N) ] :: byte (NM) array (NM) output (NM) stream (NI)  :: string (NI) 
SPECIAL:NAME:MeasurementDescriptor void getClassForByName(String className): get (V)  | class (NI) -- for (P) by (NM) name (NI) 	++ :: [ string (NI) - class (NM) name (NI) ] :: measurement (NM) descriptor (NI) 
SPECIAL:NAME:PlotApplet String getParameterInfo(): get (V)  | parameter (NM) info (NI) 	++ :: string (NI)  :: plot (NM) applet (N) 
NOUN_PHRASE:NAME:QuantLibJNI static double Money_value(long jarg1, Money jarg1_): get (V) | money (NM) value (NI) 	++ :: [ long (N) - jarg (NM) 1 (N) ] :: [ money (N) - jarg (NM) 1 (N) ] :: quant (NM) lib (NM) JNI (N)  :: double (N) 
SPECIAL:NAME:ScrollPane Point getScrollPosition(): get (V)  | scroll (NM) position (N) 	++ :: point (N)  :: scroll (NM) pane (N) 
SPECIAL:NAME:Base64Test void testEncodeThreeChars(): test (VI) encode (V)  | three (NM) chars (N) 	++ :: base (NM) 64 (NM) test (N) 
SPECIAL:NAME:PlainTextScriptDispatcher String getEventSubtypesImpl(): get (V)  | event (NM) subtypes (NM) impl (NI) 	++ :: string (NI)  :: plain (NM) text (NM) script (NM) dispatcher (N) 
SPECIAL:NAME:Standard IF_Encoding getEncoding(String name): get (V)  | encoding (N) 	++ :: [ string (NI) - name (NI) ] :: IF (NM) encoding (N)  :: standard (N) 
BASE_VERB:NAME:edit_005fplugin_jsp boolean _jspx_meth_liferay_002dui_005fmessage_005f4(PageContext _jspx_page_context): jspx (PRE) meth (V)  | liferay (NM) 002 (D) dui (NM) 005 (D) fmessage (NM) 005 (D) f (N) 4 (D) 	++ :: [ page (NM) context (N) - jspx (NM) page (NM) context (N) ] :: boolean (N)  :: edit (NM) 005 (NM) fplugin (NM) jsp (N) 
CONSTRUCTOR:NAME:Logarithm Logarithm Logarithm():  | logarithm (N) 	++
BASE_VERB:NAME:PerlTokenMarker byte markTokensImpl(byte _token, Segment line, int lineIndex): mark (V)  | tokens (NM) impl (NI) 	++ :: [ byte (N) - token (N) ] :: [ segment (N) - line (N) ] :: [ int (N) - line (NM) index (NI) ] :: byte (N)  :: perl (NM) token (NM) marker (N) 
V_3P_IRR:NAME:XDateTimeEditor boolean isEnabled(): is (V)  | enabled (N) 	++ :: boolean (N)  :: X (NM) date (NM) time (NM) editor (N) 
SPECIAL:NAME:FlashTag void initTag(): init (V)  | tag (NI) 	++ :: flash (NM) tag (NI) 
SPECIAL:NAME:IJobSchedulerController boolean initScheduler(IServiceJobSchedulerController service): init (V)  | scheduler (N) 	++ :: [ I (NM) service (NM) job (NM) scheduler (NM) controller (N) - service (N) ] :: boolean (N)  :: I (NM) job (NM) scheduler (NM) controller (N) 
SPECIAL:NAME:TransformerTest void testIntegerArray(): test (VI)  | integer (NM) array (N) 	++ :: transformer (NM) test (N) 
SPECIAL:NAME:AtomarAmpere String getUnitAbbreviation(): get (V)  | unit (NM) abbreviation (N) 	++ :: string (NI)  :: atomar (NM) ampere (N) 
SPECIAL:NAME:SplashWindow void endSplash(): end (V)  | splash (N) 	++ :: splash (NM) window (N) 
SPECIAL:NAME:TextFields Control createContents(Composite parent2): create (V)  | contents (N) 	++ :: [ composite (N) - parent (NM) 2 (N) ] :: control (N)  :: text (NM) fields (N) 
ENDS_WITH_ED:NAME:imtab void actionPerformed(ActionEvent e): handle (V) | action (NM) performed (N) 	++ :: [ action (NM) event (NI) - e (N) ] :: imtab (N)  :: void (N) 
SPECIAL:NAME:AllowsTableModel void setValueAt(Object in, int row, int col): set (V)  | value (NI) -- at (P) [ object (NI) - in (NI) ]	++ :: [ object (NI) - in (NI) ] :: [ int (N) - row (N) ] :: [ int (N) - col (N) ] :: allows (NM) table (NM) model (NI) 
SPECIAL:CLAS:HibernateTemplateTests void testFindWithNamedParametersAndTypes(): test (VI) find (V)  | hibernate (NM) template (NM) tests (N) -- with (P) named (NM) parameters (NM) and (NM) types (N) 	++
SPECIAL:NAME:HttpWorker void writeLn(PrintStream ps): write (V)  | ln (N) 	++ :: [ print (NM) stream (NI) - ps (N) ] :: http (NM) worker (N) 
SPECIAL:NAME:DirectoryAdapter long getLong(int tag): get (V)  | long (N) 	++ :: [ int (N) - tag (NI) ] :: long (N)  :: directory (NM) adapter (NI) 
BASE_VERB:NAME:MmFond JPopupMenu popupMenu(MmTree tree): popup (V)  | menu (N) 	++ :: [ mm (NM) tree (NI) - tree (NI) ] :: J (NM) popup (NM) menu (N)  :: mm (NM) fond (N) 
SPECIAL:CLAS:Location Object clone(): clone (V)  | location (NI) 	++ :: object (NI) 
SPECIAL:NAME:Component getLastComponent(Container focusCycleRoot): get (V)  | last (DT) component (N) 	++ :: [ container (NI) - focus (NM) cycle (NM) root (N) ] :: component (N)  :: ANONYMOUS (N) 
ENDS_WITH_ED:NAME:MainWindow void windowClosed(WindowEvent e): handle (V) | window (NM) closed (N) 	++ :: [ window (NM) event (NI) - e (N) ] :: main (NM) window (N)  :: void (N) 
CONSTRUCTOR:NAME:CancelAction CancelAction CancelAction():  | cancel (NM) action (N) 	++
SPECIAL:NAME:ScoreManagementBase void addScoreEvent(ScoreEvent s): add (V)  | EQUIV[score (NM) event (NI) , [ score (NM) event (NI) - s (N) ]]	++ :: score (NM) management (NM) base (N) 
SPECIAL:FORM:Entry void write(OutputStream os): write (V)  | [ output (NM) stream (NI) - os (N) ]	++ :: entry (NI) 
CONSTRUCTOR:NAME:AuthenticatorDialog AuthenticatorDialog AuthenticatorDialog(JFrame parent):  | authenticator (NM) dialog (N) 	++ :: [ J (NM) frame (N) - parent (N) ]
BASE_VERB:FORM:ConsSuperReference void accept(ConsConstraintExpressionVisitor visitor): accept (VI)  | [ cons (NM) constraint (NM) expression (NM) visitor (N) - visitor (N) ]	++ :: cons (NM) super (NM) reference (NI) 
PREP:NAME:MockResultSet void afterLast(): handle (V) | after (NM) last (DT) 	++ :: mock (NM) result (NM) set (N)  :: void (N) 
SPECIAL:NAME:HibernateMBean void setHbm2ddlAuto(String hbm2ddlAuto): set (V)  | hbm (NM) 2 (D) ddl (NM) auto (N) 	++ :: [ string (NI) - hbm (NM) 2 (NM) ddl (NM) auto (N) ] :: hibernate (NM) M (NM) bean (NI) 
SPECIAL:NAME:ManufacturerTYPE String getMail_addr(): get (V)  | mail (NM) addr (N) 	++ :: string (NI)  :: manufacturer (NM) TYPE (N) 
SPECIAL:NAME:PHPInterpreterPreferencePage void removeInterpreter(): remove (V)  | interpreter (N) 	++ :: PHP (NM) interpreter (NM) preference (NM) page (N) 
PREP:NAME:PersonalPortfolioViewList IView forID(String id):  | for (P) ID (NI) 	++ :: [ string (NI) - id (NI) ] :: personal (NM) portfolio (NM) view (NM) list (N)  :: I (NM) view (NI) 
ING_VERB:NAME:SyntaxDocument boolean startingMultiLineComment(String content, int startOffset, int endOffset): starting (V)  | multi (NM) line (NM) comment (N) 	++ :: [ string (NI) - content (N) ] :: [ int (N) - start (NM) offset (N) ] :: [ int (N) - end (NM) offset (N) ] :: boolean (N)  :: syntax (NM) document (NI) 
ENDS_WITH_ED:NAME:SVGEditGroupInteractor void mouseMoved(MouseEvent me): handle (V) | mouse (NM) moved (N) 	++ :: [ mouse (NM) event (NI) - me (PR) ] :: SVG (NM) edit (NM) group (NM) interactor (N)  :: void (N) 
SPECIAL:NAME:CircularObjectBuffer int getSize(): get (V)  | size (N) 	++ :: int (N)  :: circular (NM) object (NM) buffer (NI) 
SPECIAL:NAME:OTOptionInit OptionTypeEnum getExerciseStyle(): get (V)  | exercise (NM) style (N) 	++ :: option (NM) type (NM) enum (NI)  :: OT (NM) option (NM) init (N) 
SPECIAL:NAME:EJBUtil static OrderHome getOrderHome(): get (V)  | order (NM) home (N) 	++ :: order (NM) home (N)  :: EJB (NM) util (N) 
BASE_VERB:FORM:EqUtils static boolean eq(MelMatrix m, int i): eq (V)  | [ mel (NM) matrix (N) - m (N) ]	++ :: [ int (N) - i (N) ] :: eq (NM) utils (N)  :: boolean (N) 
SPECIAL:NAME:OptionClear Type getType(): get (V)  | type (N) 	++ :: type (N)  :: option (NM) clear (N) 
V_3P_IRR:NAME:COM static int OleIsCurrentClipboard(int pDataObject): ole (PRE) is (V)  | current (NM) clipboard (N) 	++ :: [ int (N) - p (NM) data (NM) object (NI) ] :: int (N)  :: COM (N) 
CONSTRUCTOR:NAME:ChaosModel ChaosModel ChaosModel(ChaosModel cm):  | chaos (NM) model (NI) 	++ :: [ chaos (NM) model (NI) - cm (N) ]
CONSTRUCTOR:NAME:OverlayNavigator OverlayNavigator OverlayNavigator():  | overlay (NM) navigator (N) 	++
BASE_VERB:NAME:SegmentMerger void bufferSkip(int doc): buffer (V)  | skip (N) 	++ :: [ int (N) - doc (NI) ] :: segment (NM) merger (N) 
SPECIAL:NAME:StyleImpl StyleURL getStyleURL(): get (V)  | style (NM) URL (NI) 	++ :: style (NM) URL (NI)  :: style (NM) impl (NI) 
SPECIAL:NAME:HTMLSelectElement void setTabIndex(int tabIndex): set (V)  | tab (NM) index (NI) 	++ :: [ int (N) - tab (NM) index (NI) ] :: HTML (NM) select (NM) element (NI) 
SPECIAL:CLAS:vtkPanel void Render(): render (V)  | vtk (NM) panel (N) 	++
BASE_VERB:NAME:ConstructorVisualisation E selectProtoElement(Class<E> value): select (V)  | proto (NM) element (NI) 	++ :: [ class (NM) E (N) - value (NI) ] :: E (N)  :: constructor (NM) visualisation (N) 
BASE_VERB:NAME:JFrmHelp void disposeWindow(): dispose (V)  | window (N) 	++ :: J (NM) frm (NM) help (N) 
SPECIAL:NAME:WaveDebugger void setSimpleWavefunctionGraphic(SimpleWavefunctionGraphic simpleWavefunctionGraphic): set (V)  | simple (NM) wavefunction (NM) graphic (N) 	++ :: [ simple (NM) wavefunction (NM) graphic (N) - simple (NM) wavefunction (NM) graphic (N) ] :: wave (NM) debugger (N) 
SPECIAL:NAME:ShrimpProject void removeProjectListener(ShrimpProjectListener listener): remove (V)  | EQUIV[project (NM) listener (N) , [ shrimp (NM) project (NM) listener (N) - listener (N) ]]	++ :: shrimp (NM) project (N) 
BASE_VERB:CLAS:GL static void glFlush(): gl (PRE) flush (V)  | GL (N) 	++
CONSTRUCTOR:NAME:JWindow JWindow JWindow(Window owner):  | J (NM) window (N) 	++ :: [ window (N) - owner (N) ]
SPECIAL:NAME:Customizer String getTitle(): get (V)  | title (N) 	++ :: string (NI)  :: customizer (N) 
BASE_VERB:FORM:initex void trie_pack(int p): trie (PRE) pack (V)  | [ int (N) - p (NI) ]	++ :: initex (N) 
V_3PS:FORM:JobKOctets boolean equals(Object obj): equals (V)  | [ object (NI) - obj (NI) ]	++ :: job (NM) K (NM) octets (N)  :: boolean (N) 
BASE_VERB:FORM:Nth int result(int value, Object accumulator): result (V)  | [ int (N) - value (NI) ]	++ :: [ object (NI) - accumulator (N) ] :: nth (N)  :: int (N) 
SPECIAL:NAME:MenuMediator void addMenu(Menu menu): add (V)  | EQUIV[menu (N) , [ menu (N) - menu (N) ]]	++ :: menu (NM) mediator (N) 
SPECIAL:CLAS:OpenSelectedItemsAction void run(): run (VI)  | open (NM) selected (NM) items (NM) action (N) 	++
SPECIAL:CLAS:test_MultiLevelElementNameAndTextQualifier void setUp(): set (V) up (VP)  | test (NM) multi (NM) level (NM) element (NM) name (NM) and (NM) text (NM) qualifier (N) 	++
SPECIAL:NAME:MinishcapHalfImageset int getFieldWidth(): get (V)  | field (NM) width (N) 	++ :: int (N)  :: minishcap (NM) half (NM) imageset (N) 
BASE_VERB:FORM:Symbol static String make(String name): make (V)  | [ string (NI) - name (NI) ]	++ :: symbol (N)  :: string (NI) 
V_MODAL:CLAS:TextureTrack boolean canAcceptAsParent(Object obj): can (VI) accept (VI)  | texture (NM) track (N) -- as (P) parent (N) 	++ :: [ object (NI) - obj (NI) ] :: boolean (N) 
BASE_VERB:FORM:Factory static NOTATIONDocument parse(Node node, XmlOptions options): parse (V)  | [ node (NI) - node (NI) ]	++ :: [ xml (NM) options (N) - options (N) ] :: factory (N)  :: NOTATION (NM) document (NI) 
SPECIAL:CLAS:TestShortValidator void setUp(): set (V) up (VP)  | test (NM) short (NM) validator (N) 	++
SPECIAL:NAME:DEROutputStream void writeEncoded(int tag, byte bytes): write (V)  | encoded (N) 	++ :: [ int (N) - tag (NI) ] :: [ byte (N) - bytes (NI) ] :: DER (NM) output (NM) stream (NI) 
SPECIAL:NAME:MergeUserInterface JComponent getGUI(): get (V)  | GUI (N) 	++ :: J (NM) component (N)  :: merge (NM) user (NM) interface (NI) 
SPECIAL:NAME:TestElement void setDescription(String description): set (V)  | description (NI) 	++ :: [ string (NI) - description (NI) ] :: test (NM) element (NI) 
BASE_VERB:NAME:BeanContextSupport boolean retainAll(Collection c): retain (V)  | all (DT) 	++ :: [ collection (N) - c (N) ] :: boolean (N)  :: bean (NM) context (NM) support (N) 
SPECIAL:NAME:DynamicQueryPanel DynamicQuery getColumnDynamicQuery(Column c): get (V)  | column (NM) dynamic (NM) query (N) 	++ :: [ column (N) - c (N) ] :: dynamic (NM) query (N)  :: dynamic (NM) query (NM) panel (N) 
SPECIAL:NAME:ElmoProperty E getSingle(): get (V)  | single (N) 	++ :: E (N)  :: elmo (NM) property (N) 
SPECIAL:NAME:ResourceReferenceDTO String getReferenceURI(): get (V)  | reference (NM) URI (NI) 	++ :: string (NI)  :: resource (NM) reference (NM) DTO (NI) 
CONSTRUCTOR:NAME:SynchronizedPrintServiceAttributeSet SynchronizedPrintServiceAttributeSet SynchronizedPrintServiceAttributeSet(PrintServiceAttributeSet attributeSet):  | synchronized (NM) print (NM) service (NM) attribute (NM) set (N) 	++ :: [ print (NM) service (NM) attribute (NM) set (N) - attribute (NM) set (N) ]
SPECIAL:NAME:CharacterResult RPObject getTemplate(): get (V)  | template (N) 	++ :: RP (NM) object (NI)  :: character (NM) result (N) 
BASE_VERB:NAME:URIParameters static URIParameters parseURI(String uri): parse (V)  | EQUIV[URI (NI) , [ string (NI) - uri (NI) ]]	++ :: URI (NM) parameters (N)  :: URI (NM) parameters (N) 
BASE_VERB:NAME:CookieManager void extractCookies(URLConnection urlConnection): extract (V)  | cookies (N) 	++ :: [ URL (NM) connection (N) - url (NM) connection (N) ] :: cookie (NM) manager (N) 
SPECIAL:NAME:Layer Species getLeadingSpeciesBALayer(Stand st, int layer): get (V)  | EQUIV[leading (NM) species (NM) BA (NM) layer (N) , [ int (N) - layer (N) ]]	++ :: [ stand (N) - st (N) ] :: species (N)  :: layer (N) 
SPECIAL:NAME:DeploymentListBean void printDeployments(PrintWriter out): print (V)  | deployments (N) 	++ :: [ print (NM) writer (N) - out (N) ] :: deployment (NM) list (NM) bean (NI) 
SPECIAL:NAME:Test1 static int Test1_thrown_excp_static(int i): test (VI)  | 1 (D) thrown (NM) excp (NM) static (N) 	++ :: [ int (N) - i (N) ] :: int (N)  :: test (NM) 1 (N) 
SPECIAL:NAME:ByteAccumulator NumericPrecision getPrecision(): get (V)  | precision (N) 	++ :: numeric (NM) precision (N)  :: byte (NM) accumulator (N) 
SPECIAL:NAME:Object2 String getDummy(): get (V)  | dummy (N) 	++ :: string (NI)  :: object (NM) 2 (N) 
SPECIAL:FORM:Quote void set(CouponRate value): set (V)  | [ coupon (NM) rate (N) - value (NI) ]	++ :: quote (N) 
NOUN_PHRASE:NAME:DaycountCalculatorFactory static DaycountCalculatorFactory newInstance(String daycountCalculatorFactoryClassName): get (V) | new (NM) instance (NI) 	++ :: [ string (NI) - daycount (NM) calculator (NM) factory (NM) class (NM) name (NI) ] :: daycount (NM) calculator (NM) factory (N)  :: daycount (NM) calculator (NM) factory (N) 
SPECIAL:NAME:Blinds String getLevel(): get (V)  | level (N) 	++ :: string (NI)  :: blinds (N) 
SPECIAL:NAME:MaxCyclesCondition void setMaxCycles(int maxCycles): set (V)  | max (NM) cycles (N) 	++ :: [ int (N) - max (NM) cycles (N) ] :: max (NM) cycles (NM) condition (N) 
BASE_VERB:CLAS:ShellBean void stop(): stop (VI)  | shell (NM) bean (NI) 	++
SPECIAL:NAME:GroupDAOTest void setGroupDAO(GroupDAO groupDAO): set (V)  | group (NM) DAO (N) 	++ :: [ group (NM) DAO (N) - group (NM) DAO (N) ] :: group (NM) DAO (NM) test (N) 
SPECIAL:NAME:CarSegmentCountResult long getSize(): get (V)  | size (N) 	++ :: long (N)  :: car (NM) segment (NM) count (NM) result (N) 
BASE_VERB:NAME:TemplateDataEditor static TemplateDataEditor editTemplateDataEditor(Composite parent, IFunctionBuilder builder, int minInput, int maxInput, int minOutput, int maxOutput, String info): edit (V)  | template (NM) data (NM) editor (N) 	++ :: [ composite (N) - parent (N) ] :: [ I (NM) function (NM) builder (N) - builder (N) ] :: [ int (N) - min (NM) input (NI) ] :: [ int (N) - max (NM) input (NI) ] :: [ int (N) - min (NM) output (N) ] :: [ int (N) - max (NM) output (N) ] :: [ string (NI) - info (NI) ] :: template (NM) data (NM) editor (N)  :: template (NM) data (NM) editor (N) 
BASE_VERB:NAME:EntityBMPBean String callBusinessMethodB(String words): call (V)  | business (NM) method (NM) B (N) 	++ :: [ string (NI) - words (N) ] :: string (NI)  :: entity (NM) BMP (NM) bean (NI) 
CONSTRUCTOR:NAME:MD4Digest MD4Digest MD4Digest():  | MD (NM) 4 (NM) digest (N) 	++
SPECIAL:NAME:GSSManager GSSName createName(byte name, Oid nameType): create (V)  | EQUIV[name (NI) , [ byte (N) - name (NI) ]]	++ :: [ oid (N) - name (NM) type (N) ] :: GSS (NM) name (NI)  :: GSS (NM) manager (N) 
SPECIAL:NAME:Signatory Certificate getCertificateChain(): get (V)  | certificate (NM) chain (N) 	++ :: certificate (N)  :: signatory (N) 
NOUN_PHRASE:NAME:Factory JCNewClass NewClass(JCExpression encl, List<JCExpression> typeargs, JCExpression clazz, List<JCExpression> args, JCClassDecl def): get (V) | new (NM) class (NI) 	++ :: [ JC (NM) expression (N) - encl (N) ] :: [ list (NM) JC (NM) expression (N) - typeargs (N) ] :: [ JC (NM) expression (N) - clazz (N) ] :: [ list (NM) JC (NM) expression (N) - args (N) ] :: [ JC (NM) class (NM) decl (NI) - def (NI) ] :: factory (N)  :: JC (NM) new (NM) class (NI) 
SPECIAL:NAME:Global static DungeonRoomFactory getDungeonRoomFactory(): get (V)  | dungeon (NM) room (NM) factory (N) 	++ :: dungeon (NM) room (NM) factory (N)  :: global (N) 
SPECIAL:NAME:XSSchema XSNotation getNotation(String localName): get (V)  | notation (N) 	++ :: [ string (NI) - local (NM) name (NI) ] :: XS (NM) notation (N)  :: XS (NM) schema (N) 
SPECIAL:NAME:Cat void setLivesLeft(int livesLeft): set (V)  | lives (NM) left (N) 	++ :: [ int (N) - lives (NM) left (N) ] :: cat (N) 
SPECIAL:FORM:NodeList NodeList append(NodeEnum nodes): append (V)  | [ node (NM) enum (NI) - nodes (N) ]	++ :: node (NM) list (N)  :: node (NM) list (N) 
SPECIAL:NAME:ActionSetTitle String getTitle(): get (V)  | title (N) 	++ :: string (NI)  :: action (NM) set (NM) title (N) 
SPECIAL:FORM:CompassMultiPhraseQueryBuilder CompassMultiPhraseQueryBuilder add(Object value): add (V)  | [ object (NI) - value (NI) ]	++ :: compass (NM) multi (NM) phrase (NM) query (NM) builder (N)  :: compass (NM) multi (NM) phrase (NM) query (NM) builder (N) 
PREP:NAME:ServiceHolder String asXML():  | as (P) XML (N) 	++ :: service (NM) holder (NI)  :: string (NI) 
ENDS_WITH_ED:NAME:DelegateAction void actionPerformed(ActionEvent e): handle (V) | action (NM) performed (N) 	++ :: [ action (NM) event (NI) - e (N) ] :: delegate (NM) action (N)  :: void (N) 
SPECIAL:FORM:AliasDefHolder void _read(InputStream _er_input): read (V)  | [ input (NM) stream (NI) - er (NM) input (NI) ]	++ :: alias (NM) def (NM) holder (NI) 
SPECIAL:NAME:SimpleLxmlValidator String getDtdFile(): get (V)  | dtd (NM) file (NI) 	++ :: string (NI)  :: simple (NM) lxml (NM) validator (N) 
BASE_VERB:CLAS:TestStartupNoTemplate void tearDown(): tear (V) down (VP)  | test (NM) startup (NM) no (DT) template (N) 	++
CONSTRUCTOR:NAME:epp_HostCheckRsp epp_HostCheckRsp epp_HostCheckRsp(epp_Response _m_rsp, epp_CheckResult _m_results):  | epp (NM) host (NM) check (NM) rsp (N) 	++ :: [ epp (NM) response (N) - m (NM) rsp (N) ] :: [ epp (NM) check (NM) result (N) - m (NM) results (N) ]
SPECIAL:NAME:ISourceMethod char getArgumentTypeNames(): get (V)  | argument (NM) type (NM) names (N) 	++ :: char (N)  :: I (NM) source (NM) method (N) 
BASE_VERB:NAME:ValueTypesUnit void BoxPrim(): box (V)  | prim (N) 	++ :: value (NM) types (NM) unit (N) 
ENDS_WITH_ED:NAME:void actionPerformed(ActionEvent evt): handle (V) | action (NM) performed (N) 	++ :: [ action (NM) event (NI) - evt (N) ] :: ANONYMOUS (N)  :: void (N) 
BASE_VERB:NAME:StdXMLParser Reader openAltReader(StringBuffer publicID, String systemID): open (V)  | alt (NM) reader (N) 	++ :: [ string (NM) buffer (NI) - public (NM) ID (NI) ] :: [ string (NI) - system (NM) ID (NI) ] :: reader (N)  :: std (NM) XML (NM) parser (N) 
SPECIAL:NAME:BibliographyMark void setCustom2(String custom2): set (V)  | custom (N) 2 (D) 	++ :: [ string (NI) - custom (NM) 2 (N) ] :: bibliography (NM) mark (N) 
SPECIAL:NAME:PDSignature void setSubFilter(COSName subfilter): set (V)  | sub (NM) filter (N) 	++ :: [ COS (NM) name (NI) - subfilter (N) ] :: PD (NM) signature (N) 
SPECIAL:NAME:SceneManager Hashtable getNodeManagers(String className): get (V)  | node (NM) managers (N) 	++ :: [ string (NI) - class (NM) name (NI) ] :: hashtable (N)  :: scene (NM) manager (N) 
BASE_VERB:NAME:Application static void fireCloseModel(ModelUserObject pModel): fire (V)  | EQUIV[close (NM) model (NI) , [ model (NM) user (NM) object (NI) - p (NM) model (NI) ]]	++ :: application (N) 
SPECIAL:NAME:FolderView void createDropTarget(Control dropZone): create (V)  | drop (NM) target (N) 	++ :: [ control (N) - drop (NM) zone (N) ] :: folder (NM) view (NI) 
SPECIAL:CLAS:ServerThread void run(): run (VI)  | server (NM) thread (N) 	++
SPECIAL:NAME:EntityImage Image getFacing(int facing): get (V)  | EQUIV[facing (N) , [ int (N) - facing (N) ]]	++ :: image (N)  :: entity (NM) image (N) 
BASE_VERB:FORM:ASynchronizedClauseClause void apply(Switch sw): apply (V)  | [ switch (N) - sw (N) ]	++ :: A (NM) synchronized (NM) clause (NM) clause (N) 
ENDS_WITH_ED:NAME:void actionPerformed(ActionEvent evt): handle (V) | action (NM) performed (N) 	++ :: [ action (NM) event (NI) - evt (N) ] :: ANONYMOUS (N)  :: void (N) 
SPECIAL:NAME:FrameTag int doEndTag(): do (VI)  | end (NM) tag (NI) 	++ :: int (N)  :: frame (NM) tag (NI) 
NOUN_PHRASE:NAME:RegisterMsg static RegisterMsg providerNotPresent(ProviderInstance provider): get (V) | provider (NM) not (DT) present (N) 	++ :: [ provider (NM) instance (NI) - provider (N) ] :: register (NM) msg (NI)  :: register (NM) msg (NI) 
SPECIAL:NAME:boolean doWork(Session s): do (VI)  | work (N) 	++ :: [ session (N) - s (N) ] :: boolean (N)  :: ANONYMOUS (N) 
CONSTRUCTOR:NAME:PasswordPage PasswordPage PasswordPage(String pageName, String title, String description):  | password (NM) page (N) 	++ :: [ string (NI) - page (NM) name (NI) ] :: [ string (NI) - title (N) ] :: [ string (NI) - description (NI) ]
ENDS_WITH_ED:NAME:void exceptionThrown(Exception e): handle (V) | exception (NM) thrown (N) 	++ :: [ exception (N) - e (N) ] :: ANONYMOUS (N)  :: void (N) 
SPECIAL:NAME:StringUtilities static String removeLeadingOccurrences(String str, char ch): remove (V)  | leading (NM) occurrences (N) 	++ :: [ string (NI) - str (NI) ] :: [ char (N) - ch (N) ] :: string (NI)  :: string (NM) utilities (N) 
SPECIAL:CLAS:AbstractGraph void doRepaint(): do (VI) repaint (V)  | abstract (NM) graph (N) 	++
BASE_VERB:NAME:StorageCache void evictAll(Object tx): evict (V)  | all (DT) 	++ :: [ object (NI) - tx (N) ] :: storage (NM) cache (N) 
SPECIAL:NAME:DocumentImpl String writeEndTag(Annotation annot): write (V)  | end (NM) tag (NI) 	++ :: [ annotation (N) - annot (N) ] :: string (NI)  :: document (NM) impl (NI) 
SPECIAL:NAME:HugoTask void setFramefolder(String name): set (V)  | framefolder (N) 	++ :: [ string (NI) - name (NI) ] :: hugo (NM) task (N) 
SPECIAL:NAME:WebSite Path findCurrentWelcome(Path dirPath): find (V)  | current (NM) welcome (N) 	++ :: [ path (NI) - dir (NM) path (NI) ] :: path (NI)  :: web (NM) site (N) 
CONSTRUCTOR:NAME:MessageNotWriteableException MessageNotWriteableException MessageNotWriteableException(MessageNotWriteableException cause):  | message (NM) not (DT) writeable (NM) exception (N) 	++ :: [ message (NM) not (DT) writeable (NM) exception (N) - cause (N) ]
SPECIAL:NAME:PluginDescriptor String getNameSpaceURI(): get (V)  | name (NM) space (NM) URI (NI) 	++ :: string (NI)  :: plugin (NM) descriptor (NI) 
BASE_VERB:NAME:NExPortsImpl void serializeAttributeBodies(XMLSerializer context): serialize (V)  | attribute (NM) bodies (N) 	++ :: [ XML (NM) serializer (N) - context (N) ] :: N (NM) ex (NM) ports (NM) impl (NI) 
SPECIAL:FORM:AttributeListHelper static void write(OutputStream out, SecAttribute _ob_v): write (V)  | [ output (NM) stream (NI) - out (N) ]	++ :: [ sec (NM) attribute (N) - ob (NM) v (N) ] :: attribute (NM) list (NM) helper (N) 
BASE_VERB:FORM:Factory static BrElt parse(File file, XmlOptions options): parse (V)  | [ file (NI) - file (NI) ]	++ :: [ xml (NM) options (N) - options (N) ] :: factory (N)  :: br (NM) elt (NI) 
SPECIAL:FORM:void write(byte b, int off, int len): write (V)  | [ byte (N) - b (N) ]	++ :: [ int (N) - off (N) ] :: [ int (N) - len (N) ] :: ANONYMOUS (N) 
SPECIAL:NAME:SampleAndInfoVO void setMimeType(String mimeType): set (V)  | mime (NM) type (N) 	++ :: [ string (NI) - mime (NM) type (N) ] :: sample (NM) and (NM) info (NM) VO (NI) 
SPECIAL:NAME:SummaryHTMLRendererTest String getExpectedEmpty(): get (V)  | expected (NM) empty (N) 	++ :: string (NI)  :: summary (NM) HTML (NM) renderer (NM) test (N) 
SPECIAL:NAME:BezierParams void setLowerAbsFreqX(double lowerAbsFreqX): set (V)  | lower (NM) abs (NM) freq (NM) X (N) 	++ :: [ double (N) - lower (NM) abs (NM) freq (NM) X (N) ] :: bezier (NM) params (N) 
SPECIAL:NAME:NullPropertyModificationQueue void setShort(Object node, Property field, short value): set (V)  | short (N) 	++ :: [ object (NI) - node (NI) ] :: [ property (N) - field (N) ] :: [ short (N) - value (NI) ] :: null (NM) property (NM) modification (NM) queue (N) 
SPECIAL:NAME:MFAgreement String getAgreementLabel(): get (V)  | agreement (NM) label (NI) 	++ :: string (NI)  :: MF (NM) agreement (N) 
BASE_VERB:NAME:JQuantity Presentable makePresentableInstance(Presentation presentation): make (V)  | presentable (NM) instance (NI) 	++ :: [ presentation (N) - presentation (N) ] :: presentable (N)  :: J (NM) quantity (N) 
SPECIAL:NAME:osmsDvContentGridBean Timestamp getLastUpdatedOn(): get (V)  | last (DT) updated (N) on (NM) 	++ :: timestamp (N)  :: osms (NM) dv (NM) content (NM) grid (NM) bean (NI) 
CONSTRUCTOR:NAME:BounceAction BounceAction BounceAction():  | bounce (NM) action (N) 	++
SPECIAL:NAME:Util static JFreeChart getChart(XYSeriesCollection data, String title, String xLabel, String yLabel): get (V)  | chart (N) 	++ :: [ XY (NM) series (NM) collection (N) - data (NI) ] :: [ string (NI) - title (N) ] :: [ string (NI) - x (NM) label (NI) ] :: [ string (NI) - y (NM) label (NI) ] :: J (NM) free (NM) chart (N)  :: util (N) 
NOUN_PHRASE:NAME:HTMLList int size(): get (V) | size (N) 	++ :: HTML (NM) list (N)  :: int (N) 
SPECIAL:NAME:DialogUnit void setEnd(float to): set (V)  | end (N) 	++ :: [ float (N) - to (N) ] :: dialog (NM) unit (N) 
SPECIAL:NAME:MediaContainerLinkDefinition String getRightMediaContainerType(): get (V)  | right (NM) media (NM) container (NM) type (N) 	++ :: string (NI)  :: media (NM) container (NM) link (NM) definition (NI) 
VOID_NP:NAME:SecondaryFillColorAttribute void unsetSecondaryFillColor(): handle (V) | unset (NM) secondary (NM) fill (NM) color (N) 	++ :: secondary (NM) fill (NM) color (NM) attribute (N)  :: void (N) 
BASE_VERB:FORM:Clef void interroger(Integer numQ, String line, TreeMap enregistres, TreeMap declassements): interroger (V)  | [ integer (N) - num (NM) Q (N) ]	++ :: [ string (NI) - line (N) ] :: [ tree (NM) map (N) - enregistres (N) ] :: [ tree (NM) map (N) - declassements (N) ] :: clef (N) 
CONSTRUCTOR:NAME:Bag Bag Bag(ScrabbleBuilder builder):  | bag (N) 	++ :: [ scrabble (NM) builder (N) - builder (N) ]
SPECIAL:NAME:Prefs int getFileHistCount(): get (V)  | file (NM) hist (NM) count (N) 	++ :: int (N)  :: prefs (N) 
NOUN_PHRASE:NAME:XMLStringDefault int lastIndexOf(String str): get (V) | last (DT) index (NM) of (N) 	++ :: [ string (NI) - str (NI) ] :: XML (NM) string (NM) default (N)  :: int (N) 
SPECIAL:NAME:CycAccess CycList getSpecSiblings(CycFort cycFort, CycObject mt): get (V)  | spec (NM) siblings (N) 	++ :: [ cyc (NM) fort (N) - cyc (NM) fort (N) ] :: [ cyc (NM) object (NI) - mt (N) ] :: cyc (NM) list (N)  :: cyc (NM) access (N) 
SPECIAL:NAME:FigGraphics boolean doImage(Image img, int x, int y, int width, int height, int sx, int sy, int sw, int sh, ImageObserver observer, Color bgcolor): do (VI)  | EQUIV[image (N) , [ image (N) - img (N) ]]	++ :: [ int (N) - x (N) ] :: [ int (N) - y (N) ] :: [ int (N) - width (N) ] :: [ int (N) - height (N) ] :: [ int (N) - sx (N) ] :: [ int (N) - sy (N) ] :: [ int (N) - sw (N) ] :: [ int (N) - sh (N) ] :: [ image (NM) observer (N) - observer (N) ] :: [ color (N) - bgcolor (N) ] :: boolean (N)  :: fig (NM) graphics (N) 
BASE_VERB:NAME:LocalsCompiler Object while_stmt(SimpleNode node): while (V)  | stmt (N) 	++ :: [ simple (NM) node (NI) - node (NI) ] :: object (NI)  :: locals (NM) compiler (N) 
SPECIAL:NAME:DatabaseAdaptor String getPrecloseCommand(): get (V)  | preclose (NM) command (N) 	++ :: string (NI)  :: database (NM) adaptor (N) 
SPECIAL:CLAS:GroupKeygrantsHistoryBean void ejbRemove(): ejb (PRE) remove (V)  | group (NM) keygrants (NM) history (NM) bean (NI) 	++
SPECIAL:NAME:GsiLine String getGroupId(): get (V)  | group (NM) id (NI) 	++ :: string (NI)  :: gsi (NM) line (N) 
NOUN_PHRASE:NAME:PackageFactory static Debugger newDebugger(InputStream inputStream): get (V) | new (NM) debugger (N) 	++ :: [ input (NM) stream (NI) - input (NM) stream (NI) ] :: package (NM) factory (N)  :: debugger (N) 
SPECIAL:NAME:QueryImpl Query setLimit(int max): set (V)  | limit (N) 	++ :: [ int (N) - max (N) ] :: query (N)  :: query (NM) impl (NI) 
V_3P_IRR:NAME:JLinksysLoggerTableModel boolean isCellEditable(int row, int col): is (V)  | cell (NM) editable (N) 	++ :: [ int (N) - row (N) ] :: [ int (N) - col (N) ] :: boolean (N)  :: J (NM) linksys (NM) logger (NM) table (NM) model (NI) 
BASE_VERB:NAME:JFreeReportEngine Object fillReport(Class klass, String name, Map parameters): fill (V)  | report (N) 	++ :: [ class (NI) - klass (N) ] :: [ string (NI) - name (NI) ] :: [ map (N) - parameters (N) ] :: object (NI)  :: J (NM) free (NM) report (NM) engine (N) 
SPECIAL:NAME:CalleeBean void setSessionContext(SessionContext context): set (V)  | session (NM) context (N) 	++ :: [ session (NM) context (N) - context (N) ] :: callee (NM) bean (NI) 
BASE_VERB:FORM:FieldDisplayer void update(Graphics g): update (V)  | [ graphics (N) - g (N) ]	++ :: field (NM) displayer (N) 
BASE_VERB:NAME:SpanViewer void applyControls(ViewerControls controls): apply (V)  | EQUIV[controls (N) , [ viewer (NM) controls (N) - controls (N) ]]	++ :: span (NM) viewer (N) 
CONSTRUCTOR:NAME:ByteArrayDataSource ByteArrayDataSource ByteArrayDataSource(InputStream is, String type):  | byte (NM) array (NM) data (NM) source (NI) 	++ :: [ input (NM) stream (NI) - is (N) ] :: [ string (NI) - type (N) ]
SPECIAL:NAME:Task boolean getFlag15(): get (V)  | flag (N) 15 (D) 	++ :: boolean (N)  :: task (N) 
SPECIAL:NAME:AbstractCompanyMultiLookupRecentBlock int getSortColumn(): get (V)  | sort (NM) column (N) 	++ :: int (N)  :: abstract (NM) company (NM) multi (NM) lookup (NM) recent (NM) block (N) 
SPECIAL:NAME:User void setLastLoginDate(Calendar value): set (V)  | last (DT) login (NM) date (N) 	++ :: [ calendar (N) - value (NI) ] :: user (N) 
BASE_VERB:NAME:AbstractEmitter void multInt(SimpleNode lhsn, SimpleNode rhsn, NQPyBlockCompiler compiler): mult (V)  | int (N) 	++ :: [ simple (NM) node (NI) - lhsn (N) ] :: [ simple (NM) node (NI) - rhsn (N) ] :: [ NQ (NM) py (NM) block (NM) compiler (N) - compiler (N) ] :: abstract (NM) emitter (N) 
SPECIAL:NAME:JPanMenuModule String getTabLabel(): get (V)  | tab (NM) label (NI) 	++ :: string (NI)  :: J (NM) pan (NM) menu (NM) module (N) 
PREP:NAME:ClientAdapter void onRealtimeQuote(OTQuote quote): handle (V) | on (NM) realtime (NM) quote (N) 	++ :: [ OT (NM) quote (N) - quote (N) ] :: client (NM) adapter (NI)  :: void (N) 
BASE_VERB:FORM:BloomUriUniqFilter void forget(String canonical, CandidateURI item): forget (V)  | [ string (NI) - canonical (N) ]	++ :: [ candidate (NM) URI (NI) - item (NI) ] :: bloom (NM) uri (NM) uniq (NM) filter (N) 
SPECIAL:NAME:View JamochaValue executeFunction(Rete engine, Parameter params): execute (VI)  | function (N) 	++ :: [ rete (N) - engine (N) ] :: [ parameter (N) - params (N) ] :: jamocha (NM) value (NI)  :: view (NI) 
SPECIAL:NAME:SIPHistory int getDirection(UDPDatagram sipMessage): get (V)  | direction (N) 	++ :: [ UDP (NM) datagram (N) - sip (NM) message (NI) ] :: int (N)  :: SIP (NM) history (N) 
BASE_VERB:NAME:AbstractPlayerBE void playFile(int ids): play (V)  | file (NI) 	++ :: [ int (N) - ids (N) ] :: abstract (NM) player (NM) BE (N) 
BASE_VERB:NAME:ChatLounge void setupMinefield(): setup (V)  | minefield (N) 	++ :: chat (NM) lounge (N) 
SPECIAL:NAME:UomServices static List findAllCache(GenericDelegator delegator): find (V)  | all (DT) cache (N) 	++ :: [ generic (NM) delegator (N) - delegator (N) ] :: list (N)  :: uom (NM) services (N) 
SPECIAL:NAME:MenuItemRenderer void resetRects(): reset (V)  | rects (N) 	++ :: menu (NM) item (NM) renderer (N) 
CONSTRUCTOR:NAME:ConstIterator ConstIterator ConstIterator(Iterator iter):  | const (NM) iterator (N) 	++ :: [ iterator (N) - iter (N) ]
NOUN_PHRASE:NAME:DataCreator_ IAnyTypeData newData(): get (V) | new (NM) data (NI) 	++ :: data (NM) creator (N)  :: I (NM) any (DT) type (NM) data (NI) 
SPECIAL:NAME:DefaultSpemVisitorStub Vector getResult(): get (V)  | result (N) 	++ :: vector (N)  :: default (NM) spem (NM) visitor (NM) stub (N) 
SPECIAL:CLAS:BooleanEnumTest void setUp(): set (V) up (VP)  | boolean (NM) enum (NM) test (N) 	++
SPECIAL:NAME:AbstractNavigationBar void addHome(String title, String location): add (V)  | home (N) 	++ :: [ string (NI) - title (N) ] :: [ string (NI) - location (NI) ] :: abstract (NM) navigation (NM) bar (N) 
BASE_VERB:NAME:AwtMetrics void moveOrigo(double dox, double doy): move (V)  | origo (N) 	++ :: [ double (N) - dox (N) ] :: [ double (N) - doy (N) ] :: awt (NM) metrics (N) 
CONSTRUCTOR:NAME:Rrule Rrule Rrule(String icalStr, int parseMode):  | rrule (N) 	++ :: [ string (NI) - ical (NM) str (NI) ] :: [ int (N) - parse (NM) mode (N) ]
SPECIAL:NAME:PageWelderPropertyEditor void addFileMenu(EtherEventPropertySource in, Properties inp): add (V)  | file (NM) menu (N) 	++ :: [ ether (NM) event (NM) property (NM) source (NI) - in (NI) ] :: [ properties (N) - inp (N) ] :: page (NM) welder (NM) property (NM) editor (N) 
SPECIAL:NAME:TableObject String getSQLPrimaryKey(Hashtable PC, String delimiter): get (V)  | SQL (NM) primary (NM) key (NI) 	++ :: [ hashtable (N) - PC (N) ] :: [ string (NI) - delimiter (N) ] :: string (NI)  :: table (NM) object (NI) 
NOUN_PHRASE:NAME:Namespace Object jsConstructor(Context cx, boolean inNewExpr, Object args): get (V) | js (PRE) constructor (N) 	++ :: [ context (N) - cx (N) ] :: [ boolean (N) - in (NM) new (NM) expr (NI) ] :: [ object (NI) - args (N) ] :: namespace (N)  :: object (NI) 
CONSTRUCTOR:NAME:BoundingBox BoundingBox BoundingBox(double leftEdge, double bottomEdge, double width, double height):  | bounding (NM) box (N) 	++ :: [ double (N) - left (NM) edge (N) ] :: [ double (N) - bottom (NM) edge (N) ] :: [ double (N) - width (N) ] :: [ double (N) - height (N) ]
ING_VERB:NAME:Referenceable Collection referencingLocalVariables(): referencing (V)  | local (NM) variables (N) 	++ :: collection (N)  :: referenceable (N) 
SPECIAL:NAME:DynamicAddAndLeaveByConstPercentJuliaSimulation int getNumOfIncStationToAdd(): get (V)  | num (NI) -- of (P) inc (NM) station (NM) to (NM) add (N) 	++ :: int (N)  :: dynamic (NM) add (NM) and (NM) leave (NM) by (NM) const (NM) percent (NM) julia (NM) simulation (N) 
SPECIAL:FORM:EDM void run(short pixels, int width, int height): run (VI)  | [ short (N) - pixels (N) ]	++ :: [ int (N) - width (N) ] :: [ int (N) - height (N) ] :: EDM (N) 
BASE_VERB:FORM:MockVector void expectAdd(Object p0_Object, Throwable toThrow): expect (VI) add (V)  | [ object (NI) - p (NM) 0 (NM) object (NI) ]	++ :: [ throwable (N) - to (NM) throw (N) ] :: mock (NM) vector (N) 
ENDS_WITH_ED:NAME:pdx_LowLevelList_pdxcc_2_Iter_pdx_ObjectRef ExtMilieuRef pdx_ObjectMemberAccess_pdx_asgpdxf_found(ExtMilieuRef mil, boolean val): handle (V) | pdx (PRE) object (NM) member (NM) access (NM) pdx (NM) asgpdxf (NM) found (N) 	++ :: [ ext (NM) milieu (NM) ref (NI) - mil (N) ] :: [ boolean (N) - val (NI) ] :: pdx (NM) low (NM) level (NM) list (NM) pdxcc (NM) 2 (NM) iter (NM) pdx (NM) object (NM) ref (NI)  :: ext (NM) milieu (NM) ref (NI) 
SPECIAL:NAME:ModificationPlugin Element setEmotion(Element emotion): set (V)  | emotion (N) 	++ :: [ element (NI) - emotion (N) ] :: element (NI)  :: modification (NM) plugin (N) 
NOUN_PHRASE:NAME:Random static double nextLaplace(): get (V) | next (DT) laplace (N) 	++ :: random (N)  :: double (N) 
NOUN_PHRASE:NAME:FavourFittest int reproductionAmount(): get (V) | reproduction (NM) amount (N) 	++ :: favour (NM) fittest (N)  :: int (N) 
ENDS_WITH_ED:NAME:RenderMachineListener void statusChanged(RenderMachineEvent rme): handle (V) | status (NM) changed (N) 	++ :: [ render (NM) machine (NM) event (NI) - rme (N) ] :: render (NM) machine (NM) listener (N)  :: void (N) 
SPECIAL:NAME:ACL void setList(List list): set (V)  | list (N) 	++ :: [ list (N) - list (N) ] :: ACL (N) 
SPECIAL:NAME:DocumentData void setGespeichert(boolean gespeichert): set (V)  | gespeichert (N) 	++ :: [ boolean (N) - gespeichert (N) ] :: document (NM) data (NI) 
CONSTRUCTOR:NAME:BaseHrefAttribute BaseHrefAttribute BaseHrefAttribute(String name, String value, Namespace namespace):  | base (NM) href (NM) attribute (N) 	++ :: [ string (NI) - name (NI) ] :: [ string (NI) - value (NI) ] :: [ namespace (N) - namespace (N) ]
PREP:NAME:CacheFilterClassImpl boolean beforeLookup(Identity oid): handle (V) | before (NM) lookup (N) 	++ :: [ identity (N) - oid (N) ] :: cache (NM) filter (NM) class (NM) impl (NI)  :: boolean (N) 
BASE_VERB:FORM:SmartsDumpVisitor Object visit(ASTExplicitAtom node, Object data): visit (V)  | [ AST (NM) explicit (NM) atom (N) - node (NI) ]	++ :: [ object (NI) - data (NI) ] :: smarts (NM) dump (NM) visitor (N)  :: object (NI) 
BASE_VERB:NAME:CleanTreeThread void releaseConnection(): release (V)  | connection (N) 	++ :: clean (NM) tree (NM) thread (N) 
CONSTRUCTOR:NAME:nurbs_bz_curv nurbs_bz_curv nurbs_bz_curv():  | nurbs (NM) bz (NM) curv (N) 	++
SPECIAL:NAME:Runner void removeGear(int index): remove (V)  | gear (N) 	++ :: [ int (N) - index (NI) ] :: runner (N) 
SPECIAL:NAME:TestCharRing void testZeroCapacityThrows(): test (VI)  | zero (PR) capacity (NM) throws (N) 	++ :: test (NM) char (NM) ring (N) 
CONSTRUCTOR:NAME:Sfun Sfun Sfun():  | sfun (N) 	++
SPECIAL:NAME:AppSettings void setTimeOffsetHours(int timeOffsetHours): set (V)  | time (NM) offset (NM) hours (N) 	++ :: [ int (N) - time (NM) offset (NM) hours (N) ] :: app (NM) settings (N) 
BASE_VERB:FORM:NamespaceMap void populate(Statements statements, ResolverSession session): populate (V)  | [ statements (N) - statements (N) ]	++ :: [ resolver (NM) session (N) - session (N) ] :: namespace (NM) map (N) 
SPECIAL:NAME:AbstractReport String getRealTemplateName(): get (V)  | real (NM) template (NM) name (NI) 	++ :: string (NI)  :: abstract (NM) report (N) 
SPECIAL:NAME:Technical List<TechnicalBaseType> getContents(): get (V)  | contents (N) 	++ :: list (NM) technical (NM) base (NM) type (N)  :: technical (N) 
SPECIAL:NAME:QueryRow STRUCT getGeoValue(): get (V)  | geo (NM) value (NI) 	++ :: STRUCT (N)  :: query (NM) row (N) 
BASE_VERB:FORM:SendMailAdaptor int xxfi_connect(int index, String hostname): xxfi (PRE) connect (V)  | [ int (N) - index (NI) ]	++ :: [ string (NI) - hostname (N) ] :: send (NM) mail (NM) adaptor (N)  :: int (N) 
SPECIAL:NAME:AbstractDocumentVersion PrimaryKey getSecureIndirectPreviewIconPrimaryKey(): get (V)  | secure (NM) indirect (NM) preview (NM) icon (NM) primary (NM) key (NI) 	++ :: primary (NM) key (NI)  :: abstract (NM) document (NM) version (N) 
NOUN_PHRASE:NAME:SnmpCounter64 byte typeId(): get (V) | type (NM) id (NI) 	++ :: snmp (NM) counter (NM) 64 (N)  :: byte (N) 
CONSTRUCTOR:NAME:Antagonist Antagonist Antagonist(SessionFactory factory, int subset, VocabularyItem coder):  | antagonist (N) 	++ :: [ session (NM) factory (N) - factory (N) ] :: [ int (N) - subset (N) ] :: [ vocabulary (NM) item (NI) - coder (N) ]
SPECIAL:NAME:ELColumnTag void setDecorator(String value): set (V)  | decorator (N) 	++ :: [ string (NI) - value (NI) ] :: EL (NM) column (NM) tag (NI) 
SPECIAL:NAME:KRSchnittstelle void setLiefNr(String s): set (V)  | lief (NM) nr (N) 	++ :: [ string (NI) - s (N) ] :: KR (NM) schnittstelle (N) 
SPECIAL:FORM:RestrictedDoubleList int copy(int index, double source, int fromIndex, int toIndex): copy (V)  | [ int (N) - index (NI) ]	++ :: [ double (N) - source (NI) ] :: [ int (N) - from (NM) index (NI) ] :: [ int (N) - to (NM) index (NI) ] :: restricted (NM) double (NM) list (N)  :: int (N) 
SPECIAL:NAME:GrammarInfoFacade static GrammarInfo createGrammarInfoFacade(String contextPath, ClassLoader classLoader): create (V)  | grammar (NM) info (NM) facade (NI) 	++ :: [ string (NI) - context (NM) path (NI) ] :: [ class (NM) loader (N) - class (NM) loader (N) ] :: grammar (NM) info (NI)  :: grammar (NM) info (NM) facade (NI) 
BASE_VERB:NAME:JMenuItem void updateUI(): update (V)  | UI (N) 	++ :: J (NM) menu (NM) item (NI) 
SPECIAL:NAME:MotMotAssociationEndFacadeLogic AssociationEndFacade getOtherEnd(): get (V)  | other (DT) end (N) 	++ :: association (NM) end (NM) facade (NI)  :: mot (NM) mot (NM) association (NM) end (NM) facade (NM) logic (N) 
V_3P_IRR:NAME:CIM_Mount boolean isModified(): is (V)  | modified (N) 	++ :: boolean (N)  :: CIM (NM) mount (N) 
BASE_VERB:NAME:Style void parseStyleDef(String styleDef): parse (V)  | EQUIV[style (NM) def (NI) , [ string (NI) - style (NM) def (NI) ]]	++ :: style (N) 
SPECIAL:CLAS:RequestProcessorBean void ejbRemove(): ejb (PRE) remove (V)  | request (NM) processor (NM) bean (NI) 	++
V_3P_IRR:NAME:DoubleStringType boolean isMutable(): is (V)  | mutable (N) 	++ :: boolean (N)  :: double (NM) string (NM) type (N) 
SPECIAL:NAME:ListUsersForm TableModel getTblUsers(): get (V)  | tbl (NM) users (N) 	++ :: table (NM) model (NI)  :: list (NM) users (NM) form (N) 
SPECIAL:NAME:DefaultTransactionManagerFactory void setDriver(String driver): set (V)  | driver (N) 	++ :: [ string (NI) - driver (N) ] :: default (NM) transaction (NM) manager (NM) factory (N) 
SPECIAL:NAME:AnnotatedExpr void setHosts(): set (V)  | hosts (N) 	++ :: annotated (NM) expr (NI) 
BASE_VERB:NAME:UserAgentURLProvider static String shutdownManager(): shutdown (V)  | manager (N) 	++ :: string (NI)  :: user (NM) agent (NM) URL (NM) provider (N) 
SPECIAL:NAME:Info IdentifiableElement getIdref(): get (V)  | idref (N) 	++ :: identifiable (NM) element (NI)  :: info (NI) 
SPECIAL:NAME:MxServiceQuery String getQueryName(): get (V)  | query (NM) name (NI) 	++ :: string (NI)  :: mx (NM) service (NM) query (N) 
SPECIAL:NAME:User String getCountry(): get (V)  | country (N) 	++ :: string (NI)  :: user (N) 
SPECIAL:NAME:ElementHandler static String getSetterMethodName(String attr): get (V)  | setter (NM) method (NM) name (NI) 	++ :: [ string (NI) - attr (N) ] :: string (NI)  :: element (NM) handler (N) 
ENDS_WITH_ED:NAME:ChoicesActionListener void actionPerformed(ActionEvent e): handle (V) | action (NM) performed (N) 	++ :: [ action (NM) event (NI) - e (N) ] :: choices (NM) action (NM) listener (N)  :: void (N) 
SPECIAL:NAME:TestGJHourOfDayDateTimeField String getFieldName(): get (V)  | field (NM) name (NI) 	++ :: string (NI)  :: test (NM) GJ (NM) hour (NM) of (NM) day (NM) date (NM) time (NM) field (N) 
V_3P_IRR:NAME:AuthInfo boolean isOwned(VRObject obj): is (V)  | owned (N) 	++ :: [ VR (NM) object (NI) - obj (NI) ] :: boolean (N)  :: auth (NM) info (NI) 
BASE_VERB:NAME:LogicAdapter Vector serveSelectAdapter(Hashtable visitedvalues, SelectQuery query, Vector values): serve (V)  | select (NM) adapter (NI) 	++ :: [ hashtable (N) - visitedvalues (N) ] :: [ select (NM) query (N) - query (N) ] :: [ vector (N) - values (N) ] :: vector (N)  :: logic (NM) adapter (NI) 
BASE_VERB:FORM:boolean accept(File _pathname): accept (VI)  | [ file (NI) - pathname (N) ]	++ :: ANONYMOUS (N)  :: boolean (N) 
SPECIAL:FORM:int compare(Object o1, Object o2): compare (V)  | [ object (NI) - o (NM) 1 (N) ]	++ :: [ object (NI) - o (NM) 2 (N) ] :: ANONYMOUS (N)  :: int (N) 
NOUN_PHRASE:NAME:PictureTypeImpl int sizeOfOcxArray(): get (V) | size (NM) of (NM) ocx (NM) array (N) 	++ :: picture (NM) type (NM) impl (NI)  :: int (N) 
SPECIAL:NAME:PropertyMgr Properties getProps(String propertyFileName, ClassLoader cl): get (V)  | props (N) 	++ :: [ string (NI) - property (NM) file (NM) name (NI) ] :: [ class (NM) loader (N) - cl (N) ] :: properties (N)  :: property (NM) mgr (N) 
SPECIAL:CLAS:FilterScalarInterpolator void initialize(): initialize (V)  | filter (NM) scalar (NM) interpolator (N) 	++
V_3P_IRR:NAME:NoRelatedSym boolean isSet(EncodedSecurityDescLen field): is (V)  | set (N) 	++ :: [ encoded (NM) security (NM) desc (NM) len (N) - field (N) ] :: boolean (N)  :: no (DT) related (NM) sym (N) 
SPECIAL:NAME:ScriptEngine Bindings getBindings(int scope): get (V)  | bindings (N) 	++ :: [ int (N) - scope (N) ] :: bindings (N)  :: script (NM) engine (N) 
SPECIAL:NAME:SImplementationItemProvider void addBinDirPropertyDescriptor(Object object): add (V)  | bin (NM) dir (NM) property (NM) descriptor (NI) 	++ :: [ object (NI) - object (NI) ] :: S (NM) implementation (NM) item (NM) provider (N) 
V_3P_IRR:NAME:ConstantPoolInfo int isType(): is (V)  | type (N) 	++ :: int (N)  :: constant (NM) pool (NM) info (NI) 
SPECIAL:NAME:MAccount MElementValue getAccount(): get (V)  | account (N) 	++ :: M (NM) element (NM) value (NI)  :: M (NM) account (N) 
SPECIAL:NAME:IGuiLogic List<ParamListItem> getParamList(): get (V)  | param (NM) list (N) 	++ :: list (NM) param (NM) list (NM) item (NI)  :: I (NM) gui (NM) logic (N) 
CONSTRUCTOR:NAME:TitleTests TitleTests TitleTests(String name):  | title (NM) tests (N) 	++ :: [ string (NI) - name (NI) ]
SPECIAL:NAME:AdminPageJspBean ReferenceList getOrdersList(): get (V)  | orders (NM) list (N) 	++ :: reference (NM) list (N)  :: admin (NM) page (NM) jsp (NM) bean (NI) 
SPECIAL:NAME:PlaceableUnits Collection<Unit> getUnits(): get (V)  | units (N) 	++ :: collection (NM) unit (N)  :: placeable (NM) units (N) 
SPECIAL:NAME:XhtmlDocument XhtmlDocument appendBody(String value): append (V)  | body (N) 	++ :: [ string (NI) - value (NI) ] :: xhtml (NM) document (NI)  :: xhtml (NM) document (NI) 
SPECIAL:CLAS:CmdLineOptions void setOnOption(String option, String aliases, Object target, String memberName, double defaultValue): set (V)  | cmd (NM) line (NM) options (N) -- on (P) option (N) 	++ :: [ string (NI) - option (N) ] :: [ string (NI) - aliases (N) ] :: [ object (NI) - target (N) ] :: [ string (NI) - member (NM) name (NI) ] :: [ double (N) - default (NM) value (NI) ]
CONSTRUCTOR:NAME:PrimitiveClass PrimitiveClass PrimitiveClass(String primitiveName, String primitiveSignature):  | primitive (NM) class (NI) 	++ :: [ string (NI) - primitive (NM) name (NI) ] :: [ string (NI) - primitive (NM) signature (N) ]
BASE_VERB:NAME:Unmarshaller void enterAttribute(String ___uri, String ___local, String ___qname): enter (V)  | attribute (N) 	++ :: [ string (NI) - uri (NI) ] :: [ string (NI) - local (N) ] :: [ string (NI) - qname (N) ] :: unmarshaller (N) 
BASE_VERB:NAME:PointCutter pointCutter(): point (V)  | cutter (N) 	++ :: point (NM) cutter (N)  :: ANONYMOUS (N) 
BASE_VERB:NAME:GJtapiWebServiceImpl boolean allocateMedia(String terminal, int type, HashMap params): allocate (V)  | media (N) 	++ :: [ string (NI) - terminal (N) ] :: [ int (N) - type (N) ] :: [ hash (NM) map (N) - params (N) ] :: boolean (N)  :: G (NM) jtapi (NM) web (NM) service (NM) impl (NI) 
SPECIAL:NAME:StandardFormField ArrayList<String> getSelectOptionNamesEncoded(): get (V)  | select (NM) option (NM) names (NM) encoded (N) 	++ :: array (NM) list (NM) string (NI)  :: standard (NM) form (NM) field (N) 
BASE_VERB:FORM:JRMultipleSheetsXlsSaveContributor void save(JasperPrint jasperPrint, File file): save (V)  | [ jasper (NM) print (N) - jasper (NM) print (N) ]	++ :: [ file (NI) - file (NI) ] :: JR (NM) multiple (NM) sheets (NM) xls (NM) save (NM) contributor (N) 
SPECIAL:NAME:CodeAttr void setLocalVarTable(LocalVarTableAttr lvar): set (V)  | local (NM) var (NM) table (N) 	++ :: [ local (NM) var (NM) table (NM) attr (N) - lvar (N) ] :: code (NM) attr (N) 
SPECIAL:NAME:MainPanel BPanel getLeftPanel(): get (V)  | left (NM) panel (N) 	++ :: B (NM) panel (N)  :: main (NM) panel (N) 
SPECIAL:NAME:EnunciatedJAXWSMessageBinding OperationInfo findOperation(Service endpoint, QName inMessageName): find (V)  | operation (N) 	++ :: [ service (N) - endpoint (N) ] :: [ Q (NM) name (NI) - in (NM) message (NM) name (NI) ] :: operation (NM) info (NI)  :: enunciated (NM) JAXWS (NM) message (NM) binding (N) 
BASE_VERB:NAME:CalendarModel String computeNextMonthUrl(): compute (V)  | next (DT) month (NM) url (NI) 	++ :: string (NI)  :: calendar (NM) model (NI) 
CONSTRUCTOR:NAME:SetNextRule SetNextRule SetNextRule(String methodName, String paramType):  | set (NM) next (DT) rule (N) 	++ :: [ string (NI) - method (NM) name (NI) ] :: [ string (NI) - param (NM) type (N) ]
SPECIAL:NAME:DesignIHTest void testElements(): test (VI)  | elements (N) 	++ :: design (NM) IH (NM) test (N) 
BASE_VERB:NAME:DirectCommandExecutor String listDebuggingModules(String id, DebugType types): list (V)  | debugging (NM) modules (N) 	++ :: [ string (NI) - id (NI) ] :: [ debug (NM) type (N) - types (N) ] :: string (NI)  :: direct (NM) command (NM) executor (N) 
BASE_VERB:CLAS:ExplodePanel void Redo(): redo (V)  | explode (NM) panel (N) 	++
CONSTRUCTOR:NAME:AbstractActiveDirectoryGroup AbstractActiveDirectoryGroup AbstractActiveDirectoryGroup():  | abstract (NM) active (NM) directory (NM) group (N) 	++
SPECIAL:NAME:PEAction EditorKit getEditorKit(): get (V)  | editor (NM) kit (N) 	++ :: editor (NM) kit (N)  :: PE (NM) action (N) 
SPECIAL:NAME:PortalPropertiesForm void setRightSel(String rightSel): set (V)  | right (NM) sel (N) 	++ :: [ string (NI) - right (NM) sel (N) ] :: portal (NM) properties (NM) form (N) 
SPECIAL:NAME:Table List getDontPlaceFour(): get (V)  | dont (NM) place (NM) four (N) 	++ :: list (N)  :: table (N) 
SPECIAL:NAME:DiffusionCoefInterface void setDefaultValue(DblMatrix N): set (V)  | default (NM) value (NI) 	++ :: [ dbl (NM) matrix (N) - N (N) ] :: diffusion (NM) coef (NM) interface (NI) 
CONSTRUCTOR:NAME:PrintLevel PrintLevel PrintLevel(String name, int level):  | print (NM) level (N) 	++ :: [ string (NI) - name (NI) ] :: [ int (N) - level (N) ]
SPECIAL:NAME:HMIS1082 int getDeads(): get (V)  | deads (N) 	++ :: int (N)  :: HMIS (NM) 1082 (N) 
PREP:NAME:LaTeXDrawPolygon void onClick(Point pt): handle (V) | on (NM) click (N) 	++ :: [ point (N) - pt (N) ] :: la (NM) te (NM) X (NM) draw (NM) polygon (N)  :: void (N) 
SPECIAL:CLAS:SequenceManagementServiceBeanImpl void ejbRemove(): ejb (PRE) remove (V)  | sequence (NM) management (NM) service (NM) bean (NM) impl (NI) 	++
SPECIAL:NAME:ScopesFilter void doFilter(ServletRequest request, ServletResponse response, FilterChain chain): do (VI)  | filter (N) 	++ :: [ servlet (NM) request (N) - request (N) ] :: [ servlet (NM) response (N) - response (N) ] :: [ filter (NM) chain (N) - chain (N) ] :: scopes (NM) filter (N) 
SPECIAL:NAME:CertExt EasyDate getNotBefore(): get (V)  | not (DT) before (NM) 	++ :: easy (NM) date (N)  :: cert (NM) ext (N) 
SPECIAL:NAME:Item void setLink(String link): set (V)  | link (N) 	++ :: [ string (NI) - link (N) ] :: item (NI) 
BASE_VERB:CLAS:ServerConnection void stop(): stop (VI)  | server (NM) connection (N) 	++
SPECIAL:NAME:Configurator long getLastBackup(): get (V)  | last (DT) backup (N) 	++ :: long (N)  :: configurator (N) 
SPECIAL:NAME:MessageHandle long getConsumerId(): get (V)  | consumer (NM) id (NI) 	++ :: long (N)  :: message (NM) handle (NI) 
SPECIAL:FORM:QueueTest static void main(String args): main (V)  | [ string (NI) - args (N) ]	++ :: queue (NM) test (N) 
BASE_VERB:NAME:KoLmafia void makePurchases(List results, Object purchases, int maxPurchases): make (V)  | EQUIV[purchases (N) , [ object (NI) - purchases (N) ], [ int (N) - max (NM) purchases (N) ]]	++ :: [ list (N) - results (N) ] :: ko (NM) lmafia (N) 
SPECIAL:NAME:HtmlCommandButton void setDisabled(boolean disabled): set (V)  | disabled (N) 	++ :: [ boolean (N) - disabled (N) ] :: html (NM) command (NM) button (N) 
SPECIAL:NAME:COSWriter void writeStreamContent(byte bytes): write (V)  | stream (NM) content (N) 	++ :: [ byte (N) - bytes (NI) ] :: COS (NM) writer (N) 
BASE_VERB:NAME:Frames static void saveFrame(Component frame, Preferences preferences): save (V)  | EQUIV[frame (N) , [ component (N) - frame (N) ]]	++ :: [ preferences (N) - preferences (N) ] :: frames (N) 
BASE_VERB:CLAS:MockReleaseValidator Errors validateForDelete(Release p0_Release): validate (VI)  | mock (NM) release (NM) validator (N) -- for (P) delete (N) 	++ :: [ release (N) - p (NM) 0 (NM) release (N) ] :: errors (N) 
SPECIAL:NAME:CustomList void startThread(): start (V)  | thread (N) 	++ :: custom (NM) list (N) 
BASE_VERB:NAME:Literal static String stripString(String s): strip (V)  | EQUIV[string (NI) , [ string (NI) - s (N) ]]	++ :: string (NI)  :: literal (N) 
SPECIAL:NAME:DataSetFactory static JRExpression getExpressionFromVariable(JRDesignVariable var): get (V)  | expression (N) -- from (P) EQUIV[variable (N) , [ JR (NM) design (NM) variable (N) - var (N) ]]	++ :: JR (NM) expression (N)  :: data (NM) set (NM) factory (N) 
BASE_VERB:NAME:Unmarshaller void leaveAttribute(String ___uri, String ___local, String ___qname): leave (V)  | attribute (N) 	++ :: [ string (NI) - uri (NI) ] :: [ string (NI) - local (N) ] :: [ string (NI) - qname (N) ] :: unmarshaller (N) 
BASE_VERB:CLAS:FileInput void close(): close (V)  | file (NM) input (NI) 	++
BASE_VERB:NAME:PluginManagerImpl void refreshPluginList(): refresh (V)  | plugin (NM) list (N) 	++ :: plugin (NM) manager (NM) impl (NI) 
BASE_VERB:NAME:Any void insert_Object(Object o, TypeCode t): insert (V)  | EQUIV[object (NI) , [ object (NI) - o (N) ]]	++ :: [ type (NM) code (NI) - t (N) ] :: any (DT) 
CONSTRUCTOR:NAME:HtmlSerializer HtmlSerializer HtmlSerializer(Writer out):  | html (NM) serializer (N) 	++ :: [ writer (N) - out (N) ]
PREP:NAME:EmptySet Object toArray(Object a): convert (V) | to (P) array (N) 	++ :: [ object (NI) - a (N) ] :: empty (NM) set (N)  :: object (NI) 
SPECIAL:NAME:indexedTriangleFanSetBean sfvec3f getNormalForVertex(int vertexNum, di_progress progress): get (V)  | normal (N) -- for (P) EQUIV[vertex (N) , [ int (N) - vertex (NM) num (NI) ]]	++ :: [ di (NM) progress (N) - progress (N) ] :: sfvec (NM) 3 (NM) f (N)  :: indexed (NM) triangle (NM) fan (NM) set (NM) bean (NI) 
SPECIAL:NAME:RelationalStorageTechnologyDefTypeImpl void setAssociationTableNameConversionType(String value): set (V)  | association (NM) table (NM) name (NM) conversion (NM) type (N) 	++ :: [ string (NI) - value (NI) ] :: relational (NM) storage (NM) technology (NM) def (NM) type (NM) impl (NI) 
SPECIAL:NAME:Divide int getReturnType(): get (V)  | return (NM) type (N) 	++ :: int (N)  :: divide (N) 
V_3PS:FORM:Put boolean equals(Object obj): equals (V)  | [ object (NI) - obj (NI) ]	++ :: put (N)  :: boolean (N) 
BASE_VERB:NAME:ScrollLayout void layoutContainer(Container parent): layout (V)  | EQUIV[container (NI) , [ container (NI) - parent (N) ]]	++ :: scroll (NM) layout (N) 
BASE_VERB:CLAS:GeneralPathPrimitive void lineTo(float x, float y): line (V)  | general (NM) path (NM) primitive (N) -- to (P) [ float (N) - x (N) ]	++ :: [ float (N) - x (N) ] :: [ float (N) - y (N) ]
SPECIAL:NAME:DebugLexer StringBuffer getBuffer(): get (V)  | buffer (NI) 	++ :: string (NM) buffer (NI)  :: debug (NM) lexer (N) 
PREP:NAME:WrapperControlEvent String toString(): convert (V) | to (P) string (NI) 	++ :: wrapper (NM) control (NM) event (NI)  :: string (NI) 
PREP:NAME:BasicHttpParser void onHeader(String name, String value): handle (V) | on (NM) header (N) 	++ :: [ string (NI) - name (NI) ] :: [ string (NI) - value (NI) ] :: basic (NM) http (NM) parser (N)  :: void (N) 
SPECIAL:FORM:PyGetSetDescr void __set__(PyObject obj, PyObject value): set (V)  | [ py (NM) object (NI) - obj (NI) ]	++ :: [ py (NM) object (NI) - value (NI) ] :: py (NM) get (NM) set (NM) descr (N) 
BASE_VERB:NAME:NewsConverter String FormatHTMLHeader(String HeaderName, String HeaderBody): format (V)  | EQUIV[HTML (NM) header (N) , [ string (NI) - header (NM) name (NI) ]]	++ :: [ string (NI) - header (NM) body (N) ] :: string (NI)  :: news (NM) converter (N) 
BASE_VERB:NAME:Equip2LogPST void handleObject(Object object, Summary summary): handle (VI)  | EQUIV[object (NI) , [ object (NI) - object (NI) ]]	++ :: [ summary (N) - summary (N) ] :: equip (NM) 2 (NM) log (NM) PST (N) 
SPECIAL:NAME:FileOutputStream FileDescriptor getFD(): get (V)  | FD (N) 	++ :: file (NM) descriptor (NI)  :: file (NM) output (NM) stream (NI) 
SPECIAL:NAME:VectorFilteredRenderer FilteredRenderSpec getSpec(): get (V)  | spec (NI) 	++ :: filtered (NM) render (NM) spec (NI)  :: vector (NM) filtered (NM) renderer (N) 
ENDS_WITH_ED:NAME:void componentResized(ComponentEvent e): handle (V) | component (NM) resized (N) 	++ :: [ component (NM) event (NI) - e (N) ] :: ANONYMOUS (N)  :: void (N) 
CONSTRUCTOR:NAME:MgnlUser MgnlUser MgnlUser(Content userNode):  | mgnl (NM) user (N) 	++ :: [ content (N) - user (NM) node (NI) ]
ENDS_WITH_ED:NAME:GameEngine int numberOfGamesPlayed(): handle (V) | number (NM) of (NM) games (NM) played (N) 	++ :: game (NM) engine (N)  :: int (N) 
SPECIAL:NAME:QueryAccessPOA OutputStream _OB_op_get_observations_by_time(InputStream in, ResponseHandler handler): OB (PRE) op (PRE) get (V)  | observations (N) -- by (P) time (N) 	++ :: [ input (NM) stream (NI) - in (NI) ] :: [ response (NM) handler (N) - handler (N) ] :: output (NM) stream (NI)  :: query (NM) access (NM) POA (N) 
ENDS_WITH_ED:NAME:void stateChanged(ChangeEvent e): handle (V) | state (NM) changed (N) 	++ :: [ change (NM) event (NI) - e (N) ] :: ANONYMOUS (N)  :: void (N) 
V_3PS:FORM:OrderPK boolean equals(Object obj): equals (V)  | [ object (NI) - obj (NI) ]	++ :: order (NM) PK (NI)  :: boolean (N) 
V_3P_IRR:NAME:NoRelatedSym boolean isSet(QuoteType field): is (V)  | set (N) 	++ :: [ quote (NM) type (N) - field (N) ] :: boolean (N)  :: no (DT) related (NM) sym (N) 
SPECIAL:NAME:DynamicTimeSeriesCollection Number getStartX(int series, int item): get (V)  | start (NM) X (N) 	++ :: [ int (N) - series (N) ] :: [ int (N) - item (NI) ] :: number (NI)  :: dynamic (NM) time (NM) series (NM) collection (N) 
SPECIAL:NAME:OLEObjectEltImpl void setType(String type): set (V)  | type (N) 	++ :: [ string (NI) - type (N) ] :: OLE (NM) object (NM) elt (NM) impl (NI) 
SPECIAL:NAME:RsMd2DbMdResultSet ResultSetMetaData getMetaData(): get (V)  | meta (NM) data (NI) 	++ :: result (NM) set (NM) meta (NM) data (NI)  :: rs (NM) md (NM) 2 (NM) db (NM) md (NM) result (NM) set (N) 
SPECIAL:NAME:AbstractBlockWriter void printMessage(StandardBlock sb): print (V)  | message (NI) 	++ :: [ standard (NM) block (N) - sb (N) ] :: abstract (NM) block (NM) writer (N) 
SPECIAL:NAME:EmptyService void initData(ActionData data): init (V)  | EQUIV[data (NI) , [ action (NM) data (NI) - data (NI) ]]	++ :: empty (NM) service (N) 
SPECIAL:NAME:MenuBar void deleteShortcut(MenuShortcut shortcut): delete (V)  | EQUIV[shortcut (N) , [ menu (NM) shortcut (N) - shortcut (N) ]]	++ :: menu (NM) bar (N) 
BASE_VERB:NAME:UTF8Reader EntityReader changeReaders(): change (V)  | readers (N) 	++ :: entity (NM) reader (N)  :: UTF (NM) 8 (NM) reader (N) 
BASE_VERB:NAME:CompositeCustomType int sqlTypes(Mapping mapping): sql (V)  | types (N) 	++ :: [ mapping (N) - mapping (N) ] :: int (N)  :: composite (NM) custom (NM) type (N) 
SPECIAL:NAME:WelcomeEditor void readFile(): read (V)  | file (NI) 	++ :: welcome (NM) editor (N) 
SPECIAL:FORM:int compare(Object a, Object b): compare (V)  | [ object (NI) - a (N) ]	++ :: [ object (NI) - b (N) ] :: ANONYMOUS (N)  :: int (N) 
BASE_VERB:NAME:EntityEncoder static String formatEquipment(int index, Mounted mount, Entity entity): format (V)  | equipment (N) 	++ :: [ int (N) - index (NI) ] :: [ mounted (N) - mount (N) ] :: [ entity (N) - entity (N) ] :: string (NI)  :: entity (NM) encoder (N) 
V_3PS:NAME:TPhotographerBean boolean implementsIHostServiceForBean(): implements (V)  | I (NM) host (NM) service (N) -- for (P) bean (NI) 	++ :: boolean (N)  :: T (NM) photographer (NM) bean (NI) 
SPECIAL:NAME:EdgesAsLPConstraintSequence int getNumConstrs(): get (V)  | num (NM) constrs (N) 	++ :: int (N)  :: edges (NM) as (NM) LP (NM) constraint (NM) sequence (N) 
V_3P_IRR:NAME:DomDocumentBuilder boolean isXIncludeAware(): is (V)  | X (NM) include (NM) aware (N) 	++ :: boolean (N)  :: dom (NM) document (NM) builder (N) 
SPECIAL:FORM:HsqlList Object remove(int index): remove (V)  | [ int (N) - index (NI) ]	++ :: hsql (NM) list (N)  :: object (NI) 
CONSTRUCTOR:NAME:RadioMenuItemEditor RadioMenuItemEditor RadioMenuItemEditor(Widget widget, WindowEditor editor):  | radio (NM) menu (NM) item (NM) editor (N) 	++ :: [ widget (N) - widget (N) ] :: [ window (NM) editor (N) - editor (N) ]
SPECIAL:NAME:JavaShiftOperation JavaType getResultType(): get (V)  | result (NM) type (N) 	++ :: java (NM) type (N)  :: java (NM) shift (NM) operation (N) 
SPECIAL:FORM:Plugin_SOW boolean read(String path): read (V)  | [ string (NI) - path (NI) ]	++ :: plugin (NM) SOW (N)  :: boolean (N) 
SPECIAL:NAME:LearnerPersonalInformationView JTextField getPostalAddress3(): get (V)  | postal (NM) address (NI) 3 (D) 	++ :: J (NM) text (NM) field (N)  :: learner (NM) personal (NM) information (NM) view (NI) 
CONSTRUCTOR:NAME:Cookie Cookie Cookie(String raw):  | cookie (N) 	++ :: [ string (NI) - raw (N) ]
CONSTRUCTOR:NAME:EXML_NODE EXML_NODE EXML_NODE(EXML_NODE swigEnum):  | EXML (NM) NODE (NI) 	++ :: [ EXML (NM) NODE (NI) - swig (NM) enum (NI) ]
BASE_VERB:NAME:SequencePullSupplierPOATie void disconnect_sequence_pull_supplier(): disconnect (V)  | sequence (NM) pull (NM) supplier (N) 	++ :: sequence (NM) pull (NM) supplier (NM) POA (NM) tie (N) 
CONSTRUCTOR:NAME:KShortestPathCompleteGraph4 KShortestPathCompleteGraph4 KShortestPathCompleteGraph4():  | K (NM) shortest (NM) path (NM) complete (NM) graph (NM) 4 (N) 	++
VOID_NP:NAME:GrammarView void error(Element e, String errorId, Object arg1, Object arg2, Object arg3): handle (V) | error (N) 	++ :: [ element (NI) - e (N) ] :: [ string (NI) - error (NM) id (NI) ] :: [ object (NI) - arg (NM) 1 (N) ] :: [ object (NI) - arg (NM) 2 (N) ] :: [ object (NI) - arg (NM) 3 (N) ] :: grammar (NM) view (NI)  :: void (N) 
SPECIAL:NAME:WordNet void setPropertyUrl(URL _propertiesUrl): set (V)  | property (NM) url (NI) 	++ :: [ URL (NI) - properties (NM) url (NI) ] :: word (NM) net (N) 
SPECIAL:NAME:ServerDTP void setRepresentation(Representation representation): set (V)  | representation (N) 	++ :: [ representation (N) - representation (N) ] :: server (NM) DTP (N) 
SPECIAL:CLAS:TwoWayMutationOperatorTest void testCompareTo_0(): test (VI) compare (V)  | two (NM) way (NM) mutation (NM) operator (NM) test (N) -- to (P) 0 (D) 	++
SPECIAL:NAME:DERIA5String static DERIA5String getInstance(Object obj): get (V)  | instance (NI) 	++ :: [ object (NI) - obj (NI) ] :: DERIA (NM) 5 (NM) string (NI)  :: DERIA (NM) 5 (NM) string (NI) 
SPECIAL:NAME:uniDataInterface List getList(mvConstantString name): get (V)  | list (N) 	++ :: [ mv (NM) constant (NM) string (NI) - name (NI) ] :: list (N)  :: uni (NM) data (NM) interface (NI) 
SPECIAL:NAME:AbstractCellEditor void addCellEditorListener(CellEditorListener l): add (V)  | EQUIV[cell (NM) editor (NM) listener (N) , [ cell (NM) editor (NM) listener (N) - l (N) ]]	++ :: abstract (NM) cell (NM) editor (N) 
SPECIAL:NAME:ExpressionImpl TreeElement getRootElement(): get (V)  | root (NM) element (NI) 	++ :: tree (NM) element (NI)  :: expression (NM) impl (NI) 
SPECIAL:NAME:X86Assembler void writeArithOp(int operation, GPR dstReg, int dstDisp, GPR srcReg): write (V)  | arith (NM) op (N) 	++ :: [ int (N) - operation (N) ] :: [ GPR (N) - dst (NM) reg (N) ] :: [ int (N) - dst (NM) disp (N) ] :: [ GPR (N) - src (NM) reg (N) ] :: X (NM) 86 (NM) assembler (N) 
ENDS_WITH_ED:NAME:ResultMonitorDataModel void fireNewSearchResultAdded(SearchResultElement resultElement, int index): handle (V) | fire (NM) new (NM) search (NM) result (NM) added (N) 	++ :: [ search (NM) result (NM) element (NI) - result (NM) element (NI) ] :: [ int (N) - index (NI) ] :: result (NM) monitor (NM) data (NM) model (NI)  :: void (N) 
BASE_VERB:NAME:SynthFileChooserUI void updateStyle(JComponent c): update (V)  | style (N) 	++ :: [ J (NM) component (N) - c (N) ] :: synth (NM) file (NM) chooser (NM) UI (N) 
SPECIAL:NAME:SessionResultFilter void setUsername(String username): set (V)  | username (N) 	++ :: [ string (NI) - username (N) ] :: session (NM) result (NM) filter (N) 
BASE_VERB:NAME:DCarteHistorique ICarteReel carteValeurMin(): carte (V)  | valeur (NM) min (N) 	++ :: I (NM) carte (NM) reel (N)  :: D (NM) carte (NM) historique (N) 
SPECIAL:NAME:BasicTreeUI void setShowsRootHandles(boolean newValue): set (V)  | shows (NM) root (NM) handles (N) 	++ :: [ boolean (N) - new (NM) value (NI) ] :: basic (NM) tree (NM) UI (N) 
SPECIAL:NAME:MD_Format void setVersion(String version): set (V)  | version (N) 	++ :: [ string (NI) - version (N) ] :: MD (NM) format (NI) 
NOUN_PHRASE:NAME:DoubleLDoubleRandom Double nextA(): get (V) | next (DT) A (N) 	++ :: double (NM) L (NM) double (NM) random (N)  :: double (N) 
SPECIAL:NAME:ControlPanel JPanel getSouthPanel(): get (V)  | south (NM) panel (N) 	++ :: J (NM) panel (N)  :: control (NM) panel (N) 
ENDS_WITH_ED:NAME:NewsMaestro void MenuFile_Exit_actionPerformed(): handle (V) | menu (NM) file (NM) exit (NM) action (NM) performed (N) 	++ :: news (NM) maestro (N)  :: void (N) 
BASE_VERB:FORM:BigIntegerConverter Object convert(Object data, Locale locale): convert (V)  | [ object (NI) - data (NI) ]	++ :: [ locale (N) - locale (N) ] :: big (NM) integer (NM) converter (N)  :: object (NI) 
PREP:NAME:ClassEntry boolean beforePropagation(): handle (V) | before (NM) propagation (N) 	++ :: class (NM) entry (NI)  :: boolean (N) 
SPECIAL:FORM:AbstractPreparator void initialize(List params, Map context): initialize (V)  | [ list (N) - params (N) ]	++ :: [ map (N) - context (N) ] :: abstract (NM) preparator (N) 
BASE_VERB:NAME:FuPreferences void putBooleanProperty(String _key, boolean _value): put (V)  | boolean (NM) property (N) 	++ :: [ string (NI) - key (NI) ] :: [ boolean (N) - value (NI) ] :: fu (NM) preferences (N) 
SPECIAL:NAME:AudioMetaData int getBitrate(): get (V)  | bitrate (N) 	++ :: int (N)  :: audio (NM) meta (NM) data (NI) 
SPECIAL:NAME:Constructor String getName(): get (V)  | name (NI) 	++ :: string (NI)  :: constructor (N) 
SPECIAL:NAME:ProjectionAttribute Enum getProjection(): get (V)  | projection (N) 	++ :: enum (NI)  :: projection (NM) attribute (N) 
SPECIAL:NAME:VelocityView Context createVelocityContext(Map model, HttpServletRequest request, HttpServletResponse response): create (V)  | velocity (NM) context (N) 	++ :: [ map (N) - model (NI) ] :: [ http (NM) servlet (NM) request (N) - request (N) ] :: [ http (NM) servlet (NM) response (N) - response (N) ] :: context (N)  :: velocity (NM) view (NI) 
PREP:NAME:ObjectCacheJCSImpl String toString(): convert (V) | to (P) string (NI) 	++ :: object (NM) cache (NM) JCS (NM) impl (NI)  :: string (NI) 
CONSTRUCTOR:NAME:East East East():  | east (N) 	++
SPECIAL:NAME:LongOpt String getName(): get (V)  | name (NI) 	++ :: string (NI)  :: long (NM) opt (N) 
SPECIAL:NAME:ParserTest void testPattern177(): test (VI)  | pattern (N) 177 (D) 	++ :: parser (NM) test (N) 
BASE_VERB:NAME:OS static void XmDropTransferAdd(int drop_transfer, int transfers, int num_transfers): xm (PRE) drop (V)  | transfer (NM) add (N) 	++ :: [ int (N) - drop (NM) transfer (N) ] :: [ int (N) - transfers (N) ] :: [ int (N) - num (NM) transfers (N) ] :: OS (N) 
SPECIAL:NAME:YWorkItem void setInitData(Element data): set (V)  | init (NM) data (NI) 	++ :: [ element (NI) - data (NI) ] :: Y (NM) work (NM) item (NI) 
EMPTY:NONE:BasicNetworkSettings IPaddr dns1():  | dns (PRE) 1 (D) 
SPECIAL:NAME:MockHttpServletRequest Enumeration getHeaderNames(): get (V)  | header (NM) names (N) 	++ :: enumeration (N)  :: mock (NM) http (NM) servlet (NM) request (N) 
SPECIAL:NAME:NameDescriptor TypeValidator getValidator(): get (V)  | validator (N) 	++ :: type (NM) validator (N)  :: name (NM) descriptor (NI) 
BASE_VERB:FORM:RestrictedFloatList int countUp(int fromIndex, int toIndex, float e, int maxCount): count (V) up (VP)  | [ int (N) - from (NM) index (NI) ]	++ :: [ int (N) - to (NM) index (NI) ] :: [ float (N) - e (N) ] :: [ int (N) - max (NM) count (N) ] :: restricted (NM) float (NM) list (N)  :: int (N) 
BASE_VERB:NAME:FileLoader static byte stream2bytes(InputStream inStream, int max): stream (V)  | 2 (D) bytes (NI) 	++ :: [ input (NM) stream (NI) - in (NM) stream (NI) ] :: [ int (N) - max (N) ] :: byte (N)  :: file (NM) loader (N) 
SPECIAL:NAME:VFSMount void setRoot(boolean isroot): set (V)  | root (N) 	++ :: [ boolean (N) - isroot (N) ] :: VFS (NM) mount (N) 
SPECIAL:NAME:AccessibleContext int getAccessibleChildrenCount(): get (V)  | accessible (NM) children (NM) count (N) 	++ :: int (N)  :: accessible (NM) context (N) 
BASE_VERB:NAME:KeyboardFocusManager void focusPreviousComponent(Component comp): focus (V)  | EQUIV[previous (NM) component (N) , [ component (N) - comp (N) ]]	++ :: keyboard (NM) focus (NM) manager (N) 
SPECIAL:NAME:RelatedBusinessInfo void setServiceName(String name): set (V)  | service (NM) name (NI) 	++ :: [ string (NI) - name (NI) ] :: related (NM) business (NM) info (NI) 
SPECIAL:NAME:ScriptProcessor void setState(AvignonTestState state): set (V)  | state (N) 	++ :: [ avignon (NM) test (NM) state (N) - state (N) ] :: script (NM) processor (N) 
ENDS_WITH_ING:NAME:void windowClosing(WindowEvent e): handle (V) | window (NM) closing (N) 	++ :: [ window (NM) event (NI) - e (N) ] :: ANONYMOUS (N)  :: void (N) 
SPECIAL:NAME:AlbumTableModel int getRowCount(): get (V)  | row (NM) count (N) 	++ :: int (N)  :: album (NM) table (NM) model (NI) 
SPECIAL:NAME:AddAdministrator void setResult(String addAdministratorResult): set (V)  | result (N) 	++ :: [ string (NI) - add (NM) administrator (NM) result (N) ] :: add (NM) administrator (N) 
SPECIAL:FORM:UnknownOfferIdHolder void _write(OutputStream out): write (V)  | [ output (NM) stream (NI) - out (N) ]	++ :: unknown (NM) offer (NM) id (NM) holder (NI) 
SPECIAL:NAME:Query List getOrderBy(): get (V)  | order (N) by (NM) 	++ :: list (N)  :: query (N) 
SPECIAL:NAME:GraphMouseAdapter void setModifiers(int modifiers): set (V)  | modifiers (N) 	++ :: [ int (N) - modifiers (N) ] :: graph (NM) mouse (NM) adapter (NI) 
CONSTRUCTOR:NAME:ValidatorChain ValidatorChain ValidatorChain():  | validator (NM) chain (N) 	++
SPECIAL:NAME:epp_LogoutReq epp_Extension getExtension(): get (V)  | extension (N) 	++ :: epp (NM) extension (N)  :: epp (NM) logout (NM) req (N) 
CONSTRUCTOR:NAME:DereferencingTask DereferencingTask DereferencingTask(DereferencingListener listener, String uri, int step):  | dereferencing (NM) task (N) 	++ :: [ dereferencing (NM) listener (N) - listener (N) ] :: [ string (NI) - uri (NI) ] :: [ int (N) - step (N) ]
SPECIAL:NAME:KeyDB void deleteRec(int i_key): delete (V)  | rec (N) 	++ :: [ int (N) - i (NM) key (NI) ] :: key (NM) DB (N) 
SPECIAL:NAME:HImpl ParagraphCount addNewParagraphCount(): add (V)  | new (NM) paragraph (NM) count (N) 	++ :: paragraph (NM) count (N)  :: H (NM) impl (NI) 
V_3P_IRR:NAME:PepsynanalogtypelistBean boolean isModified(): is (V)  | modified (N) 	++ :: boolean (N)  :: pepsynanalogtypelist (NM) bean (NI) 
SPECIAL:NAME:UnitCell void constructFractionalMatrices(): construct (V)  | fractional (NM) matrices (N) 	++ :: unit (NM) cell (N) 
BASE_VERB:FORM:Qualog static boolean underscore(String name, char ary): underscore (V)  | [ string (NI) - name (NI) ]	++ :: [ char (N) - ary (N) ] :: qualog (N)  :: boolean (N) 
SPECIAL:NAME:Reflection static jq_Method getJQMember(Method f): get (V)  | JQ (NM) member (N) 	++ :: [ method (N) - f (N) ] :: jq (NM) method (N)  :: reflection (N) 
SPECIAL:NAME:Evidences List getCreator(): get (V)  | creator (N) 	++ :: list (N)  :: evidences (N) 
PREP:NAME:ImportCentralMetabolicsPathwaysPage1 void onEnterPage(): handle (V) | on (NM) enter (NM) page (N) 	++ :: import (NM) central (NM) metabolics (NM) pathways (NM) page (NM) 1 (N)  :: void (N) 
V_MODAL:FORM:Thing boolean canSee(Map m, int tx, int ty): can (VI) see (V)  | [ map (N) - m (N) ]	++ :: [ int (N) - tx (N) ] :: [ int (N) - ty (N) ] :: thing (N)  :: boolean (N) 
SPECIAL:CLAS:SuccessfulBuildMoreThan24HourTest void doTearDown(): do (VI) tear (V) down (VP)  | successful (NM) build (NM) more (DT) than (NM) 24 (NM) hour (NM) test (N) 	++
SPECIAL:NAME:JavaServiceDesc OperationDesc getOperationsByName(String methodName): get (V)  | operations (N) -- by (P) EQUIV[name (NI) , [ string (NI) - method (NM) name (NI) ]]	++ :: operation (NM) desc (NI)  :: java (NM) service (NM) desc (NI) 
SPECIAL:NAME:ComponentLocal Collection getIssues(): get (V)  | issues (N) 	++ :: collection (N)  :: component (NM) local (N) 
SPECIAL:NAME:MochaUser Collection getProjectsManaged(): get (V)  | projects (NM) managed (N) 	++ :: collection (N)  :: mocha (NM) user (N) 
CONSTRUCTOR:NAME:LoadLibrary LoadLibrary LoadLibrary():  | load (NM) library (N) 	++
SPECIAL:NAME:EditorHelper static int getScreenHeight(Editor editor): get (V)  | screen (NM) height (N) 	++ :: [ editor (N) - editor (N) ] :: int (N)  :: editor (NM) helper (N) 
ENDS_WITH_ED:NAME:Segment void waitUntilLoaded(): handle (V) | wait (NM) until (NM) loaded (N) 	++ :: segment (N)  :: void (N) 
NOUN_PHRASE:NAME:XmlInstance String exprequest(String call): get (V) | exprequest (N) 	++ :: [ string (NI) - call (N) ] :: xml (NM) instance (NI)  :: string (NI) 
SPECIAL:NAME:AggregationAndKompositionTest void test_LoadAggregation_0(): test (VI) load (V)  | aggregation (N) 0 (D) 	++ :: aggregation (NM) and (NM) komposition (NM) test (N) 
PREP:NAME:IProperties String toAppArgsForm(String prefix): convert (V) | to (P) app (NM) args (NM) form (N) 	++ :: [ string (NI) - prefix (N) ] :: I (NM) properties (N)  :: string (NI) 
CONSTRUCTOR:NAME:QGroupBox QGroupBox QGroupBox(int columns, int o, String title):  | Q (NM) group (NM) box (N) 	++ :: [ int (N) - columns (N) ] :: [ int (N) - o (N) ] :: [ string (NI) - title (N) ]
V_3P_IRR:NAME:JVertexLayout boolean isDefault(): is (V)  | default (N) 	++ :: boolean (N)  :: J (NM) vertex (NM) layout (N) 
SPECIAL:NAME:LineSegment2D Point2D getOtherPoint(Point2D point): get (V)  | EQUIV[other (DT) point (N) , [ point (NM) 2 (NM) D (N) - point (N) ]]	++ :: point (NM) 2 (NM) D (N)  :: line (NM) segment (NM) 2 (NM) D (N) 
SPECIAL:NAME:P Frame addNewFrame(): add (V)  | new (NM) frame (N) 	++ :: frame (N)  :: P (NI) 
SPECIAL:NAME:Map List findStuff(Thing b, int filter): find (V)  | stuff (N) 	++ :: [ thing (N) - b (N) ] :: [ int (N) - filter (N) ] :: list (N)  :: map (N) 
NOUN_PHRASE:NAME:HibernateQueryCommandTableModel int indexForPropertyName(String propertyName): get (V) | index (NM) for (NM) property (NM) name (NI) 	++ :: [ string (NI) - property (NM) name (NI) ] :: hibernate (NM) query (NM) command (NM) table (NM) model (NI)  :: int (N) 
SPECIAL:NAME:ByteRegion int endIdx(): end (V)  | idx (N) 	++ :: int (N)  :: byte (NM) region (N) 
SPECIAL:NAME:BrushDesignerDrawingPanel void addPaintListener(PaintListener listener): add (V)  | EQUIV[paint (NM) listener (N) , [ paint (NM) listener (N) - listener (N) ]]	++ :: brush (NM) designer (NM) drawing (NM) panel (N) 
BASE_VERB:NAME:DicoParamsPrevalid void preAcceptSet(DicoEntite _ent, String _newVal, CtuluCommandContainer _cmd): pre (V)  | accept (NM) set (N) 	++ :: [ dico (NM) entite (N) - ent (N) ] :: [ string (NI) - new (NM) val (NI) ] :: [ ctulu (NM) command (NM) container (NI) - cmd (N) ] :: dico (NM) params (NM) prevalid (N) 
SPECIAL:NAME:ProcessInfo void addLog(ProcessInfoLog logEntry): add (V)  | EQUIV[log (N) , [ process (NM) info (NM) log (N) - log (NM) entry (NI) ]]	++ :: process (NM) info (NI) 
EVENT_PARAM:NAME:void dragOver(DropTargetEvent event): handle (V) | drag (NM) over (N) 	++ :: [ drop (NM) target (NM) event (NI) - event (NI) ] :: ANONYMOUS (N)  :: void (N) 
SPECIAL:NAME:IpRange String getEndIp(): get (V)  | end (NM) ip (N) 	++ :: string (NI)  :: ip (NM) range (N) 
SPECIAL:NAME:BaseEntry Date getTimestamp(): get (V)  | timestamp (N) 	++ :: date (N)  :: base (NM) entry (NI) 
SPECIAL:NAME:JTabbedPane boolean checkTabEnabled(SelectionEvent e): check (VI)  | tab (NM) enabled (N) 	++ :: [ selection (NM) event (NI) - e (N) ] :: boolean (N)  :: J (NM) tabbed (NM) pane (N) 
SPECIAL:NAME:Round int getTotal(): get (V)  | total (N) 	++ :: int (N)  :: round (N) 
SPECIAL:NAME:DynamicMethodMarshaller Object readArguments(InputStream is): read (V)  | arguments (N) 	++ :: [ input (NM) stream (NI) - is (N) ] :: object (NI)  :: dynamic (NM) method (NM) marshaller (N) 
BASE_VERB:FORM:MetaSuggestion static MetaSuggestion parse(File f): parse (V)  | [ file (NI) - f (N) ]	++ :: meta (NM) suggestion (N)  :: meta (NM) suggestion (N) 
SPECIAL:NAME:XUpdateHelper static String getModificationSuffix(): get (V)  | modification (NM) suffix (N) 	++ :: string (NI)  :: X (NM) update (NM) helper (N) 
SPECIAL:NAME:MedianCut Color getModalColor(): get (V)  | modal (NM) color (N) 	++ :: color (N)  :: median (NM) cut (N) 
CONSTRUCTOR:NAME:Command Command Command(byte request):  | command (N) 	++ :: [ byte (N) - request (N) ]
SPECIAL:NAME:DefaultImageBoardImage void setSource(Object o): set (V)  | source (NI) 	++ :: [ object (NI) - o (N) ] :: default (NM) image (NM) board (NM) image (N) 
SPECIAL:NAME:PackageMemberAnnotation SourceLineAnnotation getSourceLines(): get (V)  | source (NM) lines (N) 	++ :: source (NM) line (NM) annotation (N)  :: package (NM) member (NM) annotation (N) 
SPECIAL:NAME:CodeWriterSchema void writeQuery(LangWriter out, Family family, Relationship relationship): write (V)  | query (N) 	++ :: [ lang (NM) writer (N) - out (N) ] :: [ family (N) - family (N) ] :: [ relationship (N) - relationship (N) ] :: code (NM) writer (NM) schema (N) 
SPECIAL:FORM:Ftp int doCmd(String cmd): do (VI) cmd (V)  | [ string (NI) - cmd (N) ]	++ :: ftp (N)  :: int (N) 
SPECIAL:NAME:StandardService Container getContainer(): get (V)  | container (NI) 	++ :: container (NI)  :: standard (NM) service (N) 
NOUN_PHRASE:NAME:NotSupersetFilter int actualHashForEqual(): get (V) | actual (NM) hash (NM) for (NM) equal (N) 	++ :: not (DT) superset (NM) filter (N)  :: int (N) 
V_3P_IRR:NAME:MutableBigInteger boolean isZero(): is (V)  | zero (PR) 	++ :: boolean (N)  :: mutable (NM) big (NM) integer (N) 
SPECIAL:NAME:Role void setType(int type): set (V)  | type (N) 	++ :: [ int (N) - type (N) ] :: role (N) 
BASE_VERB:NAME:OverrideGraphics2D void drawRect(int x, int y, int width, int height): draw (V)  | rect (N) 	++ :: [ int (N) - x (N) ] :: [ int (N) - y (N) ] :: [ int (N) - width (N) ] :: [ int (N) - height (N) ] :: override (NM) graphics (NM) 2 (NM) D (N) 
SPECIAL:NAME:Column String getColumnNameRaw(): get (V)  | column (NM) name (NM) raw (N) 	++ :: string (NI)  :: column (N) 
SPECIAL:NAME:Column void setJavaName(String pJavaName): set (V)  | java (NM) name (NI) 	++ :: [ string (NI) - p (NM) java (NM) name (NI) ] :: column (N) 
SPECIAL:NAME:VerticalText void addText(Chunk chunk): add (V)  | text (NI) 	++ :: [ chunk (N) - chunk (N) ] :: vertical (NM) text (NI) 
PREP:NAME:TaskResourceBase String toDisplayString(): convert (V) | to (P) display (NM) string (NI) 	++ :: task (NM) resource (NM) base (N)  :: string (NI) 
EMPTY:NONE:CPPParser static boolean jj_3R_252():  | jj (PRE) 3 (D) R (PRE) 252 (D) 
BASE_VERB:FORM:Factory static ShapesDocument parse(Reader r, XmlOptions options): parse (V)  | [ reader (N) - r (N) ]	++ :: [ xml (NM) options (N) - options (N) ] :: factory (N)  :: shapes (NM) document (NI) 
BASE_VERB:FORM:MatlabSyntax static Matrix log(Matrix A): log (V)  | [ matrix (N) - A (N) ]	++ :: matlab (NM) syntax (N)  :: matrix (N) 
V_3P_IRR:NAME:NoRelatedSym boolean isSetCountryOfIssue(): is (V)  | set (NM) country (N) -- of (P) issue (N) 	++ :: boolean (N)  :: no (DT) related (NM) sym (N) 
CONSTRUCTOR:NAME:DisplayImpl DisplayImpl DisplayImpl(SchemaType sType):  | display (NM) impl (NI) 	++ :: [ schema (NM) type (N) - s (NM) type (N) ]
SPECIAL:NAME:Commandline String getCommandline(): get (V)  | commandline (N) 	++ :: string (NI)  :: commandline (N) 
NOUN_PHRASE:NAME:Fighter_Rescue int usageType(): get (V) | usage (NM) type (N) 	++ :: fighter (NM) rescue (N)  :: int (N) 
SPECIAL:NAME:ALNode void addNodeAttributes(Element node): add (V)  | node (NM) attributes (N) 	++ :: [ element (NI) - node (NI) ] :: AL (NM) node (NI) 
SPECIAL:NAME:ProxyResultSet SQLWarning getWarnings(): get (V)  | warnings (N) 	++ :: SQL (NM) warning (N)  :: proxy (NM) result (NM) set (N) 
SPECIAL:NAME:StructureGroup String getName(): get (V)  | name (NI) 	++ :: string (NI)  :: structure (NM) group (N) 
SPECIAL:NAME:Animator String getParameter(String key): get (V)  | parameter (N) 	++ :: [ string (NI) - key (NI) ] :: string (NI)  :: animator (N) 
BASE_VERB:NAME:MockVector void acceptHashCode(int valueToReturn): accept (VI) hash (V)  | code (NI) 	++ :: [ int (N) - value (NM) to (NM) return (N) ] :: mock (NM) vector (N) 
SPECIAL:NAME:void setValue(Object object, Object value): set (V)  | value (NI) 	++ :: [ object (NI) - object (NI) ] :: [ object (NI) - value (NI) ] :: ANONYMOUS (N) 
SPECIAL:NAME:PascalFormatDisk String getSuggestedFilename(String filename): get (V)  | EQUIV[suggested (NM) filename (N) , [ string (NI) - filename (N) ]]	++ :: string (NI)  :: pascal (NM) format (NM) disk (N) 
ENDS_WITH_ED:NAME:KeyHandler boolean keyReleased(KeyEvent event): handle (V) | key (NM) released (N) 	++ :: [ key (NM) event (NI) - event (NI) ] :: key (NM) handler (N)  :: boolean (N) 
SPECIAL:NAME:PostGISProperties void setPort(String value): set (V)  | port (N) 	++ :: [ string (NI) - value (NI) ] :: post (NM) GIS (NM) properties (N) 
SPECIAL:NAME:UdpReceivedEvent InetAddress getSender(): get (V)  | sender (N) 	++ :: inet (NM) address (NI)  :: udp (NM) received (NM) event (NI) 
SPECIAL:NAME:JonasMessageDrivenDestinationType static void addComparator(BeanComparator c): add (V)  | EQUIV[comparator (N) , [ bean (NM) comparator (N) - c (N) ]]	++ :: jonas (NM) message (NM) driven (NM) destination (NM) type (N) 
BASE_VERB:FORM:MyHeap void insert(Object key, long value): insert (V)  | [ object (NI) - key (NI) ]	++ :: [ long (N) - value (NI) ] :: my (PR) heap (N) 
BASE_VERB:NAME:Database void dropTrigger(String name, Session session): drop (V)  | trigger (N) 	++ :: [ string (NI) - name (NI) ] :: [ session (N) - session (N) ] :: database (N) 
BASE_VERB:NAME:PwsFileSocket void fireChangeEvent(int property): fire (V)  | change (NM) event (NI) 	++ :: [ int (N) - property (N) ] :: pws (NM) file (NM) socket (N) 
SPECIAL:NAME:BaseBreakIterator CharacterIterator getText(): get (V)  | text (NI) 	++ :: character (NM) iterator (N)  :: base (NM) break (NM) iterator (N) 
SPECIAL:FORM:MaturityParser void ReInit(Reader stream): re (PRE) init (V)  | [ reader (N) - stream (NI) ]	++ :: maturity (NM) parser (N) 
SPECIAL:NAME:FieldConfig byte getBinary(): get (V)  | binary (N) 	++ :: byte (N)  :: field (NM) config (NI) 
CONSTRUCTOR:NAME:CategoryMarker CategoryMarker CategoryMarker(Comparable key, Paint paint, Stroke stroke, Paint outlinePaint, Stroke outlineStroke, float alpha):  | category (NM) marker (N) 	++ :: [ comparable (N) - key (NI) ] :: [ paint (N) - paint (N) ] :: [ stroke (N) - stroke (N) ] :: [ paint (N) - outline (NM) paint (N) ] :: [ stroke (N) - outline (NM) stroke (N) ] :: [ float (N) - alpha (N) ]
V_3P_IRR:NAME:BuToggleButton boolean isOpaque(): is (V)  | opaque (N) 	++ :: boolean (N)  :: bu (NM) toggle (NM) button (N) 
SPECIAL:NAME:TGLinkBrowser Hashtable createParameterHash(): create (V)  | parameter (NM) hash (N) 	++ :: hashtable (N)  :: TG (NM) link (NM) browser (N) 
CONSTRUCTOR:NAME:ForIn ForIn ForIn(Instruction parent):  | for (NM) in (NI) 	++ :: [ instruction (N) - parent (N) ]
ENDS_WITH_ED:NAME:QueryComponent void selectAllButton_actionPerformed(ActionEvent e): handle (V) | select (NM) all (DT) button (NM) action (NM) performed (N) 	++ :: [ action (NM) event (NI) - e (N) ] :: query (NM) component (N)  :: void (N) 
BASE_VERB:NAME:List makeList(Collection c): make (V)  | list (N) 	++ :: [ collection (N) - c (N) ] :: list (N)  :: ANONYMOUS (N) 
SPECIAL:NAME:RecordedCallTest void testIncrementInvocationCountWorks(): test (VI) increment (V)  | invocation (NM) count (NM) works (N) 	++ :: recorded (NM) call (NM) test (N) 
SPECIAL:NAME:AdvancedCustomizationManager static ACConnector loadMenu(File file, String packageName): load (V)  | menu (N) 	++ :: [ file (NI) - file (NI) ] :: [ string (NI) - package (NM) name (NI) ] :: AC (NM) connector (N)  :: advanced (NM) customization (NM) manager (N) 
SPECIAL:NAME:AxisRenderer void setHorizontalAlignment(int xalign): set (V)  | horizontal (NM) alignment (N) 	++ :: [ int (N) - xalign (N) ] :: axis (NM) renderer (N) 
ENDS_WITH_ING:NAME:void windowClosing(WindowEvent evt): handle (V) | window (NM) closing (N) 	++ :: [ window (NM) event (NI) - evt (N) ] :: ANONYMOUS (N)  :: void (N) 
SPECIAL:NAME:ConfigurationGuiView JButton getCancelButton(): get (V)  | cancel (NM) button (N) 	++ :: J (NM) button (N)  :: configuration (NM) gui (NM) view (NI) 
SPECIAL:NAME:OBDDLayouter double getHeight(): get (V)  | height (N) 	++ :: double (N)  :: OBDD (NM) layouter (N) 
V_3P_IRR:NAME:RefluxModeleNoeud boolean isValuesTableAvailable(): is (V)  | values (NM) table (NM) available (N) 	++ :: boolean (N)  :: reflux (NM) modele (NM) noeud (N) 
V_3P_IRR:NAME:ResultSetMetaData boolean isReadOnly(int columnIndex): is (V)  | read (NM) only (N) 	++ :: [ int (N) - column (NM) index (NI) ] :: boolean (N)  :: result (NM) set (NM) meta (NM) data (NI) 
SPECIAL:NAME:SubEntryFeature T getMediumDirect(): get (V)  | medium (NM) direct (N) 	++ :: T (N)  :: sub (NM) entry (NM) feature (N) 
BASE_VERB:NAME:ASTExpressions MKInstruction generateArity(LinkedList buffer): generate (V)  | arity (N) 	++ :: [ linked (NM) list (N) - buffer (NI) ] :: MK (NM) instruction (N)  :: AST (NM) expressions (N) 
SPECIAL:NAME:TransactionManagerService Object getObjectInstance(Object obj, Name name, Context nameCtx, Hashtable environment): get (V)  | object (NM) instance (NI) 	++ :: [ object (NI) - obj (NI) ] :: [ name (NI) - name (NI) ] :: [ context (N) - name (NM) ctx (N) ] :: [ hashtable (N) - environment (N) ] :: object (NI)  :: transaction (NM) manager (NM) service (N) 
BASE_VERB:FORM:SyncedLockManager void transfer(long nodeId, Locker owningLocker, Locker destLocker, boolean demoteToRead): transfer (V)  | [ long (N) - node (NM) id (NI) ]	++ :: [ locker (N) - owning (NM) locker (N) ] :: [ locker (N) - dest (NM) locker (N) ] :: synced (NM) lock (NM) manager (N)  :: [ boolean (N) - demote (NM) to (NM) read (N) ]
BASE_VERB:CLAS:SlotCounter void incrementByFitness(): increment (V)  | slot (NM) counter (N) -- by (P) fitness (N) 	++
BASE_VERB:NAME:PrintVisitor String visitPowerType(PowerType powerType): visit (V)  | EQUIV[power (NM) type (N) , [ power (NM) type (N) - power (NM) type (N) ]]	++ :: string (NI)  :: print (NM) visitor (N) 
PREP:NAME:ManageableHashSet void afterStore(PersistenceBroker broker): handle (V) | after (NM) store (N) 	++ :: [ persistence (NM) broker (N) - broker (N) ] :: manageable (NM) hash (NM) set (N)  :: void (N) 
V_3PS:FORM:WorkbookFormatter boolean intersects(Range a, Range b): intersects (V)  | [ range (N) - a (N) ]	++ :: [ range (N) - b (N) ] :: workbook (NM) formatter (N)  :: boolean (N) 
SPECIAL:FORM:ObjexServer static void main(String args): main (V)  | [ string (NI) - args (N) ]	++ :: objex (NM) server (N) 
SPECIAL:NAME:DomainImplicitMetadataGeneratorTask String getRef(): get (V)  | ref (NI) 	++ :: string (NI)  :: domain (NM) implicit (NM) metadata (NM) generator (NM) task (N) 
SPECIAL:NAME:JdbcRslt int getInt(int index): get (V)  | EQUIV[int (N) , [ int (N) - index (NI) ]]	++ :: int (N)  :: jdbc (NM) rslt (N) 
SPECIAL:NAME:ApplicationPanelTreeDataModel int getVersion(): get (V)  | version (N) 	++ :: int (N)  :: application (NM) panel (NM) tree (NM) data (NM) model (NI) 
VOID_NP:NAME:HiveMindSesameRepository void registryDidShutdown(): handle (V) | registry (NM) did (NM) shutdown (N) 	++ :: hive (NM) mind (NM) sesame (NM) repository (N)  :: void (N) 
SPECIAL:NAME:ITeam void setTeamRating(int teamrating): set (V)  | team (NM) rating (N) 	++ :: [ int (N) - teamrating (N) ] :: I (NM) team (N) 
V_3P_IRR:NAME:Vehicle boolean isDestroyed(int turn): is (V)  | destroyed (N) 	++ :: [ int (N) - turn (N) ] :: boolean (N)  :: vehicle (N) 
CONSTRUCTOR:NAME:PreMock PreMock PreMock(String id):  | pre (NM) mock (N) 	++ :: [ string (NI) - id (NI) ]
SPECIAL:NAME:QuoteStatusReport ExDestination getExDestination(): get (V)  | ex (NM) destination (N) 	++ :: ex (NM) destination (N)  :: quote (NM) status (NM) report (N) 
SPECIAL:NAME:AbstractStandardBlock void printBodyWithoutAuthenticationCheck(): print (V)  | body (N) -- without (P) authentication (NM) check (N) 	++ :: abstract (NM) standard (NM) block (N) 
BASE_VERB:FORM:Factory static BorderElt parse(Reader r): parse (V)  | [ reader (N) - r (N) ]	++ :: factory (N)  :: border (NM) elt (NI) 
SPECIAL:NAME:ProcessRunner void loadProcesses(URL configURL): load (V)  | processes (N) 	++ :: [ URL (NI) - config (NM) URL (NI) ] :: process (NM) runner (N) 
SPECIAL:NAME:SoapUITreeNode JPopupMenu getPopup(): get (V)  | popup (N) 	++ :: J (NM) popup (NM) menu (N)  :: soap (NM) UI (NM) tree (NM) node (NI) 
V_3PS:NAME:StringPattern boolean charsAreEqual(char probeChar, char patternChar): chars (V)  | are (NM) equal (N) 	++ :: [ char (N) - probe (NM) char (N) ] :: [ char (N) - pattern (NM) char (N) ] :: boolean (N)  :: string (NM) pattern (N) 
CONSTRUCTOR:NAME:Block Block Block(FObj parent, PropertyList propertyList):  | block (N) 	++ :: [ F (NM) obj (NI) - parent (N) ] :: [ property (NM) list (N) - property (NM) list (N) ]
SPECIAL:NAME:UnImplNode String getNodeValue(): get (V)  | node (NM) value (NI) 	++ :: string (NI)  :: un (NM) impl (NM) node (NI) 
SPECIAL:NAME:AbstractNativeGroupEditBlock String getRecordName(): get (V)  | record (NM) name (NI) 	++ :: string (NI)  :: abstract (NM) native (NM) group (NM) edit (NM) block (N) 
BASE_VERB:FORM:AlarmTicketController ModelAndView update(HttpServletRequest request, HttpServletResponse response, CommandBean bean): update (V)  | [ http (NM) servlet (NM) request (N) - request (N) ]	++ :: [ http (NM) servlet (NM) response (N) - response (N) ] :: [ command (NM) bean (NI) - bean (NI) ] :: alarm (NM) ticket (NM) controller (N)  :: model (NM) and (NM) view (NI) 
BASE_VERB:NAME:InstructionVisitor void visit_aastore(Instruction inst): visit (V)  | aastore (N) 	++ :: [ instruction (N) - inst (N) ] :: instruction (NM) visitor (N) 
CONSTRUCTOR:NAME:PluginStep PluginStep PluginStep(DataModel data):  | plugin (NM) step (N) 	++ :: [ data (NM) model (NI) - data (NI) ]
PREP:NAME:DatabaseConnectDialog void onFailure(Throwable t): handle (V) | on (NM) failure (N) 	++ :: [ throwable (N) - t (N) ] :: database (NM) connect (NM) dialog (N)  :: void (N) 
CONSTRUCTOR:NAME:TestChannelIndexer TestChannelIndexer TestChannelIndexer(String name):  | test (NM) channel (NM) indexer (N) 	++ :: [ string (NI) - name (NI) ]
SPECIAL:NAME:RefOutputSample ArrayList findAllOutputSamples(Map conditions): find (V)  | all (DT) output (NM) samples (N) 	++ :: [ map (N) - conditions (N) ] :: array (NM) list (N)  :: ref (NM) output (NM) sample (N) 
BASE_VERB:NAME:XEventLoop void postNextEvent(): post (V)  | next (DT) event (NI) 	++ :: X (NM) event (NM) loop (N) 
CONSTRUCTOR:NAME:CellContent CellContent CellContent(Object key, Object value):  | cell (NM) content (N) 	++ :: [ object (NI) - key (NI) ] :: [ object (NI) - value (NI) ]
V_3P_IRR:NAME:MTaskPanel boolean isCancelled(): is (V)  | cancelled (N) 	++ :: boolean (N)  :: M (NM) task (NM) panel (N) 
SPECIAL:NAME:URLTest0002 void test0002(): test (VI)  | 0002 (D) 	++ :: URL (NM) test (NM) 0002 (N) 
BASE_VERB:FORM:SimUtilities static void shuffle(List list, Uniform rng): shuffle (V)  | [ list (N) - list (N) ]	++ :: [ uniform (N) - rng (N) ] :: sim (NM) utilities (N) 
SPECIAL:NAME:XIncludeFilter void endCDATA(): end (V)  | CDATA (N) 	++ :: X (NM) include (NM) filter (N) 
SPECIAL:NAME:STTypeTemplateStylesheet String getNormalisedName(): get (V)  | normalised (NM) name (NI) 	++ :: string (NI)  :: ST (NM) type (NM) template (NM) stylesheet (N) 
SPECIAL:NAME:SimpleProjectCreator File createHomeDirectory(String fileName, String directoryName): create (V)  | EQUIV[home (NM) directory (N) , [ string (NI) - directory (NM) name (NI) ]]	++ :: [ string (NI) - file (NM) name (NI) ] :: file (NI)  :: simple (NM) project (NM) creator (N) 
BASE_VERB:NAME:XMLPullReader String buildPositionString(): build (V)  | position (NM) string (NI) 	++ :: string (NI)  :: XML (NM) pull (NM) reader (N) 
SPECIAL:NAME:ZComponent ZComponent getComponent(ICalTok tok): get (V)  | component (N) 	++ :: [ I (NM) cal (NM) tok (N) - tok (N) ] :: Z (NM) component (N)  :: Z (NM) component (N) 
BASE_VERB:CLAS:IModule boolean activate(): activate (VI)  | I (NM) module (N) 	++ :: boolean (N) 
CONSTRUCTOR:NAME:ForkedProcessor ForkedProcessor ForkedProcessor(Process cgi, InputStream in):  | forked (NM) processor (N) 	++ :: [ process (N) - cgi (N) ] :: [ input (NM) stream (NI) - in (NI) ]
SPECIAL:NAME:Entry String getKeywords(): get (V)  | keywords (N) 	++ :: string (NI)  :: entry (NI) 
BASE_VERB:CLAS:TCPWaitDialog Variant Close(): close (V)  | TCP (NM) wait (NM) dialog (N) 	++ :: variant (N) 
BASE_VERB:CLAS:Bug void markAsRead(): mark (V)  | bug (N) -- as (P) read (N) 	++
SPECIAL:NAME:MyBoat void setHost(boolean host): set (V)  | host (N) 	++ :: [ boolean (N) - host (N) ] :: my (PR) boat (N) 
BASE_VERB:CLAS:XBackForwardHistoryPopup void update(): update (V)  | X (NM) back (NM) forward (NM) history (NM) popup (N) 	++
SPECIAL:NAME:JRDesignImage void setRightPadding(Integer rightPadding): set (V)  | right (NM) padding (N) 	++ :: [ integer (N) - right (NM) padding (N) ] :: JR (NM) design (NM) image (N) 
CONSTRUCTOR:NAME:OptionsFrame OptionsFrame OptionsFrame(VncViewer v):  | options (NM) frame (N) 	++ :: [ vnc (NM) viewer (N) - v (N) ]
SPECIAL:NAME:JCasRequest String getSubTagNames(): get (V)  | sub (NM) tag (NM) names (N) 	++ :: string (NI)  :: J (NM) cas (NM) request (N) 
SPECIAL:NAME:ObjectArraySerializer Class getSupportedClass(): get (V)  | supported (NM) class (NI) 	++ :: class (NI)  :: object (NM) array (NM) serializer (N) 
CONSTRUCTOR:NAME:ScopingException ScopingException ScopingException(Throwable arg0):  | scoping (NM) exception (N) 	++ :: [ throwable (N) - arg (NM) 0 (N) ]
BASE_VERB:FORM:Object evaluate(Evaluator evaluator, Exp args): evaluate (V)  | [ evaluator (N) - evaluator (N) ]	++ :: [ exp (N) - args (N) ] :: ANONYMOUS (N)  :: object (NI) 
SPECIAL:NAME:NumberChooser int getMaximum(): get (V)  | maximum (N) 	++ :: int (N)  :: number (NM) chooser (N) 
BASE_VERB:CLAS:JCommServer String Poll(): poll (V)  | J (NM) comm (NM) server (N) 	++ :: string (NI) 
SPECIAL:NAME:Series void addPropertyChangeListener(PropertyChangeListener listener): add (V)  | EQUIV[property (NM) change (NM) listener (N) , [ property (NM) change (NM) listener (N) - listener (N) ]]	++ :: series (N) 
SPECIAL:NAME:AbstractAuthenticationEnginePool void initLastAuthenticationEngineConfig(): init (V)  | last (DT) authentication (NM) engine (NM) config (NI) 	++ :: abstract (NM) authentication (NM) engine (NM) pool (N) 
SPECIAL:NAME:BeanTableModel void readExternal(ObjectInput objectinput): read (V)  | external (N) 	++ :: [ object (NM) input (NI) - objectinput (N) ] :: bean (NM) table (NM) model (NI) 
BASE_VERB:CLAS:SelectSimpleIteratorOpAstTest void tearDown(): tear (V) down (VP)  | select (NM) simple (NM) iterator (NM) op (NM) ast (NM) test (N) 	++
SPECIAL:NAME:BorderUIResource static Border getRaisedBevelBorderUIResource(): get (V)  | raised (NM) bevel (NM) border (NM) UI (NM) resource (N) 	++ :: border (N)  :: border (NM) UI (NM) resource (N) 
SPECIAL:NAME:FileDataTestCase Provider getProvider(): get (V)  | provider (N) 	++ :: provider (N)  :: file (NM) data (NM) test (NM) case (N) 
SPECIAL:NAME:ManagerConnectionImpl void setSocketReadTimeout(int socketReadTimeout): set (V)  | socket (NM) read (NM) timeout (N) 	++ :: [ int (N) - socket (NM) read (NM) timeout (N) ] :: manager (NM) connection (NM) impl (NI) 
SPECIAL:NAME:PDClientBehaviour String getFailure(): get (V)  | failure (N) 	++ :: string (NI)  :: PD (NM) client (NM) behaviour (N) 
SPECIAL:NAME:DeveloperRC String getSKILL(): get (V)  | SKILL (N) 	++ :: string (NI)  :: developer (NM) RC (N) 
SPECIAL:NAME:Screen Colormap getDefaultColormap(): get (V)  | default (NM) colormap (N) 	++ :: colormap (N)  :: screen (N) 
SPECIAL:NAME:Join Map getJoinedProperties(): get (V)  | joined (NM) properties (N) 	++ :: map (N)  :: join (N) 
SPECIAL:NAME:IndividualImpl void addSameIndividualAs(Resource res): add (V)  | same (NM) individual (N) -- as (P) [ resource (N) - res (N) ]	++ :: [ resource (N) - res (N) ] :: individual (NM) impl (NI) 
BASE_VERB:NAME:DataEntryDialog void importClipboard(): import (V)  | clipboard (N) 	++ :: data (NM) entry (NM) dialog (N) 
CONSTRUCTOR:NAME:SerializableResult SerializableResult SerializableResult(Exception e):  | serializable (NM) result (N) 	++ :: [ exception (N) - e (N) ]
BASE_VERB:FORM:LoggingTool void debug(Object object, double number): debug (VI)  | [ object (NI) - object (NI) ]	++ :: [ double (N) - number (NI) ] :: logging (NM) tool (N) 
SPECIAL:NAME:InstanceImpl double getExpectedSubstitutionsToTime(double time): get (V)  | expected (NM) substitutions (N) -- to (P) EQUIV[time (N) , [ double (N) - time (N) ]]	++ :: double (N)  :: instance (NM) impl (NI) 
SPECIAL:NAME:PageHeader void setDirty(): set (V)  | dirty (N) 	++ :: page (NM) header (N) 
SPECIAL:NAME:CURL String findURL(String tail): find (V)  | URL (NI) 	++ :: [ string (NI) - tail (N) ] :: string (NI)  :: CURL (N) 
SPECIAL:NAME:InterfaceProcessorDataModel void setQueueCapacity(Long queueCapacity): set (V)  | queue (NM) capacity (N) 	++ :: [ long (N) - queue (NM) capacity (N) ] :: interface (NM) processor (NM) data (NM) model (NI) 
SPECIAL:NAME:CancelReplacePanel void addActionListener(ActionListener listener): add (V)  | EQUIV[action (NM) listener (N) , [ action (NM) listener (N) - listener (N) ]]	++ :: cancel (NM) replace (NM) panel (N) 
CONSTRUCTOR:NAME:Trait_Abstract Trait_Abstract Trait_Abstract(Trait nominal, Object initialValue):  | trait (NM) abstract (N) 	++ :: [ trait (N) - nominal (N) ] :: [ object (NI) - initial (NM) value (NI) ]
SPECIAL:NAME:IAuthorizationPrincipal IPermission getPermissions(String owner, String activity, String target): get (V)  | permissions (N) 	++ :: [ string (NI) - owner (N) ] :: [ string (NI) - activity (N) ] :: [ string (NI) - target (N) ] :: I (NM) permission (N)  :: I (NM) authorization (NM) principal (N) 
SPECIAL:NAME:ChordProvider RoutingAlgorithm initializeAlgorithmInstance(RoutingAlgorithmConfiguration conf, RoutingService routingSvc): initialize (V)  | algorithm (NM) instance (NI) 	++ :: [ routing (NM) algorithm (NM) configuration (NI) - conf (N) ] :: [ routing (NM) service (N) - routing (NM) svc (N) ] :: routing (NM) algorithm (N)  :: chord (NM) provider (N) 
ENDS_WITH_ED:NAME:ComponentsFrame void stateChanged(ChangeEvent event): handle (V) | state (NM) changed (N) 	++ :: [ change (NM) event (NI) - event (NI) ] :: components (NM) frame (N)  :: void (N) 
SPECIAL:NAME:IPage void removePageDetachListener(PageDetachListener listener): remove (V)  | EQUIV[page (NM) detach (NM) listener (N) , [ page (NM) detach (NM) listener (N) - listener (N) ]]	++ :: I (NM) page (N) 
SPECIAL:NAME:ProjectWorkSuite String getId(): get (V)  | id (NI) 	++ :: string (NI)  :: project (NM) work (NM) suite (N) 
SPECIAL:FORM:CachedInetSocketAddress void append(Packet p): append (V)  | [ packet (N) - p (NI) ]	++ :: cached (NM) inet (NM) socket (NM) address (NI) 
SPECIAL:NAME:AbstractSessionContext SSLSession getSession(byte sessionId): get (V)  | EQUIV[session (N) , [ byte (N) - session (NM) id (NI) ]]	++ :: SSL (NM) session (N)  :: abstract (NM) session (NM) context (N) 
SPECIAL:NAME:ExpBlueprintStore ArrayList findAllExpBlueprints(Map conditions): find (V)  | all (DT) exp (NM) blueprints (N) 	++ :: [ map (N) - conditions (N) ] :: array (NM) list (N)  :: exp (NM) blueprint (NM) store (N) 
SPECIAL:NAME:IESearchTag int doEndTag(): do (VI)  | end (NM) tag (NI) 	++ :: int (N)  :: IE (NM) search (NM) tag (NI) 
SPECIAL:NAME:DestDeepObj List getHintList2(): get (V)  | hint (NM) list (N) 2 (D) 	++ :: list (N)  :: dest (NM) deep (NM) obj (NI) 
SPECIAL:NAME:KPricingPolicy double getK(): get (V)  | K (N) 	++ :: double (N)  :: K (NM) pricing (NM) policy (N) 
SPECIAL:NAME:MGoalbase IMAchieveGoal getAchieveGoals(): get (V)  | achieve (NM) goals (N) 	++ :: IM (NM) achieve (NM) goal (N)  :: M (NM) goalbase (N) 
EMPTY:NONE:JavaParser boolean jj_2_21(int xla):  | jj (PRE) 2 (D) 21 (D) 
SPECIAL:NAME:ContextLoaderServlet ContextLoader createContextLoader(): create (V)  | context (NM) loader (N) 	++ :: context (NM) loader (N)  :: context (NM) loader (NM) servlet (N) 
SPECIAL:NAME:DatatypeConverterImpl String printLong(long arg0): print (V)  | EQUIV[long (N) , [ long (N) - arg (NM) 0 (N) ]]	++ :: string (NI)  :: datatype (NM) converter (NM) impl (NI) 
SPECIAL:NAME:MultimediaUtilities File getPlayer(String type): get (V)  | player (N) 	++ :: [ string (NI) - type (N) ] :: file (NI)  :: multimedia (NM) utilities (N) 
BASE_VERB:NAME:Traverser void tPointSet(PointSet n): t (PRE) point (V)  | EQUIV[set (N) , [ point (NM) set (N) - n (N) ]]	++ :: traverser (N) 
BASE_VERB:FORM:StaticNameResolver Object visit(ForExpr fex): visit (V)  | [ for (NM) expr (NI) - fex (N) ]	++ :: static (NM) name (NM) resolver (N)  :: object (NI) 
SPECIAL:NAME:EmbeddedNotificationService void enableNotification(): enable (VI)  | notification (N) 	++ :: embedded (NM) notification (NM) service (N) 
CONSTRUCTOR:NAME:UnarmedCombat UnarmedCombat UnarmedCombat():  | unarmed (NM) combat (N) 	++
V_3P_IRR:NAME:AND_AND_Expression boolean isCompactableOperation(): is (V)  | compactable (NM) operation (N) 	++ :: boolean (N)  :: AND (NM) AND (NM) expression (N) 
BASE_VERB:NAME:BrickBuilder void storeCurrentBrick(): store (V)  | current (NM) brick (N) 	++ :: brick (NM) builder (N) 
V_3P_IRR:NAME:ModuleLoader static boolean isModule(Class modClass): is (V)  | module (N) 	++ :: [ class (NI) - mod (NM) class (NI) ] :: boolean (N)  :: module (NM) loader (N) 
PREP:NAME:ListItemModel void onDetach(): handle (V) | on (NM) detach (N) 	++ :: list (NM) item (NM) model (NI)  :: void (N) 
SPECIAL:NAME:ColorManager StandardColor getMenuItemStandardColor(): get (V)  | menu (NM) item (NM) standard (NM) color (N) 	++ :: standard (NM) color (N)  :: color (NM) manager (N) 
SPECIAL:NAME:ServiceProvider void addLocationAlias(LocationAlias aLocationAlias): add (V)  | EQUIV[location (NM) alias (N) , [ location (NM) alias (N) - a (NM) location (NM) alias (N) ]]	++ :: service (NM) provider (N) 
ENDS_WITH_ING:NAME:ASTAnalysis void inAInterrupting(AInterrupting node): handle (V) | in (NM) A (NM) interrupting (N) 	++ :: [ A (NM) interrupting (N) - node (NI) ] :: AST (NM) analysis (N)  :: void (N) 
SPECIAL:NAME:UiDateViewer JComponent getComponent(): get (V)  | component (N) 	++ :: J (NM) component (N)  :: ui (NM) date (NM) viewer (N) 
CONSTRUCTOR:NAME:BuddyListEvent BuddyListEvent BuddyListEvent(Object source, String group):  | buddy (NM) list (NM) event (NI) 	++ :: [ object (NI) - source (NI) ] :: [ string (NI) - group (N) ]
BASE_VERB:NAME:Filter Pair fetchCanonicalIntersect(Filter other): fetch (VI)  | canonical (NM) intersect (N) 	++ :: [ filter (N) - other (DT) ] :: pair (N)  :: filter (N) 
BASE_VERB:NAME:BshClassManager void cacheResolvedMethod(Class clas, Class types, Method method): cache (V)  | EQUIV[resolved (NM) method (N) , [ method (N) - method (N) ]]	++ :: [ class (NI) - clas (N) ] :: [ class (NI) - types (N) ] :: bsh (NM) class (NM) manager (N) 
NOUN_PHRASE:NAME:OclLib Integer indexOf(OrderedSet s, Object o, Trace t): get (V) | index (NM) of (N) 	++ :: [ ordered (NM) set (N) - s (N) ] :: [ object (NI) - o (N) ] :: [ trace (N) - t (N) ] :: ocl (NM) lib (N)  :: integer (N) 
SPECIAL:NAME:HDRImage void getGradient(Vec2 grad, int component, boolean wrapx, boolean wrapy, double x, double y, double xsize, double ysize): get (V)  | gradient (N) 	++ :: [ vec (NM) 2 (N) - grad (N) ] :: [ int (N) - component (N) ] :: [ double (N) - x (N) ] :: [ double (N) - y (N) ] :: [ double (N) - xsize (N) ] :: [ double (N) - ysize (N) ] :: [ boolean (N) - wrapx (N) ] :: [ boolean (N) - wrapy (N) ] :: HDR (NM) image (N) 
BASE_VERB:FORM:PortletExplodedTomcatListener void deploy(File file): deploy (V)  | [ file (NI) - file (NI) ]	++ :: portlet (NM) exploded (NM) tomcat (NM) listener (N) 
SPECIAL:NAME:NumericDatatype String getPartialRegex(): get (V)  | partial (NM) regex (N) 	++ :: string (NI)  :: numeric (NM) datatype (N) 
PREP:NAME:HZWidget void onKeyPress(HZKey key): handle (V) | on (NM) key (NM) press (N) 	++ :: [ HZ (NM) key (NI) - key (NI) ] :: HZ (NM) widget (N)  :: void (N) 
BASE_VERB:NAME:OutRpcOrientImpl void resendPendingRequests(Peer dest): resend (V)  | pending (NM) requests (N) 	++ :: [ peer (N) - dest (N) ] :: out (NM) rpc (NM) orient (NM) impl (NI) 
ENDS_WITH_ED:NAME:void actionPerformed(ActionEvent evt): handle (V) | action (NM) performed (N) 	++ :: [ action (NM) event (NI) - evt (N) ] :: ANONYMOUS (N)  :: void (N) 
SPECIAL:NAME:CheckboxField void setModel(TextModel newModel): set (V)  | model (NI) 	++ :: [ text (NM) model (NI) - new (NM) model (NI) ] :: checkbox (NM) field (N) 
CONSTRUCTOR:NAME:ReturnControl ReturnControl ReturnControl(int kind, Object value, SimpleNode returnPoint):  | return (NM) control (N) 	++ :: [ int (N) - kind (N) ] :: [ object (NI) - value (NI) ] :: [ simple (NM) node (NI) - return (NM) point (N) ]
BASE_VERB:FORM:ServicesHandler void inspect(Object _component): inspect (V)  | [ object (NI) - component (N) ]	++ :: services (NM) handler (N) 
CONSTRUCTOR:NAME:Typyboon Typyboon Typyboon(GuardianStage stage):  | typyboon (N) 	++ :: [ guardian (NM) stage (N) - stage (N) ]
SPECIAL:NAME:ZoomIcon int getIconHeight(): get (V)  | icon (NM) height (N) 	++ :: int (N)  :: zoom (NM) icon (N) 
SPECIAL:NAME:FSLLearningUnitViewsManager void setCurrentUserData(String userName, String userPassword): set (V)  | current (NM) user (NM) data (NI) 	++ :: [ string (NI) - user (NM) name (NI) ] :: [ string (NI) - user (NM) password (N) ] :: FSL (NM) learning (NM) unit (NM) views (NM) manager (N) 
BASE_VERB:NAME:Vector Vector subVector(int fromIndex, int toIndex): sub (V)  | vector (N) 	++ :: [ int (N) - from (NM) index (NI) ] :: [ int (N) - to (NM) index (NI) ] :: vector (N)  :: vector (N) 
ENDS_WITH_ED:NAME:void actionPerformed(ActionEvent arg0): handle (V) | action (NM) performed (N) 	++ :: [ action (NM) event (NI) - arg (NM) 0 (N) ] :: ANONYMOUS (N)  :: void (N) 
ENDS_WITH_ED:NAME:void stateChanged(ChangeEvent e): handle (V) | state (NM) changed (N) 	++ :: [ change (NM) event (NI) - e (N) ] :: ANONYMOUS (N)  :: void (N) 
SPECIAL:NAME:FString void setText(String text): set (V)  | text (NI) 	++ :: [ string (NI) - text (NI) ] :: F (NM) string (NI) 
V_3P_IRR:NAME:GfxProducer boolean isConsumer(ImageConsumer ic): is (V)  | EQUIV[consumer (N) , [ image (NM) consumer (N) - ic (N) ]]	++ :: boolean (N)  :: gfx (NM) producer (N) 
SPECIAL:NAME:BaseType void printDecl(OutputStream os, String space): print (V)  | decl (NI) 	++ :: [ output (NM) stream (NI) - os (N) ] :: [ string (NI) - space (N) ] :: base (NM) type (N) 
SPECIAL:NAME:DefaultSVNDebugLogger OutputStream createLogStream(OutputStream os): create (V)  | EQUIV[log (NM) stream (NI) , [ output (NM) stream (NI) - os (N) ]]	++ :: output (NM) stream (NI)  :: default (NM) SVN (NM) debug (NM) logger (N) 
BASE_VERB:NAME:JEANImageDisplayer Image rotateImage(Image image, int rightAngles): rotate (V)  | EQUIV[image (N) , [ image (N) - image (N) ]]	++ :: [ int (N) - right (NM) angles (N) ] :: image (N)  :: JEAN (NM) image (NM) displayer (N) 
PREP:NAME:LayoutSetListener void onBeforeRemove(BaseModel model): handle (V) | on (NM) before (NM) remove (N) 	++ :: [ base (NM) model (NI) - model (NI) ] :: layout (NM) set (NM) listener (N)  :: void (N) 
ENDS_WITH_ED:NAME:PersistenceOutputListener void sharedObjectReferenceWritten(Shareable o): handle (V) | shared (NM) object (NM) reference (NM) written (N) 	++ :: [ shareable (N) - o (N) ] :: persistence (NM) output (NM) listener (N)  :: void (N) 
CONSTRUCTOR:NAME:DownButton DownButton DownButton(CalculatorApplet applet):  | down (NM) button (N) 	++ :: [ calculator (NM) applet (N) - applet (N) ]
CONSTRUCTOR:NAME:Adler32 Adler32 Adler32():  | adler (NM) 32 (N) 	++
BASE_VERB:FORM:PyInteger PyObject __rfloordiv__(PyObject left): rfloordiv (V)  | [ py (NM) object (NI) - left (N) ]	++ :: py (NM) integer (N)  :: py (NM) object (NI) 
V_3P_IRR:NAME:ParameterParser boolean hasChar(): has (V)  | char (N) 	++ :: boolean (N)  :: parameter (NM) parser (N) 
BASE_VERB:NAME:ValidationUtil boolean validateMoveBase(TreeItem curItem, String action): validate (VI)  | move (NM) base (N) 	++ :: [ tree (NM) item (NI) - cur (NM) item (NI) ] :: [ string (NI) - action (N) ] :: boolean (N)  :: validation (NM) util (N) 
SPECIAL:NAME:ErrorMessage int getTypeId(): get (V)  | type (NM) id (NI) 	++ :: int (N)  :: error (NM) message (NI) 
SPECIAL:NAME:AttributeDescriptionGetComponentDescription Status TestGetAttrDescComponentDesc2(): test (VI) get (V)  | attr (NM) desc (NM) component (NM) desc (NI) 2 (D) 	++ :: status (N)  :: attribute (NM) description (NM) get (NM) component (NM) description (NI) 
SPECIAL:NAME:ResourceDetailValidator int getLegalMinimumAgeLimit(): get (V)  | legal (NM) minimum (NM) age (NM) limit (N) 	++ :: int (N)  :: resource (NM) detail (NM) validator (N) 
NOUN_PHRASE:NAME:CrystallizationStore AppDataInt newAppDataInt(String application, String keyword, Integer value): get (V) | new (NM) app (NM) data (NM) int (N) 	++ :: [ string (NI) - application (N) ] :: [ string (NI) - keyword (N) ] :: [ integer (N) - value (NI) ] :: crystallization (NM) store (N)  :: app (NM) data (NM) int (N) 
SPECIAL:NAME:Html static String createOptionList(Collection allValues, Set selectedValues, ToStringPairTransformer objectToStringPairTransformer): create (V)  | option (NM) list (N) 	++ :: [ collection (N) - all (DT) values (N) ] :: [ set (N) - selected (NM) values (N) ] :: [ to (NM) string (NM) pair (NM) transformer (N) - object (NM) to (NM) string (NM) pair (NM) transformer (N) ] :: string (NI)  :: html (N) 
BASE_VERB:NAME:RootData ListIterator iterIdRefElms(): iter (V)  | id (NM) ref (NM) elms (N) 	++ :: list (NM) iterator (N)  :: root (NM) data (NI) 
BASE_VERB:FORM:DialogUnits int dluY(int pixels): dlu (PRE) Y (V)  | [ int (N) - pixels (N) ]	++ :: dialog (NM) units (N)  :: int (N) 
BASE_VERB:NAME:Host void incSentCount(): inc (V)  | sent (NM) count (N) 	++ :: host (N) 
SPECIAL:NAME:VariableReferenceInteger Entity getEntity(): get (V)  | entity (N) 	++ :: entity (N)  :: variable (NM) reference (NM) integer (N) 
BASE_VERB:NAME:MInOutConfirm String prepareIt(): prepare (V)  | it (PR) 	++ :: string (NI)  :: M (NM) in (NM) out (NM) confirm (N) 
SPECIAL:NAME:MockDnaseqDelegate Collection getWorkflowTemplateInfos(): get (V)  | workflow (NM) template (NM) infos (N) 	++ :: collection (N)  :: mock (NM) dnaseq (NM) delegate (N) 
SPECIAL:NAME:StringsTest void testFirstPathComponent(): test (VI)  | first (NM) path (NM) component (N) 	++ :: strings (NM) test (N) 
BASE_VERB:NAME:SwitchConfigurationDialog void updateSwitchesPanel(): update (V)  | switches (NM) panel (N) 	++ :: switch (NM) configuration (NM) dialog (N) 
SPECIAL:NAME:DOMModel void setDocument(Document theDocument): set (V)  | document (NI) 	++ :: [ document (NI) - the (DT) document (NI) ] :: DOM (NM) model (NI) 
PREP:NAME:X_C_Phase String toString(): convert (V) | to (P) string (NI) 	++ :: X (NM) C (NM) phase (N)  :: string (NI) 
BASE_VERB:NAME:JXEJTreeXMLCtrl void collapseAll(TreeNode parentTreeNode): collapse (V)  | all (DT) 	++ :: [ tree (NM) node (NI) - parent (NM) tree (NM) node (NI) ] :: JXEJ (NM) tree (NM) XML (NM) ctrl (N) 
SPECIAL:NAME:PostBean String getSubject(): get (V)  | subject (N) 	++ :: string (NI)  :: post (NM) bean (NI) 
BASE_VERB:NAME:IdeaJadImpl void disposeComponent(): dispose (V)  | component (N) 	++ :: idea (NM) jad (NM) impl (NI) 
BASE_VERB:FORM:TraceFormatter String format(LogRecord record): format (V)  | [ log (NM) record (N) - record (N) ]	++ :: trace (NM) formatter (N)  :: string (NI) 
NOUN_PHRASE:NAME:PackageFactory static Path newPath(Instruction parent): get (V) | new (NM) path (NI) 	++ :: [ instruction (N) - parent (N) ] :: package (NM) factory (N)  :: path (NI) 
SPECIAL:NAME:JBossUtil static Object getRemoteMBeanValue(Metric metric): get (V)  | remote (NM) M (NM) bean (NM) value (NI) 	++ :: [ metric (N) - metric (N) ] :: object (NI)  :: J (NM) boss (NM) util (N) 
BASE_VERB:NAME:PublicationSpecBuilder static Map<String,String> buildProperties(Properties propertiesXml): build (V)  | EQUIV[properties (N) , [ properties (N) - properties (NM) xml (N) ]]	++ :: map (NM) string (NM) string (NI)  :: publication (NM) spec (NM) builder (N) 
SPECIAL:NAME:StatementNode Object getSingleResult(EntityLoader loader): get (V)  | single (NM) result (N) 	++ :: [ entity (NM) loader (N) - loader (N) ] :: object (NI)  :: statement (NM) node (NI) 
SPECIAL:NAME:TGOutputStream void writeChannel(SongChannel channel): write (V)  | EQUIV[channel (N) , [ song (NM) channel (N) - channel (N) ]]	++ :: TG (NM) output (NM) stream (NI) 
SPECIAL:NAME:JugUUIDGen void setNamespace(UUID namespaceUUID): set (V)  | namespace (N) 	++ :: [ UUID (N) - namespace (NM) UUID (N) ] :: jug (NM) UUID (NM) gen (N) 
SPECIAL:NAME:PersistableList boolean removeAll(Collection c): remove (V)  | all (DT) 	++ :: [ collection (N) - c (N) ] :: boolean (N)  :: persistable (NM) list (N) 
V_3P_IRR:NAME:CoordinateInterpolatorNode boolean isChildNodeType(Node node): is (V)  | child (NM) node (NM) type (N) 	++ :: [ node (NI) - node (NI) ] :: boolean (N)  :: coordinate (NM) interpolator (NM) node (NI) 
SPECIAL:NAME:DeleteTag void doTag(XMLOutput output): do (VI)  | tag (NI) 	++ :: [ XML (NM) output (N) - output (N) ] :: delete (NM) tag (NI) 
SPECIAL:NAME:CNNClassificationModelFit double getWeights(): get (V)  | weights (N) 	++ :: double (N)  :: CNN (NM) classification (NM) model (NM) fit (N) 
SPECIAL:NAME:AppearanceChangeProcessor void processNode(Node node): process (VI)  | EQUIV[node (NI) , [ node (NI) - node (NI) ]]	++ :: appearance (NM) change (NM) processor (N) 
BASE_VERB:NAME:PatchChange int hashCode(): hash (V)  | code (NI) 	++ :: int (N)  :: patch (NM) change (N) 
BASE_VERB:NAME:ThresholdController ModelAndView handleRequestInternal(HttpServletRequest request, HttpServletResponse response): handle (VI)  | request (NM) internal (N) 	++ :: [ http (NM) servlet (NM) request (N) - request (N) ] :: [ http (NM) servlet (NM) response (N) - response (N) ] :: model (NM) and (NM) view (NI)  :: threshold (NM) controller (N) 
CONSTRUCTOR:NAME:MethodDescriptor MethodDescriptor MethodDescriptor(Method method):  | method (NM) descriptor (NI) 	++ :: [ method (N) - method (N) ]
SPECIAL:NAME:AbstractTag String getNamedParameter(DocletTag tag, String name): get (V)  | named (NM) parameter (N) 	++ :: [ doclet (NM) tag (NI) - tag (NI) ] :: [ string (NI) - name (NI) ] :: string (NI)  :: abstract (NM) tag (NI) 
SPECIAL:CLAS:ProtectedResourcesTestCase void doSetUp(): do (VI) set (V) up (VP)  | protected (NM) resources (NM) test (NM) case (N) 	++
SPECIAL:FORM:DB2FloatField String doRender(Object value): do (VI) render (V)  | [ object (NI) - value (NI) ]	++ :: DB (NM) 2 (NM) float (NM) field (N)  :: string (NI) 
NOUN_PHRASE:NAME:Factory static CastBooleanType newInstance(): get (V) | new (NM) instance (NI) 	++ :: factory (N)  :: cast (NM) boolean (NM) type (N) 
V_3P_IRR:NAME:GanttTask boolean isStartTask(): is (V)  | start (NM) task (N) 	++ :: boolean (N)  :: gantt (NM) task (N) 
SPECIAL:NAME:World void printSummary(): print (V)  | summary (N) 	++ :: world (N) 
SPECIAL:FORM:JavaliDevNull void write(char cbuf, int off, int len): write (V)  | [ char (N) - cbuf (N) ]	++ :: [ int (N) - off (N) ] :: [ int (N) - len (N) ] :: javali (NM) dev (NM) null (N) 
BASE_VERB:FORM:RET void emit(EmitCtx ctx): emit (V)  | [ emit (NM) ctx (N) - ctx (N) ]	++ :: RET (N) 
SPECIAL:NAME:JDesktopPane void setDragMode(int mode): set (V)  | drag (NM) mode (N) 	++ :: [ int (N) - mode (N) ] :: J (NM) desktop (NM) pane (N) 
SPECIAL:NAME:Test1 void Test1_method1(): test (VI)  | 1 (D) method (N) 1 (D) 	++ :: test (NM) 1 (N) 
SPECIAL:NAME:GetAcMth Variant CopySourceFrom(): copy (V)  | source (NI) from (NM) 	++ :: variant (N)  :: get (NM) ac (NM) mth (N) 
SPECIAL:NAME:SettingsManager String getBannedIps(): get (V)  | banned (NM) ips (N) 	++ :: string (NI)  :: settings (NM) manager (N) 
BASE_VERB:FORM:boolean accept(File f): accept (VI)  | [ file (NI) - f (N) ]	++ :: ANONYMOUS (N)  :: boolean (N) 
VOID_NP:NAME:Logger void fatal(Object obj, Throwable t): handle (V) | fatal (N) 	++ :: [ object (NI) - obj (NI) ] :: [ throwable (N) - t (N) ] :: logger (N)  :: void (N) 
BASE_VERB:FORM:KommClient void abmelden(String name): abmelden (V)  | [ string (NI) - name (NI) ]	++ :: komm (NM) client (N) 
SPECIAL:NAME:GroupImpl void addUser(User usr, Session s): add (V)  | EQUIV[user (N) , [ user (N) - usr (N) ]]	++ :: [ session (N) - s (N) ] :: group (NM) impl (NI) 
SPECIAL:NAME:OverlayNetwork OverlayNode getFirstSelectedNode(): get (V)  | first (NM) selected (NM) node (NI) 	++ :: overlay (NM) node (NI)  :: overlay (NM) network (N) 
VOID_NP:NAME:SSHShell void registryDidShutdown(): handle (V) | registry (NM) did (NM) shutdown (N) 	++ :: SSH (NM) shell (N)  :: void (N) 
SPECIAL:CLAS:area void setOnFocus(String script): set (V)  | area (N) -- on (P) focus (N) 	++ :: [ string (NI) - script (N) ]
SPECIAL:NAME:MContAssignMonitor static MContAssignMonitor createNewMContAssignMonitor(LeftValue lValue, Expression rValue): create (V)  | new (NM) M (NM) cont (NM) assign (NM) monitor (N) 	++ :: [ left (NM) value (NI) - l (NM) value (NI) ] :: [ expression (N) - r (NM) value (NI) ] :: M (NM) cont (NM) assign (NM) monitor (N)  :: M (NM) cont (NM) assign (NM) monitor (N) 
BASE_VERB:FORM:OraRequest OXMLSequence invoke(OXMLFunctionContext oxmlfunctioncontext, OXMLSequence aoxmlsequence): invoke (VI)  | [ OXML (NM) function (NM) context (N) - oxmlfunctioncontext (N) ]	++ :: [ OXML (NM) sequence (N) - aoxmlsequence (N) ] :: ora (NM) request (N)  :: OXML (NM) sequence (N) 
NOUN_PHRASE:NAME:PackageFactory static Do newDo(Instruction parent): get (V) | new (NM) do (NI) 	++ :: [ instruction (N) - parent (N) ] :: package (NM) factory (N)  :: do (NI) 
SPECIAL:NAME:DataNode int getBtreeId(): get (V)  | btree (NM) id (NI) 	++ :: int (N)  :: data (NM) node (NI) 
BASE_VERB:CLAS:DbConnection void close(): close (V)  | db (NM) connection (N) 	++
BASE_VERB:FORM:XMLDatabase void move(XMLDatabaseKey oldKey, XMLDatabaseKey newKey): move (V)  | [ XML (NM) database (NM) key (NI) - old (NM) key (NI) ]	++ :: [ XML (NM) database (NM) key (NI) - new (NM) key (NI) ] :: XML (NM) database (N) 
CONSTRUCTOR:NAME:Literal Literal Literal(Object pValue):  | literal (N) 	++ :: [ object (NI) - p (NM) value (NI) ]
SPECIAL:NAME:TcpEndpointConnector int getPort(): get (V)  | port (N) 	++ :: int (N)  :: tcp (NM) endpoint (NM) connector (N) 
CONSTRUCTOR:NAME:MCalculator_RK2 MCalculator_RK2 MCalculator_RK2():  | M (NM) calculator (NM) RK (NM) 2 (N) 	++
ENDS_WITH_ED:NAME:SelectAllFocusListener void focusGained(FocusEvent e): handle (V) | focus (NM) gained (N) 	++ :: [ focus (NM) event (NI) - e (N) ] :: select (NM) all (DT) focus (NM) listener (N)  :: void (N) 
SPECIAL:NAME:TestMain_Typecheck void test_pleomorphic_2(): test (VI)  | pleomorphic (N) 2 (D) 	++ :: test (NM) main (NM) typecheck (N) 
BASE_VERB:NAME:Settings static Settings openWindow(IPropsReceiver sr, Display d, Properties props, String reqProps, boolean isBoolean, String title): open (V)  | window (N) 	++ :: [ I (NM) props (NM) receiver (N) - sr (N) ] :: [ display (N) - d (N) ] :: [ properties (N) - props (N) ] :: [ string (NI) - req (NM) props (N) ] :: [ string (NI) - title (N) ] :: [ boolean (N) - is (NM) boolean (N) ] :: settings (N)  :: settings (N) 
SPECIAL:NAME:SelectNamedGraphMetaInfoDeletionsResult void setAdd(int add): set (V)  | add (N) 	++ :: [ int (N) - add (N) ] :: select (NM) named (NM) graph (NM) meta (NM) info (NM) deletions (NM) result (N) 
CONSTRUCTOR:NAME:CharArrayBuffer CharArrayBuffer CharArrayBuffer(int size):  | char (NM) array (NM) buffer (NI) 	++ :: [ int (N) - size (N) ]
SPECIAL:NAME:EquityDerivativeShortFormBase EquityStrike getStrike(): get (V)  | strike (N) 	++ :: equity (NM) strike (N)  :: equity (NM) derivative (NM) short (NM) form (NM) base (N) 
SPECIAL:NAME:IncludeRequestWrapper Object getAttribute(String s): get (V)  | attribute (N) 	++ :: [ string (NI) - s (N) ] :: object (NI)  :: include (NM) request (NM) wrapper (NI) 
ENDS_WITH_ED:NAME:PNFacturarProductos void btnFormarPagoActionPerformed(ActionEvent evt): handle (V) | btn (PRE) formar (NM) pago (NM) action (NM) performed (N) 	++ :: [ action (NM) event (NI) - evt (N) ] :: PN (NM) facturar (NM) productos (N)  :: void (N) 
SPECIAL:NAME:TestMessageTag1 void testMessageTag1ArgNamePropertyNoScopeAlternateBundle(): test (VI)  | message (NM) tag (NM) 1 (D) arg (NM) name (NM) property (NM) no (DT) scope (NM) alternate (NM) bundle (N) 	++ :: test (NM) message (NM) tag (NM) 1 (N) 
V_3P_IRR:NAME:CComboBox boolean isReadWrite(): is (V)  | read (NM) write (N) 	++ :: boolean (N)  :: C (NM) combo (NM) box (N) 
CONSTRUCTOR:NAME:MemberImpl7 MemberImpl7 MemberImpl7(SchemaType sType):  | member (NM) impl (NM) 7 (N) 	++ :: [ schema (NM) type (N) - s (NM) type (N) ]
SPECIAL:NAME:GPTree void readTree(EvolutionState state, LineNumberReader reader): read (V)  | tree (NI) 	++ :: [ evolution (NM) state (N) - state (N) ] :: [ line (NM) number (NM) reader (N) - reader (N) ] :: GP (NM) tree (NI) 
ENDS_WITH_ED:NAME:ServerMonitor void procDied(ProcessHandler ph): handle (V) | proc (NM) died (N) 	++ :: [ process (NM) handler (N) - ph (N) ] :: server (NM) monitor (N)  :: void (N) 
NOUN_PHRASE:NAME:WriterResultSet boolean next(): get (V) | next (DT) 	++ :: writer (NM) result (NM) set (N)  :: boolean (N) 
SPECIAL:NAME:FreedbSettings String getProxyHost(): get (V)  | proxy (NM) host (N) 	++ :: string (NI)  :: freedb (NM) settings (N) 
V_3P_IRR:NAME:ControlConnection boolean isTypeAscii(): is (V)  | type (NM) ascii (N) 	++ :: boolean (N)  :: control (NM) connection (N) 
SPECIAL:NAME:Connection void setId(int id): set (V)  | id (NI) 	++ :: [ int (N) - id (NI) ] :: connection (N) 
SPECIAL:NAME:PredecessorPosition int getHeuristicCost(): get (V)  | heuristic (NM) cost (N) 	++ :: int (N)  :: predecessor (NM) position (N) 
BASE_VERB:FORM:MWCHorizontalDateAxis void draw(Graphics2D g2, Rectangle2D drawArea, Rectangle2D plotArea): draw (V)  | [ graphics (NM) 2 (NM) D (N) - g (NM) 2 (N) ]	++ :: [ rectangle (NM) 2 (NM) D (N) - draw (NM) area (N) ] :: [ rectangle (NM) 2 (NM) D (N) - plot (NM) area (N) ] :: MWC (NM) horizontal (NM) date (NM) axis (N) 
SPECIAL:NAME:SWTDoPostEvent SWTTimer getTimer(): get (V)  | timer (N) 	++ :: SWT (NM) timer (N)  :: SWT (NM) do (NM) post (NM) event (NI) 
PREP:NAME:Bytes static String toHex(byte bytes, int off, int len): convert (V) | to (P) hex (N) 	++ :: [ byte (N) - bytes (NI) ] :: [ int (N) - off (N) ] :: [ int (N) - len (N) ] :: bytes (NI)  :: string (NI) 
SPECIAL:NAME:Steuersatz int setText(long vishandle, String s): set (V)  | text (NI) 	++ :: [ long (N) - vishandle (N) ] :: [ string (NI) - s (N) ] :: int (N)  :: steuersatz (N) 
BASE_VERB:NAME:WindDirLabel void changeDir(): change (V)  | dir (NI) 	++ :: wind (NM) dir (NM) label (NI) 
CONSTRUCTOR:NAME:RDBMPropertyStore RDBMPropertyStore RDBMPropertyStore():  | RDBM (NM) property (NM) store (N) 	++
BASE_VERB:FORM:Compiler static int prop(long refinement): prop (V)  | [ long (N) - refinement (N) ]	++ :: compiler (N)  :: int (N) 
BASE_VERB:NAME:DefaultPollerBackEnd void sendDisconnectedEvent(OnmsLocationMonitor mon): send (V)  | disconnected (NM) event (NI) 	++ :: [ onms (NM) location (NM) monitor (N) - mon (N) ] :: default (NM) poller (NM) back (NM) end (N) 
BASE_VERB:CLAS:Transport void loop(): loop (V)  | transport (N) 	++
SPECIAL:NAME:WizardModel Boolean getBackButtonEnabled(): get (V)  | back (NM) button (NM) enabled (N) 	++ :: boolean (N)  :: wizard (NM) model (NI) 
V_3PS:NAME:DatabaseMetaData boolean storesUpperCaseIdentifiers(): stores (V)  | upper (NM) case (NM) identifiers (N) 	++ :: boolean (N)  :: database (NM) meta (NM) data (NI) 
BASE_VERB:FORM:Phramer void rescore(BufferedReader input, PrintStream output): rescore (V)  | [ buffered (NM) reader (N) - input (NI) ]	++ :: [ print (NM) stream (NI) - output (N) ] :: phramer (N) 
BASE_VERB:NAME:BreakupCriteriaFieldImpl void serializeElements(XMLSerializer context): serialize (V)  | elements (N) 	++ :: [ XML (NM) serializer (N) - context (N) ] :: breakup (NM) criteria (NM) field (NM) impl (NI) 
SPECIAL:NAME:HtmlTextRendererBase void renderInput(FacesContext facesContext, UIComponent component): render (V)  | input (NI) 	++ :: [ faces (NM) context (N) - faces (NM) context (N) ] :: [ UI (NM) component (N) - component (N) ] :: html (NM) text (NM) renderer (NM) base (N) 
SPECIAL:NAME:POperation PStateMachine getStatemachine(): get (V)  | statemachine (N) 	++ :: P (NM) state (NM) machine (N)  :: P (NM) operation (N) 
SPECIAL:NAME:VinciTAP void testAndReconnect(): test (VI)  | and (NM) reconnect (N) 	++ :: vinci (NM) TAP (N) 
CONSTRUCTOR:NAME:CIM_StatisticalInformation CIM_StatisticalInformation CIM_StatisticalInformation():  | CIM (NM) statistical (NM) information (N) 	++
SPECIAL:FORM:MMeasure static MMeasure get(Properties ctx, int PA_Measure_ID): get (V)  | [ properties (N) - ctx (N) ]	++ :: [ int (N) - PA (NM) measure (NM) ID (NI) ] :: M (NM) measure (N)  :: M (NM) measure (N) 
SPECIAL:NAME:PlanAdminControl String getSelectedPlanName(): get (V)  | selected (NM) plan (NM) name (NI) 	++ :: string (NI)  :: plan (NM) admin (NM) control (N) 
SPECIAL:NAME:XMLStreamReader String getAttributeValue(int index): get (V)  | attribute (NM) value (NI) 	++ :: [ int (N) - index (NI) ] :: string (NI)  :: XML (NM) stream (NM) reader (N) 
SPECIAL:NAME:EnvelopedData DERInteger getVersion(): get (V)  | version (N) 	++ :: DER (NM) integer (N)  :: enveloped (NM) data (NI) 
SPECIAL:NAME:AbstractBrowserView Shell getShell(): get (V)  | shell (N) 	++ :: shell (N)  :: abstract (NM) browser (NM) view (NI) 
BASE_VERB:NAME:DOTDialog void showDialog(): show (V)  | dialog (N) 	++ :: DOT (NM) dialog (N) 
V_3PS:NAME:KernelRecordSetImplRawData boolean existsColumnName(String columnName): exists (V)  | EQUIV[column (NM) name (NI) , [ string (NI) - column (NM) name (NI) ]]	++ :: boolean (N)  :: kernel (NM) record (NM) set (NM) impl (NM) raw (NM) data (NI) 
SPECIAL:NAME:PPR_PC2_GOAL NTE getNTE(int rep): get (V)  | NTE (N) 	++ :: [ int (N) - rep (N) ] :: NTE (N)  :: PPR (NM) PC (NM) 2 (NM) GOAL (N) 
SPECIAL:NAME:ExampleFileFilter String getDescription(): get (V)  | description (NI) 	++ :: string (NI)  :: example (NM) file (NM) filter (N) 
SPECIAL:NAME:ObjectFactory BreakupCriteriaFields createBreakupCriteriaFields(): create (V)  | breakup (NM) criteria (NM) fields (N) 	++ :: breakup (NM) criteria (NM) fields (N)  :: object (NM) factory (N) 
BASE_VERB:FORM:PyMultiarray static void gtShort(int sa, PyMultiarray a, int sb, PyMultiarray b, int sr, PyMultiarray r, int d): gt (PRE) short (V)  | [ int (N) - sa (N) ]	++ :: [ py (NM) multiarray (N) - a (N) ] :: [ int (N) - sb (N) ] :: [ py (NM) multiarray (N) - b (N) ] :: [ int (N) - sr (N) ] :: [ py (NM) multiarray (N) - r (N) ] :: [ int (N) - d (N) ] :: py (NM) multiarray (N) 
BASE_VERB:NAME:SetRepository static Object calculateSetIdentifier(Collection sets): calculate (V)  | set (NM) identifier (NI) 	++ :: [ collection (N) - sets (N) ] :: object (NI)  :: set (NM) repository (N) 
SPECIAL:NAME:Unpack15 int getShortLen2(int pos): get (V)  | short (NM) len (N) 2 (D) 	++ :: [ int (N) - pos (N) ] :: int (N)  :: unpack (NM) 15 (N) 
BASE_VERB:FORM:PyMultiarray static void geFloat(int sa, PyMultiarray a, int sb, PyMultiarray b, int sr, PyMultiarray r, int d): ge (PRE) float (V)  | [ int (N) - sa (N) ]	++ :: [ py (NM) multiarray (N) - a (N) ] :: [ int (N) - sb (N) ] :: [ py (NM) multiarray (N) - b (N) ] :: [ int (N) - sr (N) ] :: [ py (NM) multiarray (N) - r (N) ] :: [ int (N) - d (N) ] :: py (NM) multiarray (N) 
SPECIAL:NAME:CheckersTest void testNext1(): test (VI)  | next (DT) 1 (D) 	++ :: checkers (NM) test (N) 
BASE_VERB:FORM:StringIO void seek(long pos, int mode): seek (V)  | [ long (N) - pos (N) ]	++ :: [ int (N) - mode (N) ] :: string (NM) IO (N) 
BASE_VERB:NAME:TerrainWindow void pumpCycle(): pump (V)  | cycle (N) 	++ :: terrain (NM) window (N) 
BASE_VERB:FORM:void update(Graphics g): update (V)  | [ graphics (N) - g (N) ]	++ :: ANONYMOUS (N) 
SPECIAL:NAME:ReplicatedContext ClassLoader getClassLoaders(): get (V)  | class (NM) loaders (N) 	++ :: class (NM) loader (N)  :: replicated (NM) context (N) 
SPECIAL:NAME:FlatTextArea void setForeground(Color c): set (V)  | foreground (N) 	++ :: [ color (N) - c (N) ] :: flat (NM) text (NM) area (N) 
V_3P_IRR:NAME:ConnectionStatus boolean isPartialData(): is (V)  | partial (NM) data (NI) 	++ :: boolean (N)  :: connection (NM) status (N) 
V_3P_IRR:NAME:VectorExpr boolean hasJavaClass(): has (V)  | java (NM) class (NI) 	++ :: boolean (N)  :: vector (NM) expr (NI) 
BASE_VERB:NAME:ClassFileRenamer void visitMethodrefCpInfo(ClassFile classFile, MethodrefCpInfo methodrefCpInfo): visit (V)  | EQUIV[methodref (NM) cp (NM) info (NI) , [ methodref (NM) cp (NM) info (NI) - methodref (NM) cp (NM) info (NI) ]]	++ :: [ class (NM) file (NI) - class (NM) file (NI) ] :: class (NM) file (NM) renamer (N) 
V_3P_IRR:NAME:ClassGenerator static boolean isSystemMethod(Method method): is (V)  | EQUIV[system (NM) method (N) , [ method (N) - method (N) ]]	++ :: boolean (N)  :: class (NM) generator (N) 
SPECIAL:NAME:AccessibleContext AccessibleText getAccessibleText(): get (V)  | accessible (NM) text (NI) 	++ :: accessible (NM) text (NI)  :: accessible (NM) context (N) 
SPECIAL:NAME:GraphicsPanel void removeListener(Object listener): remove (V)  | EQUIV[listener (N) , [ object (NI) - listener (N) ]]	++ :: graphics (NM) panel (N) 
SPECIAL:NAME:Runtime void addShutdownHook(Thread hook): add (V)  | EQUIV[shutdown (NM) hook (N) , [ thread (N) - hook (N) ]]	++ :: runtime (N) 
SPECIAL:NAME:RootConfigurationHandlerTest void testGetPrivateField_1(): test (VI) get (V)  | private (NM) field (N) 1 (D) 	++ :: root (NM) configuration (NM) handler (NM) test (N) 
CONSTRUCTOR:NAME:EditEditAllTransactions EditEditAllTransactions EditEditAllTransactions(MainFrame frame):  | edit (NM) edit (NM) all (DT) transactions (N) 	++ :: [ main (NM) frame (N) - frame (N) ]
SPECIAL:NAME:TypeConverter String getPrefix(): get (V)  | prefix (N) 	++ :: string (NI)  :: type (NM) converter (N) 
NOUN_PHRASE:NAME:XMLElement XMLParseException unexpectedEndOfData(): get (V) | unexpected (NM) end (NM) of (NM) data (NI) 	++ :: XML (NM) element (NI)  :: XML (NM) parse (NM) exception (N) 
SPECIAL:CLAS:PasswordEraserThread void run(): run (VI)  | password (NM) eraser (NM) thread (N) 	++
BASE_VERB:FORM:APropertyPrimaryExpCs Object apply(SwitchWithReturn sw, Object param): apply (V)  | [ switch (NM) with (NM) return (N) - sw (N) ]	++ :: [ object (NI) - param (N) ] :: A (NM) property (NM) primary (NM) exp (NM) cs (N)  :: object (NI) 
SPECIAL:NAME:void endPrefixMapping(String arg0): end (V)  | prefix (NM) mapping (N) 	++ :: [ string (NI) - arg (NM) 0 (N) ] :: ANONYMOUS (N) 
SPECIAL:NAME:JoogleServlet String getSite(String request, String site, String packageName, String className, String extra): get (V)  | EQUIV[site (N) , [ string (NI) - site (N) ]]	++ :: [ string (NI) - request (N) ] :: [ string (NI) - package (NM) name (NI) ] :: [ string (NI) - class (NM) name (NI) ] :: [ string (NI) - extra (N) ] :: string (NI)  :: joogle (NM) servlet (N) 
BASE_VERB:FORM:FloatValue FloatValue multiply(SpecificFloatValue other): multiply (V)  | [ specific (NM) float (NM) value (NI) - other (DT) ]	++ :: float (NM) value (NI)  :: float (NM) value (NI) 
SPECIAL:NAME:InetConnection2Client String getThreadName(): get (V)  | thread (NM) name (NI) 	++ :: string (NI)  :: inet (NM) connection (NM) 2 (NM) client (N) 
SPECIAL:NAME:IcmpInfo long getIcmpInDestUnreachs(): get (V)  | icmp (N) -- in (P) dest (NM) unreachs (N) 	++ :: long (N)  :: icmp (NM) info (NI) 
SPECIAL:NAME:DataAcMth Variant GetParameterString(Variant DefType, Variant UseType): get (V)  | parameter (NM) string (NI) 	++ :: [ variant (N) - def (NM) type (N) ] :: [ variant (N) - use (NM) type (N) ] :: variant (N)  :: data (NM) ac (NM) mth (N) 
ENDS_WITH_ED:NAME:PanelSetupItem void jTextFieldMaxFocusLost(FocusEvent evt): handle (V) | j (PRE) text (NM) field (NM) max (NM) focus (NM) lost (N) 	++ :: [ focus (NM) event (NI) - evt (N) ] :: panel (NM) setup (NM) item (NI)  :: void (N) 
SPECIAL:NAME:Resource String _getGroup(long _pointer_): get (V)  | group (N) 	++ :: [ long (N) - pointer (N) ] :: string (NI)  :: resource (N) 
SPECIAL:NAME:GraphViewPopupMenu JMenuItem getC2cohMenuItem(): get (V)  | C (NM) 2 (D) coh (NM) menu (NM) item (NI) 	++ :: J (NM) menu (NM) item (NI)  :: graph (NM) view (NM) popup (NM) menu (N) 
BASE_VERB:NAME:ImplBuilder IDocumentImpl buildDocument(URL aUrl): build (V)  | document (NI) 	++ :: [ URL (NI) - a (NM) url (NI) ] :: I (NM) document (NM) impl (NI)  :: impl (NM) builder (N) 
ENDS_WITH_ED:NAME:SerialIO void signalBit(boolean rts, boolean dtr): handle (V) | signal (NM) bit (N) 	++ :: [ boolean (N) - rts (N) ] :: [ boolean (N) - dtr (N) ] :: serial (NM) IO (N)  :: void (N) 
NOUN_PHRASE:NAME:TriMeshBeveler TriangleMesh bevelFacesAsGroup(double height, double width): get (V) | bevel (NM) faces (NM) as (NM) group (N) 	++ :: [ double (N) - height (N) ] :: [ double (N) - width (N) ] :: tri (NM) mesh (NM) beveler (N)  :: triangle (NM) mesh (N) 
SPECIAL:NAME:HelpBinding static void addBinding(AbstractButton b, String helpID): add (V)  | binding (N) 	++ :: [ abstract (NM) button (N) - b (N) ] :: [ string (NI) - help (NM) ID (NI) ] :: help (NM) binding (N) 
SPECIAL:NAME:epp_HostStatus void setLang(String value): set (V)  | lang (N) 	++ :: [ string (NI) - value (NI) ] :: epp (NM) host (NM) status (N) 
SPECIAL:NAME:Configuration void setPreference(String name, String value): set (V)  | preference (N) 	++ :: [ string (NI) - name (NI) ] :: [ string (NI) - value (NI) ] :: configuration (NI) 
SPECIAL:NAME:TldPanel void setJspVersion(String jspVersion): set (V)  | jsp (NM) version (N) 	++ :: [ string (NI) - jsp (NM) version (N) ] :: tld (NM) panel (N) 
BASE_VERB:NAME:JpgFileUtil static Picture save_or_update_info_in_db(File jpgFile): save (V)  | or (NM) update (NM) info (NI) -- in (P) db (N) 	++ :: [ file (NI) - jpg (NM) file (NI) ] :: picture (N)  :: jpg (NM) file (NM) util (N) 
BASE_VERB:FORM:F20 double compute(Note note): compute (V)  | [ note (N) - note (N) ]	++ :: F (NM) 20 (N)  :: double (N) 
BASE_VERB:NAME:JPhotoFrame void exitConfirmedSave(): exit (VI)  | confirmed (NM) save (N) 	++ :: J (NM) photo (NM) frame (N) 
SPECIAL:NAME:ContextTracker void assertElementLocation(int start, int length): assert (VI)  | element (NM) location (NI) 	++ :: [ int (N) - start (N) ] :: [ int (N) - length (N) ] :: context (NM) tracker (N) 
SPECIAL:NAME:UniWorksheet String getCustSite(): get (V)  | cust (NM) site (N) 	++ :: string (NI)  :: uni (NM) worksheet (N) 
BASE_VERB:FORM:FloatHalbKreis void paint(Graphics g): paint (V)  | [ graphics (N) - g (N) ]	++ :: float (NM) halb (NM) kreis (N) 
SPECIAL:NAME:Tidy String getSlidestyle(): get (V)  | slidestyle (N) 	++ :: string (NI)  :: tidy (N) 
SPECIAL:NAME:FindSimilarTemplateTest static FindSimilarDocument createFindSimilarDocument(): create (V)  | find (NM) similar (NM) document (NI) 	++ :: find (NM) similar (NM) document (NI)  :: find (NM) similar (NM) template (NM) test (N) 
SPECIAL:NAME:HtmlWriter void setFooter(HeaderFooter footer): set (V)  | footer (N) 	++ :: [ header (NM) footer (N) - footer (N) ] :: html (NM) writer (N) 
PREP:NAME:Util static String toString(byte ba): convert (V) | to (P) string (NI) 	++ :: [ byte (N) - ba (N) ] :: util (N)  :: string (NI) 
SPECIAL:CLAS:frameset void setOnUnload(String script): set (V)  | frameset (N) -- on (P) unload (N) 	++ :: [ string (NI) - script (N) ]
SPECIAL:NAME:InternationalFormatter Format getFormat(): get (V)  | format (NI) 	++ :: format (NI)  :: international (NM) formatter (N) 
SPECIAL:NAME:OzoneVariant void setParent(VariantContainer parent): set (V)  | parent (N) 	++ :: [ variant (NM) container (NI) - parent (N) ] :: ozone (NM) variant (N) 
SPECIAL:NAME:AffineTransform void setTransform(AffineTransform tx): set (V)  | transform (N) 	++ :: [ affine (NM) transform (N) - tx (N) ] :: affine (NM) transform (N) 
SPECIAL:NAME:FlowFilter String getDefaultTemplatePath(): get (V)  | default (NM) template (NM) path (NI) 	++ :: string (NI)  :: flow (NM) filter (N) 
CONSTRUCTOR:NAME:NagiosLog NagiosLog NagiosLog():  | nagios (NM) log (N) 	++
SPECIAL:NAME:ResourceLocalServiceImpl Resource getResource(long companyId, String name, int scope, String primKey): get (V)  | resource (N) 	++ :: [ long (N) - company (NM) id (NI) ] :: [ string (NI) - name (NI) ] :: [ int (N) - scope (N) ] :: [ string (NI) - prim (NM) key (NI) ] :: resource (N)  :: resource (NM) local (NM) service (NM) impl (NI) 
BASE_VERB:FORM:Permutation void shuffle(int seed): shuffle (V)  | [ int (N) - seed (N) ]	++ :: permutation (N) 
SPECIAL:NAME:Filter void setFilterClass(String filterClass): set (V)  | filter (NM) class (NI) 	++ :: [ string (NI) - filter (NM) class (NI) ] :: filter (N) 
SPECIAL:FORM:ListTablePanelTest static void main(String args): main (V)  | [ string (NI) - args (N) ]	++ :: list (NM) table (NM) panel (NM) test (N) 
SPECIAL:NAME:AffineIfsCalculation int getBackgroundColor(): get (V)  | background (NM) color (N) 	++ :: int (N)  :: affine (NM) ifs (NM) calculation (N) 
BASE_VERB:NAME:SequenceRegion int lowerEdgeType(): lower (V)  | edge (NM) type (N) 	++ :: int (N)  :: sequence (NM) region (N) 
BASE_VERB:NAME:DTDConfiguration void configurePipeline(): configure (V)  | pipeline (N) 	++ :: DTD (NM) configuration (NI) 
SPECIAL:NAME:PiePlot Paint getSectionOutlinePaint(): get (V)  | section (NM) outline (NM) paint (N) 	++ :: paint (N)  :: pie (NM) plot (N) 
EVENT_PARAM:NAME:void verifyText(VerifyEvent e): handle (V) | verify (NM) text (NI) 	++ :: [ verify (NM) event (NI) - e (N) ] :: ANONYMOUS (N)  :: void (N) 
SPECIAL:NAME:ArmApplicationImpl String getGroup(): get (V)  | group (N) 	++ :: string (NI)  :: arm (NM) application (NM) impl (NI) 
SPECIAL:NAME:RuleImpl List getSetResponseHeaderField(): get (V)  | set (NM) response (NM) header (NM) field (N) 	++ :: list (N)  :: rule (NM) impl (NI) 
V_3PS:FORM:TaskSeries boolean equals(Object obj): equals (V)  | [ object (NI) - obj (NI) ]	++ :: task (NM) series (N)  :: boolean (N) 
BASE_VERB:FORM:DummyGroup boolean connect(IUnknown pSinkIntf, String riid, long provConnID): connect (V)  | [ I (NM) unknown (N) - p (NM) sink (NM) intf (N) ]	++ :: [ string (NI) - riid (N) ] :: [ long (N) - prov (NM) conn (NM) ID (NI) ] :: dummy (NM) group (N)  :: boolean (N) 
VOID_NP:NAME:AnalysisAdapter void caseAProductionSpecifier(AProductionSpecifier node): handle (V) | case (NM) A (NM) production (NM) specifier (N) 	++ :: [ A (NM) production (NM) specifier (N) - node (NI) ] :: analysis (NM) adapter (NI)  :: void (N) 
SPECIAL:NAME:OntologyNode TreeNode getParent(): get (V)  | parent (N) 	++ :: tree (NM) node (NI)  :: ontology (NM) node (NI) 
CONSTRUCTOR:NAME:TestFilterMouseMotionEvents TestFilterMouseMotionEvents TestFilterMouseMotionEvents(String name):  | test (NM) filter (NM) mouse (NM) motion (NM) events (N) 	++ :: [ string (NI) - name (NI) ]
SPECIAL:NAME:ChXChartView TestEnvironment createTestEnvironment(TestParameters Param, PrintWriter log): create (V)  | test (NM) environment (N) 	++ :: [ test (NM) parameters (N) - param (N) ] :: [ print (NM) writer (N) - log (N) ] :: test (NM) environment (N)  :: ch (NM) X (NM) chart (NM) view (NI) 
SPECIAL:NAME:EditCardPanelBeanInfo static EventSetDescriptor getEdescriptor(): get (V)  | edescriptor (N) 	++ :: event (NM) set (NM) descriptor (NI)  :: edit (NM) card (NM) panel (NM) bean (NM) info (NI) 
SPECIAL:FORM:FileConvertor void write(IChemModel cm, String outputFilename): write (V)  | [ I (NM) chem (NM) model (NI) - cm (N) ]	++ :: [ string (NI) - output (NM) filename (N) ] :: file (NM) convertor (N) 
CONSTRUCTOR:NAME:DOMResult DOMResult DOMResult(Node node):  | DOM (NM) result (N) 	++ :: [ node (NI) - node (NI) ]
ENDS_WITH_ED:NAME:RayTraceCanvas void mouseClicked(MouseEvent e): handle (V) | mouse (NM) clicked (N) 	++ :: [ mouse (NM) event (NI) - e (N) ] :: ray (NM) trace (NM) canvas (N)  :: void (N) 
SPECIAL:FORM:EntityPersister void delete(Serializable id, Object version, Object object, SessionImplementor session): delete (V)  | [ serializable (N) - id (NI) ]	++ :: [ object (NI) - version (N) ] :: [ object (NI) - object (NI) ] :: [ session (NM) implementor (N) - session (N) ] :: entity (NM) persister (N) 
SPECIAL:NAME:YasaraFormat String getFormatName(): get (V)  | format (NM) name (NI) 	++ :: string (NI)  :: yasara (NM) format (NI) 
SPECIAL:NAME:PreparedUpdateAdapter void setReturnValue(int returnValue): set (V)  | return (NM) value (NI) 	++ :: [ int (N) - return (NM) value (NI) ] :: prepared (NM) update (NM) adapter (NI) 
SPECIAL:NAME:SmtpClientTransport String getCleanUrl(): get (V)  | clean (NM) url (NI) 	++ :: string (NI)  :: smtp (NM) client (NM) transport (N) 
ENDS_WITH_ED:NAME:SingleSelectionList void focusLost(FocusEvent event): handle (V) | focus (NM) lost (N) 	++ :: [ focus (NM) event (NI) - event (NI) ] :: single (NM) selection (NM) list (N)  :: void (N) 
SPECIAL:NAME:SymbolInfo void createConflictError(IMarkerDisplay markerDisplay): create (V)  | conflict (NM) error (N) 	++ :: [ I (NM) marker (NM) display (N) - marker (NM) display (N) ] :: symbol (NM) info (NI) 
BASE_VERB:CLAS:AdvSearchParserTokenManager static int jjStopAtPos(int pos, int kind): jj (PRE) stop (VI)  | adv (NM) search (NM) parser (NM) token (NM) manager (N) -- at (P) EQUIV[pos (N) , [ int (N) - pos (N) ]]	++ :: [ int (N) - kind (N) ] :: int (N) 
BASE_VERB:NAME:MovieBuilder SWFVectors tagDefineFont(int id, int numGlyphs): tag (V)  | define (NM) font (N) 	++ :: [ int (N) - id (NI) ] :: [ int (N) - num (NM) glyphs (N) ] :: SWF (NM) vectors (N)  :: movie (NM) builder (N) 
SPECIAL:NAME:NuevaPreguntaPresentation void setActivoAnchura(boolean activo): set (V)  | activo (NM) anchura (N) 	++ :: [ boolean (N) - activo (N) ] :: nueva (NM) pregunta (NM) presentation (N) 
BASE_VERB:FORM:BlueZ BTAddress hciDevBTAddress(int hciDevID): hci (PRE) dev (PRE) BT (PRE) address (V)  | [ int (N) - hci (NM) dev (NM) ID (NI) ]	++ :: blue (NM) Z (N)  :: BT (NM) address (NI) 
SPECIAL:NAME:CatcherManager Exception getCatchChilds(XmlCatch xCatch, Exception catched): get (V)  | catch (NM) childs (N) 	++ :: [ xml (NM) catch (N) - x (NM) catch (N) ] :: [ exception (N) - catched (N) ] :: exception (N)  :: catcher (NM) manager (N) 
SPECIAL:NAME:CharsetTest void testDollar(): test (VI)  | dollar (N) 	++ :: charset (NM) test (N) 
PREP:NAME:Record String toString(): convert (V) | to (P) string (NI) 	++ :: record (N)  :: string (NI) 
SPECIAL:NAME:RemaindersFAController void setStoreId(int storeId): set (V)  | store (NM) id (NI) 	++ :: [ int (N) - store (NM) id (NI) ] :: remainders (NM) FA (NM) controller (N) 
SPECIAL:NAME:JListTest String getTargetSelectedIndicesString(): get (V)  | target (NM) selected (NM) indices (NM) string (NI) 	++ :: string (NI)  :: J (NM) list (NM) test (N) 
EVENT_PARAM:NAME:PlaceChipHandler void handleEvent(MessageEvent event, PlaceManager pmgr): handle (V) | handle (NM) event (NI) 	++ :: [ message (NM) event (NI) - event (NI) ] :: [ place (NM) manager (N) - pmgr (N) ] :: place (NM) chip (NM) handler (N)  :: void (N) 
SPECIAL:NAME:OrderCancelRequest EndDate getEndDate(): get (V)  | end (NM) date (N) 	++ :: end (NM) date (N)  :: order (NM) cancel (NM) request (N) 
SPECIAL:NAME:CertReqCmd void setFile(String pathName): set (V)  | file (NI) 	++ :: [ string (NI) - path (NM) name (NI) ] :: cert (NM) req (NM) cmd (N) 
SPECIAL:FORM:NoRelatedSym UnderlyingStrikePrice get(UnderlyingStrikePrice value): get (V)  | [ underlying (NM) strike (NM) price (N) - value (NI) ]	++ :: no (DT) related (NM) sym (N)  :: underlying (NM) strike (NM) price (N) 
PREP:NAME:SOSConnection String toDate(String dateString): convert (V) | to (P) date (N) 	++ :: [ string (NI) - date (NM) string (NI) ] :: SOS (NM) connection (N)  :: string (NI) 
SPECIAL:NAME:DomIterator int getWhatToShow(): get (V)  | what (DT) -- to (P) show (N) 	++ :: int (N)  :: dom (NM) iterator (N) 
ENDS_WITH_ED:NAME:void focusLost(FocusEvent e): handle (V) | focus (NM) lost (N) 	++ :: [ focus (NM) event (NI) - e (N) ] :: ANONYMOUS (N)  :: void (N) 
CONSTRUCTOR:NAME:NameImpl NameImpl NameImpl(String value):  | name (NM) impl (NI) 	++ :: [ string (NI) - value (NI) ]
CONSTRUCTOR:NAME:Range Range Range(int first, int last):  | range (N) 	++ :: [ int (N) - first (N) ] :: [ int (N) - last (DT) ]
SPECIAL:CLAS:SendingThread void run(): run (VI)  | sending (NM) thread (N) 	++
SPECIAL:NAME:StructBreakPanel JPanel getConfigPanel2(): get (V)  | config (NM) panel (N) 2 (D) 	++ :: J (NM) panel (N)  :: struct (NM) break (NM) panel (N) 
BASE_VERB:NAME:GenericMDSLayout double computeGradient(Complex position, ComplexVector gradient): compute (V)  | EQUIV[gradient (N) , [ complex (NM) vector (N) - gradient (N) ]]	++ :: [ complex (N) - position (N) ] :: double (N)  :: generic (NM) MDS (NM) layout (N) 
PREP:NAME:StackInverseItem String toString(): convert (V) | to (P) string (NI) 	++ :: stack (NM) inverse (NM) item (NI)  :: string (NI) 
SPECIAL:NAME:LimsproceduretypelistBean Long getId(): get (V)  | id (NI) 	++ :: long (N)  :: limsproceduretypelist (NM) bean (NI) 
SPECIAL:NAME:WindowsTabbedPaneUI Insets getTabAreaInsets(int tabPlacement): get (V)  | tab (NM) area (NM) insets (N) 	++ :: [ int (N) - tab (NM) placement (N) ] :: insets (N)  :: windows (NM) tabbed (NM) pane (NM) UI (N) 
SPECIAL:NAME:GameModel City getSelectedCity(): get (V)  | selected (NM) city (N) 	++ :: city (N)  :: game (NM) model (NI) 
VOID_NP:NAME:MainWindow void statusChangeNotify(StatusObservable observed): handle (V) | status (NM) change (NM) notify (N) 	++ :: [ status (NM) observable (N) - observed (N) ] :: main (NM) window (N)  :: void (N) 
CONSTRUCTOR:NAME:Invocation Invocation Invocation(Object target, Method method, Object args):  | invocation (N) 	++ :: [ object (NI) - target (N) ] :: [ method (N) - method (N) ] :: [ object (NI) - args (N) ]
SPECIAL:NAME:NoLegs LegSecurityType getLegSecurityType(): get (V)  | leg (NM) security (NM) type (N) 	++ :: leg (NM) security (NM) type (N)  :: no (DT) legs (N) 
V_3P_IRR:NAME:CofaxJspResponse boolean isCommitted(): is (V)  | committed (N) 	++ :: boolean (N)  :: cofax (NM) jsp (NM) response (N) 
CONSTRUCTOR:NAME:NodeView NodeView NodeView(IController node):  | node (NM) view (NI) 	++ :: [ I (NM) controller (N) - node (NI) ]
BASE_VERB:NAME:ServerInfo String displayPackageInfo(String pkgName): display (V)  | package (NM) info (NI) 	++ :: [ string (NI) - pkg (NM) name (NI) ] :: string (NI)  :: server (NM) info (NI) 
V_3P_IRR:NAME:LimeXMLUtils static boolean isOGMFile(String in): is (V)  | OGM (NM) file (NI) 	++ :: [ string (NI) - in (NI) ] :: boolean (N)  :: lime (NM) XML (NM) utils (N) 
SPECIAL:NAME:IntegralHelper double do_integral(): do (VI)  | integral (N) 	++ :: double (N)  :: integral (NM) helper (N) 
PREP:NAME:ZkFns static String toAbsoluteURI(String uri): convert (V) | to (P) absolute (NM) URI (NI) 	++ :: [ string (NI) - uri (NI) ] :: zk (NM) fns (N)  :: string (NI) 
CONSTRUCTOR:NAME:X_C_Withholding X_C_Withholding X_C_Withholding(Properties ctx, int C_Withholding_ID):  | X (NM) C (NM) withholding (N) 	++ :: [ properties (N) - ctx (N) ] :: [ int (N) - C (NM) withholding (NM) ID (NI) ]
SPECIAL:NAME:GroupKeyGroupGrantDataBean String getSignature(): get (V)  | signature (N) 	++ :: string (NI)  :: group (NM) key (NM) group (NM) grant (NM) data (NM) bean (NI) 
SPECIAL:NAME:StorageTypeControlAction ActionForward doControlAction(ActionForm form, ActionContext context): do (VI)  | control (NM) action (N) 	++ :: [ action (NM) form (N) - form (N) ] :: [ action (NM) context (N) - context (N) ] :: action (NM) forward (N)  :: storage (NM) type (NM) control (NM) action (N) 
CONSTRUCTOR:NAME:MondrianConnectionDataSourceService MondrianConnectionDataSourceService MondrianConnectionDataSourceService(Connection connection):  | mondrian (NM) connection (NM) data (NM) source (NM) service (N) 	++ :: [ connection (N) - connection (N) ]
SPECIAL:NAME:PerformanceChartProcessor int getHeight(): get (V)  | height (N) 	++ :: int (N)  :: performance (NM) chart (NM) processor (N) 
V_3P_IRR:NAME:NoLegs boolean isSetLegLastPx(): is (V)  | set (NM) leg (NM) last (DT) px (N) 	++ :: boolean (N)  :: no (DT) legs (N) 
SPECIAL:NAME:CCalendar void setButtonsVisibles(boolean visible): set (V)  | buttons (NM) visibles (N) 	++ :: [ boolean (N) - visible (N) ] :: C (NM) calendar (N) 
BASE_VERB:NAME:AreaPolygonImpl Show xgetShow(): xget (V)  | show (N) 	++ :: show (N)  :: area (NM) polygon (NM) impl (NI) 
SPECIAL:NAME:MultipleRatings void copyRatingsToComputedRatings(String userRating, String newUserRating, String objects, String type): copy (V)  | ratings (N) -- to (P) computed (NM) ratings (N) 	++ :: [ string (NI) - user (NM) rating (N) ] :: [ string (NI) - new (NM) user (NM) rating (N) ] :: [ string (NI) - objects (N) ] :: [ string (NI) - type (N) ] :: multiple (NM) ratings (N) 
BASE_VERB:CLAS:Sbb3Sbb void sbbStore(): sbb (PRE) store (V)  | sbb (NM) 3 (NM) sbb (N) 	++
SPECIAL:NAME:ColumnLayout void addLayoutComponent(String name, Component component): add (V)  | EQUIV[layout (NM) component (N) , [ component (N) - component (N) ]]	++ :: [ string (NI) - name (NI) ] :: column (NM) layout (N) 
CONSTRUCTOR:NAME:MappingHelper MappingHelper MappingHelper(ArchitectureMappingModel model):  | mapping (NM) helper (N) 	++ :: [ architecture (NM) mapping (NM) model (NI) - model (NI) ]
V_3PS:FORM:Contact boolean equals(Object o): equals (V)  | [ object (NI) - o (N) ]	++ :: contact (N)  :: boolean (N) 
SPECIAL:NAME:GraphConfig List getAttributes(): get (V)  | attributes (N) 	++ :: list (N)  :: graph (NM) config (NI) 
CONSTRUCTOR:NAME:Prairie Prairie Prairie(BufferedReader in, int players):  | prairie (N) 	++ :: [ buffered (NM) reader (N) - in (NI) ] :: [ int (N) - players (N) ]
SPECIAL:NAME:DefaultTreeInfo void addTreeToResource(ManageableResource resource, TreeNode tree): add (V)  | EQUIV[tree (NI) , [ tree (NM) node (NI) - tree (NI) ]]-- to (P) EQUIV[resource (N) , [ manageable (NM) resource (N) - resource (N) ]]	++ :: [ tree (NM) node (NI) - tree (NI) ] :: default (NM) tree (NM) info (NI) 
PREP:NAME:EventUtils static String toString(Snmp snmp): convert (V) | to (P) string (NI) 	++ :: [ snmp (N) - snmp (N) ] :: event (NM) utils (N)  :: string (NI) 
V_3P_IRR:NAME:NullT boolean isNull(): is (V)  | null (N) 	++ :: boolean (N)  :: null (NM) T (N) 
SPECIAL:NAME:MackerAntTask void setVerbose(boolean verbose): set (V)  | verbose (N) 	++ :: [ boolean (N) - verbose (N) ] :: macker (NM) ant (NM) task (N) 
V_3P_IRR:NAME:NoLegSecurityAltID boolean isSet(LegSecurityAltID field): is (V)  | set (N) 	++ :: [ leg (NM) security (NM) alt (NM) ID (NI) - field (N) ] :: boolean (N)  :: no (DT) leg (NM) security (NM) alt (NM) ID (NI) 
SPECIAL:NAME:FormDate void setHour(String hour): set (V)  | hour (N) 	++ :: [ string (NI) - hour (N) ] :: form (NM) date (N) 
V_3PS:NAME:DatabaseIdentifierImpl boolean matchesTable(DatabaseIdentifierImpl other): matches (V)  | table (N) 	++ :: [ database (NM) identifier (NM) impl (NI) - other (DT) ] :: boolean (N)  :: database (NM) identifier (NM) impl (NI) 
CONSTRUCTOR:NAME:DXMLForm DXMLForm DXMLForm(Element element):  | DXML (NM) form (N) 	++ :: [ element (NI) - element (NI) ]
VOID_NP:NAME:ALogin void connectionOK(): handle (V) | connection (NM) OK (N) 	++ :: A (NM) login (N)  :: void (N) 
BASE_VERB:FORM:FSigLineSingleModel boolean point(GrPoint _pt, int _ligneIdx, int _pointIdx): point (V)  | [ gr (NM) point (N) - pt (N) ]	++ :: [ int (N) - ligne (NM) idx (N) ] :: [ int (N) - point (NM) idx (N) ] :: F (NM) sig (NM) line (NM) single (NM) model (NI)  :: boolean (N) 
SPECIAL:NAME:IdentitiesBrowser JButton getBimport(): get (V)  | bimport (N) 	++ :: J (NM) button (N)  :: identities (NM) browser (N) 
BASE_VERB:NAME:CorbaInput int skipBytes(int len): skip (V)  | bytes (NI) 	++ :: [ int (N) - len (N) ] :: int (N)  :: corba (NM) input (NI) 
SPECIAL:NAME:ConfigXmlHandler void endElement(String uri, String qName, String elementName): end (V)  | EQUIV[element (NI) , [ string (NI) - element (NM) name (NI) ]]	++ :: [ string (NI) - uri (NI) ] :: [ string (NI) - q (NM) name (NI) ] :: config (NM) xml (NM) handler (N) 
SPECIAL:NAME:CategoryBean String getCategory(): get (V)  | category (N) 	++ :: string (NI)  :: category (NM) bean (NI) 
SPECIAL:NAME:Prosody String getPitch(): get (V)  | pitch (N) 	++ :: string (NI)  :: prosody (N) 
PREP:NAME:ITaskService String toString(): convert (V) | to (P) string (NI) 	++ :: I (NM) task (NM) service (N)  :: string (NI) 
SPECIAL:NAME:Action Collection getLogEntries(): get (V)  | log (NM) entries (N) 	++ :: collection (N)  :: action (N) 
SPECIAL:NAME:Course CourseID getNumber(): get (V)  | number (NI) 	++ :: course (NM) ID (NI)  :: course (N) 
CONSTRUCTOR:NAME:ReportDesigner ReportDesigner ReportDesigner():  | report (NM) designer (N) 	++
SPECIAL:NAME:ObjectFactory JAXBElement<ObjectType> createObject(ObjectType value): create (V)  | object (NI) 	++ :: [ object (NM) type (N) - value (NI) ] :: JAXB (NM) element (NM) object (NM) type (N)  :: object (NM) factory (N) 
SPECIAL:NAME:PropertiesServices Map getProperties(Integer entityId, String entityType, String mergeSeparator): get (V)  | properties (N) 	++ :: [ integer (N) - entity (NM) id (NI) ] :: [ string (NI) - entity (NM) type (N) ] :: [ string (NI) - merge (NM) separator (N) ] :: map (N)  :: properties (NM) services (N) 
SPECIAL:NAME:SetVeloToNoteAction Note getNote(): get (V)  | note (N) 	++ :: note (N)  :: set (NM) velo (NM) to (NM) note (NM) action (N) 
BASE_VERB:NAME:Unmarshaller void enterAttribute(String ___uri, String ___local): enter (V)  | attribute (N) 	++ :: [ string (NI) - uri (NI) ] :: [ string (NI) - local (N) ] :: unmarshaller (N) 
SPECIAL:NAME:AbstractStandardEmptyAccount String getContactBlockText(): get (V)  | contact (NM) block (NM) text (NI) 	++ :: string (NI)  :: abstract (NM) standard (NM) empty (NM) account (N) 
BASE_VERB:NAME:IView PlayerCharacter generateCharacter(): generate (V)  | character (N) 	++ :: player (NM) character (N)  :: I (NM) view (NI) 
BASE_VERB:NAME:ZaurusDatabaseManager void refreshTree(): refresh (V)  | tree (NI) 	++ :: zaurus (NM) database (NM) manager (N) 
BASE_VERB:NAME:Simple2TokenManager int jjMoveStringLiteralDfa3_0(long old0, long active0): jj (PRE) move (V)  | EQUIV[string (NM) literal (NM) dfa (N) 3 (D) 0 (D) , [ long (N) - old (NM) 0 (N) ], [ long (N) - active (NM) 0 (N) ]]	++ :: int (N)  :: simple (NM) 2 (NM) token (NM) manager (N) 
SPECIAL:NAME:FSLWelcomeUninstall void doLocalFinish(): do (VI)  | local (NM) finish (N) 	++ :: FSL (NM) welcome (NM) uninstall (N) 
BASE_VERB:CLAS:InformationOutboxBean void ejbPassivate(): ejb (PRE) passivate (V)  | information (NM) outbox (NM) bean (NI) 	++
V_3P_IRR:NAME:NewOrderSingle boolean isSetDiscretionInst(): is (V)  | set (NM) discretion (NM) inst (N) 	++ :: boolean (N)  :: new (NM) order (NM) single (N) 
CONSTRUCTOR:NAME:JoContentHandler JoContentHandler JoContentHandler(ContentHandler forwardTo):  | jo (NM) content (NM) handler (N) 	++ :: [ content (NM) handler (N) - forward (NM) to (N) ]
SPECIAL:CLAS:TestCustomer void testFindByIdUsingDynamicSQL(): test (VI) find (V)  | test (NM) customer (N) -- by (P) id (NM) using (NM) dynamic (NM) SQL (N) 	++
CONSTRUCTOR:NAME:ionstream_channel_userinterface ionstream_channel_userinterface ionstream_channel_userinterface(ionstream_user ionstream_user, int id):  | ionstream (NM) channel (NM) userinterface (N) 	++ :: [ ionstream (NM) user (N) - ionstream (NM) user (N) ] :: [ int (N) - id (NI) ]
EVENT_PARAM:NAME:QObject boolean activate_filters(QEvent arg1): handle (V) | activate (NM) filters (N) 	++ :: [ Q (NM) event (NI) - arg (NM) 1 (N) ] :: Q (NM) object (NI)  :: boolean (N) 
BASE_VERB:FORM:NullLayoutManager void calc(Container parent): calc (V)  | [ container (NI) - parent (N) ]	++ :: null (NM) layout (NM) manager (N) 
SPECIAL:NAME:DataSetEditor void setData(DataSet s): set (V)  | data (NI) 	++ :: [ data (NM) set (N) - s (N) ] :: data (NM) set (NM) editor (N) 
SPECIAL:NAME:CircleImpl void setCx(String cx): set (V)  | cx (N) 	++ :: [ string (NI) - cx (N) ] :: circle (NM) impl (NI) 
SPECIAL:NAME:MuSetTest void testRestrictTo(): test (VI) restrict (V)  | to (NM) 	++ :: mu (NM) set (NM) test (N) 
BASE_VERB:NAME:CUP$parser$actions void update_precedence(int p): update (V)  | precedence (N) 	++ :: [ int (N) - p (NI) ] :: CUP (NM) parser (NM) actions (N) 
SPECIAL:NAME:Concept void setNestings(List<Nesting> nestings): set (V)  | nestings (N) 	++ :: [ list (NM) nesting (N) - nestings (N) ] :: concept (N) 
SPECIAL:NAME:HTTPService Integer addNotificationListener(ObjectName name, Object filter, Subject delegate): add (V)  | notification (NM) listener (N) 	++ :: [ object (NM) name (NI) - name (NI) ] :: [ object (NI) - filter (N) ] :: [ subject (N) - delegate (N) ] :: integer (N)  :: HTTP (NM) service (N) 
SPECIAL:NAME:ResultsBlockWriter void printNoHeaderSpaceHTML(StandardResultsBlock srb, AnyLogicContext alc): print (V)  | no (DT) header (NM) space (NM) HTML (N) 	++ :: [ standard (NM) results (NM) block (N) - srb (N) ] :: [ any (DT) logic (NM) context (N) - alc (N) ] :: results (NM) block (NM) writer (N) 
SPECIAL:NAME:SIU_S22_LOCATION_RESOURCE NTE getNTE(): get (V)  | NTE (N) 	++ :: NTE (N)  :: SIU (NM) S (NM) 22 (NM) LOCATION (NM) RESOURCE (N) 
SPECIAL:NAME:Source String getState(): get (V)  | state (N) 	++ :: string (NI)  :: source (NI) 
CONSTRUCTOR:NAME:WhatIsPermission WhatIsPermission WhatIsPermission(String name, String actions):  | what (DT) is (NM) permission (N) 	++ :: [ string (NI) - name (NI) ] :: [ string (NI) - actions (N) ]
BASE_VERB:NAME:MpfcJNI static int WSDimage_getImageHeight(long jarg1): WS (PRE) dimage (V)  | get (NM) image (NM) height (N) 	++ :: [ long (N) - jarg (NM) 1 (N) ] :: int (N)  :: mpfc (NM) JNI (N) 
ENDS_WITH_ED:NAME:Inserter void connectionChanged(boolean connected): handle (V) | connection (NM) changed (N) 	++ :: [ boolean (N) - connected (N) ] :: inserter (N)  :: void (N) 
ENDS_WITH_ED:NAME:AbstractManagedObjectOperations void done(): handle (V) | done (N) 	++ :: abstract (NM) managed (NM) object (NM) operations (N)  :: void (N) 
SPECIAL:NAME:PermissionControllerHelper PermissionAssignment getAssignment(Notebook notebook, String assigneeId): get (V)  | assignment (N) 	++ :: [ notebook (N) - notebook (N) ] :: [ string (NI) - assignee (NM) id (NI) ] :: permission (NM) assignment (N)  :: permission (NM) controller (NM) helper (N) 
V_3PS:NAME:PrettySettingsParser boolean containsOption(): contains (V)  | option (N) 	++ :: boolean (N)  :: pretty (NM) settings (NM) parser (N) 
SPECIAL:NAME:ActivityInstanceBean String getType(): get (V)  | type (N) 	++ :: string (NI)  :: activity (NM) instance (NM) bean (NI) 
SPECIAL:NAME:X_R_RequestAction int getC_BPartner_ID(): get (V)  | C (NM) B (NM) partner (NM) ID (NI) 	++ :: int (N)  :: X (NM) R (NM) request (NM) action (N) 
SPECIAL:NAME:QueryBehaviorTypeImpl void setQueryURI(String value): set (V)  | query (NM) URI (NI) 	++ :: [ string (NI) - value (NI) ] :: query (NM) behavior (NM) type (NM) impl (NI) 
BASE_VERB:NAME:WindowManager void showRankingDialog(boolean visible): show (V)  | ranking (NM) dialog (N) 	++ :: [ boolean (N) - visible (N) ] :: [ boolean (N) - visible (N) ] :: window (NM) manager (N) 
SPECIAL:FORM:HistorySaver void init(GOIMAccount account): init (V)  | [ GOIM (NM) account (N) - account (N) ]	++ :: history (NM) saver (N) 
SPECIAL:NAME:ASTViewer String loadText(): load (V)  | text (NI) 	++ :: string (NI)  :: AST (NM) viewer (N) 
SPECIAL:NAME:Propability static int getActionPropabilityPro(int target, int modificator): get (V)  | action (NM) propability (NM) pro (N) 	++ :: [ int (N) - target (N) ] :: [ int (N) - modificator (N) ] :: int (N)  :: propability (N) 
SPECIAL:FORM:OrderMassCancelReport void set(RepurchaseRate value): set (V)  | [ repurchase (NM) rate (N) - value (NI) ]	++ :: order (NM) mass (NM) cancel (NM) report (N) 
BASE_VERB:FORM:SpecialTokenVisitor Object visit(ASTPrimarySuffix node, Object data): visit (V)  | [ AST (NM) primary (NM) suffix (N) - node (NI) ]	++ :: [ object (NI) - data (NI) ] :: special (NM) token (NM) visitor (N)  :: object (NI) 
BASE_VERB:FORM:XQueryEncoder void visit(TextMappingNode node): visit (V)  | [ text (NM) mapping (NM) node (NI) - node (NI) ]	++ :: X (NM) query (NM) encoder (N) 
CONSTRUCTOR:NAME:GridPanelStupidModel14 GridPanelStupidModel14 GridPanelStupidModel14():  | grid (NM) panel (NM) stupid (NM) model (NM) 14 (N) 	++
BASE_VERB:NAME:AsyncMulticastTest void handleClose(Exception jex, AsyncDatagramSocket socket): handle (VI)  | close (N) 	++ :: [ exception (N) - jex (N) ] :: [ async (NM) datagram (NM) socket (N) - socket (N) ] :: async (NM) multicast (NM) test (N) 
BASE_VERB:NAME:EmptyVisitor void visitInsn(int opcode): visit (V)  | insn (N) 	++ :: [ int (N) - opcode (N) ] :: empty (NM) visitor (N) 
SPECIAL:NAME:X509Certificate void checkValidity(): check (VI)  | validity (N) 	++ :: X (NM) 509 (NM) certificate (N) 
BASE_VERB:FORM:PropertiesManager void convert(PropertiesConverter converter): convert (V)  | [ properties (NM) converter (N) - converter (N) ]	++ :: properties (NM) manager (N) 
PREP:NAME:ParameterImpl String asString():  | as (P) string (NI) 	++ :: parameter (NM) impl (NI)  :: string (NI) 
CONSTRUCTOR:NAME:OperatorType OperatorType OperatorType(String name):  | operator (NM) type (N) 	++ :: [ string (NI) - name (NI) ]
NOUN_PHRASE:NAME:CodeFormatter String operatorString(int operator): get (V) | operator (NM) string (NI) 	++ :: [ int (N) - operator (N) ] :: code (NM) formatter (N)  :: string (NI) 
SPECIAL:NAME:DwgRef Entry createEntry(boolean required): create (V)  | entry (NI) 	++ :: [ boolean (N) - required (N) ] :: [ boolean (N) - required (N) ] :: entry (NI)  :: dwg (NM) ref (NI) 
BASE_VERB:NAME:SyncErrorException void saveSyncErrorInfo(EntitySyncContext esc): save (V)  | sync (NM) error (NM) info (NI) 	++ :: [ entity (NM) sync (NM) context (N) - esc (N) ] :: sync (NM) error (NM) exception (N) 
CONSTRUCTOR:NAME:TimeLimitExceededException TimeLimitExceededException TimeLimitExceededException(String msg):  | time (NM) limit (NM) exceeded (NM) exception (N) 	++ :: [ string (NI) - msg (NI) ]
SPECIAL:NAME:VariableContextManager ExpandVariableContext getVariableContext(): get (V)  | variable (NM) context (N) 	++ :: expand (NM) variable (NM) context (N)  :: variable (NM) context (NM) manager (N) 
SPECIAL:NAME:CtsBmpHome Collection findAll(): find (V)  | all (DT) 	++ :: collection (N)  :: cts (NM) bmp (NM) home (N) 
SPECIAL:NAME:AgentTYPE byte getAgent_db_site(): get (V)  | agent (NM) db (NM) site (N) 	++ :: byte (N)  :: agent (NM) TYPE (N) 
SPECIAL:NAME:FixedAttribute void setSelect(Expression select): set (V)  | select (N) 	++ :: [ expression (N) - select (N) ] :: fixed (NM) attribute (N) 
SPECIAL:CLAS:LanguageOption void reset(): reset (V)  | language (NM) option (N) 	++
SPECIAL:NAME:QtProgressBar void setMin(int val): set (V)  | min (N) 	++ :: [ int (N) - val (NI) ] :: qt (NM) progress (NM) bar (N) 
CONSTRUCTOR:NAME:ActivityComparator ActivityComparator ActivityComparator():  | activity (NM) comparator (N) 	++
BASE_VERB:NAME:EncBmpBean void lookupLongEntry(): lookup (V)  | long (NM) entry (NI) 	++ :: enc (NM) bmp (NM) bean (NI) 
SPECIAL:CLAS:TaskCalculationTypeTest void testForID(): test (VI)  | task (NM) calculation (NM) type (NM) test (N) -- for (P) ID (NI) 	++
V_3P_IRR:NAME:Node boolean isTextureNode(): is (V)  | texture (NM) node (NI) 	++ :: boolean (N)  :: node (NI) 
SPECIAL:NAME:AttributeTableModel DXEntry getOldEntry(): get (V)  | old (NM) entry (NI) 	++ :: DX (NM) entry (NI)  :: attribute (NM) table (NM) model (NI) 
SPECIAL:NAME:KeyStore static String getDefaultType(): get (V)  | default (NM) type (N) 	++ :: string (NI)  :: key (NM) store (N) 
SPECIAL:NAME:AbstractStandardGlobalCatalogAccount String getContactBlockText(): get (V)  | contact (NM) block (NM) text (NI) 	++ :: string (NI)  :: abstract (NM) standard (NM) global (NM) catalog (NM) account (N) 
PREP:NAME:CTCPMessage String toString(): convert (V) | to (P) string (NI) 	++ :: CTCP (NM) message (NI)  :: string (NI) 
SPECIAL:CLAS:DefaultWarningEditBlock Object clone(): clone (V)  | default (NM) warning (NM) edit (NM) block (N) 	++ :: object (NI) 
SPECIAL:NAME:LoadunitResultsData String getName(): get (V)  | name (NI) 	++ :: string (NI)  :: loadunit (NM) results (NM) data (NI) 
SPECIAL:NAME:KeyCounterEJB void setIterationID(long value): set (V)  | iteration (NM) ID (NI) 	++ :: [ long (N) - value (NI) ] :: key (NM) counter (NM) EJB (N) 
SPECIAL:FORM:VnDocument void load(String thisFilePath): load (V)  | [ string (NI) - this (PR) file (NM) path (NI) ]	++ :: vn (NM) document (NI) 
SPECIAL:NAME:AmplifierServletRequest AmplifierServletSession getSession(): get (V)  | session (N) 	++ :: amplifier (NM) servlet (NM) session (N)  :: amplifier (NM) servlet (NM) request (N) 
EVENT_PARAM:NAME:DocumentChangeListener void changedUpdate(DocumentEvent e): handle (V) | changed (NM) update (N) 	++ :: [ document (NM) event (NI) - e (N) ] :: document (NM) change (NM) listener (N)  :: void (N) 
SPECIAL:NAME:entryPanel void setPanelBounds(int intPanelX, int intPanelY, int intPanelWidth, int intPanelHeight, int borderType): set (V)  | panel (NM) bounds (N) 	++ :: [ int (N) - int (NM) panel (NM) X (N) ] :: [ int (N) - int (NM) panel (NM) Y (N) ] :: [ int (N) - int (NM) panel (NM) width (N) ] :: [ int (N) - int (NM) panel (NM) height (N) ] :: [ int (N) - border (NM) type (N) ] :: entry (NM) panel (N) 
SPECIAL:NAME:ErrorData String getRequestURI(): get (V)  | request (NM) URI (NI) 	++ :: string (NI)  :: error (NM) data (NI) 
SPECIAL:NAME:PropertiesGenerator void addStringContent(Hashtable tree, String ref, String name): add (V)  | string (NM) content (N) 	++ :: [ hashtable (N) - tree (NI) ] :: [ string (NI) - ref (NI) ] :: [ string (NI) - name (NI) ] :: properties (NM) generator (N) 
BASE_VERB:NAME:RobotMessageManager void sendMessage(String name, Serializable o): send (V)  | message (NI) 	++ :: [ string (NI) - name (NI) ] :: [ serializable (N) - o (N) ] :: robot (NM) message (NM) manager (N) 
CONSTRUCTOR:NAME:CommandProcessor CommandProcessor CommandProcessor(Socket socket):  | command (NM) processor (N) 	++ :: [ socket (N) - socket (N) ]
BASE_VERB:NAME:Thesaurus void importThesaurus(InputStream inputstream, int format, Vector metadata): import (V)  | thesaurus (N) 	++ :: [ input (NM) stream (NI) - inputstream (N) ] :: [ int (N) - format (NI) ] :: [ vector (N) - metadata (N) ] :: thesaurus (N) 
SPECIAL:NAME:MySQAnalyzer JTextField getFileSizeField(): get (V)  | file (NM) size (NM) field (N) 	++ :: J (NM) text (NM) field (N)  :: my (PR) SQ (NM) analyzer (N) 
SPECIAL:NAME:ParserTokenManager void jjAddStates(int start, int end): jj (PRE) add (V)  | states (N) 	++ :: [ int (N) - start (N) ] :: [ int (N) - end (N) ] :: parser (NM) token (NM) manager (N) 
NOUN_PHRASE:NAME:HashMap int size(): get (V) | size (N) 	++ :: hash (NM) map (N)  :: int (N) 
CONSTRUCTOR:NAME:LocationMarkerCategory LocationMarkerCategory LocationMarkerCategory(String name, String id):  | location (NM) marker (NM) category (N) 	++ :: [ string (NI) - name (NI) ] :: [ string (NI) - id (NI) ]
SPECIAL:NAME:FBFirmenstamm void setZmDatVon(String s): set (V)  | zm (NM) dat (NM) von (N) 	++ :: [ string (NI) - s (N) ] :: FB (NM) firmenstamm (N) 
EVENT_PARAM:NAME:IvjEventHandler void propertyChange(PropertyChangeEvent evt): handle (V) | property (NM) change (N) 	++ :: [ property (NM) change (NM) event (NI) - evt (N) ] :: ivj (NM) event (NM) handler (N)  :: void (N) 
SPECIAL:NAME:AFP_Session int getSessionID(): get (V)  | session (NM) ID (NI) 	++ :: int (N)  :: AFP (NM) session (N) 
V_3P_IRR:NAME:NoAllocs boolean isSetEncodedAllocText(): is (V)  | set (NM) encoded (NM) alloc (NM) text (NI) 	++ :: boolean (N)  :: no (DT) allocs (N) 
BASE_VERB:NAME:ErrorListPane void prevError(): prev (V)  | error (N) 	++ :: error (NM) list (NM) pane (N) 
SPECIAL:NAME:ResourceTypeImpl String getInitials(): get (V)  | initials (N) 	++ :: string (NI)  :: resource (NM) type (NM) impl (NI) 
CONSTRUCTOR:NAME:WritePart WritePart WritePart(MethodName method, Annotation label):  | write (NM) part (N) 	++ :: [ method (NM) name (NI) - method (N) ] :: [ annotation (N) - label (NI) ]
SPECIAL:FORM:LetExpAstImpl void eSet(int featureID, Object newValue): e (PRE) set (V)  | [ int (N) - feature (NM) ID (NI) ]	++ :: [ object (NI) - new (NM) value (NI) ] :: let (NM) exp (NM) ast (NM) impl (NI) 
CONSTRUCTOR:NAME:NamedSnmpVar NamedSnmpVar NamedSnmpVar(String type, String alias, String oid):  | named (NM) snmp (NM) var (N) 	++ :: [ string (NI) - type (N) ] :: [ string (NI) - alias (N) ] :: [ string (NI) - oid (N) ]
SPECIAL:NAME:RTreeWrapper String getVersion(): get (V)  | version (N) 	++ :: string (NI)  :: R (NM) tree (NM) wrapper (NI) 
SPECIAL:NAME:CombinedDomainXYPlot void setFixedRangeAxisSpaceForSubplots(AxisSpace space): set (V)  | fixed (NM) range (NM) axis (NM) space (N) -- for (P) subplots (N) 	++ :: [ axis (NM) space (N) - space (N) ] :: combined (NM) domain (NM) XY (NM) plot (N) 
SPECIAL:NAME:WizardModelSynchronizeWithDB IWizardPage getNextPage(IWizardPage page): get (V)  | EQUIV[next (DT) page (N) , [ I (NM) wizard (NM) page (N) - page (N) ]]	++ :: I (NM) wizard (NM) page (N)  :: wizard (NM) model (NM) synchronize (NM) with (NM) DB (N) 
BASE_VERB:NAME:JDOQLParser void andExpression(): and (V)  | expression (N) 	++ :: JDOQL (NM) parser (N) 
NOUN_PHRASE:NAME:LiteratureItemList int size(): get (V) | size (N) 	++ :: literature (NM) item (NM) list (N)  :: int (N) 
BASE_VERB:FORM:FDGlassPane void highlight(BeanLink bl, Color c, Graphics2D g): highlight (V)  | [ bean (NM) link (N) - bl (N) ]	++ :: [ color (N) - c (N) ] :: [ graphics (NM) 2 (NM) D (N) - g (N) ] :: FD (NM) glass (NM) pane (N) 
CONSTRUCTOR:NAME:JobAttributes JobAttributes JobAttributes(int copies, DefaultSelectionType selection, DestinationType destination, DialogType dialog, String filename, int max, int min, MultipleDocumentHandlingType multiple, int pageRanges, String printer, SidesType sides):  | job (NM) attributes (N) 	++ :: [ int (N) - copies (N) ] :: [ default (NM) selection (NM) type (N) - selection (N) ] :: [ destination (NM) type (N) - destination (N) ] :: [ dialog (NM) type (N) - dialog (N) ] :: [ string (NI) - filename (N) ] :: [ int (N) - max (N) ] :: [ int (N) - min (N) ] :: [ multiple (NM) document (NM) handling (NM) type (N) - multiple (N) ] :: [ int (N) - page (NM) ranges (N) ] :: [ string (NI) - printer (N) ] :: [ sides (NM) type (N) - sides (N) ]
SPECIAL:FORM:OSFarm String set(String values, String attribute): set (V)  | [ string (NI) - values (N) ]	++ :: [ string (NI) - attribute (N) ] :: OS (NM) farm (N)  :: string (NI) 
V_3P_IRR:NAME:ExeSyntheticTableColumn boolean isEditable(): is (V)  | editable (N) 	++ :: boolean (N)  :: exe (NM) synthetic (NM) table (NM) column (N) 
SPECIAL:NAME:ModelStatus String getModelType(): get (V)  | model (NM) type (N) 	++ :: string (NI)  :: model (NM) status (N) 
BASE_VERB:NAME:EngineSpecificationImporter NetGraphModel convertEngineNet(YSpecification engineSpecification, YNet engineNet): convert (V)  | EQUIV[engine (NM) net (N) , [ Y (NM) net (N) - engine (NM) net (N) ]]	++ :: [ Y (NM) specification (N) - engine (NM) specification (N) ] :: net (NM) graph (NM) model (NI)  :: engine (NM) specification (NM) importer (N) 
SPECIAL:FORM:void add(Object o): add (V)  | [ object (NI) - o (N) ]	++ :: ANONYMOUS (N) 
SPECIAL:NAME:WebAppConfiguration Collection getServlets(): get (V)  | servlets (N) 	++ :: collection (N)  :: web (NM) app (NM) configuration (NI) 
SPECIAL:NAME:Arc void setC2(String c2): set (V)  | C (N) 2 (D) 	++ :: [ string (NI) - c (NM) 2 (N) ] :: arc (N) 
SPECIAL:NAME:CmdlineGenericConsumer void initializeArgs(): initialize (V)  | args (N) 	++ :: cmdline (NM) generic (NM) consumer (N) 
CONSTRUCTOR:NAME:LongUDPMessage LongUDPMessage LongUDPMessage(byte data):  | long (NM) UDP (NM) message (NI) 	++ :: [ byte (N) - data (NI) ]
NOUN_PHRASE:NAME:CompilerAnnotationTest2 String name2(): get (V) | name (NI) 2 (D) 	++ :: compiler (NM) annotation (NM) test (NM) 2 (N)  :: string (NI) 
PREP:NAME:DeliberateGoalActivationAction String toString(): convert (V) | to (P) string (NI) 	++ :: deliberate (NM) goal (NM) activation (NM) action (N)  :: string (NI) 
ENDS_WITH_ED:NAME:OptionsDialog void chkSpeed_actionPerformed(ActionEvent e): handle (V) | chk (NM) speed (NM) action (NM) performed (N) 	++ :: [ action (NM) event (NI) - e (N) ] :: options (NM) dialog (N)  :: void (N) 
BASE_VERB:FORM:SuDokuUtils static byte parse(String s): parse (V)  | [ string (NI) - s (N) ]	++ :: su (NM) doku (NM) utils (N)  :: byte (N) 
BASE_VERB:NAME:PaperTrade static void sellTrades(Environment environment, EODQuoteBundle quoteBundle, Variables variables, Expression sell, Expression buy, int dateOffset, Money tradeCost, List symbols, OrderCache orderCache): sell (V)  | trades (N) 	++ :: [ environment (N) - environment (N) ] :: [ EOD (NM) quote (NM) bundle (N) - quote (NM) bundle (N) ] :: [ variables (N) - variables (N) ] :: [ expression (N) - sell (N) ] :: [ expression (N) - buy (N) ] :: [ int (N) - date (NM) offset (N) ] :: [ money (N) - trade (NM) cost (N) ] :: [ list (N) - symbols (N) ] :: [ order (NM) cache (N) - order (NM) cache (N) ] :: paper (NM) trade (N) 
ENDS_WITH_ED:NAME:void actionPerformed(ActionEvent evt): handle (V) | action (NM) performed (N) 	++ :: [ action (NM) event (NI) - evt (N) ] :: ANONYMOUS (N)  :: void (N) 
SPECIAL:NAME:HistoryFilter void removeStateChangeListener(StateChangeListener listener): remove (V)  | EQUIV[state (NM) change (NM) listener (N) , [ state (NM) change (NM) listener (N) - listener (N) ]]	++ :: history (NM) filter (N) 
BASE_VERB:NAME:PlayerView void hideHand(): hide (V)  | hand (N) 	++ :: player (NM) view (NI) 
SPECIAL:NAME:InputStream getInputStream(): get (V)  | input (NM) stream (NI) 	++ :: input (NM) stream (NI)  :: ANONYMOUS (N) 
BASE_VERB:FORM:Point2D static double distance(double X1, double Y1, double X2, double Y2): distance (V)  | [ double (N) - X (NM) 1 (N) ]	++ :: [ double (N) - Y (NM) 1 (N) ] :: [ double (N) - X (NM) 2 (N) ] :: [ double (N) - Y (NM) 2 (N) ] :: point (NM) 2 (NM) D (N)  :: double (N) 
SPECIAL:NAME:TGraphBank String getOriginalImageName(): get (V)  | original (NM) image (NM) name (NI) 	++ :: string (NI)  :: T (NM) graph (NM) bank (N) 
SPECIAL:NAME:LazyProxyTest void testAccessIdFieldAfterContextIsNotActive(): test (VI)  | access (NM) id (NM) field (N) -- after (P) context (NM) is (NM) not (DT) active (N) 	++ :: lazy (NM) proxy (NM) test (N) 
SPECIAL:NAME:DOMElementImpl Attr removeAttributeNode(Attr oldAttr): remove (V)  | attribute (NM) node (NI) 	++ :: [ attr (N) - old (NM) attr (N) ] :: attr (N)  :: DOM (NM) element (NM) impl (NI) 
SPECIAL:NAME:GridBagLayout void setParameter(String name, String value): set (V)  | parameter (N) 	++ :: [ string (NI) - name (NI) ] :: [ string (NI) - value (NI) ] :: grid (NM) bag (NM) layout (N) 
V_3P_IRR:NAME:MUOM boolean isWeek(): is (V)  | week (N) 	++ :: boolean (N)  :: MUOM (N) 
V_3PS:FORM:Timestamp boolean equals(Object obj): equals (V)  | [ object (NI) - obj (NI) ]	++ :: timestamp (N)  :: boolean (N) 
CONSTRUCTOR:NAME:XmlElementEnclosedExpressionImpl XmlElementEnclosedExpressionImpl XmlElementEnclosedExpressionImpl(Instruction parent):  | xml (NM) element (NM) enclosed (NM) expression (NM) impl (NI) 	++ :: [ instruction (N) - parent (N) ]
SPECIAL:NAME:GraphResults String getRelativeTime(): get (V)  | relative (NM) time (N) 	++ :: string (NI)  :: graph (NM) results (N) 
SPECIAL:NAME:MrpRunBase void setStartDate(Date _startDate): set (V)  | start (NM) date (N) 	++ :: [ date (N) - start (NM) date (N) ] :: mrp (NM) run (NM) base (N) 
SPECIAL:CLAS:RemoveFromUnlearnedTest void testRemoveFromUnlearned(): test (VI) remove (V)  | remove (NM) from (NM) unlearned (NM) test (N) -- from (P) unlearned (N) 	++
NOUN_PHRASE:NAME:NoteMixer boolean nextMix(byte b): get (V) | next (DT) mix (N) 	++ :: [ byte (N) - b (N) ] :: note (NM) mixer (N)  :: boolean (N) 
BASE_VERB:NAME:SubList int retIndex(int index): ret (V)  | EQUIV[index (NI) , [ int (N) - index (NI) ]]	++ :: int (N)  :: sub (NM) list (N) 
CONSTRUCTOR:NAME:TreeSet TreeSet TreeSet():  | tree (NM) set (N) 	++
CONSTRUCTOR:NAME:ComputeResourceParameterException ComputeResourceParameterException ComputeResourceParameterException(String arg0, Throwable arg1):  | compute (NM) resource (NM) parameter (NM) exception (N) 	++ :: [ string (NI) - arg (NM) 0 (N) ] :: [ throwable (N) - arg (NM) 1 (N) ]
SPECIAL:NAME:JFileChooser String getApproveButtonText(): get (V)  | approve (NM) button (NM) text (NI) 	++ :: string (NI)  :: J (NM) file (NM) chooser (N) 
SPECIAL:CLAS:Background Object clone(): clone (V)  | background (N) 	++ :: object (NI) 
