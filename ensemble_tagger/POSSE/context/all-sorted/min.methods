../3-Phrases/Base_Verb:MinCardinalityRestriction convertToMinCardinalityRestriction(int cardinality) | convert to min cardinality restriction
../3-Phrases/Base_Verb:boolean support(int major, int minor) | support
../3-Phrases/Base_Verb:void init(float minX, float minY) | init
../3-Phrases/Base_Verb:void setMinutesText(String minutesText) | set minutes text
../3-Phrases/Base_Verb:void setupMinefield() | setup minefield
../3-Phrases/Base_Verb:ICarteReel carteValeurMin() | carte valeur min
../3-Phrases/Base_Verb:get minimum size()
../3-Phrases/Base_Verb:double getXMin() | get x min
../3-Phrases/Base_Verb:void setAltaMinuto(String altaMinuto) | set alta minuto
../3-Phrases/Base_Verb:void ArrNumMinute() | arr num minute
../3-Phrases/Base_Verb:Dimension getMinimumSize(JComponent c) | get minimum size
../3-Phrases/Base_Verb:void updateMin(Point a_value) | update min
../3-Phrases/Base_Verb:double getMinimum(double values) | get minimum
../3-Phrases/Base_Verb:void addMediaInfoObject(MediaInfoObject minfo) | add media info object
../3-Phrases/Base_Verb:void setMinuteNullable(boolean minuteNullable) | set minute nullable
../3-Phrases/Base_Verb:void setCouponMint(CouponBank couponMint) | set coupon mint
../3-Phrases/Base_Verb:static Minefield createThunderActiveMF(Coords coords, int playerId, int damage) | minefield create thunder active mf
../3-Phrases/Base_Verb:void setMinefieldType(EntityType pMinefieldType) | set minefield type
../3-Phrases/Base_Verb:Object getMinimum() | get minimum
../3-Phrases/Base_Verb:void setMinSize(int size) | set min size
../3-Phrases/Base_Verb:Object getMinVisVarValue() | get min vis var value
../3-Phrases/Base_Verb:float getMinAvailability() | get min availability
../3-Phrases/Base_Verb:PyInteger getMin() | get min
../3-Phrases/Base_Verb:void setMin(int val) | set min
../3-Phrases/Base_Verb:void setRangeMin(long min) | set range min
../3-Phrases/Base_Verb:int getLegalMinimumAgeLimit() | get legal minimum age limit
../3-Phrases/Base_Verb:void setMinValue(double minValue) | set min value
../3-Phrases/Base_Verb:ShoppingCoupon addCoupon(long plid, String code, boolean autoCode, String name, String description, int startDateMonth, int startDateDay, int startDateYear, int startDateHour, int startDateMinute, int endDateMonth, int endDateDay, int endDateYear, int endDateHour, int endDateMinute, boolean neverExpire, boolean active, String limitCategories, String limitSkus, double minOrder, double discount, String discountType) | add coupon
../3-Phrases/Base_Verb:void setMin(int aMin) | set min
../3-Phrases/Base_Verb:int getMinutes() | get minutes
../3-Phrases/Base_Verb:static TemplateDataEditor editTemplateDataEditor(Composite parent, IFunctionBuilder builder, int minInput, int maxInput, int minOutput, int maxOutput, String info) | template data editor edit template data editor
../3-Phrases/Base_Verb:Dimension getMinimumSize() | get minimum size
../3-Phrases/Base_Verb:UnaryMinus getUnaryMinus1() | get unary minus 1
../3-Phrases/Base_Verb:Dimension getMinimumSize() | get minimum size
../3-Phrases/Base_Verb:Command getMinimizeFocusedThemeCommand() | get minimize focused theme command
../3-Phrases/Base_Verb:static long nonUniformRandom(long type, long x, long min, long max) | long non uniform random
../3-Phrases/Dguitar:Dimension getMinimumSize() | get minimum size
../3-Phrases/Dguitar:java.awt.Dimension getMinimumSize() | get minimum size
../3-Phrases/Dguitar:void setMinPieceSpacing(Z) | set min piece spacing
../3-Phrases/Dguitar:boolean getMinPieceSpacing() | get min piece spacing
../3-Phrases/Dguitar:GP4Duration minDurationOfMeasure(I) | min duration of measure
../3-Phrases/Dguitar:void setMinDuration(QGP4Duration;I) | set min duration
../3-Phrases/Dguitar:void setMinWidth(II) | set min width
../3-Phrases/Dguitar:Dimension getMinimumSize() | get minimum size
../3-Phrases/Dguitar:JPanel createMiniPanel(QComponent;Qjava.awt.Component;) | create mini panel
../3-Phrases/Dguitar:Dimension getMinimumSize() | get minimum size
../3-Phrases/Dguitar:void menuMinPieceActionPerformed(Qjava.awt.event.ActionEvent;) | menu min piece action performed
../3-Phrases/Dguitar:Dimension getMinimumSize() | get minimum size
../3-Phrases/Dguitar:GP4Duration minDurationOfBeats() | min duration of beats
../3-Phrases/Dguitar:void setMinDuration(QGP4Duration;) | set min duration
../3-Phrases/Dguitar:void setMinWidth(I) | set min width
../3-Phrases/Dguitar:JPanel createMiniPanel(QComponent;Qjava.awt.Component;) | create mini panel
../3-Phrases/Dguitar:JPanel createMiniPanel(QComponent;Qjava.awt.Component;) | create mini panel
../3-Phrases/DrawSWF:Dimension getMinimumSize() | get minimum size
../3-Phrases/DrawSWF:double getMinX() | get min x
../3-Phrases/DrawSWF:double getMinY() | get min y
../3-Phrases/DrawSWF:void setMinX(D) | set min x
../3-Phrases/DrawSWF:void setMinY(D) | set min y
../3-Phrases/DrawSWF:int getMinX() | get min x
../3-Phrases/DrawSWF:int getMinY() | get min y
../3-Phrases/DrawSWF:void setMinX(I) | set min x
../3-Phrases/DrawSWF:void setMinY(I) | set min y
../3-Phrases/DrawSWF:int getMinX() | get min x
../3-Phrases/DrawSWF:int getMinY() | get min y
../3-Phrases/DrawSWF:int getMinTileX() | get min tile x
../3-Phrases/DrawSWF:int getMinTileY() | get min tile y
../3-Phrases/DrawSWF:int getMinX() | get min x
../3-Phrases/DrawSWF:int getMinY() | get min y
../3-Phrases/DrawSWF:int getMinTileX() | get min tile x
../3-Phrases/DrawSWF:int getMinTileY() | get min tile y
../3-Phrases/drjava2:int getMinimum() | get minimum
../3-Phrases/drjava2:void setMinimum(I) | set minimum
../3-Phrases/drjava2:Dimension getMinimumSize() | get minimum size
../3-Phrases/drjava2:int getMinimum() | get minimum
../3-Phrases/drjava2:void setMinimum(I) | set minimum
../3-Phrases/drjava2:int getMinProgress() | get min progress
../3-Phrases/freecol2:Dimension getMinimumSize() | get minimum size
../3-Phrases/freecol2:CONS MiniMapChangeBackgroundAction(QFreeColClient;) | mini map change background action
../3-Phrases/freecol2:CONS MiniMapZoomInAction(QFreeColClient;) | mini map zoom in action
../3-Phrases/freecol2:CONS MiniMapZoomOutAction(QFreeColClient;) | mini map zoom out action
../3-Phrases/freecol2:Dimension getMinimumSize() | get minimum size
../3-Phrases/freecol2:Dimension getMinimumSize() | get minimum size
../3-Phrases/freecol2:Dimension getMinimumSize() | get minimum size
../3-Phrases/freecol2:Dimension getMinimumSize() | get minimum size
../3-Phrases/freecol2:Dimension getMinimumSize() | get minimum size
../3-Phrases/freecol2:Dimension getMinimumSize() | get minimum size
../3-Phrases/freecol2:Dimension getMinimumSize() | get minimum size
../3-Phrases/freecol2:Dimension getMinimumSize() | get minimum size
../3-Phrases/freecol2:CONS MiniMap(QFreeColClient;) | mini map
../3-Phrases/freecol2:Dimension getMinimumSize() | get minimum size
../3-Phrases/freecol2:Dimension getMinimumSize() | get minimum size
../3-Phrases/freecol2:Dimension getMinimumSize() | get minimum size
../3-Phrases/freecol2:int findMinimumIndex(QBuildingType;) | find minimum index
../3-Phrases/freecol2:int findMinimumIndex(QUnitType;) | find minimum index
../3-Phrases/freecol2:int findMinimumIndex(QBuildableType;) | find minimum index
../3-Phrases/freecol2:int getMinimumScore() | get minimum score
../3-Phrases/freecol2:Color getMinimapColor() | get minimap color
../3-Phrases/freecol2:int getMinimumValue() | get minimum value
../3-Phrases/freemind:CONS ImportMindmanagerFiles() | import mind manager files
../3-Phrases/freemind:void importMindmanagerFile(QFile;) | import mind manager file
../3-Phrases/freemind:int getMinDepth(QMindMapNode;) | get min depth
../3-Phrases/freemind:boolean checkEqualAndMinimumSize() | check equal and minimum size
../3-Phrases/freemind:CONS FreeMindToolBar() | free mind tool bar
../3-Phrases/freemind:CONS FreeMindToolBar(I) | free mind tool bar
../3-Phrases/freemind:CONS FreeMindToolBar(QString;) | free mind tool bar
../3-Phrases/freemind:CONS FreeMindToolBar(QString;I) | free mind tool bar
../3-Phrases/freemind:CONS MindMapNodesSelection(QString;QString;QString;QString;QString;QList;) | mind map nodes selection
../3-Phrases/freemind:MenuBar getFreeMindMenuBar() | get free mind menu bar
../3-Phrases/freemind:CONS FreeMindSplash(QFreeMindMain;) | free mind splash
../3-Phrases/freemind:CONS FreeMindApplet() | free mind applet
../3-Phrases/freemind:MenuBar getFreeMindMenuBar() | get free mind menu bar
../3-Phrases/freemind:CONS FreeMind() | free mind
../3-Phrases/freemind:MenuBar getFreeMindMenuBar() | get free mind menu bar
../3-Phrases/freemind:CONS MindIcon(QString;) | mind icon
../3-Phrases/freemind:CONS MindMapArrowLinkModel(QMindMapNode;QMindMapNode;QFreeMindMain;) | mind map arrow link model
../3-Phrases/freemind:CONS MindMapXMLElement(QFreeMindMain;) | mind map xml element
../3-Phrases/freemind:CONS MindMapXMLElement(QFreeMindMain;QVector;QHashMap;) | mind map xml element
../3-Phrases/freemind:CONS MindMapEdgeModel(QMindMapNode;QFreeMindMain;) | mind map edge model
../3-Phrases/freemind:CONS MindMapToolBar(QMindMapController;) | mind map tool bar
../3-Phrases/freemind:CONS MindMapController(QMode;) | mind map controller
../3-Phrases/freemind:MindMapMapModel getMindMapMapModel() | get mind map map model
../3-Phrases/freemind:CONS EncryptedMindMapNode(QObject;QFreeMindMain;) | encrypted mind map node
../3-Phrases/freemind:CONS MindMapMapModel(QFreeMindMain;) | mind map map model
../3-Phrases/freemind:CONS MindMapMapModel(QMindMapNodeModel;QFreeMindMain;) | mind map map model
../3-Phrases/freemind:CONS MindMapPopupMenu(QMindMapController;) | mind map popup menu
../3-Phrases/freemind:CONS MindMapNodeModel(QFreeMindMain;) | mind map node model
../3-Phrases/freemind:CONS MindMapNodeModel(QObject;QFreeMindMain;) | mind map node model
../3-Phrases/freemind:CONS MindMapMode() | mind map mode
../3-Phrases/freemind:MindMapController getMindMapController() | get mind map controller
../3-Phrases/freemind:CONS MindMapCloudModel(QMindMapNode;QFreeMindMain;) | mind map cloud model
../3-Phrases/freemind:void checkConnectionToFreeMindMain() | check connection to free mind main
../3-Phrases/freemind:MindMapLayout getMindMapLayout() | get mind map layout
../3-Phrases/freemind:CONS MindMapLayout(QMapView;) | mind map layout
../3-Phrases/freemind:Dimension minimumLayoutSize(QContainer;) | minimum layout size
../3-Phrases/freemind:void FreeMindJabberMessageListener(QMapSharingController;) | free mind jabber message listener
../3-Phrases/freemind:MindMapNode getMindMapNode(I) | get mind map node
../3-Phrases/gantt:int getLockDAVMinutes() | get lock dav minutes
../3-Phrases/gantt:void setLockDAVMinutes(I) | set lock dav minutes
../3-Phrases/gantt:int getMinX() | get min x
../3-Phrases/gantt:int getMinY() | get min y
../3-Phrases/gantt:int getMinTileX() | get min tile x
../3-Phrases/gantt:int getMinTileY() | get min tile y
../3-Phrases/gantt:void setLockDAVMinutes(I) | set lock dav minutes
../3-Phrases/gantt:int getLockDAVMinutes() | get lock dav minutes
../3-Phrases/gantt:Dimension getMinimumSize() | get minimum size
../3-Phrases/gantt:Dimension getMinimumSize() | get minimum size
../3-Phrases/gantt:void testDayContains1440Minutes() | test day contains 1440 minutes
../3-Phrases/hibernate-3.3.1.GA:boolean isMinimalPutsEnabledByDefault() | is minimal puts enabled by default
../3-Phrases/hibernate-3.3.1.GA:boolean isMinimalPutsEnabledByDefault() | is minimal puts enabled by default
../3-Phrases/hibernate-3.3.1.GA:boolean isMinimalPutsEnabledByDefault() | is minimal puts enabled by default
../3-Phrases/hibernate-3.3.1.GA:boolean isMinimalPutsEnabledByDefault() | is minimal puts enabled by default
../3-Phrases/hibernate-3.3.1.GA:boolean isMinimalPutsEnabledByDefault() | is minimal puts enabled by default
../3-Phrases/hibernate-3.3.1.GA:boolean isMinimalPutsEnabledByDefault() | is minimal puts enabled by default
../3-Phrases/hibernate-3.3.1.GA:boolean isMinimalPutsEnabled() | is minimal puts enabled
../3-Phrases/hibernate-3.3.1.GA:void setMinimalPutsEnabled(Z) | set minimal puts enabled
../3-Phrases/hibernate-3.3.1.GA:AggregateProjection min(QString;) | min
../3-Phrases/hibernate-3.3.1.GA:AggregateProjection min() | min
../3-Phrases/hibernate-3.3.1.GA:boolean useMinimalPuts(QSessionImplementor;QEntityEntry;) | use minimal puts
../3-Phrases/hibernate-3.3.1.GA:SQLExceptionConverter buildMinimalSQLExceptionConverter() | build minimal sql exception converter
../3-Phrases/hibernate-3.3.1.GA:long getExecutionMinTime() | get execution min time
../3-Phrases/hibernate-3.3.1.GA:String getMinimalPutsEnabled() | get minimal puts enabled
../3-Phrases/hibernate-3.3.1.GA:void setMinimalPutsEnabled(QString;) | set minimal puts enabled
../3-Phrases/hsqldb:Integer getMinScale() | get min scale
../3-Phrases/hsqldb:Integer getMinScaleAct() | get min scale act
../3-Phrases/hsqldb:Integer minute(QTime;) | minute
../3-Phrases/hsqldb:int getDatabaseMinorVersion() | get database minor version
../3-Phrases/hsqldb:int getMinorVersion() | get minor version
../3-Phrases/hsqldb:int getDriverMinorVersion() | get driver minor version
../3-Phrases/hsqldb:boolean supportsMinimumSQLGrammar() | supports minimum sql grammar
../3-Phrases/hsqldb:int getDatabaseMinorVersion() | get database minor version
../3-Phrases/hsqldb:int getJDBCMinorVersion() | get jdbc minor version
../3-Phrases/hsqldb:void setMinimumSize(QDimension;) | set minimum size
../3-Phrases/hsqldb:Dimension getMinimumSize() | get minimum size
../3-Phrases/hsqldb:Dimension minimumSize() | minimum size
../3-Phrases/hsqldb:void setMinimumSize(QDimension;) | set minimum size
../3-Phrases/hsqldb:Dimension getMinimumSize() | get minimum size
../3-Phrases/hsqldb:Dimension minimumSize() | minimum size
../3-Phrases/iReport:int getMinHeightToStartNewPage() | get min height to start new page
../3-Phrases/iReport:void setMinHeightToStartNewPage(I) | set min height to start new page
../3-Phrases/iReport:void onMaximizeMinimize() | on maximize minimize
../3-Phrases/iReport:double getMinValue() | get min value
../3-Phrases/iReport:void setMinValue(D) | set min value
../3-Phrases/iReport:void jMenuItemSameHeightMinActionPerformed(Qjava.awt.event.ActionEvent;) | j menu item same height min action performed
../3-Phrases/iReport:void jMenuItemSameWidthMinActionPerformed(Qjava.awt.event.ActionEvent;) | j menu item same width min action performed
../3-Phrases/iReport:java.awt.Dimension getMinimumSize() | get minimum size
../3-Phrases/iReport:void jButtonFormatSameHeightMinActionPerformed(Qjava.awt.event.ActionEvent;) | j button format same height min action performed
../3-Phrases/iReport:void jButtonFormatSameWidthMinActionPerformed(Qjava.awt.event.ActionEvent;) | j button format same width min action performed
../3-Phrases/iReport:int getTransformationMinSize() | get transformation min size
../3-Phrases/iReport:void setTransformationMinSize(I) | set transformation min size
../3-Phrases/iReport:int getMinHeightStartNewPage() | get min height start new page
../3-Phrases/iReport:void setMinHeightStartNewPage(I) | set min height start new page
../3-Phrases/iReport:int getMinHeightStartNewPage() | get min height start new page
../3-Phrases/iReport:void setMinHeightStartNewPage(I) | set min height start new page
../3-Phrases/iReport:Dimension getMinimumSize() | get minimum size
../3-Phrases/iReport:Dimension minimumLayoutSize(QContainer;) | minimum layout size
../3-Phrases/Jabref:Dimension getMinimumSize() | get minimum size
../3-Phrases/Jabref:int getMinimumIntegerDigits() | get minimum integer digits
../3-Phrases/Jabref:boolean stringMinLength(QString;) | string min length
../3-Phrases/Jabref:Dimension getMinimumSize(QJComponent;) | get minimum size
../3-Phrases/Jabref:int getJabrefMinorVersion() | get jabref minor version
../3-Phrases/Jabref:void setJabrefMinorVersion(I) | set jabref minor version
../3-Phrases/Jabref:void setMajorMinorVersions() | set major minor versions
../3-Phrases/jajuk:Dimension getMinimumSize() | get minimum size
../3-Phrases/jbidwatcher:Currency getMinBid() | get min bid
../3-Phrases/jbidwatcher:Currency getMinimumBidIncrement(QCurrency;I) | get minimum bid increment
../3-Phrases/jbidwatcher:Currency getMinimumBidIncrement(QCurrency;I) | get minimum bid increment
../3-Phrases/jbidwatcher:Currency getMinBid() | get min bid
../3-Phrases/JHotDraw-7.0.8:CONS MinimizeAction(QApplication;) | minimize action
../3-Phrases/JHotDraw-7.0.8:Dimension minimumLayoutSize(QContainer;) | minimum layout size
../3-Phrases/JRobin:double getMinValue() | get min value
../3-Phrases/JRobin:void setDsMinValue(QString;QString;DZ) | set ds min value
../3-Phrases/JRobin:void setDsMinMaxValue(QString;QString;DDZ) | set ds min max value
../3-Phrases/JRobin:double getMinValue(I) | get min value
../3-Phrases/JRobin:double getMinValue() | get min value
../3-Phrases/JRobin:void setMinValue(DZ) | set min value
../3-Phrases/JRobin:void setMinMaxValue(DDZ) | set min max value
../3-Phrases/JRobin:double getMinValue(I) | get min value
../3-Phrases/JRobin:double min(DD) | min
../3-Phrases/JRobin:double getMin(QString;QString;) | get min
../3-Phrases/JRobin:double getMinValue(I) | get min value
../3-Phrases/JRobin:int getMinimumHeartbeat() | get minimum heartbeat
../3-Phrases/JRobin:double getMinimum() | get minimum
../3-Phrases/JRobin:int getMinGridTimeUnit() | get min grid time unit
../3-Phrases/JRobin:int getMinGridUnitSteps() | get min grid unit steps
../3-Phrases/JRobin:int getMinX() | get min x
../3-Phrases/JRobin:int getMinY() | get min y
../3-Phrases/JRobin:void setMinorGridColor(QColor;) | set minor grid color
../3-Phrases/JRobin:void setMinorGridX(Z) | set minor grid x
../3-Phrases/JRobin:void setMinorGridY(Z) | set minor grid y
../3-Phrases/JRobin:Color getMinorGridColor() | get minor grid color
../3-Phrases/JRobin:boolean showMinorGridX() | show minor grid x
../3-Phrases/JRobin:boolean showMinorGridY() | show minor grid y
../3-Phrases/MegaMek-0.32.0:void sendDeployMinefields(QVector;) | send deploy minefields
../3-Phrases/MegaMek-0.32.0:void receiveDeployMinefields(QPacket;) | receive deploy minefields
../3-Phrases/MegaMek-0.32.0:void receiveSendingMinefields(QPacket;) | receive sending minefields
../3-Phrases/MegaMek-0.32.0:void receiveRevealMinefield(QPacket;) | receive reveal minefield
../3-Phrases/MegaMek-0.32.0:void receiveRemoveMinefield(QPacket;) | receive remove minefield
../3-Phrases/MegaMek-0.32.0:Vector calculateMinefieldDeployment() | calculate minefield deployment
../3-Phrases/MegaMek-0.32.0:void deployMinefields(QVector;II) | deploy minefields
../3-Phrases/MegaMek-0.32.0:Vector calculateMinefieldDeployment() | calculate minefield deployment
../3-Phrases/MegaMek-0.32.0:double getMinDamage(QCEntity;) | get min damage
../3-Phrases/MegaMek-0.32.0:void drawMinefields() | draw minefields
../3-Phrases/MegaMek-0.32.0:CONS MineLayingDialog(QFrame;QEntity;) | mine laying dialog
../3-Phrases/MegaMek-0.32.0:int getMine() | get mine
../3-Phrases/MegaMek-0.32.0:String getMinimapColours() | get minimap colours
../3-Phrases/MegaMek-0.32.0:boolean getMinimapEnabled() | get minimap enabled
../3-Phrases/MegaMek-0.32.0:int getMinimapPosX() | get minimap pos x
../3-Phrases/MegaMek-0.32.0:int getMinimapPosY() | get minimap pos y
../3-Phrases/MegaMek-0.32.0:int getMinimapZoom() | get minimap zoom
../3-Phrases/MegaMek-0.32.0:int getMinimumSizeHeight() | get minimum size height
../3-Phrases/MegaMek-0.32.0:int getMinimumSizeWidth() | get minimum size width
../3-Phrases/MegaMek-0.32.0:int getMiniReportPosX() | get mini report pos x
../3-Phrases/MegaMek-0.32.0:int getMiniReportPosY() | get mini report pos y
../3-Phrases/MegaMek-0.32.0:int getMiniReportSizeHeight() | get mini report size height
../3-Phrases/MegaMek-0.32.0:int getMiniReportSizeWidth() | get mini report size width
../3-Phrases/MegaMek-0.32.0:void setMinimapEnabled(Z) | set minimap enabled
../3-Phrases/MegaMek-0.32.0:void setMinimapPosX(I) | set minimap pos x
../3-Phrases/MegaMek-0.32.0:void setMinimapPosY(I) | set minimap pos y
../3-Phrases/MegaMek-0.32.0:void setMinimapZoom(I) | set minimap zoom
../3-Phrases/MegaMek-0.32.0:void setMiniReportPosX(I) | set mini report pos x
../3-Phrases/MegaMek-0.32.0:void setMiniReportPosY(I) | set mini report pos y
../3-Phrases/MegaMek-0.32.0:void setMiniReportSizeHeight(I) | set mini report size height
../3-Phrases/MegaMek-0.32.0:void setMiniReportSizeWidth(I) | set mini report size width
../3-Phrases/MegaMek-0.32.0:int chooseMineToLay() | choose mine to lay
../3-Phrases/MegaMek-0.32.0:void setLayMineEnabled(Z) | set lay mine enabled
../3-Phrases/MegaMek-0.32.0:void setMoveLayMineEnabled(Z) | set move lay mine enabled
../3-Phrases/MegaMek-0.32.0:CONS MiniMap(QDialog;QIGame;QBoardView1;) | mini map
../3-Phrases/MegaMek-0.32.0:CONS MiniMap(QDialog;QClientGUI;QBoardView1;) | mini map
../3-Phrases/MegaMek-0.32.0:CONS DeployMinefieldDisplay(QClientGUI;) | deploy minefield display
../3-Phrases/MegaMek-0.32.0:void deployMinefield(QCoords;) | deploy minefield
../3-Phrases/MegaMek-0.32.0:Image getMinefieldSign() | get minefield sign
../3-Phrases/MegaMek-0.32.0:void setupMines() | setup mines
../3-Phrases/MegaMek-0.32.0:void MineChoicePanel(QMounted;) | mine choice panel
../3-Phrases/MegaMek-0.32.0:void disableMineSetting() | disable mine setting
../3-Phrases/MegaMek-0.32.0:void setupMinefield() | setup minefield
../3-Phrases/MegaMek-0.32.0:void enableMinefields(Z) | enable minefields
../3-Phrases/MegaMek-0.32.0:void refreshMinefield() | refresh minefield
../3-Phrases/MegaMek-0.32.0:void updateMinefield() | update minefield
../3-Phrases/MegaMek-0.32.0:CONS MiniReportDisplay(QFrame;QString;) | mini report display
../3-Phrases/MegaMek-0.32.0:Dimension getMinimumSize() | get minimum size
../3-Phrases/MegaMek-0.32.0:Dimension getMinimumSize() | get minimum size
../3-Phrases/MegaMek-0.32.0:void setupMinefield() | setup minefield
../3-Phrases/MegaMek-0.32.0:void enableMinefields(Z) | enable minefields
../3-Phrases/MegaMek-0.32.0:void refreshMinefield() | refresh minefield
../3-Phrases/MegaMek-0.32.0:void updateMinefield() | update minefield
../3-Phrases/MegaMek-0.32.0:void setMoveLayMineEnabled(Z) | set move lay mine enabled
../3-Phrases/MegaMek-0.32.0:CONS MineLayingDialog(QJFrame;QEntity;) | mine laying dialog
../3-Phrases/MegaMek-0.32.0:int getMine() | get mine
../3-Phrases/MegaMek-0.32.0:void drawMinefields() | draw minefields
../3-Phrases/MegaMek-0.32.0:CONS MiniReportDisplay(QJFrame;QString;) | mini report display
../3-Phrases/MegaMek-0.32.0:Image getMinefieldSign() | get minefield sign
../3-Phrases/MegaMek-0.32.0:int chooseMineToLay() | choose mine to lay
../3-Phrases/MegaMek-0.32.0:void setLayMineEnabled(Z) | set lay mine enabled
../3-Phrases/MegaMek-0.32.0:CONS DeployMinefieldDisplay(QClientGUI;) | deploy minefield display
../3-Phrases/MegaMek-0.32.0:void deployMinefield(QCoords;) | deploy minefield
../3-Phrases/MegaMek-0.32.0:CONS MiniMap(QJDialog;QIGame;QBoardView1;) | mini map
../3-Phrases/MegaMek-0.32.0:CONS MiniMap(QJDialog;QClientGUI;QBoardView1;) | mini map
../3-Phrases/MegaMek-0.32.0:void setupMines() | setup mines
../3-Phrases/MegaMek-0.32.0:void MineChoicePanel(QMounted;) | mine choice panel
../3-Phrases/MegaMek-0.32.0:void disableMineSetting() | disable mine setting
../3-Phrases/MegaMek-0.32.0:String getMinimapColours() | get minimap colours
../3-Phrases/MegaMek-0.32.0:boolean getMinimapEnabled() | get minimap enabled
../3-Phrases/MegaMek-0.32.0:int getMinimapPosX() | get minimap pos x
../3-Phrases/MegaMek-0.32.0:int getMinimapPosY() | get minimap pos y
../3-Phrases/MegaMek-0.32.0:int getMinimapZoom() | get minimap zoom
../3-Phrases/MegaMek-0.32.0:int getMinimumSizeHeight() | get minimum size height
../3-Phrases/MegaMek-0.32.0:int getMinimumSizeWidth() | get minimum size width
../3-Phrases/MegaMek-0.32.0:int getMiniReportPosX() | get mini report pos x
../3-Phrases/MegaMek-0.32.0:int getMiniReportPosY() | get mini report pos y
../3-Phrases/MegaMek-0.32.0:int getMiniReportSizeHeight() | get mini report size height
../3-Phrases/MegaMek-0.32.0:int getMiniReportSizeWidth() | get mini report size width
../3-Phrases/MegaMek-0.32.0:void setMinimapEnabled(Z) | set minimap enabled
../3-Phrases/MegaMek-0.32.0:void setMinimapPosX(I) | set minimap pos x
../3-Phrases/MegaMek-0.32.0:void setMinimapPosY(I) | set minimap pos y
../3-Phrases/MegaMek-0.32.0:void setMinimapZoom(I) | set minimap zoom
../3-Phrases/MegaMek-0.32.0:void setMiniReportPosX(I) | set mini report pos x
../3-Phrases/MegaMek-0.32.0:void setMiniReportPosY(I) | set mini report pos y
../3-Phrases/MegaMek-0.32.0:void setMiniReportSizeHeight(I) | set mini report size height
../3-Phrases/MegaMek-0.32.0:void setMiniReportSizeWidth(I) | set mini report size width
../3-Phrases/MegaMek-0.32.0:Dimension getMinimumSize() | get minimum size
../3-Phrases/MegaMek-0.32.0:int getMinRangeMod(I) | get min range mod
../3-Phrases/MegaMek-0.32.0:CONS MinefieldTarget(QCoords;QIBoard;) | minefield target
../3-Phrases/MegaMek-0.32.0:CONS Minefield() | minefield
../3-Phrases/MegaMek-0.32.0:void setMinimumRange(I) | set minimum range
../3-Phrases/MegaMek-0.32.0:int getMinimumRange() | get minimum range
../3-Phrases/MegaMek-0.32.0:WeaponType createBAMineLauncher() | create ba mine launcher
../3-Phrases/MegaMek-0.32.0:MiscType createMine() | create mine
../3-Phrases/MegaMek-0.32.0:MiscType createMinesweeper() | create minesweeper
../3-Phrases/MegaMek-0.32.0:MiscType createLightMinesweeper() | create light minesweeper
../3-Phrases/MegaMek-0.32.0:boolean containsMinefield(QCoords;) | contains minefield
../3-Phrases/MegaMek-0.32.0:Vector getMinefields(QCoords;) | get minefields
../3-Phrases/MegaMek-0.32.0:int getNbrMinefields(QCoords;) | get nbr minefields
../3-Phrases/MegaMek-0.32.0:Enumeration getMinedCoords() | get mined coords
../3-Phrases/MegaMek-0.32.0:void addMinefield(QMinefield;) | add minefield
../3-Phrases/MegaMek-0.32.0:void addMinefields(QVector;) | add minefields
../3-Phrases/MegaMek-0.32.0:void setMinefields(QVector;) | set minefields
../3-Phrases/MegaMek-0.32.0:void removeMinefield(QMinefield;) | remove minefield
../3-Phrases/MegaMek-0.32.0:void clearMinefields() | clear minefields
../3-Phrases/MegaMek-0.32.0:void addLayMinefieldAction(QLayMinefieldAction;) | add lay minefield action
../3-Phrases/MegaMek-0.32.0:Enumeration getLayMinefieldActions() | get lay minefield actions
../3-Phrases/MegaMek-0.32.0:void resetLayMinefieldActions() | reset lay minefield actions
../3-Phrases/MegaMek-0.32.0:Vector getLayMinefieldActionsVector() | get lay minefield actions vector
../3-Phrases/MegaMek-0.32.0:Vector getMinefields() | get minefields
../3-Phrases/MegaMek-0.32.0:void addMinefield(QMinefield;) | add minefield
../3-Phrases/MegaMek-0.32.0:void addMinefields(QVector;) | add minefields
../3-Phrases/MegaMek-0.32.0:void removeMinefield(QMinefield;) | remove minefield
../3-Phrases/MegaMek-0.32.0:void removeMinefields() | remove minefields
../3-Phrases/MegaMek-0.32.0:boolean containsMinefield(QMinefield;) | contains minefield
../3-Phrases/MegaMek-0.32.0:boolean hasMinefields() | has minefields
../3-Phrases/MegaMek-0.32.0:AmmoType createBAMineLauncherAmmo() | create ba mine launcher ammo
../3-Phrases/MegaMek-0.32.0:boolean canClearMinefield(QAmmoType;) | can clear minefield
../3-Phrases/MegaMek-0.32.0:boolean canDeliverMinefield(QAmmoType;) | can deliver minefield
../3-Phrases/MegaMek-0.32.0:int getMinWaterSpots() | get min water spots
../3-Phrases/MegaMek-0.32.0:int getMinWaterSize() | get min water size
../3-Phrases/MegaMek-0.32.0:int getMinForestSpots() | get min forest spots
../3-Phrases/MegaMek-0.32.0:int getMinForestSize() | get min forest size
../3-Phrases/MegaMek-0.32.0:int getMinRoughSpots() | get min rough spots
../3-Phrases/MegaMek-0.32.0:int getMinRoughSize() | get min rough size
../3-Phrases/MegaMek-0.32.0:int getMinSwampSpots() | get min swamp spots
../3-Phrases/MegaMek-0.32.0:int getMinSwampSize() | get min swamp size
../3-Phrases/MegaMek-0.32.0:int getMinPavementSpots() | get min pavement spots
../3-Phrases/MegaMek-0.32.0:int getMinPavementSize() | get min pavement size
../3-Phrases/MegaMek-0.32.0:int getMinRubbleSpots() | get min rubble spots
../3-Phrases/MegaMek-0.32.0:int getMinRubbleSize() | get min rubble size
../3-Phrases/MegaMek-0.32.0:int getMinFortifiedSpots() | get min fortified spots
../3-Phrases/MegaMek-0.32.0:int getMinFortifiedSize() | get min fortified size
../3-Phrases/MegaMek-0.32.0:int getMinIceSpots() | get min ice spots
../3-Phrases/MegaMek-0.32.0:int getMinIceSize() | get min ice size
../3-Phrases/MegaMek-0.32.0:int getMinRadius() | get min radius
../3-Phrases/MegaMek-0.32.0:int getMinCraters() | get min craters
../3-Phrases/MegaMek-0.32.0:int getCityMinCF() | get city min cf
../3-Phrases/MegaMek-0.32.0:int getCityMinFloors() | get city min floors
../3-Phrases/MegaMek-0.32.0:int getMountainHeightMin() | get mountain height min
../3-Phrases/MegaMek-0.32.0:int getMountainWidthMin() | get mountain width min
../3-Phrases/MegaMek-0.32.0:int getMineType() | get mine type
../3-Phrases/MegaMek-0.32.0:void setMineType(I) | set mine type
../3-Phrases/MegaMek-0.32.0:int getMinimumWaterDepth() | get minimum water depth
../3-Phrases/MegaMek-0.32.0:void setMinimumWaterDepth(I) | set minimum water depth
../3-Phrases/MegaMek-0.32.0:int getMineToLay() | get mine to lay
../3-Phrases/MegaMek-0.32.0:void setMineToLay(I) | set mine to lay
../3-Phrases/MegaMek-0.32.0:boolean isClearingMinefield() | is clearing minefield
../3-Phrases/MegaMek-0.32.0:void setClearingMinefield(Z) | set clearing minefield
../3-Phrases/MegaMek-0.32.0:boolean isLayingMines() | is laying mines
../3-Phrases/MegaMek-0.32.0:void setLayingMines(Z) | set laying mines
../3-Phrases/MegaMek-0.32.0:boolean canLayMine() | can lay mine
../3-Phrases/MegaMek-0.32.0:boolean containsMinefield(QCoords;) | contains minefield
../3-Phrases/MegaMek-0.32.0:Vector getMinefields(QCoords;) | get minefields
../3-Phrases/MegaMek-0.32.0:int getNbrMinefields(QCoords;) | get nbr minefields
../3-Phrases/MegaMek-0.32.0:Enumeration getMinedCoords() | get mined coords
../3-Phrases/MegaMek-0.32.0:void addMinefield(QMinefield;) | add minefield
../3-Phrases/MegaMek-0.32.0:void addMinefields(QVector;) | add minefields
../3-Phrases/MegaMek-0.32.0:void setMinefields(QVector;) | set minefields
../3-Phrases/MegaMek-0.32.0:void addMinefieldHelper(QMinefield;) | add minefield helper
../3-Phrases/MegaMek-0.32.0:void removeMinefield(QMinefield;) | remove minefield
../3-Phrases/MegaMek-0.32.0:void removeMinefieldHelper(QMinefield;) | remove minefield helper
../3-Phrases/MegaMek-0.32.0:void clearMinefields() | clear minefields
../3-Phrases/MegaMek-0.32.0:void clearMinefieldsHelper() | clear minefields helper
../3-Phrases/MegaMek-0.32.0:void removeMinefields() | remove minefields
../3-Phrases/MegaMek-0.32.0:void addLayMinefieldAction(QLayMinefieldAction;) | add lay minefield action
../3-Phrases/MegaMek-0.32.0:Enumeration getLayMinefieldActions() | get lay minefield actions
../3-Phrases/MegaMek-0.32.0:void resetLayMinefieldActions() | reset lay minefield actions
../3-Phrases/MegaMek-0.32.0:Vector getLayMinefieldActionsVector() | get lay minefield actions vector
../3-Phrases/MegaMek-0.32.0:int getMin() | get min
../3-Phrases/MegaMek-0.32.0:CONS LayMinefieldAction(II) | lay minefield action
../3-Phrases/MegaMek-0.32.0:int getMineId() | get mine id
../3-Phrases/MegaMek-0.32.0:CONS ClearMinefieldAction(I) | clear minefield action
../3-Phrases/MegaMek-0.32.0:boolean isMine() | is mine
../3-Phrases/MegaMek-0.32.0:float getMinUnderweight() | get min under weight
../3-Phrases/MegaMek-0.32.0:float getMinUnderweight() | get min under weight
../3-Phrases/MegaMek-0.32.0:float getMinUnderweight() | get min under weight
../3-Phrases/MegaMek-0.32.0:void deliverThunderAugMinefield(QCoords;II) | deliver thunder aug minefield
../3-Phrases/MegaMek-0.32.0:void deliverThunderMinefield(QCoords;II) | deliver thunder minefield
../3-Phrases/MegaMek-0.32.0:void deliverThunderInfernoMinefield(QCoords;II) | deliver thunder inferno minefield
../3-Phrases/MegaMek-0.32.0:void deliverFASCAMMinefield(QCoords;I) | deliver fascam minefield
../3-Phrases/MegaMek-0.32.0:void deliverThunderActiveMinefield(QCoords;II) | deliver thunder active minefield
../3-Phrases/MegaMek-0.32.0:void deliverThunderVibraMinefield(QCoords;III) | deliver thunder vibra minefield
../3-Phrases/MegaMek-0.32.0:void enterMinefield(QEntity;QMinefield;QCoords;QCoords;Z) | enter minefield
../3-Phrases/MegaMek-0.32.0:void enterMinefield(QEntity;QMinefield;QCoords;QCoords;ZI) | enter minefield
../3-Phrases/MegaMek-0.32.0:void removeMinefieldsFrom(QCoords;) | remove minefields from
../3-Phrases/MegaMek-0.32.0:void removeMinefield(QMinefield;) | remove minefield
../3-Phrases/MegaMek-0.32.0:void removeMinefield(QPlayer;QMinefield;) | remove minefield
../3-Phrases/MegaMek-0.32.0:void revealMinefield(QMinefield;) | reveal minefield
../3-Phrases/MegaMek-0.32.0:void revealMinefield(QPlayer;QMinefield;) | reveal minefield
../3-Phrases/MegaMek-0.32.0:void doEntityDisplacementMinefieldCheck(QEntity;QCoords;QCoords;) | do entity displacement minefield check
../3-Phrases/MegaMek-0.32.0:void receiveDeployMinefields(QPacket;I) | receive deploy minefields
../3-Phrases/MegaMek-0.32.0:void processDeployMinefields(QVector;) | process deploy minefields
../3-Phrases/MegaMek-0.32.0:void resolveClearMinefieldAttempts(QVector;) | resolve clear minefield attempts
../3-Phrases/np:double random(double min, double max, double interval) | random
../3-Phrases/np:static int minuteOfHour(NSTimestamp myNSTimestamp) | int minute of hour
../3-Phrases/np:int randomInt(int min, int max) | random int
../3-Phrases/prefuse:double getMinimumSize() | get minimum size
../3-Phrases/prefuse:void setMinimumSize(D) | set minimum size
../3-Phrases/prefuse:void setMinMax() | set min max
../3-Phrases/prefuse:int getMinRadius() | get min radius
../3-Phrases/prefuse:void setMinRadius(I) | set min radius
../3-Phrases/prefuse:double getMinScale() | get min scale
../3-Phrases/prefuse:void setMinScale(D) | set min scale
../3-Phrases/prefuse:int getMinimumRow() | get minimum row
../3-Phrases/prefuse:int getMinimumRow() | get minimum row
../3-Phrases/prefuse:CONS MinFunction() | min function
../3-Phrases/prefuse:Expression UnaryExpressionNotPlusMinus() | unary expression not plus minus
../3-Phrases/prefuse:Object getMinValue() | get min value
../3-Phrases/prefuse:Object getMinValue() | get min value
../3-Phrases/prefuse:void setMinValue(QNumber;) | set min value
../3-Phrases/prefuse:void setMinimum(I) | set minimum
../3-Phrases/prefuse:int minimum() | minimum
../3-Phrases/prefuse:int minimum() | minimum
../3-Phrases/prefuse:int getMinimumRow() | get minimum row
../3-Phrases/prefuse:Tuple min(QIterator;QString;) | min
../3-Phrases/prefuse:Tuple min(QIterator;QString;QComparator;) | min
../3-Phrases/prefuse:Tuple min(QTupleSet;QString;QComparator;) | min
../3-Phrases/prefuse:Tuple min(QTupleSet;QString;) | min
../3-Phrases/prefuse:Schema getMinimalVisualSchema() | get minimal visual schema
../3-Phrases/prefuse:double getMinValue() | get min value
../3-Phrases/prefuse:void setMinValue(D) | set min value
../3-Phrases/prefuse:double min([D) | min
../3-Phrases/prefuse:int getMinimum() | get minimum
../3-Phrases/prefuse:int getMinimum() | get minimum
../3-Phrases/prefuse:Entry minimum(QEntry;) | minimum
../3-Phrases/prefuse:int getMinimum() | get minimum
../3-Phrases/prefuse:double getMinX() | get min x
../3-Phrases/prefuse:double getMinY() | get min y
../3-Phrases/prefuse:float getMinValue(I) | get min value
../3-Phrases/prefuse:void setMinValue(IF) | set min value
../3-Phrases/prefuse:float getMinValue(I) | get min value
../3-Phrases/prefuse:void setMinValue(IF) | set min value
../3-Phrases/prefuse:Object getMinValue() | get min value
../3-Phrases/prefuse:int getMinimum() | get minimum
../3-Phrases/prefuse:void setMinimum(I) | set minimum
../3-Phrases/prefuse:void setMinExtent(I) | set min extent
../3-Phrases/rhino:int MinFromTime(D) | min from time
../3-Phrases/SweetHome3D:float getMinimumLength() | get minimum length
../3-Phrases/SweetHome3D:float getMinimumLength() | get minimum length
../3-Phrases/SweetHome3D:float getMinimumLength() | get minimum length
../3-Phrases/SweetHome3D:float getMinimumLength() | get minimum length
../3-Phrases/SweetHome3D:float getMinimumLength() | get minimum length
../3-Phrases/SweetHome3D:Dimension minimumLayoutSize(QContainer;) | minimum layout size
../3-Phrases/SweetHome3D:float getMinX(QHomePieceOfFurniture;) | get min x
../3-Phrases/SweetHome3D:float getMinY(QHomePieceOfFurniture;) | get min y
../3-Phrases/SweetHome3D:float getMinX(QHomePieceOfFurniture;) | get min x
../3-Phrases/SweetHome3D:float getMinY(QHomePieceOfFurniture;) | get min y
../3-Phrases/vuze:int getReadsPerMinute() | get reads per minute
../3-Phrases/vuze:void setMinimumBufferBytes(I) | set minimum buffer bytes
../3-Phrases/vuze:long getStreamBytesPerSecondMin() | get stream bytes per second min
../3-Phrases/vuze:long getStreamBytesPerSecondMin() | get stream bytes per second min
../3-Phrases/vuze:long getStreamBytesPerSecondMin() | get stream bytes per second min
../3-Phrases/vuze:long getBuddySyncOnShareMinTimeSecs() | get buddy sync on share min time secs
../3-Phrases/vuze:void setBuddySyncOnShareMinTimeSecs(J) | set buddy sync on share min time secs
../3-Phrases/vuze:long getRatingExpireyMins(QString;QString;) | get rating expirey mins
../3-Phrases/vuze:boolean isMine() | is mine
../3-Phrases/vuze:void setMine(Z) | set mine
../3-Phrases/vuze:boolean isMine() | is mine
../3-Phrases/vuze:void setMine(Z) | set mine
../3-Phrases/vuze:int getMinMssSize() | get min mss size
../3-Phrases/vuze:int minSize() | min size
../3-Phrases/vuze:Object minMatches(QTransportHelper;QByteBuffer;I) | min matches
../3-Phrases/vuze:void ensureByteBucketMinBurstRate() | ensure byte bucket min burst rate
../3-Phrases/vuze:int getMaxMinMatchBufferSize() | get max min match buffer size
../3-Phrases/vuze:boolean minimiseOverheads() | minimise overheads
../3-Phrases/vuze:int minSize() | min size
../3-Phrases/vuze:Object minMatches(QTransportHelper;QByteBuffer;I) | min matches
../3-Phrases/vuze:boolean minimiseOverheads() | minimise overheads
../3-Phrases/vuze:boolean minimiseOverheads() | minimise overheads
../3-Phrases/vuze:int minSize() | min size
../3-Phrases/vuze:Object minMatches(QTransportHelper;QByteBuffer;I) | min matches
../3-Phrases/vuze:float getMinAvailability() | get min availability
../3-Phrases/vuze:float getMinAvailability() | get min availability
../3-Phrases/vuze:int checkForMinUploadValue(I) | check for min upload value
../3-Phrases/vuze:int checkForMinDownloadValue(I) | check for min download value
../3-Phrases/vuze:int calculateMinUpload(I) | calculate min upload
../3-Phrases/vuze:int calculateMinDownload(I) | calculate min download
../3-Phrases/vuze:int getUploadMinLimit() | get upload min limit
../3-Phrases/vuze:int getDownloadMinLimit() | get download min limit
../3-Phrases/vuze:int getCheckFrequencyMins() | get check frequency mins
../3-Phrases/vuze:boolean isMine() | is mine
../3-Phrases/vuze:int getCheckFrequencyMins() | get check frequency mins
../3-Phrases/vuze:boolean isMine() | is mine
../3-Phrases/vuze:long getRatingExpireyMins(QString;QString;) | get rating expirey mins
../3-Phrases/vuze:long getRatingExpireyMins(QString;QString;) | get rating expirey mins
../3-Phrases/vuze:long getContentMinimumSpeedBps(QTOTorrent;) | get content minimum speed bps
../3-Phrases/vuze:int getReadsPerMinute() | get reads per minute
../3-Phrases/vuze:int getReadsPerMinute() | get reads per minute
../3-Phrases/vuze:int getReadsPerMinute() | get reads per minute
../3-Phrases/vuze:int getReadsPerMinute() | get reads per minute
../3-Phrases/vuze:int getMinWidth() | get min width
../3-Phrases/vuze:void setMinWidth(I) | set min width
../3-Phrases/vuze:boolean isMinWidthAuto() | is min width auto
../3-Phrases/vuze:void setMinWidthAuto(Z) | set min width auto
../3-Phrases/vuze:void minimizeToTray(QShellEvent;) | minimize to tray
../3-Phrases/vuze:void setColumnMinWidthToHeaders() | set column min width to headers
../3-Phrases/vuze:BigInteger getMinimum() | get minimum
../3-Phrases/vuze:int minSize() | min size
../3-Phrases/vuze:Object minMatches(QTransportHelper;QByteBuffer;I) | min matches
../3-Phrases/vuze:float getMinAvailability() | get min availability
../3-Phrases/vuze:float getMinAvailability() | get min availability
../3-Phrases/vuze:void setMinBiasedPeers(I) | set min biased peers
../3-Phrases/vuze:void setMinBiasedPeers(I) | set min biased peers
../3-Phrases/vuze:long getMinAnnounceRetryInterval() | get min announce retry interval
../3-Phrases/vuze:long getMinScrapeRetryInterval() | get min scrape retry interval
../3-Phrases/vuze:int generateRandomPlusMinus1() | generate random plus minus 1
../3-Phrases/vuze:int getReadsPerMinute() | get reads per minute
../3-Phrases/vuze:int getMinimumRequiredUserMode() | get minimum required user mode
../3-Phrases/vuze:void setMinimumRequiredUserMode(I) | set minimum required user mode
../3-Phrases/vuze:void setMinWidth(I) | set min width
../3-Phrases/vuze:int getMinWidth() | get min width
../3-Phrases/vuze:void setMinWidthAuto(Z) | set min width auto
../3-Phrases/vuze:boolean isMinWidthAuto() | is min width auto
../3-Phrases/vuze:int getReadsPerMinute() | get reads per minute
../3-Phrases/vuze:int minSize() | min size
../3-Phrases/vuze:Object minMatches(QTransportHelper;QByteBuffer;I) | min matches
../3-Phrases/vuze:int getMinimumRequiredUserMode() | get minimum required user mode
../3-Phrases/vuze:void setMinimumRequiredUserMode(I) | set minimum required user mode
../3-Phrases/vuze:int getMinValue() | get min value
../3-Phrases/vuze:int getMinimum() | get minimum
../3-Phrases/vuze:void setMinimum(I) | set minimum
../3-Phrases/vuze:Image minifolderize(QImage;Z) | min ifolder ize
../3-Phrases/vuze:int getDialogButtonMinWidth() | get dialog button min width
../3-Phrases/vuze:CONS MiniCloseButton(QComposite;) | mini close button
../3-Phrases/vuze:void setMinimumValue(I) | set minimum value
../3-Phrases/vuze:void setMinimumValue(I) | set minimum value
../3-Phrases/vuze:int iMin(II) | i min
../3-Phrases/vuze:void minimizeToTray(QShellEvent;) | minimize to tray
../3-Phrases/vuze:MenuItem addMinimizeWindowMenuItem(QMenu;) | add minimize window menu item
../3-Phrases/vuze:CONS MiniBarManager(QString;) | mini bar manager
../3-Phrases/vuze:CONS MiniBarManager() | mini bar manager
../3-Phrases/vuze:AEMonitor getMiniBarMonitor() | get mini bar monitor
../3-Phrases/vuze:ListIterator getMiniBarIterator() | get mini bar iterator
../3-Phrases/vuze:int countMiniBars() | count mini bars
../3-Phrases/vuze:MiniBar getMiniBarForObject(QObject;) | get mini bar for object
../3-Phrases/vuze:CONS MiniBar(QMiniBarManager;) | mini bar
../3-Phrases/vuze:void setMinimum(I) | set minimum
../3-Phrases/vuze:int getMinimum() | get minimum
../3-Phrases/vuze:int getMinimum() | get minimum
../3-Phrases/vuze:void setMinimum(I) | set minimum
../3-Phrases/vuze:int getMinValue() | get min value
../3-Phrases/vuze:void setMinValue(I) | set min value
../3-Phrases/vuze:void minimize(QCTabFolderEvent;) | minimize
../3-Phrases/weka:FastVector[] mineCARs(QInstances;) | mine ca rs
../3-Phrases/weka:String upperBoundMinSupportTipText() | upper bound min support tip text
../3-Phrases/weka:double getUpperBoundMinSupport() | get upper bound min support
../3-Phrases/weka:void setUpperBoundMinSupport(D) | set upper bound min support
../3-Phrases/weka:String lowerBoundMinSupportTipText() | lower bound min support tip text
../3-Phrases/weka:double getLowerBoundMinSupport() | get lower bound min support
../3-Phrases/weka:void setLowerBoundMinSupport(D) | set lower bound min support
../3-Phrases/weka:String minMetricTipText() | min metric tip text
../3-Phrases/weka:double getMinMetric() | get min metric
../3-Phrases/weka:void setMinMetric(D) | set min metric
../3-Phrases/weka:String minimizeTargetTipText() | minimize target tip text
../3-Phrases/weka:void setMinimizeTarget(Z) | set minimize target
../3-Phrases/weka:boolean getMinimizeTarget() | get minimize target
../3-Phrases/weka:String minImprovementTipText() | min improvement tip text
../3-Phrases/weka:void setMinImprovement(D) | set min improvement
../3-Phrases/weka:double getMinImprovement() | get min improvement
../3-Phrases/weka:FastVector[] mineCARs(QInstances;) | mine ca rs
../3-Phrases/weka:FastVector[] mineCARs(QInstances;) | mine ca rs
../3-Phrases/weka:String minSupportTipText() | min support tip text
../3-Phrases/weka:double getMinSupport() | get min support
../3-Phrases/weka:void setMinSupport(D) | set min support
../3-Phrases/weka:void updateMinMax(QInstance;) | update min max
../3-Phrases/weka:String minimumBucketSizeTipText() | minimum bucket size tip text
../3-Phrases/weka:void setMinimumBucketSize(I) | set minimum bucket size
../3-Phrases/weka:int getMinimumBucketSize() | get minimum bucket size
../3-Phrases/weka:String minStdDevTipText() | min std dev tip text
../3-Phrases/weka:double getMinStdDev() | get min std dev
../3-Phrases/weka:void setMinStdDev(D) | set min std dev
../3-Phrases/weka:double minAbs(III) | min abs
../3-Phrases/weka:void updateMinMax(QInstance;) | update min max
../3-Phrases/weka:double getMinX() | get min x
../3-Phrases/weka:double getMinY() | get min y
../3-Phrases/weka:double getMin() | get min
../3-Phrases/weka:String YMinTipText() | y min tip text
../3-Phrases/weka:double getYMin() | get y min
../3-Phrases/weka:void setYMin(D) | set y min
../3-Phrases/weka:String XMinTipText() | x min tip text
../3-Phrases/weka:double getXMin() | get x min
../3-Phrases/weka:void setXMin(D) | set x min
../3-Phrases/weka:double[] distributionForInstanceMin(QInstance;) | distribution for instance min
../3-Phrases/weka:String minGroupTipText() | min group tip text
../3-Phrases/weka:void setMinGroup(I) | set min group
../3-Phrases/weka:int getMinGroup() | get min group
../3-Phrases/weka:void checkMinMax(QInstances;) | check min max
../3-Phrases/weka:String minimizeExpectedCostTipText() | minimize expected cost tip text
../3-Phrases/weka:boolean getMinimizeExpectedCost() | get minimize expected cost
../3-Phrases/weka:void setMinimizeExpectedCost(Z) | set minimize expected cost
../3-Phrases/weka:String minChunkSizeTipText() | min chunk size tip text
../3-Phrases/weka:void setMinChunkSize(I) | set min chunk size
../3-Phrases/weka:int getMinChunkSize() | get min chunk size
../3-Phrases/weka:void updateMinMax(QInstance;) | update min max
../3-Phrases/weka:String minimaxTipText() | minimax tip text
../3-Phrases/weka:boolean getMinimax() | get minimax
../3-Phrases/weka:void setMinimax(Z) | set minimax
../3-Phrases/weka:double minBagDistance(QInstance;QInstance;) | min bag distance
../3-Phrases/weka:double[] minimax(QInstances;I) | minimax
../3-Phrases/weka:int getSizeRuleBaseMin() | get size rule base min
../3-Phrases/weka:double classifyInstanceMin(QInstance;) | classify instance min
../3-Phrases/weka:void phaseTwoMin() | phase two min
../3-Phrases/weka:double getMin(I) | get min
../3-Phrases/weka:void setMin(ID) | set min
../3-Phrases/weka:void setMinExtension() | set min extension
../3-Phrases/weka:String minMaxExtensionTipText() | min max extension tip text
../3-Phrases/weka:boolean getMinMaxExtension() | get min max extension
../3-Phrases/weka:void setMinMaxExtension(Z) | set min max extension
../3-Phrases/weka:double minimalExtension(QInstances;QInstance;) | minimal extension
../3-Phrases/weka:double minimalExtension(QInstances;QInstance;D) | minimal extension
../3-Phrases/weka:CumulativeDiscreteDistribution takeMin(QCumulativeDiscreteDistribution;QCumulativeDiscreteDistribution;) | take min
../3-Phrases/weka:CumulativeDiscreteDistribution getMinimalCumulativeDiscreteDistribution(I) | get minimal cumulative discrete distribution
../3-Phrases/weka:MiningSchema getMiningSchema() | get mining schema
../3-Phrases/weka:void mapToMiningSchema(QInstances;) | map to mining schema
../3-Phrases/weka:String minNumObjTipText() | min num obj tip text
../3-Phrases/weka:int getMinNumObj() | get min num obj
../3-Phrases/weka:void setMinNumObj(I) | set min num obj
../3-Phrases/weka:double getMinBorder(I) | get min border
../3-Phrases/weka:void updateMinMax(QInstance;) | update min max
../3-Phrases/weka:String minNoTipText() | min no tip text
../3-Phrases/weka:void setMinNo(D) | set min no
../3-Phrases/weka:double getMinNo() | get min no
../3-Phrases/weka:String minNoTipText() | min no tip text
../3-Phrases/weka:void setMinNo(D) | set min no
../3-Phrases/weka:double getMinNo() | get min no
../3-Phrases/weka:double minDataDLIfDeleted(IDZ) | min data dl if deleted
../3-Phrases/weka:double minDataDLIfExists(IDZ) | min data dl if exists
../3-Phrases/weka:String minNoTipText() | min no tip text
../3-Phrases/weka:void setMinNo(D) | set min no
../3-Phrases/weka:double getMinNo() | get min no
../3-Phrases/weka:String minBucketSizeTipText() | min bucket size tip text
../3-Phrases/weka:int getMinBucketSize() | get min bucket size
../3-Phrases/weka:void setMinBucketSize(I) | set min bucket size
../3-Phrases/weka:String minNumObjTipText() | min num obj tip text
../3-Phrases/weka:int getMinNumObj() | get min num obj
../3-Phrases/weka:void setMinNumObj(I) | set min num obj
../3-Phrases/weka:int getMinNumInstances() | get min num instances
../3-Phrases/weka:void setMinNumInstances(I) | set min num instances
../3-Phrases/weka:String minNumInstancesTipText() | min num instances tip text
../3-Phrases/weka:String minNumObjTipText() | min num obj tip text
../3-Phrases/weka:void setMinNumObj(I) | set min num obj
../3-Phrases/weka:int getMinNumObj() | get min num obj
../3-Phrases/weka:String minNumObjTipText() | min num obj tip text
../3-Phrases/weka:int getMinNumObj() | get min num obj
../3-Phrases/weka:void setMinNumObj(I) | set min num obj
../3-Phrases/weka:String minNumTipText() | min num tip text
../3-Phrases/weka:double getMinNum() | get min num
../3-Phrases/weka:void setMinNum(D) | set min num
../3-Phrases/weka:String minVariancePropTipText() | min variance prop tip text
../3-Phrases/weka:double getMinVarianceProp() | get min variance prop
../3-Phrases/weka:void setMinVarianceProp(D) | set min variance prop
../3-Phrases/weka:String minNumObjTipText() | min num obj tip text
../3-Phrases/weka:void setMinNumObj(D) | set min num obj
../3-Phrases/weka:double getMinNumObj() | get min num obj
../3-Phrases/weka:int getMinNumInstances() | get min num instances
../3-Phrases/weka:void setMinNumInstances(I) | set min num instances
../3-Phrases/weka:String minNumInstancesTipText() | min num instances tip text
../3-Phrases/weka:String minNumTipText() | min num tip text
../3-Phrases/weka:double getMinNum() | get min num
../3-Phrases/weka:void setMinNum(D) | set min num
../3-Phrases/weka:String minNumObjTipText() | min num obj tip text
../3-Phrases/weka:void setMinNumObj(D) | set min num obj
../3-Phrases/weka:double getMinNumObj() | get min num obj
../3-Phrases/weka:String minNumObjTipText() | min num obj tip text
../3-Phrases/weka:void setMinNumObj(I) | set min num obj
../3-Phrases/weka:int getMinNumObj() | get min num obj
../3-Phrases/weka:String minNumTipText() | min num tip text
../3-Phrases/weka:double getMinNum() | get min num
../3-Phrases/weka:void setMinNum(D) | set min num
../3-Phrases/weka:String minVariancePropTipText() | min variance prop tip text
../3-Phrases/weka:double getMinVarianceProp() | get min variance prop
../3-Phrases/weka:void setMinVarianceProp(D) | set min variance prop
../3-Phrases/weka:String minNumObjTipText() | min num obj tip text
../3-Phrases/weka:int getMinNumObj() | get min num obj
../3-Phrases/weka:void setMinNumObj(I) | set min num obj
../3-Phrases/weka:int getMinNumInstances() | get min num instances
../3-Phrases/weka:void setMinNumInstances(I) | set min num instances
../3-Phrases/weka:String minNumInstancesTipText() | min num instances tip text
../3-Phrases/weka:int getMinNumInstances() | get min num instances
../3-Phrases/weka:void setMinNumInstances(I) | set min num instances
../3-Phrases/weka:String minNumInstancesTipText() | min num instances tip text
../3-Phrases/weka:String minNumTipText() | min num tip text
../3-Phrases/weka:double getMinNum() | get min num
../3-Phrases/weka:void setMinNum(D) | set min num
../3-Phrases/weka:String minNumObjTipText() | min num obj tip text
../3-Phrases/weka:int getMinNumObj() | get min num obj
../3-Phrases/weka:void setMinNumObj(I) | set min num obj
../3-Phrases/weka:double[][] minsAndMaxs(QInstances;[[DI) | mins and maxs
../3-Phrases/weka:void setMinNumInstances(D) | set min num instances
../3-Phrases/weka:double getMinNumInstances() | get min num instances
../3-Phrases/weka:String minNumInstancesTipText() | min num instances tip text
../3-Phrases/weka:void setMinNumInstances(D) | set min num instances
../3-Phrases/weka:double getMinNumInstances() | get min num instances
../3-Phrases/weka:void setMinNumInstances(D) | set min num instances
../3-Phrases/weka:double getMinNumInstances() | get min num instances
../3-Phrases/weka:String minChangeTipText() | min change tip text
../3-Phrases/weka:void setMinChange(I) | set min change
../3-Phrases/weka:int getMinChange() | get min change
../3-Phrases/weka:String minStdDevTipText() | min std dev tip text
../3-Phrases/weka:void setMinStdDev(D) | set min std dev
../3-Phrases/weka:double getMinStdDev() | get min std dev
../3-Phrases/weka:String minStdDevTipText() | min std dev tip text
../3-Phrases/weka:void setMinStdDev(D) | set min std dev
../3-Phrases/weka:void setMinStdDevPerAtt([D) | set min std dev per att
../3-Phrases/weka:double getMinStdDev() | get min std dev
../3-Phrases/weka:void updateMinMax(QInstance;) | update min max
../3-Phrases/weka:void updateMinDistance([D[ZQInstances;QInstance;) | update min distance
../3-Phrases/weka:void initMinMax(QInstances;) | init min max
../3-Phrases/weka:void updateMinMax(QInstance;) | update min max
../3-Phrases/weka:void setMinPoints(I) | set min points
../3-Phrases/weka:int getMinPoints() | get min points
../3-Phrases/weka:String minPointsTipText() | min points tip text
../3-Phrases/weka:String minNumClustersTipText() | min num clusters tip text
../3-Phrases/weka:void setMinNumClusters(I) | set min num clusters
../3-Phrases/weka:int getMinNumClusters() | get min num clusters
../3-Phrases/weka:void setMinPoints(I) | set min points
../3-Phrases/weka:int getMinPoints() | get min points
../3-Phrases/weka:String minPointsTipText() | min points tip text
../3-Phrases/weka:void setMinMaxValues() | set min max values
../3-Phrases/weka:double[] getAttributeMinValues() | get attribute min values
../3-Phrases/weka:void setMinMaxValues() | set min max values
../3-Phrases/weka:double[] getAttributeMinValues() | get attribute min values
../3-Phrases/weka:int getMinPoints() | get min points
../3-Phrases/weka:int minIndex([I) | min index
../3-Phrases/weka:int minIndex([D) | min index
../3-Phrases/weka:void setMinimumNumberInstances(I) | set minimum number instances
../3-Phrases/weka:int getMinimumNumberInstances() | get minimum number instances
../3-Phrases/weka:double getMinFunction() | get min function
../3-Phrases/weka:double[] findArgmin([D[[D) | find arg min
../3-Phrases/weka:Level getMinLevel() | get min level
../3-Phrases/weka:DoubleVector minus(D) | minus
../3-Phrases/weka:DoubleVector minusEquals(D) | minus equals
../3-Phrases/weka:DoubleVector minus(QDoubleVector;) | minus
../3-Phrases/weka:DoubleVector minusEquals(QDoubleVector;) | minus equals
../3-Phrases/weka:Matrix minus(QMatrix;) | minus
../3-Phrases/weka:Matrix minusEquals(QMatrix;) | minus equals
../3-Phrases/weka:int getMinLeavesVisited() | get min leaves visited
../3-Phrases/weka:int getMinIntNodesVisited() | get min int nodes visited
../3-Phrases/weka:double getMinPointsVisited() | get min points visited
../3-Phrases/weka:double getMinCoordsPerPoint() | get min coords per point
../3-Phrases/weka:String minBoxRelWidthTipText() | min box rel width tip text
../3-Phrases/weka:void setMinBoxRelWidth(D) | set min box rel width
../3-Phrases/weka:double getMinBoxRelWidth() | get min box rel width
../3-Phrases/weka:void minimize() | minimize
../3-Phrases/weka:boolean[][] old_minimize() | old minimize
../3-Phrases/weka:char min(CC) | min
../3-Phrases/weka:MiningSchema getMiningSchema() | get mining schema
../3-Phrases/weka:CONS MiningSchema(QElement;QInstances;QTransformationDictionary;) | mining schema
../3-Phrases/weka:Instances getMiningSchemaAsInstances() | get mining schema as instances
../3-Phrases/weka:ArrayList<QMiningFieldMetaInfo;> getMiningFields() | get mining fields
../3-Phrases/weka:Instances getMiningSchemaAsInstances(QElement;QInstances;) | get mining schema as instances
../3-Phrases/weka:void setMiningSchemaInstances(QInstances;) | set mining schema instances
../3-Phrases/weka:CONS MiningFieldMetaInfo(QElement;) | mining field meta info
../3-Phrases/weka:double applyMinMaxRescaleCast(D) | apply min max rescale cast
../3-Phrases/weka:void setNGramMinSize(I) | set n gram min size
../3-Phrases/weka:int getNGramMinSize() | get n gram min size
../3-Phrases/weka:String NGramMinSizeTipText() | n gram min size tip text
../3-Phrases/weka:int defaultMinRuleSize() | default min rule size
../3-Phrases/weka:int getMinRuleSize() | get min rule size
../3-Phrases/weka:void setMinRuleSize(I) | set min rule size
../3-Phrases/weka:String minRuleSizeTipText() | min rule size tip text
../3-Phrases/weka:double defaultMinRange() | default min range
../3-Phrases/weka:void setMinRange(D) | set min range
../3-Phrases/weka:double getMinRange() | get min range
../3-Phrases/weka:String minRangeTipText() | min range tip text
../3-Phrases/weka:double[] getMinValue() | get min value
../3-Phrases/weka:int defaultMinInstNum() | default min inst num
../3-Phrases/weka:int getMinInstNum() | get min inst num
../3-Phrases/weka:void setMinInstNum(I) | set min inst num
../3-Phrases/weka:String minInstNumTipText() | min inst num tip text
../3-Phrases/weka:int defaultMinInstNum() | default min inst num
../3-Phrases/weka:int getMinInstNum() | get min inst num
../3-Phrases/weka:void setMinInstNum(I) | set min inst num
../3-Phrases/weka:String minInstNumTipText() | min inst num tip text
../3-Phrases/weka:double defaultMinRadius() | default min radius
../3-Phrases/weka:double getMinRadius() | get min radius
../3-Phrases/weka:void setMinRadius(D) | set min radius
../3-Phrases/weka:String minRadiusTipText() | min radius tip text
../3-Phrases/weka:double findMinDistance(QInstances;I) | find min distance
../3-Phrases/weka:int getMinMax(QInstances;I[D) | get min max
../3-Phrases/weka:double[] getMinimumMaximum(QInstances;I) | get minimum maximum
../3-Phrases/weka:int getMinMax(QInstances;I[D) | get min max
../3-Phrases/weka:double[] getMinArray() | get min array
../3-Phrases/weka:String minTermFreqTipText() | min term freq tip text
../3-Phrases/weka:int getMinTermFreq() | get min term freq
../3-Phrases/weka:void setMinTermFreq(I) | set min term freq
../3-Phrases/weka:String minThresholdTipText() | min threshold tip text
../3-Phrases/weka:double getMinThreshold() | get min threshold
../3-Phrases/weka:void setMinThreshold(D) | set min threshold
../3-Phrases/weka:String minDefaultTipText() | min default tip text
../3-Phrases/weka:double getMinDefault() | get min default
../3-Phrases/weka:void setMinDefault(D) | set min default
../3-Phrases/weka:void minimizeWindows() | minimize windows
../3-Phrases/weka:double getMin() | get min
../3-Phrases/weka:void setMin(D) | set min
../3-Phrases/weka:void updateMinMax(QInstance;) | update min max
../3-Phrases/weka:void computeMinMaxAtts() | compute min max atts
../3-Phrases/weka:double getMinXBound() | get min x bound
../3-Phrases/weka:double getMinYBound() | get min y bound
../3-Phrases/weka:void setMinMaxX(DD) | set min max x
../3-Phrases/weka:void setMinMaxY(DD) | set min max y
../3-Phrases/weka:int[][] minimizeCrossings(Z[[I) | minimize crossings
../3-Phrases/weka:double getMinX() | get min x
../3-Phrases/weka:double getMinY() | get min y
../3-Phrases/weka:double getMinC() | get min c
../3-Phrases/weka:String getMinVersion() | get min version
../3-Phrases/weka:String minimizeTargetTipText() | minimize target tip text
../3-Phrases/weka:void setMinimizeTarget(Z) | set minimize target
../3-Phrases/weka:boolean getMinimizeTarget() | get minimize target
../3-Phrases/weka:String minImprovementTipText() | min improvement tip text
../3-Phrases/weka:void setMinImprovement(D) | set min improvement
../3-Phrases/weka:double getMinImprovement() | get min improvement
../3-Phrases/weka:FastVector[] mineCARs(QInstances;) | mine ca rs
../3-Phrases/weka:FastVector[] mineCARs(QInstances;) | mine ca rs
../3-Phrases/weka:String upperBoundMinSupportTipText() | upper bound min support tip text
../3-Phrases/weka:double getUpperBoundMinSupport() | get upper bound min support
../3-Phrases/weka:void setUpperBoundMinSupport(D) | set upper bound min support
../3-Phrases/weka:String lowerBoundMinSupportTipText() | lower bound min support tip text
../3-Phrases/weka:double getLowerBoundMinSupport() | get lower bound min support
../3-Phrases/weka:void setLowerBoundMinSupport(D) | set lower bound min support
../3-Phrases/weka:String minMetricTipText() | min metric tip text
../3-Phrases/weka:double getMinMetric() | get min metric
../3-Phrases/weka:void setMinMetric(D) | set min metric
../3-Phrases/weka:FastVector[] mineCARs(QInstances;) | mine ca rs
../3-Phrases/weka:String minSupportTipText() | min support tip text
../3-Phrases/weka:double getMinSupport() | get min support
../3-Phrases/weka:void setMinSupport(D) | set min support
../3-Phrases/weka:String minimumBucketSizeTipText() | minimum bucket size tip text
../3-Phrases/weka:void setMinimumBucketSize(I) | set minimum bucket size
../3-Phrases/weka:int getMinimumBucketSize() | get minimum bucket size
../3-Phrases/weka:void updateMinMax(QInstance;) | update min max
../3-Phrases/weka:void setMinPoints(I) | set min points
../3-Phrases/weka:int getMinPoints() | get min points
../3-Phrases/weka:String minPointsTipText() | min points tip text
../3-Phrases/weka:void setMinPoints(I) | set min points
../3-Phrases/weka:int getMinPoints() | get min points
../3-Phrases/weka:String minPointsTipText() | min points tip text
../3-Phrases/weka:void updateMinDistance([D[ZQInstances;QInstance;) | update min distance
../3-Phrases/weka:void initMinMax(QInstances;) | init min max
../3-Phrases/weka:void updateMinMax(QInstance;) | update min max
../3-Phrases/weka:String minChangeTipText() | min change tip text
../3-Phrases/weka:void setMinChange(I) | set min change
../3-Phrases/weka:int getMinChange() | get min change
../3-Phrases/weka:String minStdDevTipText() | min std dev tip text
../3-Phrases/weka:void setMinStdDev(D) | set min std dev
../3-Phrases/weka:double getMinStdDev() | get min std dev
../3-Phrases/weka:String minNumClustersTipText() | min num clusters tip text
../3-Phrases/weka:void setMinNumClusters(I) | set min num clusters
../3-Phrases/weka:int getMinNumClusters() | get min num clusters
../3-Phrases/weka:String minStdDevTipText() | min std dev tip text
../3-Phrases/weka:void setMinStdDev(D) | set min std dev
../3-Phrases/weka:void setMinStdDevPerAtt([D) | set min std dev per att
../3-Phrases/weka:double getMinStdDev() | get min std dev
../3-Phrases/weka:void updateMinMax(QInstance;) | update min max
../3-Phrases/weka:void setMinimumNumberInstances(I) | set minimum number instances
../3-Phrases/weka:int getMinimumNumberInstances() | get minimum number instances
../3-Phrases/weka:int minIndex([I) | min index
../3-Phrases/weka:int minIndex([D) | min index
../3-Phrases/weka:double getMinFunction() | get min function
../3-Phrases/weka:double[] findArgmin([D[[D) | find arg min
../3-Phrases/weka:double findMinDistance(QInstances;I) | find min distance
../3-Phrases/weka:int getMinMax(QInstances;I[D) | get min max
../3-Phrases/weka:double[] getMinimumMaximum(QInstances;I) | get minimum maximum
../3-Phrases/weka:int getMinMax(QInstances;I[D) | get min max
../3-Phrases/weka:void minimizeWindows() | minimize windows
