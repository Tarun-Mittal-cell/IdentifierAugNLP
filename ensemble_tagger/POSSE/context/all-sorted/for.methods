../3-Phrases/3PS:boolean implementsIHostServiceForBean() | implements i host service for bean
../3-Phrases/3PS:boolean implementsIHostServiceForBean() | implements i host service for bean
../3-Phrases/3PS:boolean isForwarded() | is forwarded
../3-Phrases/3PS:static boolean isBitmapFormat(String format) | boolean is bitmap format
../3-Phrases/3PS:static boolean isUserAuthorisedForBlogAsBlogContributor(Blog blog) | boolean is user authorised for blog as blog contributor
../3-Phrases/Base_Verb:String getFormattedWithTwoDecimals(float value) | get formatted with two decimals
../3-Phrases/Base_Verb:void storeTasksFor(SourceFile sourceFile, CategorizedProblem tasks) | store tasks for
../3-Phrases/Base_Verb:static String getLifeCycleTaskNameForLifeCycleState(int lifeCycleState) | string get life cycle task name for life cycle state
../3-Phrases/Base_Verb:void saveMyEntityForSrvDMPckEnNoConfMyEntityForSrvDMPckEnNoConf(MyEntityForSrvDMPckEnNoConf myEntityForSrvDMPckEnNoConf) | save my entity for srv dm pck en no conf my entity for srv dm pck en no conf
../3-Phrases/Base_Verb:startAndEndTimes getStartAndEndTimesForOnTheFlyAnnotation(startAndEndTimes times) | get start and end times for on the fly annotation
../3-Phrases/Base_Verb:List getDataSetsForServer(String serverURL, String portString) | get data sets for server
../3-Phrases/Base_Verb:void waitForBandwidth() | wait for bandwidth
../3-Phrases/Base_Verb:void testJsonHashShouldNotReturnBuildSinceForNonActiveBuild() | test json hash should not return build since for non active build
../3-Phrases/Base_Verb:static void waitForEnterKey(String println) | void wait for enter key
../3-Phrases/Base_Verb:int look_for_num() | look for num
../3-Phrases/Base_Verb:StatementsForClassIF getStatementsForClass(ConnectionManagerIF conMan) | get statements for class
../3-Phrases/Base_Verb:void testOptimalEncodingSwapsBackToBForLetters() | test optimal encoding swaps back to b for letters
../3-Phrases/Base_Verb:void setFixedRangeAxisSpaceForSubplots(AxisSpace space) | set fixed range axis space for subplots
../3-Phrases/Base_Verb:void setFixedDomainAxisSpaceForSubplots(AxisSpace space) | set fixed domain axis space for subplots
../3-Phrases/Base_Verb:WSRole updateActionsForRole(WSRole wsRole, String ids) | update actions for role
../3-Phrases/Base_Verb:static String expandSqlForTable(String templateSql, Table table) | string expand sql for table
../3-Phrases/Base_Verb:static PieDataset createPieDatasetForColumn(CategoryDataset dataset, int column) | pie dataset create pie dataset for column
../3-Phrases/Base_Verb:boolean waitForRegistrationAndSynchronization(String ticket, int timeout) | wait for registration and synchronization
../3-Phrases/Base_Verb:static String getHoverTextForOffset(int offset, ErlangEditor editor) | string get hover text for offset
../3-Phrases/Base_Verb:String getForKto7Sa(long vishandle) | get for kto 7 sa
../3-Phrases/Base_Verb:static SimulatorFaultyDelayLE getConnectedGatesInFeedForwardOrder(SimulatorLogicElement inoutels, boolean latchSafe) | simulator faulty delay le get connected gates in feed forward order
../3-Phrases/Base_Verb:void createSelectConditionForWhere(Vector vSelectStatement) | create select condition for where
../3-Phrases/Base_Verb:void testForewardWithAttachment() | test foreward with attachment
../3-Phrases/Base_Verb:static GPFunctionSet functionSetFor(String functionSetName, EvolutionState state) | gp function set function set for
../3-Phrases/Base_Verb:void askForParameters(String classExpr) | ask for parameters
../3-Phrases/Base_Verb:H2dTelemacBcParameter getLimiteParameterFor(H2dBoundaryType _t) | get limite parameter for
../3-Phrases/Base_Verb:String getHtmlFor() | get html for
../3-Phrases/Base_Verb:void addHandlerForMimeType(String mimetype, String className) | add handler for mime type
../3-Phrases/Base_Verb:Method getCreateMethodForDOI(DomainObjectEBLocalHome aHomeInterface, IdentifiedDomainObjectDOI aDOI) | get create method for doi
../3-Phrases/Base_Verb:Rectangle positionForDisplay(Rectangle in) | position for display
../3-Phrases/Base_Verb:void testCreateUniqueEntityEntryKeyForAssignIdGenerator() | test create unique entity entry key for assign id generator
../3-Phrases/Base_Verb:String getKeyWordsForImage(DiskObject f) | get key words for image
../3-Phrases/Base_Verb:long queryForLong(String sql, Object args, int argTypes) | query for long
../3-Phrases/Base_Verb:Runner prepareForAbort(Runner runners) | prepare for abort
../3-Phrases/Base_Verb:get events for period(calendar calendar, date dt start, date dt end)
../3-Phrases/Base_Verb:ListConfigurationVO getForUserByTypeAndName(Type type, String name, UserVO user) | get for user by type and name
../3-Phrases/Base_Verb:void addOnFormKill(EventHandler value) | add on form kill
../3-Phrases/Base_Verb:void getClassForByName(String className) | get class for by name
../3-Phrases/Base_Verb:static MediaType getMediaTypeForSchema(String schema) | media type get media type for schema
../3-Phrases/Base_Verb:Collection getMaterialItemInfosBySupSetForPrepare(Integer p0_Integer) | get material item infos by sup set for prepare
../3-Phrases/Base_Verb:Errors validateForDelete(Release p0_Release) | validate for delete
../3-Phrases/Base_Verb:void expectValidateForDelete(Task p0_Task, Throwable toThrow) | expect validate for delete
../3-Phrases/Base_Verb:List queryForList(String sql, Map paramMap, Class elementType) | query for list
../3-Phrases/Base_Verb:long rightTickForMove() | right tick for move
../3-Phrases/Base_Verb:static int parseStringForDateInformation(int information, String stringValue, Calendar cal, int fromI) | int parse string for date information
../3-Phrases/Base_Verb:void initForContext(Context context) | init for context
../3-Phrases/Base_Verb:void testForID() | test for id
../3-Phrases/Base_Verb:int GetAdjCountFor(int iObjId) | get adj count for
../3-Phrases/Base_Verb:void setAdjustForWindow(boolean TF) | set adjust for window
../3-Phrases/Base_Verb:BIN findBinForInsert(Key key, LogManager logManager, INList inMemoryINs) | find bin for insert
../3-Phrases/Base_Verb:UserGroup getForName(String name) | get for name
../3-Phrases/Base_Verb:Object getIdForObject(Object object) | get id for object
../3-Phrases/Base_Verb:static OpenFileFilter getFileFilterForField(String fieldName) | open file filter get file filter for field
../3-Phrases/Base_Verb:void setApplication_for_selected_or_unselected_KB() | set application for selected or unselected kb
../3-Phrases/Base_Verb:sfvec3f getNormalForVertex(int vertexNum, di_progress progress) | get normal for vertex
../3-Phrases/Base_Verb:ArrayList getSummaryForProtein(ArrayList Gis) | get summary for protein
../3-Phrases/Base_Verb:void format() | format
../3-Phrases/Base_Verb:void format() | format
../3-Phrases/Base_Verb:void forget(String canonical, CandidateURI item) | forget
../3-Phrases/Base_Verb:ActionForward edit(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) | edit
../3-Phrases/Base_Verb:StringBuffer format(double number, StringBuffer toAppendTo, FieldPosition pos) | format
../3-Phrases/Base_Verb:String format(Date date) | format
../3-Phrases/Base_Verb:StringBuffer format(long number, StringBuffer toAppendTo, FieldPosition pos) | format
../3-Phrases/Base_Verb:ActionForward execute(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) | execute
../3-Phrases/Base_Verb:ActionForward execute(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) | execute
../3-Phrases/Base_Verb:void update(String name, String text, String fore, String back, int x, int y, int sx, int sy, String relTo, Container parent) | update
../3-Phrases/Base_Verb:JIFileSystem format(Device device, Object specificOptions) | format
../3-Phrases/Base_Verb:ActionForward perform(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) | perform
../3-Phrases/Base_Verb:boolean delete(boolean force) | delete
../3-Phrases/Base_Verb:void execute(SQLForm form, String command, String SQLString) | execute
../3-Phrases/Base_Verb:void forward(HttpServletRequest request, HttpServletResponse response) | forward
../3-Phrases/Base_Verb:ActionForward display(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) | display
../3-Phrases/Base_Verb:String format(LogRecord record) | format
../3-Phrases/Base_Verb:String format(int intval) | format
../3-Phrases/Base_Verb:static void glGetSeparableFilter(int target, int format, int type, DoubleBuffer row, IntBuffer column, ShortBuffer span) | void gl get separable filter
../3-Phrases/Base_Verb:AbstractWizardSequence createWizardSequence(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) | create wizard sequence
../3-Phrases/Base_Verb:static int getTotalFormalCharge(IAtomContainer atomContainer) | int get total formal charge
../3-Phrases/Base_Verb:static String formatTime(long seconds) | string format time
../3-Phrases/Base_Verb:String getFailureForward() | get failure forward
../3-Phrases/Base_Verb:String getNameFormat() | get name format
../3-Phrases/Base_Verb:void storeItemsMap(HttpServletRequest request, ActionForm form) | store items map
../3-Phrases/Base_Verb:String getFormula() | get formula
../3-Phrases/Base_Verb:String _format_i(int value) | format i
../3-Phrases/Base_Verb:void makePartialForeignKey(String name, StringBuffer sql) | make partial foreign key
../3-Phrases/Base_Verb:String getNewUserFormId() | get new user form id
../3-Phrases/Base_Verb:static StringBuffer removeFormat(StringBuffer value, String tag) | string buffer remove format
../3-Phrases/Base_Verb:String getOutputFormat() | get output format
../3-Phrases/Base_Verb:String getFormFieldValue() | get form field value
../3-Phrases/Base_Verb:void setForeground(Color color) | set foreground
../3-Phrases/Base_Verb:String getFormatPattern(String className, String pattern, Locale locale) | get format pattern
../3-Phrases/Base_Verb:String formatAttributeValue(Object value) | format attribute value
../3-Phrases/Base_Verb:void setLongFormatter(LongFormatter formatter) | set long formatter
../3-Phrases/Base_Verb:static void glGetColorTableEXT(int target, int format, int type, ShortBuffer data) | void gl get color table ext
../3-Phrases/Base_Verb:EdgeStyleFormatAction createNodeStyleFormatAction(MindMapNode selected, String style) | create node style format action
../3-Phrases/Base_Verb:void insertFormElement(Tag baseTag, String baseElement, Hashtable attribs, String fieldNames, String fieldTypes, boolean hasClosingTag) | insert form element
../3-Phrases/Base_Verb:static String formatEquipment(int index, Mounted mount, Entity entity) | string format equipment
../3-Phrases/Base_Verb:void forceTotalSizeValid() | force total size valid
../3-Phrases/Base_Verb:void setForeground(Color c) | set foreground
../3-Phrases/Base_Verb:void formatCallout(Emitter rtfEmitter, Callout callout) | format callout
../3-Phrases/Base_Verb:String getForumLastPostMemberName() | get forum last post member name
../3-Phrases/Base_Verb:void glConvolutionFilter1D(int target, int internalformat, int width, int format, int type, ByteBuffer image) | gl convolution filter 1 d
../3-Phrases/Base_Verb:HTMLFormElement getForm() | get form
../3-Phrases/Base_Verb:void setFormat(String format) | set format
../3-Phrases/Base_Verb:void testNotWellFormed_IbmNotWfP56Ibm56n02xml() | test not well formed ibm not wf p 56 ibm 56 n 02 xml
../3-Phrases/Base_Verb:void testNotWellFormed_IbmNotWfP85Ibm85n184xml() | test not well formed ibm not wf p 85 ibm 85 n 184 xml
../3-Phrases/Base_Verb:void testNotWellFormed_IbmNotWfP85Ibm85n21xml() | test not well formed ibm not wf p 85 ibm 85 n 21 xml
../3-Phrases/Base_Verb:void initValueForm() | init value form
../3-Phrases/Base_Verb:Format getFormat() | get format
../3-Phrases/Base_Verb:void setCategoryForegroundColor(int which, Color color) | set category foreground color
../3-Phrases/Base_Verb:void setForcelacheck(boolean forceLACheck) | set force la check
../3-Phrases/Base_Verb:StringBuilder formatClassicalMemory(ArrayList<VariableValue> memState) | format classical memory
../3-Phrases/Base_Verb:void setDateFormat(String javaDatePattern) | set date format
../3-Phrases/Base_Verb:void TestDateFormat() | test date format
../3-Phrases/Base_Verb:ILogContextFormatter getFormatter() | get formatter
../3-Phrases/Base_Verb:void setReportValues(String id, String name, String description, String periodicityTypeID, String forwardingTypeID, Date date) | set report values
../3-Phrases/Base_Verb:void setDisplayformatlocalekey(String string) | set display format locale key
../3-Phrases/Base_Verb:void setFormatString(String format) | set format string
../3-Phrases/Base_Verb:String readForm(String fname, String server) | read form
../3-Phrases/Base_Verb:int getFormDimension() | get form dimension
../3-Phrases/Base_Verb:static String getFormattedString(String key, Object arg) | string get formatted string
../3-Phrases/Base_Verb:String FormatHTMLHeader(String HeaderName, String HeaderBody) | format html header
../3-Phrases/Base_Verb:Color getForegroundColor() | get foreground color
../3-Phrases/Base_Verb:void setFormat(Format value) | set format
../3-Phrases/Base_Verb:String formatSuffix() | format suffix
../3-Phrases/Base_Verb:void putSupplier(GenericDelegator delegator, Map formsData) | put supplier
../3-Phrases/Base_Verb:String getFormattingElementsParentXPath() | get formatting elements parent x path
../3-Phrases/Base_Verb:void addFormRow(Vector<Element> Cols, String txt, String name, String content, Element msg) | add form row
../3-Phrases/Base_Verb:static void setDateTimeFormat(String dateTimeFormat) | void set date time format
../3-Phrases/Base_Verb:static SimpleDecimalFormat getInstance() | simple decimal format get instance
../3-Phrases/Base_Verb:static boolean validateRequiredFormEnteredParam(String propertyKey, String value, ActionErrors errors) | boolean validate required form entered param
../3-Phrases/Base_Verb:void initialiseForm(ToolParent theParent) | initialise form
../3-Phrases/Base_Verb:static void setMenuBarForeground(JMenuBar menuBar, Color color) | void set menu bar foreground
../3-Phrases/Base_Verb:void testProjectForm() | test project form
../3-Phrases/Base_Verb:void importThesaurus(InputStream inputstream, int format, Vector metadata) | import thesaurus
../3-Phrases/Base_Verb:void setForeground(Color c) | set foreground
../3-Phrases/Base_Verb:String getImageFormat() | get image format
../3-Phrases/Base_Verb:void loadTargetFormatDataTree(IXmlFormatModel m, Vector<Document> eDataList) | load target format data tree
../3-Phrases/Base_Verb:void setDomainTickFormat(NumberFormat domainTickFormat) | set domain tick format
../3-Phrases/Base_Verb:void testNotWellFormed_NotWfSa159() | test not well formed not wf sa 159
../3-Phrases/Base_Verb:String getFormatName() | get format name
../3-Phrases/Base_Verb:PageFormat initPageFormat(Node node) | init page format
../3-Phrases/Base_Verb:void render3dForeground(GL gl, nodeBean n, mfint32 instance, mfint32 max) | render 3 d foreground
../3-Phrases/Dguitar:void waitFor(J) | wait for
../3-Phrases/Dguitar:CONS GP3FormatException(QString;) | gp 3 format exception
../3-Phrases/Dguitar:CONS GP4FormatException(QString;) | gp 4 format exception
../3-Phrases/Dguitar:CONS GP4FormatException(QString;QThrowable;) | gp 4 format exception
../3-Phrases/Dguitar:String stringFor(IQString;IQString;) | string for
../3-Phrases/Dguitar:CONS GPFormatException(QString;) | gp format exception
../3-Phrases/Dguitar:CONS GPFormatException(QString;QThrowable;) | gp format exception
../3-Phrases/Dguitar:int getIndexFor(QJCheckBox;) | get index for
../3-Phrases/Dguitar:void formInternalFrameClosing(Qjavax.swing.event.InternalFrameEvent;) | form internal frame closing
../3-Phrases/Dguitar:Point positionForEON(QGP4EffectsOnNote;QPoint;QDimension;) | position for eon
../3-Phrases/Dguitar:void formWindowClosing(Qjava.awt.event.WindowEvent;) | form window closing
../3-Phrases/Dguitar:void waitForCompletion() | wait for completion
../3-Phrases/Dguitar:void waitForCompletion() | wait for completion
../3-Phrases/DrawSWF:void tagButtonCXForm(IQColorTransform;) | tag button cx form
../3-Phrases/DrawSWF:void waitForFrame(IQString;) | wait for frame
../3-Phrases/DrawSWF:void waitForFrame(QString;) | wait for frame
../3-Phrases/DrawSWF:Shape shapeForImage(QInputStream;[I) | shape for image
../3-Phrases/DrawSWF:Shape shapeForImage(QImage;DD) | shape for image
../3-Phrases/DrawSWF:int getFormat() | get format
../3-Phrases/DrawSWF:boolean isUsedForHitArea() | is used for hit area
../3-Phrases/DrawSWF:boolean isUsedForUp() | is used for up
../3-Phrases/DrawSWF:boolean isUsedForDown() | is used for down
../3-Phrases/DrawSWF:boolean isUsedForOver() | is used for over
../3-Phrases/DrawSWF:void usedForHitArea(Z) | used for hit area
../3-Phrases/DrawSWF:void usedForUp(Z) | used for up
../3-Phrases/DrawSWF:void usedForDown(Z) | used for down
../3-Phrases/DrawSWF:void usedForOver(Z) | used for over
../3-Phrases/DrawSWF:void parseButtonCXForm(QInStream;) | parse button cx form
../3-Phrases/DrawSWF:void tagButtonCXForm(IQColorTransform;) | tag button cx form
../3-Phrases/DrawSWF:void tagButtonCXForm(IQColorTransform;) | tag button cx form
../3-Phrases/DrawSWF:void tagButtonCXForm(IQColorTransform;) | tag button cx form
../3-Phrases/DrawSWF:void tagButtonCXForm(IQColorTransform;) | tag button cx form
../3-Phrases/DrawSWF:void waitForFrame(IQString;) | wait for frame
../3-Phrases/DrawSWF:void waitForFrame(QString;) | wait for frame
../3-Phrases/DrawSWF:void waitForFrame(IQString;) | wait for frame
../3-Phrases/DrawSWF:void waitForFrame(QString;) | wait for frame
../3-Phrases/DrawSWF:void waitForFrame(IQString;) | wait for frame
../3-Phrases/DrawSWF:void waitForFrame(QString;) | wait for frame
../3-Phrases/DrawSWF:CONS FormatRed(QCachableRed;QSampleModel;) | format red
../3-Phrases/DrawSWF:CONS FormatRed(QCachableRed;QColorModel;) | format red
../3-Phrases/drjava2:void testFormat() | test format
../3-Phrases/drjava2:void testFormat() | test format
../3-Phrases/drjava2:void testFormat() | test format
../3-Phrases/drjava2:void testFormat() | test format
../3-Phrases/drjava2:void testFormat() | test format
../3-Phrases/drjava2:CONS ForcedChoiceOption(QString;QString;QCollection<QString;>;) | forced choice option
../3-Phrases/drjava2:String format(QString;) | format
../3-Phrases/drjava2:String format(QFile;) | format
../3-Phrases/drjava2:String format(QColor;) | format
../3-Phrases/drjava2:String format(QFont;) | format
../3-Phrases/drjava2:String format(QKeyStroke;) | format
../3-Phrases/drjava2:String format(QVector<QT;>;) | format
../3-Phrases/drjava2:CONS ForcedChoiceOptionTest(QString;) | forced choice option test
../3-Phrases/drjava2:void testFormat() | test format
../3-Phrases/drjava2:void testFormat() | test format
../3-Phrases/drjava2:void testLocaleSpecificFormat() | test locale specific format
../3-Phrases/drjava2:String format(QString;) | format
../3-Phrases/drjava2:String format(QT;) | format
../3-Phrases/drjava2:void testFormat() | test format
../3-Phrases/drjava2:void testFormat() | test format
../3-Phrases/drjava2:String format(QT;) | format
../3-Phrases/drjava2:void testFormat() | test format
../3-Phrases/drjava2:void prepareForRun(QOpenDefinitionsDocument;) | prepare for run
../3-Phrases/drjava2:PageFormat getPageFormat() | get page format
../3-Phrases/drjava2:void setPageFormat(QPageFormat;) | set page format
../3-Phrases/drjava2:void forceQuit() | force quit
../3-Phrases/drjava2:OpenDefinitionsDocument getDocumentForFile(QFile;) | get document for file
../3-Phrases/drjava2:OpenDefinitionsDocument getODDForDocument(QAbstractDocumentInterface;) | get odd for document
../3-Phrases/drjava2:int balanceForward() | balance forward
../3-Phrases/drjava2:Color getForeground(QAttributeSet;) | get foreground
../3-Phrases/drjava2:String fixPathForNavigator(QString;) | fix path for navigator
../3-Phrases/drjava2:void testGetDocumentForFile() | test get document for file
../3-Phrases/drjava2:void testForceFileOpen() | test force file open
../3-Phrases/drjava2:void testSaveAsExistsForOverwrite() | test save as exists for overwrite
../3-Phrases/drjava2:OpenDefinitionsDocument getDocumentForFile(QFile;) | get document for file
../3-Phrases/drjava2:int balanceForward() | balance forward
../3-Phrases/drjava2:int balanceForward() | balance forward
../3-Phrases/drjava2:File classForJava(QFile;QString;) | class for java
../3-Phrases/drjava2:void prepareForRun(QOpenDefinitionsDocument;) | prepare for run
../3-Phrases/drjava2:void prepareForRun(QOpenDefinitionsDocument;) | prepare for run
../3-Phrases/drjava2:String adapterForCompiler(QJavaVersion;) | adapter for compiler
../3-Phrases/drjava2:String adapterForDebugger(QJavaVersion;) | adapter for debugger
../3-Phrases/drjava2:void prepareForRun(QOpenDefinitionsDocument;) | prepare for run
../3-Phrases/drjava2:String fixPathForNavigator(QString;) | fix path for navigator
../3-Phrases/drjava2:PageFormat getPageFormat() | get page format
../3-Phrases/drjava2:void setPageFormat(QPageFormat;) | set page format
../3-Phrases/drjava2:void forceQuit() | force quit
../3-Phrases/drjava2:OpenDefinitionsDocument getODDForDocument(QAbstractDocumentInterface;) | get odd for document
../3-Phrases/drjava2:OpenDefinitionsDocument getDocumentForFile(QFile;) | get document for file
../3-Phrases/drjava2:int balanceForward() | balance forward
../3-Phrases/drjava2:Color getForeground(QAttributeSet;) | get foreground
../3-Phrases/drjava2:String fixPathForNavigator(QString;) | fix path for navigator
../3-Phrases/drjava2:PageFormat getPageFormat() | get page format
../3-Phrases/drjava2:void setPageFormat(QPageFormat;) | set page format
../3-Phrases/drjava2:void forceQuit() | force quit
../3-Phrases/drjava2:OpenDefinitionsDocument getODDForDocument(QAbstractDocumentInterface;) | get odd for document
../3-Phrases/drjava2:OpenDefinitionsDocument getDocumentForFile(QFile;) | get document for file
../3-Phrases/drjava2:void testGetDocumentForFile() | test get document for file
../3-Phrases/drjava2:boolean _prepareForCompile() | prepare for compile
../3-Phrases/drjava2:OpenDefinitionsDocument getDocumentForFile(QFile;) | get document for file
../3-Phrases/drjava2:void _shutdownAndWaitForInteractionEnded() | shutdown and wait for interaction ended
../3-Phrases/drjava2:void _switchToInterpreterForThreadReference(QThreadReference;) | switch to interpreter for thread reference
../3-Phrases/drjava2:void setFormattingForState(QGraphics;I) | set formatting for state
../3-Phrases/drjava2:void testFor() | test for
../3-Phrases/drjava2:void testFor2() | test for 2
../3-Phrases/drjava2:void setFormattingForState(QGraphics;I) | set formatting for state
../3-Phrases/drjava2:void testForStatement() | test for statement
../3-Phrases/drjava2:void testMultiLineForStatement() | test multi line for statement
../3-Phrases/drjava2:void testStartOfStmtCheckForEndCharacters() | test start of stmt check for end characters
../3-Phrases/drjava2:void testEmbeddedBraceForms() | test embedded brace forms
../3-Phrases/drjava2:void testFieldsForCurrentLocation() | test fields for current location
../3-Phrases/drjava2:int balanceForward() | balance forward
../3-Phrases/drjava2:int balanceForward() | balance forward
../3-Phrases/drjava2:int balanceForward() | balance forward
../3-Phrases/drjava2:void testBalanceForward() | test balance forward
../3-Phrases/drjava2:void testPromptForDestination() | test prompt for destination
../3-Phrases/drjava2:void setForceTestSuffix(Z) | set force test suffix
../3-Phrases/drjava2:File getFileForClassName(QString;) | get file for class name
../3-Phrases/drjava2:void setForceTestSuffix(Z) | set force test suffix
../3-Phrases/drjava2:File getFileForClassName(QString;) | get file for class name
../3-Phrases/drjava2:void testGetPageFormat() | test get page format
../3-Phrases/drjava2:PageFormat getPageFormat(I) | get page format
../3-Phrases/drjava2:void forwardSearch(QString;) | forward search
../3-Phrases/drjava2:void testSaveAsExistsForOverwrite() | test save as exists for overwrite
../3-Phrases/drjava2:void setWaitingForFirstInterpreter(Z) | set waiting for first interpreter
../3-Phrases/drjava2:void forwardHistorySearch(QString;) | forward history search
../3-Phrases/drjava2:void forwardSearchInteractionsInHistory() | forward search interactions in history
../3-Phrases/drjava2:T forNoValue() | for no value
../3-Phrases/drjava2:T forStringValue(QString;) | for string value
../3-Phrases/drjava2:T forCharValue(QCharacter;) | for char value
../3-Phrases/drjava2:T forNumberValue(QNumber;) | for number value
../3-Phrases/drjava2:T forBooleanValue(QBoolean;) | for boolean value
../3-Phrases/drjava2:T forObjectValue(QString;) | for object value
../3-Phrases/drjava2:T forException(QString;) | for exception
../3-Phrases/drjava2:T forUnexpectedException(QThrowable;) | for unexpected exception
../3-Phrases/drjava2:T forBusy() | for busy
../3-Phrases/drjava2:InterpretResult forNone() | for none
../3-Phrases/drjava2:InterpretResult forSome(QObject;) | for some
../3-Phrases/drjava2:File getFileForClassName(QString;) | get file for class name
../3-Phrases/drjava2:File getFileForClassName(QString;) | get file for class name
../3-Phrases/drjava2:File getFileForClassName(QString;) | get file for class name
../3-Phrases/drjava2:Void forNoValue() | for no value
../3-Phrases/drjava2:Void forObjectValue(QString;) | for object value
../3-Phrases/drjava2:Void forStringValue(QString;) | for string value
../3-Phrases/drjava2:Void forCharValue(QCharacter;) | for char value
../3-Phrases/drjava2:Void forNumberValue(QNumber;) | for number value
../3-Phrases/drjava2:Void forBooleanValue(QBoolean;) | for boolean value
../3-Phrases/drjava2:Void forException(QString;) | for exception
../3-Phrases/drjava2:Void forUnexpectedException(QThrowable;) | for unexpected exception
../3-Phrases/drjava2:Void forBusy() | for busy
../3-Phrases/drjava2:File getFileForClassName(QString;) | get file for class name
../3-Phrases/drjava2:Void forNoValue() | for no value
../3-Phrases/drjava2:Void forStringValue(QString;) | for string value
../3-Phrases/drjava2:Void forCharValue(QCharacter;) | for char value
../3-Phrases/drjava2:Void forNumberValue(QNumber;) | for number value
../3-Phrases/drjava2:Void forBooleanValue(QBoolean;) | for boolean value
../3-Phrases/drjava2:Void forObjectValue(QString;) | for object value
../3-Phrases/drjava2:Void forException(QString;) | for exception
../3-Phrases/drjava2:Void forUnexpectedException(QThrowable;) | for unexpected exception
../3-Phrases/drjava2:Void forBusy() | for busy
../3-Phrases/drjava2:List<QInteger;> forEmpty(QEmpty;) | for empty
../3-Phrases/drjava2:List<QInteger;> forCons(QCons;) | for cons
../3-Phrases/drjava2:List<QInteger;> forBoolAtom(QBoolAtom;) | for bool atom
../3-Phrases/drjava2:List<QInteger;> forNumberAtom(QNumberAtom;) | for number atom
../3-Phrases/drjava2:List<QInteger;> forTextAtom(QTextAtom;) | for text atom
../3-Phrases/drjava2:List<QDocFile;> forEmpty(QEmpty;) | for empty
../3-Phrases/drjava2:List<QDocFile;> forCons(QCons;) | for cons
../3-Phrases/drjava2:DocFile forCons(QCons;) | for cons
../3-Phrases/drjava2:DocFile forEmpty(QEmpty;) | for empty
../3-Phrases/drjava2:List<QString;> forEmpty(QEmpty;) | for empty
../3-Phrases/drjava2:List<QString;> forCons(QCons;) | for cons
../3-Phrases/drjava2:String forEmpty(QEmpty;) | for empty
../3-Phrases/drjava2:String forCons(QCons;) | for cons
../3-Phrases/drjava2:String forBoolAtom(QBoolAtom;) | for bool atom
../3-Phrases/drjava2:String forNumberAtom(QNumberAtom;) | for number atom
../3-Phrases/drjava2:String forTextAtom(QTextAtom;) | for text atom
../3-Phrases/drjava2:Integer forEmpty(QEmpty;) | for empty
../3-Phrases/drjava2:Integer forCons(QCons;) | for cons
../3-Phrases/drjava2:Integer forBoolAtom(QBoolAtom;) | for bool atom
../3-Phrases/drjava2:Integer forNumberAtom(QNumberAtom;) | for number atom
../3-Phrases/drjava2:Integer forTextAtom(QTextAtom;) | for text atom
../3-Phrases/drjava2:List<QDebugWatchData;> forEmpty(QEmpty;) | for empty
../3-Phrases/drjava2:List<QDebugWatchData;> forCons(QCons;) | for cons
../3-Phrases/drjava2:List<QDebugBreakpointData;> forEmpty(QEmpty;) | for empty
../3-Phrases/drjava2:List<QDebugBreakpointData;> forCons(QCons;) | for cons
../3-Phrases/drjava2:DebugBreakpointData forCons(QCons;) | for cons
../3-Phrases/drjava2:DebugBreakpointData forEmpty(QEmpty;) | for empty
../3-Phrases/drjava2:List<QFileRegion;> forEmpty(QEmpty;) | for empty
../3-Phrases/drjava2:List<QFileRegion;> forCons(QCons;) | for cons
../3-Phrases/drjava2:FileRegion forCons(QCons;) | for cons
../3-Phrases/drjava2:FileRegion forEmpty(QEmpty;) | for empty
../3-Phrases/drjava2:RegionListUserObj<QR;> getUserObjForRegion(QR;) | get user obj for region
../3-Phrases/drjava2:void addActionForKeyStroke(QKeyStroke;QAction;) | add action for key stroke
../3-Phrases/drjava2:void addActionForKeyStroke(QKeyStroke;QAction;) | add action for key stroke
../3-Phrases/drjava2:int _getIndexForError(QDJError;) | get index for error
../3-Phrases/drjava2:void _forceQuit() | force quit
../3-Phrases/drjava2:void prepareForRun(QOpenDefinitionsDocument;) | prepare for run
../3-Phrases/drjava2:String getTextFor(QOpenDefinitionsDocument;) | get text for
../3-Phrases/drjava2:void forwardRegion() | forward region
../3-Phrases/drjava2:AbstractAction getForwardAction() | get forward action
../3-Phrases/drjava2:RegionListUserObj<QBrowserDocumentRegion;> getUserObjForRegion(QBrowserDocumentRegion;) | get user obj for region
../3-Phrases/drjava2:void setForeground(QColor;) | set foreground
../3-Phrases/drjava2:CONS ForegroundColorListener(QComponent;) | foreground color listener
../3-Phrases/drjava2:CONS ForcedChoiceOptionComponent(QForcedChoiceOption;QString;QSwingFrame;) | forced choice option component
../3-Phrases/drjava2:CONS ForcedChoiceOptionComponent(QForcedChoiceOption;QString;QSwingFrame;QString;) | forced choice option component
../3-Phrases/drjava2:String force(QX;QString;) | force
../3-Phrases/drjava2:String force(QX;QString;) | force
../3-Phrases/drjava2:String force(QX;QString;) | force
../3-Phrases/drjava2:String force(QX;QString;) | force
../3-Phrases/drjava2:String force(QX;QString;) | force
../3-Phrases/drjava2:String force(QX;QString;) | force
../3-Phrases/drjava2:String force(QX;QString;) | force
../3-Phrases/drjava2:String fixPathFormat(QString;) | fix path format
../3-Phrases/drjava2:int waitFor() | wait for
../3-Phrases/drjava2:int waitFor() | wait for
../3-Phrases/drjava2:int waitFor() | wait for
../3-Phrases/drjava2:void setForeground(QColor;) | set foreground
../3-Phrases/drjava2:LeafNode<QItemT;> getNodeForDoc(QItemT;) | get node for doc
../3-Phrases/drjava2:ReturnType forList(QIDocumentNavigator<QItemT;>;QInType;) | for list
../3-Phrases/drjava2:ReturnType forTree(QIDocumentNavigator<QItemT;>;QInType;) | for tree
../3-Phrases/drjava2:Ret forEmpty(QEmpty;) | for empty
../3-Phrases/drjava2:Ret forCons(QCons;) | for cons
../3-Phrases/drjava2:Ret forBoolAtom(QBoolAtom;) | for bool atom
../3-Phrases/drjava2:Ret forNumberAtom(QNumberAtom;) | for number atom
../3-Phrases/drjava2:Ret forTextAtom(QTextAtom;) | for text atom
../3-Phrases/drjava2:Ret forEmpty(QEmpty;) | for empty
../3-Phrases/drjava2:Ret forCons(QCons;) | for cons
../3-Phrases/drjava2:String forEmpty(QEmpty;) | for empty
../3-Phrases/drjava2:String forCons(QCons;) | for cons
../3-Phrases/drjava2:String forBoolAtom(QBoolAtom;) | for bool atom
../3-Phrases/drjava2:String forNumberAtom(QNumberAtom;) | for number atom
../3-Phrases/drjava2:String forTextAtom(QTextAtom;) | for text atom
../3-Phrases/drjava2:String forEmpty(QEmpty;) | for empty
../3-Phrases/drjava2:String forCons(QCons;) | for cons
../3-Phrases/drjava2:String forBoolAtom(QBoolAtom;) | for bool atom
../3-Phrases/drjava2:String forNumberAtom(QNumberAtom;) | for number atom
../3-Phrases/drjava2:String forTextAtom(QTextAtom;) | for text atom
../3-Phrases/drjava2:String formatRep(QFile;) | format rep
../3-Phrases/drjava2:void forceInsertText(IQString;QString;) | force insert text
../3-Phrases/drjava2:void forceRemoveText(II) | force remove text
../3-Phrases/drjava2:void forceInsertText(IQString;QString;) | force insert text
../3-Phrases/drjava2:void forceRemoveText(II) | force remove text
../3-Phrases/drjava2:void forceInsertText(IQString;QString;) | force insert text
../3-Phrases/drjava2:void forceRemoveText(II) | force remove text
../3-Phrases/freecol2:ArrayList<QGoods;> getGoodsForSaleInIndianSettlement(QUnit;QSettlement;) | get goods for sale in indian settlement
../3-Phrases/freecol2:void scoutForeignColony(QUnit;QDirection;) | scout foreign colony
../3-Phrases/freecol2:void payForBuilding(QColony;) | pay for building
../3-Phrases/freecol2:Element getForeignAffairsReport() | get foreign affairs report
../3-Phrases/freecol2:Integer getTurnForMessageIgnored(QString;) | get turn for message ignored
../3-Phrases/freecol2:ScoutAction showScoutForeignColonyDialog(QColony;QUnit;) | show scout foreign colony dialog
../3-Phrases/freecol2:void updateGotoPathForActiveUnit() | update goto path for active unit
../3-Phrases/freecol2:Color getForegroundColor(QColor;) | get foreground color
../3-Phrases/freecol2:void forceReposition() | force reposition
../3-Phrases/freecol2:void loadForests(QGraphicsConfiguration;QClass<QFreeCol;>;Z) | load forests
../3-Phrases/freecol2:Image getForestImage(QTileType;) | get forest image
../3-Phrases/freecol2:CONS FortifyAction(QFreeColClient;) | fortify action
../3-Phrases/freecol2:CONS ReportForeignAction(QFreeColClient;) | report foreign action
../3-Phrases/freecol2:DecimalFormat getModifierFormat() | get modifier format
../3-Phrases/freecol2:CONS ReportForeignAffairPanel(QCanvas;) | report foreign af fair panel
../3-Phrases/freecol2:UnitType getExpertForProducing(QGoodsType;) | get expert for producing
../3-Phrases/freecol2:CONS TextFormatter() | text formatter
../3-Phrases/freecol2:String format(QLogRecord;) | format
../3-Phrases/freecol2:int paidForSale(QGoodsType;) | paid for sale
../3-Phrases/freecol2:int getPaidForSale() | get paid for sale
../3-Phrases/freecol2:void setPaidForSale(I) | set paid for sale
../3-Phrases/freecol2:int getProductionFor(QGoodsType;I) | get production for
../3-Phrases/freecol2:boolean isForested() | is for ested
../3-Phrases/freecol2:boolean checkForNewMissionaryConvert() | check for new missionary convert
../3-Phrases/freecol2:void checkForNewIndian() | check for new indian
../3-Phrases/freecol2:String getArtForest() | get art forest
../3-Phrases/freecol2:boolean isForested() | is for ested
../3-Phrases/freecol2:boolean checkForDeath(QPlayer;) | check for death
../3-Phrases/freecol2:int getTurnsForRepair() | get turns for repair
../3-Phrases/freecol2:Building getBuildingForProducing(QGoodsType;) | get building for producing
../3-Phrases/freecol2:Building getBuildingForConsuming(QGoodsType;) | get building for consuming
../3-Phrases/freecol2:WorkLocation getVacantWorkLocationFor(QUnit;) | get vacant work location for
../3-Phrases/freecol2:ColonyTile getVacantColonyTileFor(QUnit;QGoodsType;) | get vacant colony tile for
../3-Phrases/freecol2:int getVacantColonyTileProductionFor(QUnit;QGoodsType;) | get vacant colony tile production for
../3-Phrases/freecol2:int getPriceForBuilding() | get price for building
../3-Phrases/freecol2:void payForBuilding() | pay for building
../3-Phrases/freecol2:void checkForNewColonist() | check for new colonist
../3-Phrases/freecol2:ModelMessage checkForGovMgtChangeMessage() | check for gov mgt change message
../3-Phrases/freecol2:void waitForAndSetNewQuestionId() | wait for and set new question id
../3-Phrases/freecol2:NetworkReplyObject waitForNetworkReply(I) | wait for network reply
../3-Phrases/freecol2:NetworkReplyObject waitForStreamedNetworkReply(I) | wait for streamed network reply
../3-Phrases/freecol2:void forEachChild(QNode;QMethod;) | for each child
../3-Phrases/freecol2:void revealMapForAllPlayers() | reveal map for all players
../3-Phrases/freecol2:void checkForREFDefeat() | check for ref defeat
../3-Phrases/freecol2:boolean isWorkForREF() | is work for ref
../3-Phrases/freecol2:boolean isWorkForREF() | is work for ref
../3-Phrases/freecol2:AIUnit getBraveForSeekAndDestroy(QIndianSettlement;) | get br ave for seek and destroy
../3-Phrases/freecol2:boolean isTargetValidForSeekAndDestroy(QUnit;QUnit;) | is target valid for seek and destroy
../3-Phrases/freecol2:boolean isTargetValidForSeekAndDestroy(QUnit;QUnit;) | is target valid for seek and destroy
../3-Phrases/freecol2:boolean checkForREFDefeat() | check for ref defeat
../3-Phrases/freecol2:Element payForBuilding(QConnection;QElement;) | pay for building
../3-Phrases/freecol2:Element foreignAffairs(QConnection;QElement;) | foreign affairs
../3-Phrases/freecol2:void checkGeneralCondForTradeQuery(QElement;QPlayer;QUnit;QSettlement;QGoods;) | check general cond for trade query
../3-Phrases/freecol2:Element goodsForSaleRequest(QConnection;QElement;) | goods for sale request
../3-Phrases/freecol2:Player checkForWinner() | check for winner
../3-Phrases/freecol2:UnitType generateSkillForLocation(QMap;QTile;QNationType;) | generate skill for location
../3-Phrases/freecol2:int getPercentageOfForests() | get percentage of forests
../3-Phrases/freemind:CONS FormatPaste() | format paste
../3-Phrases/freemind:void pasteFormat(QMindMapNode;) | paste format
../3-Phrases/freemind:void copyFormat(QMindMapNode;) | copy format
../3-Phrases/freemind:String transForm(QSource;QInputStream;) | trans form
../3-Phrases/freemind:void transForm(QSource;QInputStream;QFile;QClickableImageCreator;) | trans form
../3-Phrases/freemind:CONS FormatNewNodes(QModeController;QMindMap;) | format new nodes
../3-Phrases/freemind:void detectFormatChanges(QXmlAction;) | detect format changes
../3-Phrases/freemind:void FormularEntity(QString;QString;QString;QString;) | formular entity
../3-Phrases/freemind:void FormularEntity(QXMLElement;) | formular entity
../3-Phrases/freemind:CONS FormularEditor() | formular editor
../3-Phrases/freemind:void transForm(QFile;QFile;QFile;) | trans form
../3-Phrases/freemind:void stopTimerForDelayedSelection() | stop timer for delayed selection
../3-Phrases/freemind:void obtainFocusForSelected() | obtain focus for selected
../3-Phrases/freemind:boolean acquirePrinterJobAndPageFormat() | acquire printer job and page format
../3-Phrases/freemind:String getItemForZoom(F) | get item for zoom
../3-Phrases/freemind:freemind.controller.actions.generated.instance.EdgeColorFormatActionType createEdgeColorFormatActionType() | create edge color format action type
../3-Phrases/freemind:freemind.controller.actions.generated.instance.NodeStyleFormatActionType createNodeStyleFormatActionType() | create node style format action type
../3-Phrases/freemind:freemind.controller.actions.generated.instance.NodeColorFormatActionType createNodeColorFormatActionType() | create node color format action type
../3-Phrases/freemind:freemind.controller.actions.generated.instance.EdgeColorFormatAction createEdgeColorFormatAction() | create edge color format action
../3-Phrases/freemind:freemind.controller.actions.generated.instance.EdgeWidthFormatAction createEdgeWidthFormatAction() | create edge width format action
../3-Phrases/freemind:freemind.controller.actions.generated.instance.NodeBackgroundColorFormatActionType createNodeBackgroundColorFormatActionType() | create node background color format action type
../3-Phrases/freemind:freemind.controller.actions.generated.instance.FormatNodeAction createFormatNodeAction() | create format node action
../3-Phrases/freemind:freemind.controller.actions.generated.instance.NodeColorFormatAction createNodeColorFormatAction() | create node color format action
../3-Phrases/freemind:freemind.controller.actions.generated.instance.NodeBackgroundColorFormatAction createNodeBackgroundColorFormatAction() | create node background color format action
../3-Phrases/freemind:freemind.controller.actions.generated.instance.EdgeStyleFormatAction createEdgeStyleFormatAction() | create edge style format action
../3-Phrases/freemind:freemind.controller.actions.generated.instance.EdgeStyleFormatActionType createEdgeStyleFormatActionType() | create edge style format action type
../3-Phrases/freemind:freemind.controller.actions.generated.instance.NodeStyleFormatAction createNodeStyleFormatAction() | create node style format action
../3-Phrases/freemind:freemind.controller.actions.generated.instance.EdgeWidthFormatActionType createEdgeWidthFormatActionType() | create edge width format action type
../3-Phrases/freemind:Vector searchFor(QClass;QClass;) | search for
../3-Phrases/freemind:String getProgramForFile(QString;) | get program for file
../3-Phrases/freemind:JPopupMenu getPopupForModel(Qjava.lang.Object;) | get popup for model
../3-Phrases/freemind:MindMapNode getTargetForID(QString;) | get target for id
../3-Phrases/freemind:MindMapLink getLinkForID(QString;) | get link for id
../3-Phrases/freemind:MindMapNode getTargetForID(QString;) | get target for id
../3-Phrases/freemind:MindMapLink getLinkForID(QString;) | get link for id
../3-Phrases/freemind:JPopupMenu getPopupForModel(Qjava.lang.Object;) | get popup for model
../3-Phrases/freemind:void valueForPathChanged(QTreePath;QObject;) | value for path changed
../3-Phrases/freemind:EdgeStyleFormatAction createNodeStyleFormatAction(QMindMapNode;QString;) | create node style format action
../3-Phrases/freemind:NodeColorFormatAction createNodeColorFormatAction(QMindMapNode;QColor;) | create node color format action
../3-Phrases/freemind:EdgeColorFormatAction createEdgeColorFormatAction(QMindMapNode;QColor;) | create edge color format action
../3-Phrases/freemind:EdgeWidthFormatAction createEdgeWidthFormatAction(QMindMapNode;I) | create edge width format action
../3-Phrases/freemind:String getShortTextForLink(QMindMapNode;) | get short text for link
../3-Phrases/freemind:NodeStyleFormatAction createNodeStyleFormatAction(QMindMapNode;QString;) | create node style format action
../3-Phrases/freemind:NodeBackgroundColorFormatAction createNodeBackgroundColorFormatAction(QMindMapNode;QColor;) | create node background color format action
../3-Phrases/freemind:JPopupMenu getPopupForModel(Qjava.lang.Object;) | get popup for model
../3-Phrases/freemind:JPopupMenu getPopupForModel(Qjava.lang.Object;) | get popup for model
../3-Phrases/freemind:void removeSelectionForHooks(QNodeView;) | remove selection for hooks
../3-Phrases/freemind:void addSelectionForHooks(QNodeView;) | add selection for hooks
../3-Phrases/freemind:CONS ForkNodeView(QMindMapNode;QMapView;) | fork node view
../3-Phrases/freemind:boolean isWaitForMapSharingSelected() | is wait for map sharing selected
../3-Phrases/freemind:SpringLayout.Constraints getConstraintsForCell(IIQContainer;I) | get constraints for cell
../3-Phrases/gantt:TaskNode getTaskNodeForTask(QTask;) | get task node for task
../3-Phrases/gantt:void forwardScheduling() | forward scheduling
../3-Phrases/gantt:void exitForm(Qjava.awt.event.WindowEvent;) | exit form
../3-Phrases/gantt:void setAskForSave(Z) | set ask for save
../3-Phrases/gantt:ResourceNode getNodeForResource(QProjectResource;) | get node for resource
../3-Phrases/gantt:AssignmentNode getNodeForAssigment(QResourceAssignment;) | get node for assigment
../3-Phrases/gantt:void renameCustomColumnForAllNestedTask(QTaskContainmentHierarchyFacade;QTask;QString;QString;) | rename custom column for all nested task
../3-Phrases/gantt:String getIdForName(QString;) | get id for name
../3-Phrases/gantt:String getNameForId(QString;) | get name for id
../3-Phrases/gantt:int getOrderForName(QString;) | get order for name
../3-Phrases/gantt:String getNameForOrder(I) | get name for order
../3-Phrases/gantt:List getActivitiesForward(QDate;QTimeUnit;J) | get activities forward
../3-Phrases/gantt:List getActivitiesForward(QDate;QTimeUnit;J) | get activities forward
../3-Phrases/gantt:List getActivitiesForward(QDate;QTimeUnit;J) | get activities forward
../3-Phrases/gantt:GraphicPrimitiveContainer getContainerFor(QTask;) | get container for
../3-Phrases/gantt:List getListForTask(QList;QTask;) | get list for task
../3-Phrases/gantt:Color getForegroundColor() | get foreground color
../3-Phrases/gantt:void setForegroundColor(QColor;) | set foreground color
../3-Phrases/gantt:boolean isValidForMRU() | is valid for mru
../3-Phrases/gantt:boolean isValidForMRU() | is valid for mru
../3-Phrases/gantt:boolean isValidForMRU() | is valid for mru
../3-Phrases/gantt:boolean isValidForMRU() | is valid for mru
../3-Phrases/gantt:boolean isValidForMRU() | is valid for mru
../3-Phrases/gantt:SpringLayout.Constraints getConstraintsForCell(IIQContainer;I) | get constraints for cell
../3-Phrases/gantt:boolean askForApplyChanges() | ask for apply changes
../3-Phrases/gantt:String formatRoleForTooltip(QRole;) | format role for tooltip
../3-Phrases/gantt:DateFormat getDateFormat() | get date format
../3-Phrases/gantt:String formatDate(QGanttCalendar;) | format date
../3-Phrases/gantt:String formatShortDate(QGanttCalendar;) | format short date
../3-Phrases/gantt:String formatTime(QGanttCalendar;) | format time
../3-Phrases/gantt:SimpleDateFormat createDateFormat(QString;) | create date format
../3-Phrases/gantt:CONS FileFormatException() | file format exception
../3-Phrases/gantt:CONS FileFormatException(QString;) | file format exception
../3-Phrases/gantt:CONS FileFormatException(QString;QThrowable;) | file format exception
../3-Phrases/gantt:CONS FileFormatException(QThrowable;) | file format exception
../3-Phrases/gantt:Role getRoleForAssigment() | get role for assigment
../3-Phrases/gantt:void setRoleForAssigment(QRole;) | set role for assigment
../3-Phrases/gantt:Role getRoleForAssignment() | get role for assignment
../3-Phrases/gantt:void setRoleForAssignment(QRole;) | set role for assignment
../3-Phrases/gantt:Role getRoleForAssignment() | get role for assignment
../3-Phrases/gantt:void setRoleForAssignment(QRole;) | set role for assignment
../3-Phrases/gantt:boolean existsForID(QString;) | exists for id
../3-Phrases/gantt:Role getRoleForAssignment() | get role for assignment
../3-Phrases/gantt:void setRoleForAssignment(QRole;) | set role for assignment
../3-Phrases/gantt:Role getRoleForAssignment() | get role for assignment
../3-Phrases/gantt:void setRoleForAssignment(QRole;) | set role for assignment
../3-Phrases/gantt:void testFinishStartDependenciesOnMovingEndDateForward() | test finish start dependencies on moving end date forward
../3-Phrases/gantt:void testFinishFinishConstraintOnMovingEndDateForward() | test finish finish constraint on moving end date forward
../3-Phrases/gantt:void testStartStartConstraintOnMovingStartDateForward() | test start start constraint on moving start date forward
../3-Phrases/gantt:void testStartFinishConstraintOnMovingStartDateForward() | test start finish constraint on moving start date forward
../3-Phrases/gantt:void setTextFormatter(QTextFormatter;) | set text formatter
../3-Phrases/gantt:TimeUnitText format(QDate;) | format
../3-Phrases/gantt:void setTextFormatter(QTextFormatter;) | set text formatter
../3-Phrases/gantt:TimeUnitText format(QDate;) | format
../3-Phrases/gantt:TextFormatter getTextFormatter() | get text formatter
../3-Phrases/gantt:void setTextFormatter(QTextFormatter;) | set text formatter
../3-Phrases/gantt:TimeUnitText format(QDate;) | format
../3-Phrases/gantt:TimeUnitText format(QTimeUnit;QDate;) | format
../3-Phrases/gantt:CONS WeekTextFormatter(QString;) | week text formatter
../3-Phrases/gantt:CONS MonthTextFormatter() | month text formatter
../3-Phrases/gantt:void initFormats() | init formats
../3-Phrases/gantt:CONS YearTextFormatter() | year text formatter
../3-Phrases/gantt:CONS CachingTextFormatter() | caching text formatter
../3-Phrases/gantt:TimeUnitText format(QTimeUnit;QDate;) | format
../3-Phrases/hibernate-3.3.1.GA:String foreignKeyColumnName(QString;QString;QString;QString;) | foreign key column name
../3-Phrases/hibernate-3.3.1.GA:String foreignKeyColumnName(QString;QString;QString;QString;) | foreign key column name
../3-Phrases/hibernate-3.3.1.GA:void secondPassCompileForeignKeys(QTable;QSet;) | second pass compile foreign keys
../3-Phrases/hibernate-3.3.1.GA:void bindColumnsOrFormula(QElement;QSimpleValue;QString;ZQMappings;) | bind columns or formula
../3-Phrases/hibernate-3.3.1.GA:boolean useStreamsForBinary() | use streams for binary
../3-Phrases/hibernate-3.3.1.GA:String foreignKeyColumnName(QString;QString;QString;QString;) | foreign key column name
../3-Phrases/hibernate-3.3.1.GA:void forceInitialization() | force initialization
../3-Phrases/hibernate-3.3.1.GA:void forceInitialization() | force initialization
../3-Phrases/hibernate-3.3.1.GA:DetachedCriteria forEntityName(QString;) | for entity name
../3-Phrases/hibernate-3.3.1.GA:DetachedCriteria forEntityName(QString;QString;) | for entity name
../3-Phrases/hibernate-3.3.1.GA:DetachedCriteria forClass(QClass;) | for class
../3-Phrases/hibernate-3.3.1.GA:DetachedCriteria forClass(QClass;QString;) | for class
../3-Phrases/hibernate-3.3.1.GA:Property forName(QString;) | for name
../3-Phrases/hibernate-3.3.1.GA:String getAddForeignKeyConstraintString(QString;[QString;QString;[QString;Z) | get add foreign key constraint string
../3-Phrases/hibernate-3.3.1.GA:String getDropForeignKeyString() | get drop foreign key string
../3-Phrases/hibernate-3.3.1.GA:String getForUpdateNowaitString() | get for update nowait string
../3-Phrases/hibernate-3.3.1.GA:String getForUpdateString(QString;) | get for update string
../3-Phrases/hibernate-3.3.1.GA:String getForUpdateNowaitString(QString;) | get for update nowait string
../3-Phrases/hibernate-3.3.1.GA:boolean useMaxForLimit() | use max for limit
../3-Phrases/hibernate-3.3.1.GA:boolean forUpdateOfColumns() | for update of columns
../3-Phrases/hibernate-3.3.1.GA:boolean useMaxForLimit() | use max for limit
../3-Phrases/hibernate-3.3.1.GA:String getAddForeignKeyConstraintString(QString;[QString;QString;[QString;Z) | get add foreign key constraint string
../3-Phrases/hibernate-3.3.1.GA:boolean hasSelfReferentialForeignKeyBug() | has self referential foreign key bug
../3-Phrases/hibernate-3.3.1.GA:boolean supportsForUpdate() | supports for update
../3-Phrases/hibernate-3.3.1.GA:boolean supportsForUpdateOf() | supports for update of
../3-Phrases/hibernate-3.3.1.GA:boolean supportsForUpdateNowait() | supports for update nowait
../3-Phrases/hibernate-3.3.1.GA:boolean supportsOuterJoinForUpdate() | supports outer join for update
../3-Phrases/hibernate-3.3.1.GA:boolean useMaxForLimit() | use max for limit
../3-Phrases/hibernate-3.3.1.GA:boolean supportsResultSetPositionQueryMethodsOnForwardOnlyCursor() | supports result set position query methods on forward only cursor
../3-Phrases/hibernate-3.3.1.GA:String getAddForeignKeyConstraintString(QString;[QString;QString;[QString;Z) | get add foreign key constraint string
../3-Phrases/hibernate-3.3.1.GA:boolean useMaxForLimit() | use max for limit
../3-Phrases/hibernate-3.3.1.GA:boolean forUpdateOfColumns() | for update of columns
../3-Phrases/hibernate-3.3.1.GA:boolean supportsForUpdate() | supports for update
../3-Phrases/hibernate-3.3.1.GA:boolean supportsOuterJoinForUpdate() | supports outer join for update
../3-Phrases/hibernate-3.3.1.GA:String getForUpdateString(QString;) | get for update string
../3-Phrases/hibernate-3.3.1.GA:boolean supportsOuterJoinForUpdate() | supports outer join for update
../3-Phrases/hibernate-3.3.1.GA:String getAddForeignKeyConstraintString(QString;[QString;QString;[QString;Z) | get add foreign key constraint string
../3-Phrases/hibernate-3.3.1.GA:boolean supportsForUpdateOf() | supports for update of
../3-Phrases/hibernate-3.3.1.GA:boolean useMaxForLimit() | use max for limit
../3-Phrases/hibernate-3.3.1.GA:String getForUpdateNowaitString() | get for update nowait string
../3-Phrases/hibernate-3.3.1.GA:String getForUpdateString(QString;) | get for update string
../3-Phrases/hibernate-3.3.1.GA:String getForUpdateNowaitString(QString;) | get for update nowait string
../3-Phrases/hibernate-3.3.1.GA:boolean useMaxForLimit() | use max for limit
../3-Phrases/hibernate-3.3.1.GA:boolean forUpdateOfColumns() | for update of columns
../3-Phrases/hibernate-3.3.1.GA:String getForUpdateString() | get for update string
../3-Phrases/hibernate-3.3.1.GA:String getForUpdateString() | get for update string
../3-Phrases/hibernate-3.3.1.GA:String getForUpdateString(QString;) | get for update string
../3-Phrases/hibernate-3.3.1.GA:String getForUpdateString() | get for update string
../3-Phrases/hibernate-3.3.1.GA:boolean useMaxForLimit() | use max for limit
../3-Phrases/hibernate-3.3.1.GA:String getForUpdateString() | get for update string
../3-Phrases/hibernate-3.3.1.GA:boolean useMaxForLimit() | use max for limit
../3-Phrases/hibernate-3.3.1.GA:String getForUpdateString(QLockMode;) | get for update string
../3-Phrases/hibernate-3.3.1.GA:String getForUpdateString() | get for update string
../3-Phrases/hibernate-3.3.1.GA:boolean forUpdateOfColumns() | for update of columns
../3-Phrases/hibernate-3.3.1.GA:boolean supportsOuterJoinForUpdate() | supports outer join for update
../3-Phrases/hibernate-3.3.1.GA:String getForUpdateString(QString;) | get for update string
../3-Phrases/hibernate-3.3.1.GA:String getForUpdateNowaitString() | get for update nowait string
../3-Phrases/hibernate-3.3.1.GA:String getForUpdateNowaitString(QString;) | get for update nowait string
../3-Phrases/hibernate-3.3.1.GA:String getDropForeignKeyString() | get drop foreign key string
../3-Phrases/hibernate-3.3.1.GA:String getAddForeignKeyConstraintString(QString;[QString;QString;[QString;Z) | get add foreign key constraint string
../3-Phrases/hibernate-3.3.1.GA:boolean hasSelfReferentialForeignKeyBug() | has self referential foreign key bug
../3-Phrases/hibernate-3.3.1.GA:boolean supportsResultSetPositionQueryMethodsOnForwardOnlyCursor() | supports result set position query methods on forward only cursor
../3-Phrases/hibernate-3.3.1.GA:boolean hasSelfReferentialForeignKeyBug() | has self referential foreign key bug
../3-Phrases/hibernate-3.3.1.GA:String getForUpdateString() | get for update string
../3-Phrases/hibernate-3.3.1.GA:boolean useMaxForLimit() | use max for limit
../3-Phrases/hibernate-3.3.1.GA:String getForUpdateString() | get for update string
../3-Phrases/hibernate-3.3.1.GA:String getForUpdateString() | get for update string
../3-Phrases/hibernate-3.3.1.GA:boolean useMaxForLimit() | use max for limit
../3-Phrases/hibernate-3.3.1.GA:boolean supportsOuterJoinForUpdate() | supports outer join for update
../3-Phrases/hibernate-3.3.1.GA:String getForUpdateString() | get for update string
../3-Phrases/hibernate-3.3.1.GA:boolean hasSelfReferentialForeignKeyBug() | has self referential foreign key bug
../3-Phrases/hibernate-3.3.1.GA:boolean forUpdateOfColumns() | for update of columns
../3-Phrases/hibernate-3.3.1.GA:String getForUpdateString() | get for update string
../3-Phrases/hibernate-3.3.1.GA:boolean supportsOuterJoinForUpdate() | supports outer join for update
../3-Phrases/hibernate-3.3.1.GA:boolean useMaxForLimit() | use max for limit
../3-Phrases/hibernate-3.3.1.GA:boolean supportsResultSetPositionQueryMethodsOnForwardOnlyCursor() | supports result set position query methods on forward only cursor
../3-Phrases/hibernate-3.3.1.GA:String getForUpdateString() | get for update string
../3-Phrases/hibernate-3.3.1.GA:String getForUpdateString() | get for update string
../3-Phrases/hibernate-3.3.1.GA:CONS ForeignKeys() | foreign keys
../3-Phrases/hibernate-3.3.1.GA:void prepareCollectionForUpdate(QPersistentCollection;QCollectionEntry;QEntityMode;QSessionFactoryImplementor;) | prepare collection for update
../3-Phrases/hibernate-3.3.1.GA:boolean isEntryFor(QObject;) | is entry for
../3-Phrases/hibernate-3.3.1.GA:Object proxyFor(QEntityPersister;QEntityKey;QObject;) | proxy for
../3-Phrases/hibernate-3.3.1.GA:Object proxyFor(QObject;) | proxy for
../3-Phrases/hibernate-3.3.1.GA:boolean isEntryFor(QObject;) | is entry for
../3-Phrases/hibernate-3.3.1.GA:Object proxyFor(QEntityPersister;QEntityKey;QObject;) | proxy for
../3-Phrases/hibernate-3.3.1.GA:Object proxyFor(QObject;) | proxy for
../3-Phrases/hibernate-3.3.1.GA:void forceLocked(QObject;QObject;) | force locked
../3-Phrases/hibernate-3.3.1.GA:Class getListenerClassFor(QString;) | get listener class for
../3-Phrases/hibernate-3.3.1.GA:void forceFlush(QEntityEntry;) | force flush
../3-Phrases/hibernate-3.3.1.GA:AST generateSyntheticDotNodeForNonQualifiedPropertyRef(QAST;QFromElement;) | generate synthetic dot node for non qualified property ref
../3-Phrases/hibernate-3.3.1.GA:List getFromElementsForLoad() | get from elements for load
../3-Phrases/hibernate-3.3.1.GA:void checkForDuplicateClassAlias(QString;) | check for duplicate class alias
../3-Phrases/hibernate-3.3.1.GA:void prepareForDot(QString;) | prepare for dot
../3-Phrases/hibernate-3.3.1.GA:void checkForCorrelatedSubquery(QString;) | check for correlated subquery
../3-Phrases/hibernate-3.3.1.GA:void prepareForDot(QString;) | prepare for dot
../3-Phrases/hibernate-3.3.1.GA:String format(QBigDecimal;) | format
../3-Phrases/hibernate-3.3.1.GA:String format(QBigDecimal;) | format
../3-Phrases/hibernate-3.3.1.GA:String format(QBigDecimal;) | format
../3-Phrases/hibernate-3.3.1.GA:void prepareForIndex(QQueryTranslatorImpl;) | prepare for index
../3-Phrases/hibernate-3.3.1.GA:String createNameFor(QString;) | create name for
../3-Phrases/hibernate-3.3.1.GA:String createNameForCollection(QString;) | create name for collection
../3-Phrases/hibernate-3.3.1.GA:Queryable getEntityPersisterForName(QString;) | get entity persister for name
../3-Phrases/hibernate-3.3.1.GA:String format(I) | format
../3-Phrases/hibernate-3.3.1.GA:String format(S) | format
../3-Phrases/hibernate-3.3.1.GA:void forceFlush(QEntityEntry;) | force flush
../3-Phrases/hibernate-3.3.1.GA:int getIndexForColumnName(QString;QResultSetWrapper;) | get index for column name
../3-Phrases/hibernate-3.3.1.GA:boolean isReadyForSerialization() | is ready for serialization
../3-Phrases/hibernate-3.3.1.GA:String format(QString;) | format
../3-Phrases/hibernate-3.3.1.GA:void FormatProcess(QString;) | format process
../3-Phrases/hibernate-3.3.1.GA:boolean isFormatSql() | is format sql
../3-Phrases/hibernate-3.3.1.GA:void setFormatSql(Z) | set format sql
../3-Phrases/hibernate-3.3.1.GA:String format(QString;) | format
../3-Phrases/hibernate-3.3.1.GA:CONS FormatStyle(QString;QFormatter;) | format style
../3-Phrases/hibernate-3.3.1.GA:Formatter getFormatter() | get formatter
../3-Phrases/hibernate-3.3.1.GA:String format(QString;) | format
../3-Phrases/hibernate-3.3.1.GA:String format(QString;) | format
../3-Phrases/hibernate-3.3.1.GA:String formatCommentOn(QString;) | format comment on
../3-Phrases/hibernate-3.3.1.GA:String formatAlterTable(QString;) | format alter table
../3-Phrases/hibernate-3.3.1.GA:String formatCreateTable(QString;) | format create table
../3-Phrases/hibernate-3.3.1.GA:Object loadSequentialRowsForward(QResultSet;QSessionImplementor;QQueryParameters;Z) | load sequential rows forward
../3-Phrases/hibernate-3.3.1.GA:String[] getReturnAliasesForTransformer() | get return aliases for transformer
../3-Phrases/hibernate-3.3.1.GA:void prepareForAutoDiscovery(QMetadata;) | prepare for auto discovery
../3-Phrases/hibernate-3.3.1.GA:boolean isFormula() | is formula
../3-Phrases/hibernate-3.3.1.GA:void createForeignKeys() | create foreign keys
../3-Phrases/hibernate-3.3.1.GA:void createForeignKey() | create foreign key
../3-Phrases/hibernate-3.3.1.GA:ForeignKeyDirection getForeignKeyType() | get foreign key type
../3-Phrases/hibernate-3.3.1.GA:void setForeignKeyType(QForeignKeyDirection;) | set foreign key type
../3-Phrases/hibernate-3.3.1.GA:void createForeignKey() | create foreign key
../3-Phrases/hibernate-3.3.1.GA:boolean isFormula() | is formula
../3-Phrases/hibernate-3.3.1.GA:boolean hasFormula() | has formula
../3-Phrases/hibernate-3.3.1.GA:void createForeignKey() | create foreign key
../3-Phrases/hibernate-3.3.1.GA:CONS Formula() | formula
../3-Phrases/hibernate-3.3.1.GA:String getFormula() | get formula
../3-Phrases/hibernate-3.3.1.GA:void setFormula(QString;) | set formula
../3-Phrases/hibernate-3.3.1.GA:boolean isFormula() | is formula
../3-Phrases/hibernate-3.3.1.GA:void createForeignKeyOfEntity(QString;) | create foreign key of entity
../3-Phrases/hibernate-3.3.1.GA:void createForeignKey() | create foreign key
../3-Phrases/hibernate-3.3.1.GA:boolean isForceDiscriminator() | is force discriminator
../3-Phrases/hibernate-3.3.1.GA:boolean hasFormula() | has formula
../3-Phrases/hibernate-3.3.1.GA:void createForeignKey() | create foreign key
../3-Phrases/hibernate-3.3.1.GA:void createForeignKeys() | create foreign keys
../3-Phrases/hibernate-3.3.1.GA:void addFormula(QFormula;) | add formula
../3-Phrases/hibernate-3.3.1.GA:boolean hasFormula() | has formula
../3-Phrases/hibernate-3.3.1.GA:void createForeignKey() | create foreign key
../3-Phrases/hibernate-3.3.1.GA:void createForeignKeyOfEntity(QString;) | create foreign key of entity
../3-Phrases/hibernate-3.3.1.GA:String getForeignKeyName() | get foreign key name
../3-Phrases/hibernate-3.3.1.GA:void setForeignKeyName(QString;) | set foreign key name
../3-Phrases/hibernate-3.3.1.GA:void ForeignKeyKey(QList;QString;QList;) | foreign key key
../3-Phrases/hibernate-3.3.1.GA:Iterator getForeignKeyIterator() | get foreign key iterator
../3-Phrases/hibernate-3.3.1.GA:void createForeignKeys() | create foreign keys
../3-Phrases/hibernate-3.3.1.GA:ForeignKey createForeignKey(QString;QList;QString;) | create foreign key
../3-Phrases/hibernate-3.3.1.GA:ForeignKey createForeignKey(QString;QList;QString;QList;) | create foreign key
../3-Phrases/hibernate-3.3.1.GA:void createForeignKey() | create foreign key
../3-Phrases/hibernate-3.3.1.GA:void createForeignKey() | create foreign key
../3-Phrases/hibernate-3.3.1.GA:boolean hasFormula() | has formula
../3-Phrases/hibernate-3.3.1.GA:boolean isForceDiscriminator() | is force discriminator
../3-Phrases/hibernate-3.3.1.GA:boolean isForceDiscriminator() | is force discriminator
../3-Phrases/hibernate-3.3.1.GA:void setForceDiscriminator(Z) | set force discriminator
../3-Phrases/hibernate-3.3.1.GA:void createForeignKey() | create foreign key
../3-Phrases/hibernate-3.3.1.GA:String[] getIndexFormulas() | get index formulas
../3-Phrases/hibernate-3.3.1.GA:String[] getIndexFormulas() | get index formulas
../3-Phrases/hibernate-3.3.1.GA:String getSubclassForDiscriminatorValue(QObject;) | get subclass for discriminator value
../3-Phrases/hibernate-3.3.1.GA:int[] getSubclassFormulaTableNumberClosure() | get subclass formula table number closure
../3-Phrases/hibernate-3.3.1.GA:String getSubclassForDiscriminatorValue(QObject;) | get subclass for discriminator value
../3-Phrases/hibernate-3.3.1.GA:int[] getSubclassFormulaTableNumberClosure() | get subclass formula table number closure
../3-Phrases/hibernate-3.3.1.GA:String getDiscriminatorFormulaTemplate() | get discriminator formula template
../3-Phrases/hibernate-3.3.1.GA:boolean[] getSubclassFormulaLazyiness() | get subclass formula lazyiness
../3-Phrases/hibernate-3.3.1.GA:Object forceVersionIncrement(QSerializable;QObject;QSessionImplementor;) | force version increment
../3-Phrases/hibernate-3.3.1.GA:boolean hasFormulaProperties() | has formula properties
../3-Phrases/hibernate-3.3.1.GA:String[][] getSubclassPropertyFormulaTemplateClosure() | get subclass property formula template closure
../3-Phrases/hibernate-3.3.1.GA:String[] getSubclassFormulaClosure() | get subclass formula closure
../3-Phrases/hibernate-3.3.1.GA:String[] getSubclassFormulaTemplateClosure() | get subclass formula template closure
../3-Phrases/hibernate-3.3.1.GA:String[] getSubclassFormulaAliasClosure() | get subclass formula alias closure
../3-Phrases/hibernate-3.3.1.GA:Object forceVersionIncrement(QSerializable;QObject;QSessionImplementor;) | force version increment
../3-Phrases/hibernate-3.3.1.GA:String getDiscriminatorFormulaTemplate() | get discriminator formula template
../3-Phrases/hibernate-3.3.1.GA:String getSubclassForDiscriminatorValue(QObject;) | get subclass for discriminator value
../3-Phrases/hibernate-3.3.1.GA:boolean isDiscriminatorFormula() | is discriminator formula
../3-Phrases/hibernate-3.3.1.GA:String getDiscriminatorFormula() | get discriminator formula
../3-Phrases/hibernate-3.3.1.GA:int[] getSubclassFormulaTableNumberClosure() | get subclass formula table number closure
../3-Phrases/hibernate-3.3.1.GA:String getSubclassForDiscriminatorValue(QObject;) | get subclass for discriminator value
../3-Phrases/hibernate-3.3.1.GA:boolean isDiscriminatorFormula() | is discriminator formula
../3-Phrases/hibernate-3.3.1.GA:String getDiscriminatorFormula() | get discriminator formula
../3-Phrases/hibernate-3.3.1.GA:int[] getSubclassFormulaTableNumberClosure() | get subclass formula table number closure
../3-Phrases/hibernate-3.3.1.GA:Object getForInsert(QObject;QMap;QSessionImplementor;) | get for insert
../3-Phrases/hibernate-3.3.1.GA:Object getForInsert(QObject;QMap;QSessionImplementor;) | get for insert
../3-Phrases/hibernate-3.3.1.GA:Object getForInsert(QObject;QMap;QSessionImplementor;) | get for insert
../3-Phrases/hibernate-3.3.1.GA:Object getForInsert(QObject;QMap;QSessionImplementor;) | get for insert
../3-Phrases/hibernate-3.3.1.GA:Object getForInsert(QObject;QMap;QSessionImplementor;) | get for insert
../3-Phrases/hibernate-3.3.1.GA:Object getForInsert(QObject;QMap;QSessionImplementor;) | get for insert
../3-Phrases/hibernate-3.3.1.GA:Object getForInsert(QObject;QMap;QSessionImplementor;) | get for insert
../3-Phrases/hibernate-3.3.1.GA:Object getForInsert(QObject;QMap;QSessionImplementor;) | get for insert
../3-Phrases/hibernate-3.3.1.GA:Object getForInsert(QObject;QMap;QSessionImplementor;) | get for insert
../3-Phrases/hibernate-3.3.1.GA:Namespace getNamespaceForPrefix(QString;) | get namespace for prefix
../3-Phrases/hibernate-3.3.1.GA:Namespace getNamespaceForURI(QString;) | get namespace for uri
../3-Phrases/hibernate-3.3.1.GA:List getNamespacesForURI(QString;) | get namespaces for uri
../3-Phrases/hibernate-3.3.1.GA:CONS ForUpdateFragment(QDialect;) | for update fragment
../3-Phrases/hibernate-3.3.1.GA:CONS ForUpdateFragment(QDialect;QMap;QMap;) | for update fragment
../3-Phrases/hibernate-3.3.1.GA:InFragment setFormula(QString;QString;) | set formula
../3-Phrases/hibernate-3.3.1.GA:SelectFragment addFormulas(QString;[QString;[QString;) | add formulas
../3-Phrases/hibernate-3.3.1.GA:SelectFragment addFormula(QString;QString;QString;) | add formula
../3-Phrases/hibernate-3.3.1.GA:void setFormat(Z) | set format
../3-Phrases/hibernate-3.3.1.GA:ForeignKeyMetadata getForeignKeyMetadata(QString;) | get foreign key metadata
../3-Phrases/hibernate-3.3.1.GA:void addForeignKey(QResultSet;) | add foreign key
../3-Phrases/hibernate-3.3.1.GA:void initForeignKeys(QDatabaseMetaData;) | init foreign keys
../3-Phrases/hibernate-3.3.1.GA:CONS ForeignKeyMetadata(QResultSet;) | foreign key metadata
../3-Phrases/hibernate-3.3.1.GA:SchemaExport setFormat(Z) | set format
../3-Phrases/hibernate-3.3.1.GA:Namespace getNamespaceForPrefix(QString;) | get namespace for prefix
../3-Phrases/hibernate-3.3.1.GA:Namespace getNamespaceForURI(QString;) | get namespace for uri
../3-Phrases/hibernate-3.3.1.GA:List getNamespacesForURI(QString;) | get namespaces for uri
../3-Phrases/hibernate-3.3.1.GA:Object toExternalFormat([B) | to external format
../3-Phrases/hibernate-3.3.1.GA:byte[] toInternalFormat(QObject;) | to internal format
../3-Phrases/hibernate-3.3.1.GA:ForeignKeyDirection getForeignKeyDirection() | get foreign key direction
../3-Phrases/hibernate-3.3.1.GA:ForeignKeyDirection getForeignKeyDirection() | get foreign key direction
../3-Phrases/hibernate-3.3.1.GA:Object toExternalFormat([C) | to external format
../3-Phrases/hibernate-3.3.1.GA:char[] toInternalFormat(QObject;) | to internal format
../3-Phrases/hibernate-3.3.1.GA:CONS ForeignKeyDirection() | foreign key direction
../3-Phrases/hibernate-3.3.1.GA:Object toExternalFormat([B) | to external format
../3-Phrases/hibernate-3.3.1.GA:byte[] toInternalFormat(QObject;) | to internal format
../3-Phrases/hibernate-3.3.1.GA:ForeignKeyDirection getForeignKeyDirection() | get foreign key direction
../3-Phrases/hibernate-3.3.1.GA:ForeignKeyDirection getForeignKeyDirection() | get foreign key direction
../3-Phrases/hibernate-3.3.1.GA:Object toExternalFormat([B) | to external format
../3-Phrases/hibernate-3.3.1.GA:byte[] toInternalFormat(QObject;) | to internal format
../3-Phrases/hibernate-3.3.1.GA:Object toExternalFormat([C) | to external format
../3-Phrases/hibernate-3.3.1.GA:char[] toInternalFormat(QObject;) | to internal format
../3-Phrases/hibernate-3.3.1.GA:ForeignKeyDirection getForeignKeyDirection() | get foreign key direction
../3-Phrases/hibernate-3.3.1.GA:Object toExternalFormat([C) | to external format
../3-Phrases/hibernate-3.3.1.GA:char[] toInternalFormat(QObject;) | to internal format
../3-Phrases/hibernate-3.3.1.GA:String getStreamsForBinaryEnabled() | get streams for binary enabled
../3-Phrases/hibernate-3.3.1.GA:void setStreamsForBinaryEnabled(QString;) | set streams for binary enabled
../3-Phrases/hibernate-3.3.1.GA:Class classForName(QString;) | class for name
../3-Phrases/hibernate-3.3.1.GA:Class classForName(QString;QClass;) | class for name
../3-Phrases/hibernate-3.3.1.GA:boolean isMarkedForRollback(I) | is marked for rollback
../3-Phrases/hibernate-3.3.1.GA:boolean isMarkedForRollback(Qjavax.transaction.Transaction;) | is marked for rollback
../3-Phrases/hsqldb:Index getUniqueConstraintIndexForColumns([I) | get unique constraint index for columns
../3-Phrases/hsqldb:Constraint getConstraintForColumns(QTable;[I[I) | get constraint for columns
../3-Phrases/hsqldb:Constraint getUniqueConstraintForColumns([I) | get unique constraint for columns
../3-Phrases/hsqldb:Constraint getUniqueOrPKConstraintForIndex(QIndex;) | get unique or pk constraint for index
../3-Phrases/hsqldb:Index getIndexForColumn(QSession;I) | get index for column
../3-Phrases/hsqldb:Index getIndexForColumns([Z) | get index for columns
../3-Phrases/hsqldb:Index getIndexForColumns([IZ) | get index for columns
../3-Phrases/hsqldb:int typeForClass(QClass;) | type for class
../3-Phrases/hsqldb:RowIterator findFirstRowForDelete(QSession;[QObject;[I) | find first row for delete
../3-Phrases/hsqldb:int compareRowForInsert(QSession;QRow;QRow;) | compare row for insert
../3-Phrases/hsqldb:void updateForDelete(QNode;) | update for delete
../3-Phrases/hsqldb:void processAlterTableAddForeignKeyConstraint(QTable;QHsqlName;) | process alter table add foreign key constraint
../3-Phrases/hsqldb:void createForeignKey([I[IQHsqlName;QTable;II) | create foreign key
../3-Phrases/hsqldb:Table findUserTableForIndex(QSession;QString;QString;) | find user table for index
../3-Phrases/hsqldb:Class classForMethodFQN(QString;) | class for method fqn
../3-Phrases/hsqldb:Class classForName(QString;) | class for name
../3-Phrases/hsqldb:Expression getExpressionForAlias([QExpression;I) | get expression for alias
../3-Phrases/hsqldb:void resolveTypeForLike(QSession;) | resolve type for like
../3-Phrases/hsqldb:void resolveTypeForIn(QSession;) | resolve type for in
../3-Phrases/hsqldb:boolean setForJoin(QTableFilter;Z) | set for join
../3-Phrases/hsqldb:HsqlName getSchemaHsqlNameForWrite(QString;) | get schema hsql name for write
../3-Phrases/hsqldb:String getSchemaNameForWrite(QString;) | get schema name for write
../3-Phrases/hsqldb:boolean supportsSelectForUpdate() | supports select for update
../3-Phrases/hsqldb:void synchLogForce() | synch log force
../3-Phrases/hsqldb:boolean forceDefrag() | force defrag
../3-Phrases/hsqldb:String getForEachSpec(I) | get for each spec
../3-Phrases/hsqldb:void formatResultSet(QResultSet;) | format result set
../3-Phrases/hsqldb:String formatNicely(QMap;Z) | format nicely
../3-Phrases/hsqldb:String formatIdentifier(QString;) | format identifier
../3-Phrases/hsqldb:String formatName(QString;) | format name
../3-Phrases/hsqldb:String promptForPassword(QString;) | prompt for password
../3-Phrases/hsqldb:String formatTableName(QString;) | format table name
../3-Phrases/hsqldb:void formatResultSet(QResultSet;) | format result set
../3-Phrases/hsqldb:String formatName(QString;) | format name
../3-Phrases/hsqldb:void formatResultSet(QResultSet;) | format result set
../3-Phrases/hsqldb:void resetTableForms() | reset table forms
../3-Phrases/hsqldb:CONS ZaurusTableForm(QString;QConnection;) | zaurus table form
../3-Phrases/hsqldb:void parseFileForTables() | parse file for tables
../3-Phrases/hsqldb:void parseFileForTheRest(QTransferTable;QDataAccessPoint;) | parse file for the rest
../3-Phrases/hsqldb:TransferResultSet parseFileForData(QString;) | parse file for data
../3-Phrases/iReport:boolean isIsForPrompting() | is is for prompting
../3-Phrases/iReport:void setIsForPrompting(Z) | set is for prompting
../3-Phrases/iReport:java.lang.String getReportFormat() | get report format
../3-Phrases/iReport:void setReportFormat(Qjava.lang.String;) | set report format
../3-Phrases/iReport:double getForegroundAlpha() | get foreground alpha
../3-Phrases/iReport:void setForegroundAlpha(D) | set foreground alpha
../3-Phrases/iReport:void formWindowClosed(Qjava.awt.event.WindowEvent;) | form window closed
../3-Phrases/iReport:void formWindowClosing(Qjava.awt.event.WindowEvent;) | form window closing
../3-Phrases/iReport:void formInternalFrameClosing(Qjavax.swing.event.InternalFrameEvent;) | form internal frame closing
../3-Phrases/iReport:void formInternalFrameClosed(Qjavax.swing.event.InternalFrameEvent;) | form internal frame closed
../3-Phrases/iReport:void formInternalFrameActivated(Qjavax.swing.event.InternalFrameEvent;) | form internal frame activated
../3-Phrases/iReport:void formComponentResized(Qjava.awt.event.ComponentEvent;) | form component resized
../3-Phrases/iReport:void formPropertyChange(Qjava.beans.PropertyChangeEvent;) | form property change
../3-Phrases/iReport:void formAncestorResized(Qjava.awt.event.HierarchyEvent;) | form ancestor resized
../3-Phrases/iReport:void formWindowOpened(Qjava.awt.event.WindowEvent;) | form window opened
../3-Phrases/iReport:void exitForm(Qjava.awt.event.WindowEvent;) | exit form
../3-Phrases/iReport:java.lang.String getReportFormat() | get report format
../3-Phrases/iReport:void setReportFormat(Qjava.lang.String;) | set report format
../3-Phrases/iReport:void formWindowClosed(Qjava.awt.event.WindowEvent;) | form window closed
../3-Phrases/iReport:void setActiveReportForm(QJReportFrame;) | set active report form
../3-Phrases/iReport:void jButtonFormatCenterVActionPerformed(Qjava.awt.event.ActionEvent;) | j button format center v action performed
../3-Phrases/iReport:void jButtonFormatCenterHActionPerformed(Qjava.awt.event.ActionEvent;) | j button format center h action performed
../3-Phrases/iReport:void jCheckBoxMenuItemElementsFormattingActionPerformed(Qjava.awt.event.ActionEvent;) | j check box menu item elements formatting action performed
../3-Phrases/iReport:void jCheckBoxMenuItemTextFormattingActionPerformed(Qjava.awt.event.ActionEvent;) | j check box menu item text formatting action performed
../3-Phrases/iReport:void formWindowActivated(Qjava.awt.event.WindowEvent;) | form window activated
../3-Phrases/iReport:void checkForModifiedFiles() | check for modified files
../3-Phrases/iReport:void formWindowOpened(Qjava.awt.event.WindowEvent;) | form window opened
../3-Phrases/iReport:void exitForm(Qjava.awt.event.WindowEvent;) | exit form
../3-Phrases/iReport:void setUsingCurrentFilesDirectoryForCompiles(Z) | set using current files directory for compiles
../3-Phrases/iReport:boolean isUsingCurrentFilesDirectoryForCompiles() | is using current files directory for compiles
../3-Phrases/iReport:it.businesslogic.ireport.gui.EventsForm getEventsForm() | get events form
../3-Phrases/iReport:void setEventsForm(Qit.businesslogic.ireport.gui.EventsForm;) | set events form
../3-Phrases/iReport:CONS ToolbarFormatPanel(QMainFrame;) | toolbar format panel
../3-Phrases/iReport:void jButtonFormatShrinkAncestorAdded(Qjavax.swing.event.AncestorEvent;) | j button format shrink ancestor added
../3-Phrases/iReport:void jButtonFormatCenterInBandActionPerformed(Qjava.awt.event.ActionEvent;) | j button format center in band action performed
../3-Phrases/iReport:void jButtonFormatCenterInBandVActionPerformed(Qjava.awt.event.ActionEvent;) | j button format center in band v action performed
../3-Phrases/iReport:void jButtonFormatCenterInBandHActionPerformed(Qjava.awt.event.ActionEvent;) | j button format center in band h action performed
../3-Phrases/iReport:void jButtonFormatElementMaximizeActionPerformed(Qjava.awt.event.ActionEvent;) | j button format element maximize action performed
../3-Phrases/iReport:void jButtonFormatElementMaximizeVActionPerformed(Qjava.awt.event.ActionEvent;) | j button format element maximize v action performed
../3-Phrases/iReport:void jButtonFormatElementMaximizeHActionPerformed(Qjava.awt.event.ActionEvent;) | j button format element maximize h action performed
../3-Phrases/iReport:void jButtonFormatDecreaseSpaceV1ActionPerformed(Qjava.awt.event.ActionEvent;) | j button format decrease space v 1 action performed
../3-Phrases/iReport:void jButtonFormatDecreaseSpaceVActionPerformed(Qjava.awt.event.ActionEvent;) | j button format decrease space v action performed
../3-Phrases/iReport:void jButtonFormatIncreaseSpaceVActionPerformed(Qjava.awt.event.ActionEvent;) | j button format increase space v action performed
../3-Phrases/iReport:void jButtonFormatEqualsSpaceVActionPerformed(Qjava.awt.event.ActionEvent;) | j button format equals space v action performed
../3-Phrases/iReport:void jButtonFormatRemoveSpaceHActionPerformed(Qjava.awt.event.ActionEvent;) | j button format remove space h action performed
../3-Phrases/iReport:void jButtonFormatDecreaseSpaceHActionPerformed(Qjava.awt.event.ActionEvent;) | j button format decrease space h action performed
../3-Phrases/iReport:void jButtonFormatIncreaseSpaceHActionPerformed(Qjava.awt.event.ActionEvent;) | j button format increase space h action performed
../3-Phrases/iReport:void jButtonFormatEqualsSpaceHActionPerformed(Qjava.awt.event.ActionEvent;) | j button format equals space h action performed
../3-Phrases/iReport:void jButtonFormatJoinRightActionPerformed(Qjava.awt.event.ActionEvent;) | j button format join right action performed
../3-Phrases/iReport:void jButtonFormatJoinLeftActionPerformed(Qjava.awt.event.ActionEvent;) | j button format join left action performed
../3-Phrases/iReport:void jButtonFormatOrganizeActionPerformed(Qjava.awt.event.ActionEvent;) | j button format organize action performed
../3-Phrases/iReport:void jButtonFormatSameHeightMaxActionPerformed(Qjava.awt.event.ActionEvent;) | j button format same height max action performed
../3-Phrases/iReport:void jButtonFormatSameHeightMinActionPerformed(Qjava.awt.event.ActionEvent;) | j button format same height min action performed
../3-Phrases/iReport:void jButtonFormatSameWidthMinActionPerformed(Qjava.awt.event.ActionEvent;) | j button format same width min action performed
../3-Phrases/iReport:void jButtonFormatSameWidthMaxActionPerformed(Qjava.awt.event.ActionEvent;) | j button format same width max action performed
../3-Phrases/iReport:void jButtonFormatSameWidthActionPerformed(Qjava.awt.event.ActionEvent;) | j button format same width action performed
../3-Phrases/iReport:void jButtonFormatAlignToLeftMarginActionPerformed(Qjava.awt.event.ActionEvent;) | j button format align to left margin action performed
../3-Phrases/iReport:void jButtonFormatAlignToBandBottomActionPerformed(Qjava.awt.event.ActionEvent;) | j button format align to band bottom action performed
../3-Phrases/iReport:void jButtonFormatSameSizeActionPerformed(Qjava.awt.event.ActionEvent;) | j button format same size action performed
../3-Phrases/iReport:void jButtonFormatSameHeightActionPerformed(Qjava.awt.event.ActionEvent;) | j button format same height action performed
../3-Phrases/iReport:void jButtonFormatAlignToRightMarginActionPerformed(Qjava.awt.event.ActionEvent;) | j button format align to right margin action performed
../3-Phrases/iReport:void jButtonFormatAlignToBandTopActionPerformed(Qjava.awt.event.ActionEvent;) | j button format align to band top action performed
../3-Phrases/iReport:void jButtonFormatCenterVRightActionPerformed(Qjava.awt.event.ActionEvent;) | j button format center v right action performed
../3-Phrases/iReport:void jButtonFormatCenterHRightActionPerformed(Qjava.awt.event.ActionEvent;) | j button format center h right action performed
../3-Phrases/iReport:void jButtonFormatAlignRightActionPerformed(Qjava.awt.event.ActionEvent;) | j button format align right action performed
../3-Phrases/iReport:void jButtonFormatAlignLeftActionPerformed(Qjava.awt.event.ActionEvent;) | j button format align left action performed
../3-Phrases/iReport:void jButtonFormatAlignBottomActionPerformed(Qjava.awt.event.ActionEvent;) | j button format align bottom action performed
../3-Phrases/iReport:void jButtonFormatAlignTopActionPerformed(Qjava.awt.event.ActionEvent;) | j button format align top action performed
../3-Phrases/iReport:void addFormatItemsToMenu(Qjavax.swing.JComponent;) | add format items to menu
../3-Phrases/iReport:void formKeyPressed(Qjava.awt.event.KeyEvent;) | form key pressed
../3-Phrases/iReport:void formWindowOpened(Qjava.awt.event.WindowEvent;) | form window opened
../3-Phrases/iReport:void exitForm(Qjava.awt.event.WindowEvent;) | exit form
../3-Phrases/iReport:CONS EventsForm() | events form
../3-Phrases/iReport:void exitForm(Qjava.awt.event.WindowEvent;) | exit form
../3-Phrases/iReport:void jCheckBoxUseCurrentFilesDirectoryForCompilesActionPerformed(Qjava.awt.event.ActionEvent;) | j check box use current files directory for compiles action performed
../3-Phrases/iReport:void formMouseDragged(Qjava.awt.event.MouseEvent;) | form mouse dragged
../3-Phrases/iReport:void formComponentResized(Qjava.awt.event.ComponentEvent;) | form component resized
../3-Phrases/iReport:void exitForm(Qjava.awt.event.WindowEvent;) | exit form
../3-Phrases/iReport:void jButtonForegroundActionPerformed(Qjava.awt.event.ActionEvent;) | j button foreground action performed
../3-Phrases/iReport:void exitForm(Qjava.awt.event.WindowEvent;) | exit form
../3-Phrases/iReport:CONS FormatCommandShrink() | format command shrink
../3-Phrases/iReport:CONS FormatCommandShrink(I) | format command shrink
../3-Phrases/iReport:CONS FormatCommandAlignBottom() | format command align bottom
../3-Phrases/iReport:CONS FormatCommandAlignCenter() | format command align center
../3-Phrases/iReport:CONS FormatCommandEqualsSpaceH() | format command equals space h
../3-Phrases/iReport:CONS FormatCommandAlignBottomToBand() | format command align bottom to band
../3-Phrases/iReport:HashMap promptForParameters(QReport;) | prompt for parameters
../3-Phrases/iReport:void formWindowOpened(Qjava.awt.event.WindowEvent;) | form window opened
../3-Phrases/iReport:void exitForm(Qjava.awt.event.WindowEvent;) | exit form
../3-Phrases/iReport:CONS TextWizardForm(Qjava.awt.Frame;Z) | text wizard form
../3-Phrases/iReport:CONS FormatElementsOperation(QJReportFrame;I) | format elements operation
../3-Phrases/iReport:Point getFormatSize(QString;) | get format size
../3-Phrases/iReport:String deductPageFormat(II) | deduct page format
../3-Phrases/Jabref:Color getTextForeground(Z) | get text foreground
../3-Phrases/Jabref:int waitFor() | wait for
../3-Phrases/Jabref:int waitForImpl() | wait for impl
../3-Phrases/Jabref:String[] getRequiredFieldsForCustomization() | get required fields for customization
../3-Phrases/Jabref:Map<QString;QString;> getNameFormatters() | get name formatters
../3-Phrases/Jabref:CONS NameFormatterTab(QHelpDialog;) | name formatter tab
../3-Phrases/Jabref:String getKeysForSelection() | get keys for selection
../3-Phrases/Jabref:void forward() | forward
../3-Phrases/Jabref:void setBackAndForwardEnabledState() | set back and forward enabled state
../3-Phrases/Jabref:boolean forward() | forward
../3-Phrases/Jabref:void ForwardAction() | forward action
../3-Phrases/Jabref:String[] getRequiredFieldsForCustomization() | get required fields for customization
../3-Phrases/Jabref:String[] getRequiredFieldsForCustomization() | get required fields for customization
../3-Phrases/Jabref:String[] getRequiredFieldsForCustomization() | get required fields for customization
../3-Phrases/Jabref:String[] getRequiredFieldsForCustomization() | get required fields for customization
../3-Phrases/Jabref:KeyStroke getKeyForMac(QKeyStroke;) | get key for mac
../3-Phrases/Jabref:void updateTypesForEntries(QString;) | update types for entries
../3-Phrases/Jabref:boolean setCiteKeyForEntry(QString;QString;) | set cite key for entry
../3-Phrases/Jabref:String resolveForStrings(QString;) | resolve for strings
../3-Phrases/Jabref:List<QBibtexEntry;> resolveForStrings(QCollection<QBibtexEntry;>;Z) | resolve for strings
../3-Phrases/Jabref:BibtexEntry resolveForStrings(QBibtexEntry;Z) | resolve for strings
../3-Phrases/Jabref:boolean checkForDuplicateKeyAndAdd(QString;QString;Z) | check for duplicate key and add
../3-Phrases/Jabref:String fixAuthorForAlphabetization(QString;) | fix author for alphabetization
../3-Phrases/Jabref:String getAuthorsForAlphabetization() | get authors for alphabetization
../3-Phrases/Jabref:String getNameForAlphabetization() | get name for alphabetization
../3-Phrases/Jabref:boolean openExternalFileAnyFormat(QMetaData;QString;QExternalFileType;) | open external file any format
../3-Phrases/Jabref:String getFieldAndFormat(QString;QBibtexEntry;QBibtexDatabase;) | get field and format
../3-Phrases/Jabref:void updateCompletersForEntry(QHashMap<QString;QAbstractAutoCompleter;>;QBibtexEntry;) | update completers for entry
../3-Phrases/Jabref:String quoteForHTML(QString;) | quote for html
../3-Phrases/Jabref:OpenFileFilter getFileFilterForField(QString;) | get file filter for field
../3-Phrases/Jabref:String easyDateFormat() | easy date format
../3-Phrases/Jabref:String easyDateFormat(QDate;) | easy date format
../3-Phrases/Jabref:List<QString;> findEncodingsForString(QString;) | find encodings for string
../3-Phrases/Jabref:boolean waitForFileLock(QFile;I) | wait for file lock
../3-Phrases/Jabref:AbstractAutoCompleter getFor(QString;) | get for
../3-Phrases/Jabref:CONS FormatNameFunction(QVM;) | format name function
../3-Phrases/Jabref:String formatName(QString;IQString;QWarn;) | format name
../3-Phrases/Jabref:String formatName(QAuthor;QString;QWarn;) | format name
../3-Phrases/Jabref:CONS MSBibExportFormat() | ms bib export format
../3-Phrases/Jabref:Map<QString;QIExportFormat;> getExportFormats() | get export formats
../3-Phrases/Jabref:IExportFormat getExportFormat(QString;) | get export format
../3-Phrases/Jabref:void putFormat(QIExportFormat;) | put format
../3-Phrases/Jabref:List<QIExportFormat;> getExportFormats() | get export formats
../3-Phrases/Jabref:String format(QString;QString;) | format
../3-Phrases/Jabref:IExportFormat getExportFormat() | get export format
../3-Phrases/Jabref:CONS ModsExportFormat() | mods export format
../3-Phrases/Jabref:TreeMap<QString;QExportFormat;> getCustomExportFormats() | get custom export formats
../3-Phrases/Jabref:ExportFormat createFormat([QString;) | create format
../3-Phrases/Jabref:void addFormat([QString;) | add format
../3-Phrases/Jabref:PluginBasedExportFormat getFormat(QExportFormatTemplateExtension;) | get format
../3-Phrases/Jabref:CONS PluginBasedExportFormat(QString;QString;QString;QString;QString;QExportFormatTemplateExtension;) | plugin based export format
../3-Phrases/Jabref:CONS ExportFormat(QString;QString;QString;QString;QString;) | export format
../3-Phrases/Jabref:CONS ExportFormat() | export format
../3-Phrases/Jabref:HashMap<QString;QString;> readFormatterFile(QString;) | read formatter file
../3-Phrases/Jabref:String format(QString;QString;) | format
../3-Phrases/Jabref:String format(QString;) | format
../3-Phrases/Jabref:void setPostFormatter(QLayoutFormatter;) | set post formatter
../3-Phrases/Jabref:ArrayList<QString;> getMissingFormatters() | get missing formatters
../3-Phrases/Jabref:void setPostFormatter(QLayoutFormatter;) | set post formatter
../3-Phrases/Jabref:LayoutFormatter getLayoutFormatterFromPlugins(QString;) | get layout formatter from plugins
../3-Phrases/Jabref:LayoutFormatter getLayoutFormatterByClassName(QString;QString;) | get layout formatter by class name
../3-Phrases/Jabref:boolean isInvalidFormatter() | is invalid formatter
../3-Phrases/Jabref:ArrayList<QString;> getInvalidFormatters() | get invalid formatters
../3-Phrases/Jabref:String format(QString;) | format
../3-Phrases/Jabref:String format(QString;) | format
../3-Phrases/Jabref:String format(QString;) | format
../3-Phrases/Jabref:String format(QString;) | format
../3-Phrases/Jabref:String firstFormat(QString;) | first format
../3-Phrases/Jabref:String restFormat(QString;) | rest format
../3-Phrases/Jabref:String format(QString;) | format
../3-Phrases/Jabref:String format(QString;) | format
../3-Phrases/Jabref:CONS NotFoundFormatter(QString;) | not found formatter
../3-Phrases/Jabref:String format(QString;) | format
../3-Phrases/Jabref:String format(QString;) | format
../3-Phrases/Jabref:String format(QString;) | format
../3-Phrases/Jabref:String format(QString;) | format
../3-Phrases/Jabref:List<QFormatEntry;> parseFormatString(QString;) | parse format string
../3-Phrases/Jabref:void FormatEntry(I) | format entry
../3-Phrases/Jabref:void FormatEntry(QString;) | format entry
../3-Phrases/Jabref:String format(QString;) | format
../3-Phrases/Jabref:String format(QString;) | format
../3-Phrases/Jabref:String format(QString;) | format
../3-Phrases/Jabref:String format(QString;) | format
../3-Phrases/Jabref:String format(QString;) | format
../3-Phrases/Jabref:String format(QString;) | format
../3-Phrases/Jabref:String format(QString;) | format
../3-Phrases/Jabref:String format(QString;) | format
../3-Phrases/Jabref:String format(QString;) | format
../3-Phrases/Jabref:String format(QString;) | format
../3-Phrases/Jabref:String format(QString;) | format
../3-Phrases/Jabref:String format(QString;) | format
../3-Phrases/Jabref:String format(QString;) | format
../3-Phrases/Jabref:String format(QString;) | format
../3-Phrases/Jabref:String format(QString;) | format
../3-Phrases/Jabref:String format(QString;) | format
../3-Phrases/Jabref:String format(QString;) | format
../3-Phrases/Jabref:String format(QString;) | format
../3-Phrases/Jabref:String format(QString;) | format
../3-Phrases/Jabref:String format(QString;) | format
../3-Phrases/Jabref:String format(QString;) | format
../3-Phrases/Jabref:String format(QString;) | format
../3-Phrases/Jabref:String format(QString;) | format
../3-Phrases/Jabref:String format(QString;) | format
../3-Phrases/Jabref:String format(QString;) | format
../3-Phrases/Jabref:String format(QString;) | format
../3-Phrases/Jabref:String format(QString;) | format
../3-Phrases/Jabref:String format(QString;) | format
../3-Phrases/Jabref:String format(QString;) | format
../3-Phrases/Jabref:CONS CompositeFormat() | composite format
../3-Phrases/Jabref:CONS CompositeFormat(QLayoutFormatter;QLayoutFormatter;) | composite format
../3-Phrases/Jabref:CONS CompositeFormat([QLayoutFormatter;) | composite format
../3-Phrases/Jabref:String format(QString;) | format
../3-Phrases/Jabref:String format(QString;) | format
../3-Phrases/Jabref:String format(QString;) | format
../3-Phrases/Jabref:String format(QString;) | format
../3-Phrases/Jabref:String format(QString;) | format
../3-Phrases/Jabref:String format(QString;) | format
../3-Phrases/Jabref:String format(QString;) | format
../3-Phrases/Jabref:String format(QString;) | format
../3-Phrases/Jabref:String format(QString;) | format
../3-Phrases/Jabref:String format(QString;) | format
../3-Phrases/Jabref:String format(QString;) | format
../3-Phrases/Jabref:String format(QString;) | format
../3-Phrases/Jabref:String format(QString;) | format
../3-Phrases/Jabref:String format(QString;) | format
../3-Phrases/Jabref:String format(QString;) | format
../3-Phrases/Jabref:String format(QString;) | format
../3-Phrases/Jabref:String format(QString;) | format
../3-Phrases/Jabref:String format(QString;QAuthorList;[QString;) | format
../3-Phrases/Jabref:String format(QString;QString;QBibtexEntry;) | format
../3-Phrases/Jabref:String format(QString;) | format
../3-Phrases/Jabref:CONS AutoSetExternalFileForEntries(QBasePanel;QString;) | auto set external file for entries
../3-Phrases/Jabref:List<QFileListEntry;> getExternalLinksForEntries(QList<QBibtexEntry;>;) | get external links for entries
../3-Phrases/Jabref:FindResult lookForFullTextAtURL(QString;) | look for full text at url
../3-Phrases/Jabref:Map<QBibtexEntry;Qjava.util.List<QFile;>;> findFilesForSet(QCollection<QBibtexEntry;>;QCollection<QString;>;QList<QFile;>;QString;) | find files for set
../3-Phrases/Jabref:String getDescriptionForPreview() | get description for preview
../3-Phrases/Jabref:void refreshForNewDatabase(QBibtexDatabase;) | refresh for new database
../3-Phrases/Jabref:String getDescriptionForPreview(QString;QString;ZZ) | get description for preview
../3-Phrases/Jabref:void refreshGroupsForNewDatabase(QBibtexDatabase;) | refresh groups for new database
../3-Phrases/Jabref:void setLayoutForSelectedGroup() | set layout for selected group
../3-Phrases/Jabref:String formatRegExException(QString;QException;) | format reg ex exception
../3-Phrases/Jabref:AbstractUndoableEdit getUndoForAddPreviousEntries() | get undo for add previous entries
../3-Phrases/Jabref:void refreshForNewDatabase(QBibtexDatabase;) | refresh for new database
../3-Phrases/Jabref:String getDescriptionForPreview(QString;QAST;ZZ) | get description for preview
../3-Phrases/Jabref:void updateTypesForEntries(QString;) | update types for entries
../3-Phrases/Jabref:CONS MainTableFormat(QBasePanel;) | main table format
../3-Phrases/Jabref:String[] getIconTypeForColumn(I) | get icon type for column
../3-Phrases/Jabref:Object formatName(QObject;) | format name
../3-Phrases/Jabref:void updateTableFormat() | update table format
../3-Phrases/Jabref:String getNewFileForMac(QJFrame;QFile;QString;IZZQFilenameFilter;) | get new file for mac
../3-Phrases/Jabref:String[] getIconTypeForColumn(I) | get icon type for column
../3-Phrases/Jabref:Comparator<QBibtexEntry;> getComparatorForColumn(I) | get comparator for column
../3-Phrases/Jabref:SortedList<QBibtexEntry;> getSortedForTable() | get sorted for table
../3-Phrases/Jabref:boolean isRecognizedFormat(QInputStream;) | is recognized format
../3-Phrases/Jabref:String getFormatName() | get format name
../3-Phrases/Jabref:String getFormatName() | get format name
../3-Phrases/Jabref:boolean isRecognizedFormat(QInputStream;) | is recognized format
../3-Phrases/Jabref:String checkForEncoding(QReader;) | check for encoding
../3-Phrases/Jabref:String getFormatName() | get format name
../3-Phrases/Jabref:boolean isRecognizedFormat(QInputStream;) | is recognized format
../3-Phrases/Jabref:String getFormatName() | get format name
../3-Phrases/Jabref:boolean isRecognizedFormat(QInputStream;) | is recognized format
../3-Phrases/Jabref:String getFormatName() | get format name
../3-Phrases/Jabref:boolean isRecognizedFormat(QInputStream;) | is recognized format
../3-Phrases/Jabref:String getFormatName() | get format name
../3-Phrases/Jabref:boolean isRecognizedFormat(QInputStream;) | is recognized format
../3-Phrases/Jabref:String getFormatName() | get format name
../3-Phrases/Jabref:boolean isRecognizedFormat(QInputStream;) | is recognized format
../3-Phrases/Jabref:CONS ImportFormat() | import format
../3-Phrases/Jabref:boolean isRecognizedFormat(QInputStream;) | is recognized format
../3-Phrases/Jabref:String getFormatName() | get format name
../3-Phrases/Jabref:String getFormatName() | get format name
../3-Phrases/Jabref:boolean isRecognizedFormat(QInputStream;) | is recognized format
../3-Phrases/Jabref:String getFormatName() | get format name
../3-Phrases/Jabref:boolean isRecognizedFormat(QInputStream;) | is recognized format
../3-Phrases/Jabref:String getFormatName() | get format name
../3-Phrases/Jabref:boolean isRecognizedFormat(QInputStream;) | is recognized format
../3-Phrases/Jabref:StringBuffer format(QStringBuffer;QString;) | format
../3-Phrases/Jabref:StringBuffer format(QStringBuffer;) | format
../3-Phrases/Jabref:String format(QString;) | format
../3-Phrases/Jabref:String getFormatName() | get format name
../3-Phrases/Jabref:boolean isRecognizedFormat(QInputStream;) | is recognized format
../3-Phrases/Jabref:String getFormatName() | get format name
../3-Phrases/Jabref:boolean isRecognizedFormat(QInputStream;) | is recognized format
../3-Phrases/Jabref:String getFormatName() | get format name
../3-Phrases/Jabref:boolean isRecognizedFormat(QInputStream;) | is recognized format
../3-Phrases/Jabref:String getFormatName() | get format name
../3-Phrases/Jabref:boolean isRecognizedFormat(QInputStream;) | is recognized format
../3-Phrases/Jabref:String getFormatName() | get format name
../3-Phrases/Jabref:boolean isRecognizedFormat(QInputStream;) | is recognized format
../3-Phrases/Jabref:ImportFormat getImportFormat() | get import format
../3-Phrases/Jabref:CONS ImportFormatReader() | import format reader
../3-Phrases/Jabref:void resetImportFormats() | reset import formats
../3-Phrases/Jabref:SortedSet<QImportFormat;> getCustomImportFormats() | get custom import formats
../3-Phrases/Jabref:SortedSet<QImportFormat;> getBuiltInInputFormats() | get built in input formats
../3-Phrases/Jabref:SortedSet<QImportFormat;> getImportFormats() | get import formats
../3-Phrases/Jabref:String getImportFormatList() | get import format list
../3-Phrases/Jabref:Pair<QString;QParserResult;> importUnknownFormat(QString;) | import unknown format
../3-Phrases/Jabref:String getFormatName() | get format name
../3-Phrases/Jabref:boolean isRecognizedFormat(QInputStream;) | is recognized format
../3-Phrases/Jabref:String getFormatName() | get format name
../3-Phrases/Jabref:boolean isRecognizedFormat(QInputStream;) | is recognized format
../3-Phrases/Jabref:String getFormatName() | get format name
../3-Phrases/Jabref:boolean isRecognizedFormat(QInputStream;) | is recognized format
../3-Phrases/Jabref:boolean isRecognizedFormat(QReader;) | is recognized format
../3-Phrases/Jabref:String format(QString;) | format
../3-Phrases/Jabref:void schedulePluginForDeletion(QString;) | schedule plugin for deletion
../3-Phrases/Jabref:List<QExportFormatTemplateExtension;> getExportFormatTemplateExtensions() | get export format template extensions
../3-Phrases/Jabref:void ExportFormatTemplateExtension(QPlugin;QExtension;) | export format template extension
../3-Phrases/Jabref:List<QExportFormatExtension;> getExportFormatExtensions() | get export format extensions
../3-Phrases/Jabref:void ExportFormatExtension(QPlugin;QExtension;) | export format extension
../3-Phrases/Jabref:net.sf.jabref.export.IExportFormat getExportFormat() | get export format
../3-Phrases/Jabref:List<QExportFormatProviderExtension;> getExportFormatProviderExtensions() | get export format provider extensions
../3-Phrases/Jabref:void ExportFormatProviderExtension(QPlugin;QExtension;) | export format provider extension
../3-Phrases/Jabref:net.sf.jabref.export.IExportFormatProvider getFormatProvider() | get format provider
../3-Phrases/Jabref:List<QLayoutFormatterExtension;> getLayoutFormatterExtensions() | get layout formatter extensions
../3-Phrases/Jabref:void LayoutFormatterExtension(QPlugin;QExtension;) | layout formatter extension
../3-Phrases/Jabref:net.sf.jabref.export.layout.LayoutFormatter getLayoutFormatter() | get layout formatter
../3-Phrases/Jabref:List<QImportFormatExtension;> getImportFormatExtensions() | get import format extensions
../3-Phrases/Jabref:void ImportFormatExtension(QPlugin;QExtension;) | import format extension
../3-Phrases/Jabref:net.sf.jabref.imports.ImportFormat getImportFormat() | get import format
../3-Phrases/Jabref:void setStyleForTag(QString;QString;QStyledDocument;) | set style for tag
../3-Phrases/Jabref:void insertTextForTag() | insert text for tag
../3-Phrases/Jabref:void testFieldAndFormat() | test field and format
../3-Phrases/Jabref:void testUserFieldAndFormat() | test user field and format
../3-Phrases/Jabref:void testFixAuthorForAlphabetization() | test fix author for alphabetization
../3-Phrases/Jabref:void testGetAuthorsForAlphabetization() | test get authors for alphabetization
../3-Phrases/Jabref:void testFormatName() | test format name
../3-Phrases/Jabref:void assertNameFormat(QString;QString;IQString;) | assert name format
../3-Phrases/Jabref:void assertNameFormatC(QString;QString;) | assert name format c
../3-Phrases/Jabref:void assertNameFormatB(QString;QString;) | assert name format b
../3-Phrases/Jabref:void assertNameFormatA(QString;QString;) | assert name format a
../3-Phrases/Jabref:void testFormatName() | test format name
../3-Phrases/Jabref:void testBasicFormat() | test basic format
../3-Phrases/Jabref:void testBasicFormat() | test basic format
../3-Phrases/Jabref:void testFormat() | test format
../3-Phrases/Jabref:void testFormat() | test format
../3-Phrases/Jabref:String format(QString;) | format
../3-Phrases/Jabref:String format(QString;) | format
../3-Phrases/Jabref:String format(QString;) | format
../3-Phrases/Jabref:void testFormatStringStringBibtexEntry() | test format string string bibtex entry
../3-Phrases/Jabref:void testFormat() | test format
../3-Phrases/Jabref:void testFormatString() | test format string
../3-Phrases/Jabref:void testFormat() | test format
../3-Phrases/Jabref:void testFormat() | test format
../3-Phrases/Jabref:void testFormat() | test format
../3-Phrases/Jabref:void testFormat() | test format
../3-Phrases/Jabref:void testFormat() | test format
../3-Phrases/Jabref:void testFormat() | test format
../3-Phrases/Jabref:void testFormat() | test format
../3-Phrases/Jabref:void testFormat() | test format
../3-Phrases/Jabref:void testFormat() | test format
../3-Phrases/Jabref:void testFormat() | test format
../3-Phrases/Jabref:void testFormat() | test format
../3-Phrases/Jabref:void testFormat() | test format
../3-Phrases/Jabref:void testFormat() | test format
../3-Phrases/Jabref:void testFormat() | test format
../3-Phrases/Jabref:void testFormat() | test format
../3-Phrases/Jabref:void testFormat() | test format
../3-Phrases/Jabref:void testEntryEditorForNameFieldAutoCompleter() | test entry editor for name field auto completer
../3-Phrases/Jabref:void testEntryEditorForFieldAnotherAutoCompleter() | test entry editor for field another auto completer
../3-Phrases/Jabref:void testIsRecognizedFormat() | test is recognized format
../3-Phrases/Jabref:void testIsRecognizedFormat() | test is recognized format
../3-Phrases/Jabref:void testIsRecognizedFormat() | test is recognized format
../3-Phrases/Jabref:void testIsRecognizedFormat() | test is recognized format
../3-Phrases/jajuk:void forceRefresh() | force refresh
../3-Phrases/jajuk:SimpleDateFormat getDateFormatter() | get date formatter
../3-Phrases/jajuk:String format(QString;) | format
../3-Phrases/jajuk:String format(QString;) | format
../3-Phrases/jajuk:String getFormatedValue(QString;) | get formated value
../3-Phrases/jajuk:Format getFormat() | get format
../3-Phrases/jajuk:void setFormat(QFormat;) | set format
../3-Phrases/jajuk:ArrayList<QFormat;> getSupportedDateFormats() | get supported date formats
../3-Phrases/jajuk:ArrayList<QString;> getSupportedDateFormatsDesc() | get supported date formats desc
../3-Phrases/jajuk:Format getDateFormat(QString;) | get date format
../3-Phrases/jajuk:String getFormatDesc(QFormat;) | get format desc
../3-Phrases/jajuk:String format(QString;) | format
../3-Phrases/jajuk:Directory getDirectoryForIO(Qjava.io.File;) | get directory for io
../3-Phrases/jajuk:String format(QString;) | format
../3-Phrases/jajuk:String getTitleForType(I) | get title for type
../3-Phrases/jajuk:Color getForeground() | get foreground
../3-Phrases/jajuk:CONS FastForwardTrackAction() | fast forward track action
../3-Phrases/jajuk:String formatXML(QString;) | format xml
../3-Phrases/jajuk:String formatTag(QString;) | format tag
../3-Phrases/jajuk:String formatTimeBySec(JZ) | format time by sec
../3-Phrases/jajuk:String formatPropertyDesc(QString;) | format property desc
../3-Phrases/jajuk:DateFormat getAdditionDateFormat() | get addition date format
../3-Phrases/jajuk:String format(QObject;QPropertyMetaInformation;) | format
../3-Phrases/jajuk:String formatStyle(QString;) | format style
../3-Phrases/javaHMO:String getSourceFormat() | get source format
../3-Phrases/javaHMO:String getSourceFormat() | get source format
../3-Phrases/javaHMO:String getSourceFormat() | get source format
../3-Phrases/javaHMO:String getSourceFormat() | get source format
../3-Phrases/javaHMO:String getSourceFormat() | get source format
../3-Phrases/javaHMO:String getImageFormat() | get image format
../3-Phrases/javaHMO:String getContentTypeFor(QString;) | get content type for
../3-Phrases/javaHMO:String getSourceFormat() | get source format
../3-Phrases/javaHMO:String getSourceFormat() | get source format
../3-Phrases/javaHMO:void setSourceFormat(QString;) | set source format
../3-Phrases/javaHMO:String getSourceFormat() | get source format
../3-Phrases/javaHMO:void setSourceFormat(QString;) | set source format
../3-Phrases/javaHMO:String getSourceFormat() | get source format
../3-Phrases/javaHMO:String getFormat() | get format
../3-Phrases/javaHMO:void setFormat(QString;) | set format
../3-Phrases/javaHMO:String getSourceFormat() | get source format
../3-Phrases/javaHMO:WeatherForecastData[] getExtendedForecast() | get extended forecast
../3-Phrases/javaHMO:CONS WeatherForecastData() | weather forecast data
../3-Phrases/javaHMO:CONS WeatherForecastData(QDate;QString;QString;QString;QString;) | weather forecast data
../3-Phrases/javaHMO:Show pickNextShowForDownloading() | pick next show for downloading
../3-Phrases/jbidwatcher:String dateFormat(QSearcher;) | date format
../3-Phrases/jbidwatcher:XMLParseException valueMissingForAttribute(QString;I) | value missing for attribute
../3-Phrases/jbidwatcher:String formatDate(QString;) | format date
../3-Phrases/jbidwatcher:String form(QString;QString;QString;QString;) | form
../3-Phrases/jbidwatcher:SpringLayout.Constraints getConstraintsForCell(IIQContainer;I) | get constraints for cell
../3-Phrases/jbidwatcher:void Form(QString;) | form
../3-Phrases/jbidwatcher:List getForms() | get forms
../3-Phrases/jbidwatcher:JHTML.Form getFormWithInput(QString;) | get form with input
../3-Phrases/jbidwatcher:String formatDate(QDate;) | format date
../3-Phrases/jbidwatcher:String getHTMLForEntry(QString;QString;) | get html for entry
../3-Phrases/jbidwatcher:AuctionServer getServerForIdentifier(QString;) | get server for identifier
../3-Phrases/jbidwatcher:AuctionServer getServerForUrlString(QString;) | get server for url string
../3-Phrases/jbidwatcher:JHTML.Form getBidForm(QCookieJar;QAuctionEntry;QCurrency;I) | get bid form
../3-Phrases/jbidwatcher:String formatSnipeAndBid(QAuctionEntry;) | format snipe and bid
../3-Phrases/jbidwatcher:String formatBid(QAuctionEntry;QString;) | format bid
../3-Phrases/jbidwatcher:String formatSnipe(QAuctionEntry;QString;) | format snipe
../3-Phrases/jbidwatcher:String formatTotalSnipe(QAuctionEntry;QString;) | format total snipe
../3-Phrases/jbidwatcher:URLConnection postFormPage(QString;QString;QString;QString;Z) | post form page
../3-Phrases/jbidwatcher:Color chooseForeground(QAuctionEntry;I) | choose foreground
../3-Phrases/jbidwatcher:JHTML.Form getBidForm(QCookieJar;QAuctionEntry;QCurrency;I) | get bid form
../3-Phrases/jbidwatcher:void forceUpdate() | force update
../3-Phrases/jbidwatcher:String convertToMsgFormat(QString;) | convert to msg format
../3-Phrases/jbidwatcher:boolean isUpdateForced() | is update forced
../3-Phrases/jbidwatcher:void setSendsNotificationForEachKeystroke(Z) | set sends notification for each keystroke
../3-Phrases/Jftp:int writeWireFormat([BI) | write wire format
../3-Phrases/Jftp:int readWireFormat([BI) | read wire format
../3-Phrases/Jftp:int writeScopeWireFormat([BI) | write scope wire format
../3-Phrases/Jftp:int readScopeWireFormat([BI) | read scope wire format
../3-Phrases/Jftp:int writeTrailerWireFormat([BI) | write trailer wire format
../3-Phrases/Jftp:int readTrailerWireFormat(QInputStream;[BI) | read trailer wire format
../3-Phrases/Jftp:int writeWireFormat([BI) | write wire format
../3-Phrases/Jftp:int readWireFormat([BI) | read wire format
../3-Phrases/Jftp:int writeHeaderWireFormat([BI) | write header wire format
../3-Phrases/Jftp:int readHeaderWireFormat([BI) | read header wire format
../3-Phrases/Jftp:int writeQuestionSectionWireFormat([BI) | write question section wire format
../3-Phrases/Jftp:int readQuestionSectionWireFormat([BI) | read question section wire format
../3-Phrases/Jftp:int writeResourceRecordWireFormat([BI) | write resource record wire format
../3-Phrases/Jftp:int readResourceRecordWireFormat([BI) | read resource record wire format
../3-Phrases/Jftp:int writeBodyWireFormat([BI) | write body wire format
../3-Phrases/Jftp:int readBodyWireFormat([BI) | read body wire format
../3-Phrases/Jftp:int writeRDataWireFormat([BI) | write r data wire format
../3-Phrases/Jftp:int readRDataWireFormat([BI) | read r data wire format
../3-Phrases/Jftp:int writeBodyWireFormat([BI) | write body wire format
../3-Phrases/Jftp:int readBodyWireFormat([BI) | read body wire format
../3-Phrases/Jftp:int writeRDataWireFormat([BI) | write r data wire format
../3-Phrases/Jftp:int readRDataWireFormat([BI) | read r data wire format
../3-Phrases/Jftp:int writeBodyWireFormat([BI) | write body wire format
../3-Phrases/Jftp:int readBodyWireFormat([BI) | read body wire format
../3-Phrases/Jftp:int writeRDataWireFormat([BI) | write r data wire format
../3-Phrases/Jftp:int readRDataWireFormat([BI) | read r data wire format
../3-Phrases/Jftp:int writeBodyWireFormat([BI) | write body wire format
../3-Phrases/Jftp:int readBodyWireFormat([BI) | read body wire format
../3-Phrases/Jftp:int writeRDataWireFormat([BI) | write r data wire format
../3-Phrases/Jftp:int readRDataWireFormat([BI) | read r data wire format
../3-Phrases/Jftp:int writeBodyWireFormat([BI) | write body wire format
../3-Phrases/Jftp:int readBodyWireFormat([BI) | read body wire format
../3-Phrases/Jftp:int writeRDataWireFormat([BI) | write r data wire format
../3-Phrases/Jftp:int readRDataWireFormat([BI) | read r data wire format
../3-Phrases/Jftp:int writeTrailerWireFormat([BI) | write trailer wire format
../3-Phrases/Jftp:int readTrailerWireFormat(QInputStream;[BI) | read trailer wire format
../3-Phrases/Jftp:int writeWireFormat([BI) | write wire format
../3-Phrases/Jftp:int readWireFormat(QInputStream;[BI) | read wire format
../3-Phrases/Jftp:int writeHeaderWireFormat([BI) | write header wire format
../3-Phrases/Jftp:int readHeaderWireFormat(QInputStream;[BI) | read header wire format
../3-Phrases/Jftp:int writeTrailerWireFormat([BI) | write trailer wire format
../3-Phrases/Jftp:int readTrailerWireFormat(QInputStream;[BI) | read trailer wire format
../3-Phrases/Jftp:int writeParameterWordsWireFormat([BI) | write parameter words wire format
../3-Phrases/Jftp:int writeBytesWireFormat([BI) | write bytes wire format
../3-Phrases/Jftp:int readParameterWordsWireFormat([BI) | read parameter words wire format
../3-Phrases/Jftp:int readBytesWireFormat([BI) | read bytes wire format
../3-Phrases/Jftp:int writeSetupWireFormat([BI) | write setup wire format
../3-Phrases/Jftp:int writeParametersWireFormat([BI) | write parameters wire format
../3-Phrases/Jftp:int writeDataWireFormat([BI) | write data wire format
../3-Phrases/Jftp:int readSetupWireFormat([BII) | read setup wire format
../3-Phrases/Jftp:int readParametersWireFormat([BII) | read parameters wire format
../3-Phrases/Jftp:int readDataWireFormat([BII) | read data wire format
../3-Phrases/Jftp:int writeSetupWireFormat([BI) | write setup wire format
../3-Phrases/Jftp:int writeParametersWireFormat([BI) | write parameters wire format
../3-Phrases/Jftp:int writeDataWireFormat([BI) | write data wire format
../3-Phrases/Jftp:int readSetupWireFormat([BII) | read setup wire format
../3-Phrases/Jftp:int readParametersWireFormat([BII) | read parameters wire format
../3-Phrases/Jftp:int readDataWireFormat([BII) | read data wire format
../3-Phrases/Jftp:int writeSetupWireFormat([BI) | write setup wire format
../3-Phrases/Jftp:int writeParametersWireFormat([BI) | write parameters wire format
../3-Phrases/Jftp:int writeDataWireFormat([BI) | write data wire format
../3-Phrases/Jftp:int readSetupWireFormat([BII) | read setup wire format
../3-Phrases/Jftp:int readParametersWireFormat([BII) | read parameters wire format
../3-Phrases/Jftp:int readDataWireFormat([BII) | read data wire format
../3-Phrases/Jftp:int writeParameterWordsWireFormat([BI) | write parameter words wire format
../3-Phrases/Jftp:int writeBytesWireFormat([BI) | write bytes wire format
../3-Phrases/Jftp:int readParameterWordsWireFormat([BI) | read parameter words wire format
../3-Phrases/Jftp:int readBytesWireFormat([BI) | read bytes wire format
../3-Phrases/Jftp:NtlmChallenge getChallengeForDomain() | get challenge for domain
../3-Phrases/Jftp:int writeParameterWordsWireFormat([BI) | write parameter words wire format
../3-Phrases/Jftp:int writeBytesWireFormat([BI) | write bytes wire format
../3-Phrases/Jftp:int readParameterWordsWireFormat([BI) | read parameter words wire format
../3-Phrases/Jftp:int readBytesWireFormat([BI) | read bytes wire format
../3-Phrases/Jftp:int writeParameterWordsWireFormat([BI) | write parameter words wire format
../3-Phrases/Jftp:int writeBytesWireFormat([BI) | write bytes wire format
../3-Phrases/Jftp:int readParameterWordsWireFormat([BI) | read parameter words wire format
../3-Phrases/Jftp:int readBytesWireFormat([BI) | read bytes wire format
../3-Phrases/Jftp:int writeParameterWordsWireFormat([BI) | write parameter words wire format
../3-Phrases/Jftp:int writeBytesWireFormat([BI) | write bytes wire format
../3-Phrases/Jftp:int readParameterWordsWireFormat([BI) | read parameter words wire format
../3-Phrases/Jftp:int readBytesWireFormat([BI) | read bytes wire format
../3-Phrases/Jftp:int writeSetupWireFormat([BI) | write setup wire format
../3-Phrases/Jftp:int writeParametersWireFormat([BI) | write parameters wire format
../3-Phrases/Jftp:int writeDataWireFormat([BI) | write data wire format
../3-Phrases/Jftp:int readSetupWireFormat([BII) | read setup wire format
../3-Phrases/Jftp:int readParametersWireFormat([BII) | read parameters wire format
../3-Phrases/Jftp:int readDataWireFormat([BII) | read data wire format
../3-Phrases/Jftp:int readSmbQueryFileStandardInfoWireFormat([BI) | read smb query file standard info wire format
../3-Phrases/Jftp:int readSmbQueryFileBasicInfoWireFormat([BI) | read smb query file basic info wire format
../3-Phrases/Jftp:int writeParameterWordsWireFormat([BI) | write parameter words wire format
../3-Phrases/Jftp:int writeBytesWireFormat([BI) | write bytes wire format
../3-Phrases/Jftp:int readParameterWordsWireFormat([BI) | read parameter words wire format
../3-Phrases/Jftp:int readBytesWireFormat([BI) | read bytes wire format
../3-Phrases/Jftp:int writeSetupWireFormat([BI) | write setup wire format
../3-Phrases/Jftp:int readSetupWireFormat([BII) | read setup wire format
../3-Phrases/Jftp:int writeParametersWireFormat([BI) | write parameters wire format
../3-Phrases/Jftp:int writeDataWireFormat([BI) | write data wire format
../3-Phrases/Jftp:int readParametersWireFormat([BII) | read parameters wire format
../3-Phrases/Jftp:int readDataWireFormat([BII) | read data wire format
../3-Phrases/Jftp:int writeSetupWireFormat([BI) | write setup wire format
../3-Phrases/Jftp:int writeParametersWireFormat([BI) | write parameters wire format
../3-Phrases/Jftp:int writeDataWireFormat([BI) | write data wire format
../3-Phrases/Jftp:int readSetupWireFormat([BII) | read setup wire format
../3-Phrases/Jftp:int readParametersWireFormat([BII) | read parameters wire format
../3-Phrases/Jftp:int readDataWireFormat([BII) | read data wire format
../3-Phrases/Jftp:int writeSetupWireFormat([BI) | write setup wire format
../3-Phrases/Jftp:int writeParametersWireFormat([BI) | write parameters wire format
../3-Phrases/Jftp:int writeDataWireFormat([BI) | write data wire format
../3-Phrases/Jftp:int readSetupWireFormat([BII) | read setup wire format
../3-Phrases/Jftp:int readParametersWireFormat([BII) | read parameters wire format
../3-Phrases/Jftp:int readDataWireFormat([BII) | read data wire format
../3-Phrases/Jftp:int writeParameterWordsWireFormat([BI) | write parameter words wire format
../3-Phrases/Jftp:int writeBytesWireFormat([BI) | write bytes wire format
../3-Phrases/Jftp:int readParameterWordsWireFormat([BI) | read parameter words wire format
../3-Phrases/Jftp:int readBytesWireFormat([BI) | read bytes wire format
../3-Phrases/Jftp:int writeParameterWordsWireFormat([BI) | write parameter words wire format
../3-Phrases/Jftp:int writeBytesWireFormat([BI) | write bytes wire format
../3-Phrases/Jftp:int readParameterWordsWireFormat([BI) | read parameter words wire format
../3-Phrases/Jftp:int readBytesWireFormat([BI) | read bytes wire format
../3-Phrases/Jftp:int writeSetupWireFormat([BI) | write setup wire format
../3-Phrases/Jftp:int writeParametersWireFormat([BI) | write parameters wire format
../3-Phrases/Jftp:int writeDataWireFormat([BI) | write data wire format
../3-Phrases/Jftp:int readSetupWireFormat([BII) | read setup wire format
../3-Phrases/Jftp:int readParametersWireFormat([BII) | read parameters wire format
../3-Phrases/Jftp:int readDataWireFormat([BII) | read data wire format
../3-Phrases/Jftp:int writeSetupWireFormat([BI) | write setup wire format
../3-Phrases/Jftp:int writeParametersWireFormat([BI) | write parameters wire format
../3-Phrases/Jftp:int writeDataWireFormat([BI) | write data wire format
../3-Phrases/Jftp:int readSetupWireFormat([BII) | read setup wire format
../3-Phrases/Jftp:int readParametersWireFormat([BII) | read parameters wire format
../3-Phrases/Jftp:int readDataWireFormat([BII) | read data wire format
../3-Phrases/Jftp:int writeParameterWordsWireFormat([BI) | write parameter words wire format
../3-Phrases/Jftp:int writeBytesWireFormat([BI) | write bytes wire format
../3-Phrases/Jftp:int readParameterWordsWireFormat([BI) | read parameter words wire format
../3-Phrases/Jftp:int readBytesWireFormat([BI) | read bytes wire format
../3-Phrases/Jftp:int writeParameterWordsWireFormat([BI) | write parameter words wire format
../3-Phrases/Jftp:int writeBytesWireFormat([BI) | write bytes wire format
../3-Phrases/Jftp:int readParameterWordsWireFormat([BI) | read parameter words wire format
../3-Phrases/Jftp:int readBytesWireFormat([BI) | read bytes wire format
../3-Phrases/Jftp:int writeSetupWireFormat([BI) | write setup wire format
../3-Phrases/Jftp:int writeParametersWireFormat([BI) | write parameters wire format
../3-Phrases/Jftp:int writeDataWireFormat([BI) | write data wire format
../3-Phrases/Jftp:int readSetupWireFormat([BII) | read setup wire format
../3-Phrases/Jftp:int readParametersWireFormat([BII) | read parameters wire format
../3-Phrases/Jftp:int readDataWireFormat([BII) | read data wire format
../3-Phrases/Jftp:int writeSetupWireFormat([BI) | write setup wire format
../3-Phrases/Jftp:int writeParametersWireFormat([BI) | write parameters wire format
../3-Phrases/Jftp:int writeDataWireFormat([BI) | write data wire format
../3-Phrases/Jftp:int readSetupWireFormat([BII) | read setup wire format
../3-Phrases/Jftp:int readParametersWireFormat([BII) | read parameters wire format
../3-Phrases/Jftp:int readDataWireFormat([BII) | read data wire format
../3-Phrases/Jftp:int writeParameterWordsWireFormat([BI) | write parameter words wire format
../3-Phrases/Jftp:int writeBytesWireFormat([BI) | write bytes wire format
../3-Phrases/Jftp:int readParameterWordsWireFormat([BI) | read parameter words wire format
../3-Phrases/Jftp:int readBytesWireFormat([BI) | read bytes wire format
../3-Phrases/Jftp:int writeSetupWireFormat([BI) | write setup wire format
../3-Phrases/Jftp:int readSetupWireFormat([BII) | read setup wire format
../3-Phrases/Jftp:int writeParametersWireFormat([BI) | write parameters wire format
../3-Phrases/Jftp:int writeDataWireFormat([BI) | write data wire format
../3-Phrases/Jftp:int readParametersWireFormat([BII) | read parameters wire format
../3-Phrases/Jftp:int readDataWireFormat([BII) | read data wire format
../3-Phrases/Jftp:int writeParameterWordsWireFormat([BI) | write parameter words wire format
../3-Phrases/Jftp:int writeBytesWireFormat([BI) | write bytes wire format
../3-Phrases/Jftp:int readParameterWordsWireFormat([BI) | read parameter words wire format
../3-Phrases/Jftp:int readBytesWireFormat([BI) | read bytes wire format
../3-Phrases/Jftp:int writeParameterWordsWireFormat([BI) | write parameter words wire format
../3-Phrases/Jftp:int writeBytesWireFormat([BI) | write bytes wire format
../3-Phrases/Jftp:int readParameterWordsWireFormat([BI) | read parameter words wire format
../3-Phrases/Jftp:int readBytesWireFormat([BI) | read bytes wire format
../3-Phrases/Jftp:int writeParameterWordsWireFormat([BI) | write parameter words wire format
../3-Phrases/Jftp:int writeBytesWireFormat([BI) | write bytes wire format
../3-Phrases/Jftp:int readParameterWordsWireFormat([BI) | read parameter words wire format
../3-Phrases/Jftp:int readBytesWireFormat([BI) | read bytes wire format
../3-Phrases/Jftp:int writeParameterWordsWireFormat([BI) | write parameter words wire format
../3-Phrases/Jftp:int writeBytesWireFormat([BI) | write bytes wire format
../3-Phrases/Jftp:int readParameterWordsWireFormat([BI) | read parameter words wire format
../3-Phrases/Jftp:int readBytesWireFormat([BI) | read bytes wire format
../3-Phrases/Jftp:int writeParameterWordsWireFormat([BI) | write parameter words wire format
../3-Phrases/Jftp:int writeBytesWireFormat([BI) | write bytes wire format
../3-Phrases/Jftp:int readParameterWordsWireFormat([BI) | read parameter words wire format
../3-Phrases/Jftp:int readBytesWireFormat([BI) | read bytes wire format
../3-Phrases/Jftp:int writeParameterWordsWireFormat([BI) | write parameter words wire format
../3-Phrases/Jftp:int writeBytesWireFormat([BI) | write bytes wire format
../3-Phrases/Jftp:int readParameterWordsWireFormat([BI) | read parameter words wire format
../3-Phrases/Jftp:int readBytesWireFormat([BI) | read bytes wire format
../3-Phrases/Jftp:int writeSetupWireFormat([BI) | write setup wire format
../3-Phrases/Jftp:int writeParametersWireFormat([BI) | write parameters wire format
../3-Phrases/Jftp:int writeDataWireFormat([BI) | write data wire format
../3-Phrases/Jftp:int readSetupWireFormat([BII) | read setup wire format
../3-Phrases/Jftp:int readParametersWireFormat([BII) | read parameters wire format
../3-Phrases/Jftp:int readDataWireFormat([BII) | read data wire format
../3-Phrases/Jftp:int writeSetupWireFormat([BI) | write setup wire format
../3-Phrases/Jftp:int writeParametersWireFormat([BI) | write parameters wire format
../3-Phrases/Jftp:int writeDataWireFormat([BI) | write data wire format
../3-Phrases/Jftp:int readSetupWireFormat([BII) | read setup wire format
../3-Phrases/Jftp:int readParametersWireFormat([BII) | read parameters wire format
../3-Phrases/Jftp:int readDataWireFormat([BII) | read data wire format
../3-Phrases/Jftp:int writeSetupWireFormat([BI) | write setup wire format
../3-Phrases/Jftp:int writeParametersWireFormat([BI) | write parameters wire format
../3-Phrases/Jftp:int writeDataWireFormat([BI) | write data wire format
../3-Phrases/Jftp:int readSetupWireFormat([BII) | read setup wire format
../3-Phrases/Jftp:int readParametersWireFormat([BII) | read parameters wire format
../3-Phrases/Jftp:int readDataWireFormat([BII) | read data wire format
../3-Phrases/Jftp:int writeSetupWireFormat([BI) | write setup wire format
../3-Phrases/Jftp:int writeParametersWireFormat([BI) | write parameters wire format
../3-Phrases/Jftp:int writeDataWireFormat([BI) | write data wire format
../3-Phrases/Jftp:int readSetupWireFormat([BII) | read setup wire format
../3-Phrases/Jftp:int readParametersWireFormat([BII) | read parameters wire format
../3-Phrases/Jftp:int readDataWireFormat([BII) | read data wire format
../3-Phrases/Jftp:int writeHeaderWireFormat([BI) | write header wire format
../3-Phrases/Jftp:int readHeaderWireFormat([BI) | read header wire format
../3-Phrases/Jftp:int writeParameterWordsWireFormat([BI) | write parameter words wire format
../3-Phrases/Jftp:int writeBytesWireFormat([BI) | write bytes wire format
../3-Phrases/Jftp:int readParameterWordsWireFormat([BI) | read parameter words wire format
../3-Phrases/Jftp:int readBytesWireFormat([BI) | read bytes wire format
../3-Phrases/Jftp:int writeParameterWordsWireFormat([BI) | write parameter words wire format
../3-Phrases/Jftp:int writeBytesWireFormat([BI) | write bytes wire format
../3-Phrases/Jftp:int readParameterWordsWireFormat([BI) | read parameter words wire format
../3-Phrases/Jftp:int readBytesWireFormat([BI) | read bytes wire format
../3-Phrases/Jftp:int writeSetupWireFormat([BI) | write setup wire format
../3-Phrases/Jftp:int writeParametersWireFormat([BI) | write parameters wire format
../3-Phrases/Jftp:int writeDataWireFormat([BI) | write data wire format
../3-Phrases/Jftp:int readSetupWireFormat([BII) | read setup wire format
../3-Phrases/Jftp:int readParametersWireFormat([BII) | read parameters wire format
../3-Phrases/Jftp:int readDataWireFormat([BII) | read data wire format
../3-Phrases/Jftp:int writeParameterWordsWireFormat([BI) | write parameter words wire format
../3-Phrases/Jftp:int writeBytesWireFormat([BI) | write bytes wire format
../3-Phrases/Jftp:int readParameterWordsWireFormat([BI) | read parameter words wire format
../3-Phrases/Jftp:int readBytesWireFormat([BI) | read bytes wire format
../3-Phrases/Jftp:int writeParameterWordsWireFormat([BI) | write parameter words wire format
../3-Phrases/Jftp:int writeBytesWireFormat([BI) | write bytes wire format
../3-Phrases/Jftp:int readParameterWordsWireFormat([BI) | read parameter words wire format
../3-Phrases/Jftp:int readBytesWireFormat([BI) | read bytes wire format
../3-Phrases/Jftp:int writeSetupWireFormat([BI) | write setup wire format
../3-Phrases/Jftp:int writeParametersWireFormat([BI) | write parameters wire format
../3-Phrases/Jftp:int writeDataWireFormat([BI) | write data wire format
../3-Phrases/Jftp:int readSetupWireFormat([BII) | read setup wire format
../3-Phrases/Jftp:int readParametersWireFormat([BII) | read parameters wire format
../3-Phrases/Jftp:int readDataWireFormat([BII) | read data wire format
../3-Phrases/Jftp:int writeParameterWordsWireFormat([BI) | write parameter words wire format
../3-Phrases/Jftp:int writeBytesWireFormat([BI) | write bytes wire format
../3-Phrases/Jftp:int readParameterWordsWireFormat([BI) | read parameter words wire format
../3-Phrases/Jftp:int readBytesWireFormat([BI) | read bytes wire format
../3-Phrases/Jftp:int writeSetupWireFormat([BI) | write setup wire format
../3-Phrases/Jftp:int writeParametersWireFormat([BI) | write parameters wire format
../3-Phrases/Jftp:int writeDataWireFormat([BI) | write data wire format
../3-Phrases/Jftp:int readSetupWireFormat([BII) | read setup wire format
../3-Phrases/Jftp:int readParametersWireFormat([BII) | read parameters wire format
../3-Phrases/Jftp:int readDataWireFormat([BII) | read data wire format
../3-Phrases/Jftp:int writeSetupWireFormat([BI) | write setup wire format
../3-Phrases/Jftp:int readSetupWireFormat([BII) | read setup wire format
../3-Phrases/Jftp:int writeParametersWireFormat([BI) | write parameters wire format
../3-Phrases/Jftp:int writeDataWireFormat([BI) | write data wire format
../3-Phrases/Jftp:int readParametersWireFormat([BII) | read parameters wire format
../3-Phrases/Jftp:int readDataWireFormat([BII) | read data wire format
../3-Phrases/Jftp:int readWireFormat([BII) | read wire format
../3-Phrases/Jftp:int writeSetupWireFormat([BI) | write setup wire format
../3-Phrases/Jftp:int writeParametersWireFormat([BI) | write parameters wire format
../3-Phrases/Jftp:int writeDataWireFormat([BI) | write data wire format
../3-Phrases/Jftp:int readSetupWireFormat([BII) | read setup wire format
../3-Phrases/Jftp:int readParametersWireFormat([BII) | read parameters wire format
../3-Phrases/Jftp:int readDataWireFormat([BII) | read data wire format
../3-Phrases/Jftp:int writeParameterWordsWireFormat([BI) | write parameter words wire format
../3-Phrases/Jftp:int writeBytesWireFormat([BI) | write bytes wire format
../3-Phrases/Jftp:int readParameterWordsWireFormat([BI) | read parameter words wire format
../3-Phrases/Jftp:int readBytesWireFormat([BI) | read bytes wire format
../3-Phrases/Jftp:int writeParameterWordsWireFormat([BI) | write parameter words wire format
../3-Phrases/Jftp:int writeBytesWireFormat([BI) | write bytes wire format
../3-Phrases/Jftp:int readParameterWordsWireFormat([BI) | read parameter words wire format
../3-Phrases/Jftp:int readBytesWireFormat([BI) | read bytes wire format
../3-Phrases/Jftp:int writeSetupWireFormat([BI) | write setup wire format
../3-Phrases/Jftp:int readSetupWireFormat([BII) | read setup wire format
../3-Phrases/Jftp:int writeParametersWireFormat([BI) | write parameters wire format
../3-Phrases/Jftp:int writeDataWireFormat([BI) | write data wire format
../3-Phrases/Jftp:int readParametersWireFormat([BII) | read parameters wire format
../3-Phrases/Jftp:int readDataWireFormat([BII) | read data wire format
../3-Phrases/Jftp:int writeSetupWireFormat([BI) | write setup wire format
../3-Phrases/Jftp:int writeParametersWireFormat([BI) | write parameters wire format
../3-Phrases/Jftp:int writeDataWireFormat([BI) | write data wire format
../3-Phrases/Jftp:int readSetupWireFormat([BII) | read setup wire format
../3-Phrases/Jftp:int readParametersWireFormat([BII) | read parameters wire format
../3-Phrases/Jftp:int readDataWireFormat([BII) | read data wire format
../3-Phrases/Jftp:int writeSetupWireFormat([BI) | write setup wire format
../3-Phrases/Jftp:int writeParametersWireFormat([BI) | write parameters wire format
../3-Phrases/Jftp:int writeDataWireFormat([BI) | write data wire format
../3-Phrases/Jftp:int readSetupWireFormat([BII) | read setup wire format
../3-Phrases/Jftp:int readParametersWireFormat([BII) | read parameters wire format
../3-Phrases/Jftp:int readDataWireFormat([BII) | read data wire format
../3-Phrases/Jftp:int writeParameterWordsWireFormat([BI) | write parameter words wire format
../3-Phrases/Jftp:int writeBytesWireFormat([BI) | write bytes wire format
../3-Phrases/Jftp:int readParameterWordsWireFormat([BI) | read parameter words wire format
../3-Phrases/Jftp:int readBytesWireFormat([BI) | read bytes wire format
../3-Phrases/Jftp:int writeParameterWordsWireFormat([BI) | write parameter words wire format
../3-Phrases/Jftp:int writeBytesWireFormat([BI) | write bytes wire format
../3-Phrases/Jftp:int readParameterWordsWireFormat([BI) | read parameter words wire format
../3-Phrases/Jftp:int readBytesWireFormat([BI) | read bytes wire format
../3-Phrases/Jftp:int writeAndXWireFormat([BI) | write and x wire format
../3-Phrases/Jftp:int readAndXWireFormat([BI) | read and x wire format
../3-Phrases/Jftp:int writeParameterWordsWireFormat([BI) | write parameter words wire format
../3-Phrases/Jftp:int writeBytesWireFormat([BI) | write bytes wire format
../3-Phrases/Jftp:int readParameterWordsWireFormat([BI) | read parameter words wire format
../3-Phrases/Jftp:int readBytesWireFormat([BI) | read bytes wire format
../3-Phrases/Jftp:int writeParameterWordsWireFormat([BI) | write parameter words wire format
../3-Phrases/Jftp:int writeBytesWireFormat([BI) | write bytes wire format
../3-Phrases/Jftp:int readParameterWordsWireFormat([BI) | read parameter words wire format
../3-Phrases/Jftp:int readBytesWireFormat([BI) | read bytes wire format
../3-Phrases/Jftp:int writeSetupWireFormat([BI) | write setup wire format
../3-Phrases/Jftp:int writeParametersWireFormat([BI) | write parameters wire format
../3-Phrases/Jftp:int writeDataWireFormat([BI) | write data wire format
../3-Phrases/Jftp:int readSetupWireFormat([BII) | read setup wire format
../3-Phrases/Jftp:int readParametersWireFormat([BII) | read parameters wire format
../3-Phrases/Jftp:int readDataWireFormat([BII) | read data wire format
../3-Phrases/Jftp:int readSmbInfoAllocationWireFormat([BI) | read smb info allocation wire format
../3-Phrases/Jftp:int readSmbQueryFSSizeInfoWireFormat([BI) | read smb query fs size info wire format
../3-Phrases/Jftp:int readFsFullSizeInformationWireFormat([BI) | read fs full size information wire format
../3-Phrases/Jftp:int writeParameterWordsWireFormat([BI) | write parameter words wire format
../3-Phrases/Jftp:int writeBytesWireFormat([BI) | write bytes wire format
../3-Phrases/Jftp:int readParameterWordsWireFormat([BI) | read parameter words wire format
../3-Phrases/Jftp:int readBytesWireFormat([BI) | read bytes wire format
../3-Phrases/Jftp:int writeParameterWordsWireFormat([BI) | write parameter words wire format
../3-Phrases/Jftp:int writeBytesWireFormat([BI) | write bytes wire format
../3-Phrases/Jftp:int readParameterWordsWireFormat([BI) | read parameter words wire format
../3-Phrases/Jftp:int readBytesWireFormat([BI) | read bytes wire format
../3-Phrases/Jftp:void checkForUpgrade() | check for upgrade
../3-Phrases/Jftp:int checkForExistingFile(QDirEntry;) | check for existing file
../3-Phrases/Jftp:void forward() | forward
../3-Phrases/JHotDraw-7.0.8:PageFormat getPageFormat(I) | get page format
../3-Phrases/JHotDraw-7.0.8:void setInputFormats(QList<QInputFormat;>;) | set input formats
../3-Phrases/JHotDraw-7.0.8:List<QInputFormat;> getInputFormats() | get input formats
../3-Phrases/JHotDraw-7.0.8:void setOutputFormats(QList<QOutputFormat;>;) | set output formats
../3-Phrases/JHotDraw-7.0.8:List<QOutputFormat;> getOutputFormats() | get output formats
../3-Phrases/JHotDraw-7.0.8:void setLabelFor(QTextHolderFigure;) | set label for
../3-Phrases/JHotDraw-7.0.8:TextHolderFigure getLabelFor() | get label for
../3-Phrases/JHotDraw-7.0.8:TextHolderFigure getLabelFor() | get label for
../3-Phrases/JHotDraw-7.0.8:TextHolderFigure getLabelFor() | get label for
../3-Phrases/JHotDraw-7.0.8:TextHolderFigure getLabelFor() | get label for
../3-Phrases/JHotDraw-7.0.8:CONS DOMStorableInputOutputFormat(QDOMFactory;) | dom storable input output format
../3-Phrases/JHotDraw-7.0.8:CONS DOMStorableInputOutputFormat(QDOMFactory;QString;QString;QString;) | dom storable input output format
../3-Phrases/JHotDraw-7.0.8:JComponent getOutputFormatAccessory() | get output format accessory
../3-Phrases/JHotDraw-7.0.8:JComponent getInputFormatAccessory() | get input format accessory
../3-Phrases/JHotDraw-7.0.8:CONS ImageOutputFormat() | image output format
../3-Phrases/JHotDraw-7.0.8:CONS ImageOutputFormat(QString;QString;QString;I) | image output format
../3-Phrases/JHotDraw-7.0.8:JComponent getOutputFormatAccessory() | get output format accessory
../3-Phrases/JHotDraw-7.0.8:JComponent getOutputFormatAccessory() | get output format accessory
../3-Phrases/JHotDraw-7.0.8:JComponent getInputFormatAccessory() | get input format accessory
../3-Phrases/JHotDraw-7.0.8:void setOutputFormats(Qjava.util.List<QOutputFormat;>;) | set output formats
../3-Phrases/JHotDraw-7.0.8:void setInputFormats(Qjava.util.List<QInputFormat;>;) | set input formats
../3-Phrases/JHotDraw-7.0.8:java.util.List<QInputFormat;> getInputFormats() | get input formats
../3-Phrases/JHotDraw-7.0.8:java.util.List<QOutputFormat;> getOutputFormats() | get output formats
../3-Phrases/JHotDraw-7.0.8:CONS ImageInputFormat(QImageHolderFigure;) | image input format
../3-Phrases/JHotDraw-7.0.8:CONS ImageInputFormat(QImageHolderFigure;QString;QString;QString;I) | image input format
../3-Phrases/JHotDraw-7.0.8:JComponent getInputFormatAccessory() | get input format accessory
../3-Phrases/JHotDraw-7.0.8:Window getWindowForComponent(QComponent;) | get window for component
../3-Phrases/JHotDraw-7.0.8:TextHolderFigure getLabelFor() | get label for
../3-Phrases/JHotDraw-7.0.8:TextHolderFigure getLabelFor() | get label for
../3-Phrases/JHotDraw-7.0.8:CONS SVGInputFormat() | svg input format
../3-Phrases/JHotDraw-7.0.8:CONS SVGInputFormat(QSVGFigureFactory;) | svg input format
../3-Phrases/JHotDraw-7.0.8:JComponent getInputFormatAccessory() | get input format accessory
../3-Phrases/JHotDraw-7.0.8:CONS SVGOutputFormat() | svg output format
../3-Phrases/JHotDraw-7.0.8:JComponent getOutputFormatAccessory() | get output format accessory
../3-Phrases/JHotDraw-7.0.8:String getFormatted(QString;QString;) | get formatted
../3-Phrases/JHotDraw-7.0.8:String getFormatted(QString;[QObject;) | get formatted
../3-Phrases/JRobin:String formatDouble(DQString;Z) | format double
../3-Phrases/JRobin:String formatDouble(DZ) | format double
../3-Phrases/JRobin:CONS ValueFormatter() | value formatter
../3-Phrases/JRobin:CONS ValueFormatter(DI) | value formatter
../3-Phrases/JRobin:void setFormat(DII) | set format
../3-Phrases/JRobin:String getFormattedValue() | get formatted value
../3-Phrases/JRobin:DecimalFormat getDecimalFormat(I) | get decimal format
../3-Phrases/JRobin:SimpleDateFormat getDateFormat() | get date format
../3-Phrases/JRobin:String getFormattedString(DQString;D) | get formatted string
../3-Phrases/JRobin:String formatDouble(DQString;) | format double
../3-Phrases/JRobin:String formatDouble(D) | format double
../3-Phrases/JRobin:JPanel getPanelFor(QJComponent;QJComponent;) | get panel for
../3-Phrases/JRobin:JPanel getPanelFor(QJComponent;QJComponent;QJComponent;) | get panel for
../3-Phrases/JRobin:String getRrdFilenameFor(QRawSample;) | get rrd filename for
../3-Phrases/JRobin:RrdDb openRrdFileFor(QRawSample;) | open rrd file for
../3-Phrases/MegaMek-0.32.0:MovePath continueMovementFor(QEntity;) | continue movement for
../3-Phrases/MegaMek-0.32.0:MovePath continueMovementFor(QEntity;) | continue movement for
../3-Phrases/MegaMek-0.32.0:String formatAmmo(QMounted;) | format ammo
../3-Phrases/MegaMek-0.32.0:void updateRangeDisplayForAmmo(QMounted;) | update range display for ammo
../3-Phrases/MegaMek-0.32.0:void markDeploymentHexesFor(QPlayer;) | mark deployment hexes for
../3-Phrases/MegaMek-0.32.0:void removeAttacksFor(I) | remove attacks for
../3-Phrases/MegaMek-0.32.0:List supersFor(QIHex;QComponent;) | supers for
../3-Phrases/MegaMek-0.32.0:Image baseFor(QIHex;QComponent;) | base for
../3-Phrases/MegaMek-0.32.0:boolean getNagForBotReadme() | get nag for bot readme
../3-Phrases/MegaMek-0.32.0:boolean getNagForMapEdReadme() | get nag for map ed readme
../3-Phrases/MegaMek-0.32.0:boolean getNagForMASC() | get nag for masc
../3-Phrases/MegaMek-0.32.0:boolean getNagForNoAction() | get nag for no action
../3-Phrases/MegaMek-0.32.0:boolean getNagForPSR() | get nag for psr
../3-Phrases/MegaMek-0.32.0:boolean getNagForReadme() | get nag for readme
../3-Phrases/MegaMek-0.32.0:void setNagForBotReadme(Z) | set nag for bot readme
../3-Phrases/MegaMek-0.32.0:void setNagForMapEdReadme(Z) | set nag for map ed readme
../3-Phrases/MegaMek-0.32.0:void setNagForMASC(Z) | set nag for masc
../3-Phrases/MegaMek-0.32.0:void setNagForNoAction(Z) | set nag for no action
../3-Phrases/MegaMek-0.32.0:void setNagForPSR(Z) | set nag for psr
../3-Phrases/MegaMek-0.32.0:void setNagForReadme(Z) | set nag for readme
../3-Phrases/MegaMek-0.32.0:void searchFor(QString;) | search for
../3-Phrases/MegaMek-0.32.0:String formatMech(QMechSummary;) | format mech
../3-Phrases/MegaMek-0.32.0:void showDescFor(QIOption;) | show desc for
../3-Phrases/MegaMek-0.32.0:void showDescFor(QIOption;) | show desc for
../3-Phrases/MegaMek-0.32.0:Image iconFor(QEntity;) | icon for
../3-Phrases/MegaMek-0.32.0:Image wreckMarkerFor(QEntity;) | wreck marker for
../3-Phrases/MegaMek-0.32.0:Image imageFor(QEntity;) | image for
../3-Phrases/MegaMek-0.32.0:Image imageFor(QEntity;I) | image for
../3-Phrases/MegaMek-0.32.0:Image baseFor(QIHex;) | base for
../3-Phrases/MegaMek-0.32.0:List supersFor(QIHex;) | supers for
../3-Phrases/MegaMek-0.32.0:void waitForHex(QIHex;) | wait for hex
../3-Phrases/MegaMek-0.32.0:Image imageFor(QEntity;QComponent;) | image for
../3-Phrases/MegaMek-0.32.0:MechEntry entryFor(QEntity;) | entry for
../3-Phrases/MegaMek-0.32.0:MechEntry genericFor(QEntity;) | generic for
../3-Phrases/MegaMek-0.32.0:void showDescFor(QIOption;) | show desc for
../3-Phrases/MegaMek-0.32.0:String formatUnit(QEntity;Z) | format unit
../3-Phrases/MegaMek-0.32.0:String formatUnit(QEntity;Z) | format unit
../3-Phrases/MegaMek-0.32.0:List supersFor(QIHex;QJComponent;) | supers for
../3-Phrases/MegaMek-0.32.0:Image baseFor(QIHex;QJComponent;) | base for
../3-Phrases/MegaMek-0.32.0:void markDeploymentHexesFor(QPlayer;) | mark deployment hexes for
../3-Phrases/MegaMek-0.32.0:void removeAttacksFor(I) | remove attacks for
../3-Phrases/MegaMek-0.32.0:Image iconFor(QEntity;) | icon for
../3-Phrases/MegaMek-0.32.0:Image wreckMarkerFor(QEntity;) | wreck marker for
../3-Phrases/MegaMek-0.32.0:Image imageFor(QEntity;) | image for
../3-Phrases/MegaMek-0.32.0:Image imageFor(QEntity;I) | image for
../3-Phrases/MegaMek-0.32.0:Image baseFor(QIHex;) | base for
../3-Phrases/MegaMek-0.32.0:List supersFor(QIHex;) | supers for
../3-Phrases/MegaMek-0.32.0:void waitForHex(QIHex;) | wait for hex
../3-Phrases/MegaMek-0.32.0:String formatAmmo(QMounted;) | format ammo
../3-Phrases/MegaMek-0.32.0:void updateRangeDisplayForAmmo(QMounted;) | update range display for ammo
../3-Phrases/MegaMek-0.32.0:void showDescFor(QIOption;) | show desc for
../3-Phrases/MegaMek-0.32.0:void searchFor(QString;) | search for
../3-Phrases/MegaMek-0.32.0:String formatMech(QMechSummary;) | format mech
../3-Phrases/MegaMek-0.32.0:boolean getNagForBotReadme() | get nag for bot readme
../3-Phrases/MegaMek-0.32.0:boolean getNagForMapEdReadme() | get nag for map ed readme
../3-Phrases/MegaMek-0.32.0:boolean getNagForMASC() | get nag for masc
../3-Phrases/MegaMek-0.32.0:boolean getNagForNoAction() | get nag for no action
../3-Phrases/MegaMek-0.32.0:boolean getNagForPSR() | get nag for psr
../3-Phrases/MegaMek-0.32.0:boolean getNagForReadme() | get nag for readme
../3-Phrases/MegaMek-0.32.0:void setNagForBotReadme(Z) | set nag for bot readme
../3-Phrases/MegaMek-0.32.0:void setNagForMapEdReadme(Z) | set nag for map ed readme
../3-Phrases/MegaMek-0.32.0:void setNagForMASC(Z) | set nag for masc
../3-Phrases/MegaMek-0.32.0:void setNagForNoAction(Z) | set nag for no action
../3-Phrases/MegaMek-0.32.0:void setNagForPSR(Z) | set nag for psr
../3-Phrases/MegaMek-0.32.0:void setNagForReadme(Z) | set nag for readme
../3-Phrases/MegaMek-0.32.0:Image imageFor(QEntity;QJComponent;) | image for
../3-Phrases/MegaMek-0.32.0:MechEntry entryFor(QEntity;) | entry for
../3-Phrases/MegaMek-0.32.0:MechEntry genericFor(QEntity;) | generic for
../3-Phrases/MegaMek-0.32.0:void showDescFor(QIOption;) | show desc for
../3-Phrases/MegaMek-0.32.0:void showDescFor(QIOption;) | show desc for
../3-Phrases/MegaMek-0.32.0:int getAffaDamageFor(QEntity;) | get af fa damage for
../3-Phrases/MegaMek-0.32.0:void modifyPhysicalBTHForAdvantages(QEntity;QEntity;QToHitData;QIGame;) | modify physical bth for advantages
../3-Phrases/MegaMek-0.32.0:int levelFor(QString;) | level for
../3-Phrases/MegaMek-0.32.0:Team getTeamForPlayer(QPlayer;) | get team for player
../3-Phrases/MegaMek-0.32.0:void checkForCompleteDeployment() | check for complete deployment
../3-Phrases/MegaMek-0.32.0:boolean shouldDeployForRound(I) | should deploy for round
../3-Phrases/MegaMek-0.32.0:void removeTurnFor(QEntity;) | remove turn for
../3-Phrases/MegaMek-0.32.0:boolean checkForMagneticClamp() | check for magnetic clamp
../3-Phrases/MegaMek-0.32.0:void removeActionsFor(I) | remove actions for
../3-Phrases/MegaMek-0.32.0:boolean isForceVictory() | is force victory
../3-Phrases/MegaMek-0.32.0:void setForceVictory(Z) | set force victory
../3-Phrases/MegaMek-0.32.0:boolean checkForValidNonInfantryAndOrProtomechs(I) | check for valid non infantry and or protomechs
../3-Phrases/MegaMek-0.32.0:String formatArmor(I) | format armor
../3-Phrases/MegaMek-0.32.0:String formatSlot(QString;QMounted;ZZ) | format slot
../3-Phrases/MegaMek-0.32.0:void adjustStartingPosForReinforcements() | adjust starting pos for reinforcements
../3-Phrases/MegaMek-0.32.0:Vector getMunitionsFor(I) | get munitions for
../3-Phrases/MegaMek-0.32.0:boolean isEligibleFor(I) | is eligible for
../3-Phrases/MegaMek-0.32.0:int modifyPhysicalDamagaForMeleeSpecialist() | modify physical da ma ga for melee specialist
../3-Phrases/MegaMek-0.32.0:int lateralShiftForTurn(II) | lateral shift for turn
../3-Phrases/MegaMek-0.32.0:int turnForLateralShift(I) | turn for lateral shift
../3-Phrases/MegaMek-0.32.0:int getMinForestSpots() | get min forest spots
../3-Phrases/MegaMek-0.32.0:int getMaxForestSpots() | get max forest spots
../3-Phrases/MegaMek-0.32.0:int getMinForestSize() | get min forest size
../3-Phrases/MegaMek-0.32.0:int getMaxForestSize() | get max forest size
../3-Phrases/MegaMek-0.32.0:int getMinFortifiedSpots() | get min fortified spots
../3-Phrases/MegaMek-0.32.0:int getMaxFortifiedSpots() | get max fortified spots
../3-Phrases/MegaMek-0.32.0:int getMinFortifiedSize() | get min fortified size
../3-Phrases/MegaMek-0.32.0:int getMaxFortifiedSize() | get max fortified size
../3-Phrases/MegaMek-0.32.0:int getProbForestFire() | get prob forest fire
../3-Phrases/MegaMek-0.32.0:void setForestParams(IIIII) | set forest params
../3-Phrases/MegaMek-0.32.0:void setFortifiedParams(IIII) | set fortified params
../3-Phrases/MegaMek-0.32.0:LosEffects losForCoords(QIGame;QAttackInfo;QCoords;QBuilding;) | los for coords
../3-Phrases/MegaMek-0.32.0:void calcMovementCostFor(QIGame;QCoords;I) | calc movement cost for
../3-Phrases/MegaMek-0.32.0:boolean isEligibleForMovement() | is eligible for movement
../3-Phrases/MegaMek-0.32.0:boolean checkForMASCFailure(QMovePath;QVector;QVector;) | check for masc failure
../3-Phrases/MegaMek-0.32.0:int getGyroTypeForString(QString;) | get gyro type for string
../3-Phrases/MegaMek-0.32.0:int getCockpitTypeForString(QString;) | get cockpit type for string
../3-Phrases/MegaMek-0.32.0:boolean isEligibleForMovement() | is eligible for movement
../3-Phrases/MegaMek-0.32.0:String armorStringFor(I) | armor string for
../3-Phrases/MegaMek-0.32.0:boolean isEligibleFor(I) | is eligible for
../3-Phrases/MegaMek-0.32.0:boolean isEligibleForFiring() | is eligible for firing
../3-Phrases/MegaMek-0.32.0:boolean isEligibleForMovement() | is eligible for movement
../3-Phrases/MegaMek-0.32.0:boolean isEligibleForOffboard() | is eligible for offboard
../3-Phrases/MegaMek-0.32.0:boolean isEligibleForPhysical() | is eligible for physical
../3-Phrases/MegaMek-0.32.0:boolean isEligibleForTargetingPhase() | is eligible for targeting phase
../3-Phrases/MegaMek-0.32.0:void addPilotingModifierForTerrain(QPilotingRollData;QCoords;) | add piloting modifier for terrain
../3-Phrases/MegaMek-0.32.0:void addPilotingModifierForTerrain(QPilotingRollData;QMoveStep;) | add piloting modifier for terrain
../3-Phrases/MegaMek-0.32.0:void addPilotingModifierForTerrain(QPilotingRollData;) | add piloting modifier for terrain
../3-Phrases/MegaMek-0.32.0:Team getTeamForPlayer(QPlayer;) | get team for player
../3-Phrases/MegaMek-0.32.0:void checkForCompleteDeployment() | check for complete deployment
../3-Phrases/MegaMek-0.32.0:boolean shouldDeployForRound(I) | should deploy for round
../3-Phrases/MegaMek-0.32.0:Vector getEntitiesToDeployForRound(I) | get entities to deploy for round
../3-Phrases/MegaMek-0.32.0:void removeTurnFor(QEntity;) | remove turn for
../3-Phrases/MegaMek-0.32.0:boolean checkForMagneticClamp() | check for magnetic clamp
../3-Phrases/MegaMek-0.32.0:void removeActionsFor(I) | remove actions for
../3-Phrases/MegaMek-0.32.0:boolean isForceVictory() | is force victory
../3-Phrases/MegaMek-0.32.0:void setForceVictory(Z) | set force victory
../3-Phrases/MegaMek-0.32.0:boolean checkForValidNonInfantryAndOrProtomechs(I) | check for valid non infantry and or protomechs
../3-Phrases/MegaMek-0.32.0:void markForTesting() | mark for testing
../3-Phrases/MegaMek-0.32.0:int indexFor(QString;II) | index for
../3-Phrases/MegaMek-0.32.0:int getDamageFor(QEntity;I) | get damage for
../3-Phrases/MegaMek-0.32.0:int getDamageFor(QEntity;I) | get damage for
../3-Phrases/MegaMek-0.32.0:int getDamageFor(QEntity;I) | get damage for
../3-Phrases/MegaMek-0.32.0:int getDamageFor(QEntity;) | get damage for
../3-Phrases/MegaMek-0.32.0:int getDamageFor(QEntity;) | get damage for
../3-Phrases/MegaMek-0.32.0:int getDamageFor(QEntity;) | get damage for
../3-Phrases/MegaMek-0.32.0:int getDamageFor(QEntity;) | get damage for
../3-Phrases/MegaMek-0.32.0:int getDamageFor(QEntity;I) | get damage for
../3-Phrases/MegaMek-0.32.0:int getDamageFor(QEntity;) | get damage for
../3-Phrases/MegaMek-0.32.0:int getDamageFor(QEntity;QMounted;) | get damage for
../3-Phrases/MegaMek-0.32.0:int getDamageFor(QEntity;I) | get damage for
../3-Phrases/MegaMek-0.32.0:String getStampFormat() | get stamp format
../3-Phrases/MegaMek-0.32.0:void setStampFormat(QString;) | set stamp format
../3-Phrases/MegaMek-0.32.0:String getStampFormat() | get stamp format
../3-Phrases/MegaMek-0.32.0:void setStampFormat(QString;) | set stamp format
../3-Phrases/MegaMek-0.32.0:void PostProcessForestFire([QIHex;I) | post process forest fire
../3-Phrases/MegaMek-0.32.0:void checkCriticalSlotsForEquipment(QEntity;QVector;QVector;QVector;) | check critical slots for equipment
../3-Phrases/MegaMek-0.32.0:String formatEquipment(IQMounted;QEntity;) | format equipment
../3-Phrases/MegaMek-0.32.0:String formatSlot(QCriticalSlot;QMounted;) | format slot
../3-Phrases/MegaMek-0.32.0:String format(QEntity;) | format
../3-Phrases/MegaMek-0.32.0:String formatHeader(QEntity;) | format header
../3-Phrases/MegaMek-0.32.0:String formatAmmo(QEntity;) | format ammo
../3-Phrases/MegaMek-0.32.0:String formatCrits(QEntity;) | format crits
../3-Phrases/MegaMek-0.32.0:String formatArmor(QEntity;) | format armor
../3-Phrases/MegaMek-0.32.0:String formatArmorTank(QTank;) | format armor tank
../3-Phrases/MegaMek-0.32.0:String formatArmorMech(QMech;) | format armor mech
../3-Phrases/MegaMek-0.32.0:String formatArmorInfantry(QInfantry;) | format armor infantry
../3-Phrases/MegaMek-0.32.0:String formatArmorBattleArmor(QBattleArmor;) | format armor battle armor
../3-Phrases/MegaMek-0.32.0:String formatArmorProtomech(QProtomech;) | format armor protomech
../3-Phrases/MegaMek-0.32.0:String formatArmorGunEmplacement(QGunEmplacement;) | format armor gun emplacement
../3-Phrases/MegaMek-0.32.0:void checkForObservers() | check for observers
../3-Phrases/MegaMek-0.32.0:void forceVictory(QPlayer;) | force victory
../3-Phrases/MegaMek-0.32.0:void prepareForPhase(I) | prepare for phase
../3-Phrases/MegaMek-0.32.0:void checkForWashedInfernos(QEntity;QCoords;) | check for washed infernos
../3-Phrases/MegaMek-0.32.0:WeaponResult addHeatUseAmmoFor(QWeaponAttackAction;QWeaponResult;) | add heat use ammo for
../3-Phrases/MegaMek-0.32.0:WeaponResult resolveAmsFor(QWeaponAttackAction;QWeaponResult;) | resolve ams for
../3-Phrases/MegaMek-0.32.0:void checkFor20Damage() | check for 20 damage
../3-Phrases/MegaMek-0.32.0:void checkForFlamingDeath() | check for flaming death
../3-Phrases/MegaMek-0.32.0:void checkForVacuumDeath() | check for vacuum death
../3-Phrases/MegaMek-0.32.0:void checkForSuffocation() | check for suffocation
../3-Phrases/MegaMek-0.32.0:Vector scanForBoardsInDir(QFile;QString;II) | scan for boards in dir
../3-Phrases/MegaMek-0.32.0:Vector scanForBoards(II) | scan for boards
../3-Phrases/MegaMek-0.32.0:Vector scanForBoards(IIZ) | scan for boards
../3-Phrases/MegaMek-0.32.0:boolean checkForCollapse(QBuilding;QHashtable;) | check for collapse
../3-Phrases/MegaMek-0.32.0:void checkForVehicleFire(QTank;Z) | check for vehicle fire
../3-Phrases/MegaMek-0.32.0:void resolveFortify() | resolve fortify
../3-Phrases/np:int tokenForName(String name) | token for name
../3-Phrases/np:static LinkPair newLinkPair(Link forward, Link backward) | link pair new link pair
../3-Phrases/np:Type typeForString(String typeName) | type for string
../3-Phrases/np:Query newConnectedForwardPageQuery(String sql, long pageSize) | new connected forward page query
../3-Phrases/np:static Window windowForComponent(Component comp) | window window for component
../3-Phrases/np:int indexForPropertyName(String propertyName) | index for property name
../3-Phrases/np:int actualHashForEqual() | actual hash for equal
../3-Phrases/PlanetaMessenger:boolean checkForPluginUser(I) | check for plugin user
../3-Phrases/PlanetaMessenger:void exitForm() | exit form
../3-Phrases/PlanetaMessenger:java.lang.String formatNewUserString(QJUserDetails;) | format new user string
../3-Phrases/PlanetaMessenger:java.lang.String formatChangePasswordString(QJUserDetails;Qjava.lang.String;) | format change password string
../3-Phrases/PlanetaMessenger:java.lang.String formatSearchUserString(J) | format search user string
../3-Phrases/PlanetaMessenger:java.lang.String formatLoginString(QJUserDetails;QJSystemDetails;) | format login string
../3-Phrases/PlanetaMessenger:java.lang.String formatStatusString(QJUserDetails;QJSystemDetails;) | format status string
../3-Phrases/PlanetaMessenger:java.lang.String formatIPListString(QJUserDetails;QJSystemDetails;Qjava.util.Hashtable;) | format ip list string
../3-Phrases/PlanetaMessenger:java.lang.String formatMessageString(QJUserDetails;QJSystemDetails;JQjava.lang.String;Z) | format message string
../3-Phrases/PlanetaMessenger:java.lang.String formatAckString(QJUserDetails;QJSystemDetails;) | format ack string
../3-Phrases/PlanetaMessenger:java.lang.String formatSuccessString(Qjava.lang.String;) | format success string
../3-Phrases/PlanetaMessenger:java.lang.String formatInpOutString(ZQJUserDetails;QJSystemDetails;J) | format inp out string
../3-Phrases/PlanetaMessenger:java.lang.String formatAddUserString(QJUserDetails;QJSystemDetails;J) | format add user string
../3-Phrases/PlanetaMessenger:java.lang.String formatAuthorizeUser(JQJUserDetails;QJSystemDetails;) | format authorize user
../3-Phrases/prefuse:NumberFormat getNumberFormat() | get number format
../3-Phrases/prefuse:void setNumberFormat(QNumberFormat;) | set number format
../3-Phrases/prefuse:CONS ForceDirectedLayout(QString;) | force directed layout
../3-Phrases/prefuse:CONS ForceDirectedLayout(QString;Z) | force directed layout
../3-Phrases/prefuse:CONS ForceDirectedLayout(QString;ZZ) | force directed layout
../3-Phrases/prefuse:CONS ForceDirectedLayout(QString;QForceSimulator;Z) | force directed layout
../3-Phrases/prefuse:CONS ForceDirectedLayout(QString;QForceSimulator;ZZ) | force directed layout
../3-Phrases/prefuse:ForceSimulator getForceSimulator() | get force simulator
../3-Phrases/prefuse:void setForceSimulator(QForceSimulator;) | set force simulator
../3-Phrases/prefuse:CONS FormatFunction() | format function
../3-Phrases/prefuse:String format(QObject;) | format
../3-Phrases/prefuse:String format(QObject;) | format
../3-Phrases/prefuse:String format(QObject;) | format
../3-Phrases/prefuse:String format(QObject;) | format
../3-Phrases/prefuse:String format(QObject;) | format
../3-Phrases/prefuse:String format(QObject;) | format
../3-Phrases/prefuse:String format(QObject;) | format
../3-Phrases/prefuse:String format(QObject;) | format
../3-Phrases/prefuse:String format(QObject;) | format
../3-Phrases/prefuse:String format(QObject;) | format
../3-Phrases/prefuse:String format(QObject;) | format
../3-Phrases/prefuse:String format(QObject;) | format
../3-Phrases/prefuse:String format(QObject;) | format
../3-Phrases/prefuse:String format(QObject;) | format
../3-Phrases/prefuse:String format(QObject;) | format
../3-Phrases/prefuse:void waitForImage(QImage;) | wait for image
../3-Phrases/prefuse:String formatNumber(DI) | format number
../3-Phrases/prefuse:void checkForComodification() | check for comodification
../3-Phrases/prefuse:boolean isSpringForce() | is spring force
../3-Phrases/prefuse:boolean isItemForce() | is item force
../3-Phrases/prefuse:void getForce(QForceItem;) | get force
../3-Phrases/prefuse:void getForce(QSpring;) | get force
../3-Phrases/prefuse:boolean isItemForce() | is item force
../3-Phrases/prefuse:boolean isSpringForce() | is spring force
../3-Phrases/prefuse:void getForce(QForceItem;) | get force
../3-Phrases/prefuse:void getForce(QSpring;) | get force
../3-Phrases/prefuse:CONS ForceSimulator() | force simulator
../3-Phrases/prefuse:CONS ForceSimulator(QIntegrator;) | force simulator
../3-Phrases/prefuse:void addForce(QForce;) | add force
../3-Phrases/prefuse:Force[] getForces() | get forces
../3-Phrases/prefuse:CONS CircularWallForce(FFFF) | circular wall force
../3-Phrases/prefuse:CONS CircularWallForce(FFF) | circular wall force
../3-Phrases/prefuse:boolean isItemForce() | is item force
../3-Phrases/prefuse:void getForce(QForceItem;) | get force
../3-Phrases/prefuse:CONS ForceConfigAction(QJFrame;QForceSimulator;) | force config action
../3-Phrases/prefuse:CONS NBodyForce() | n body force
../3-Phrases/prefuse:CONS NBodyForce(FFF) | n body force
../3-Phrases/prefuse:boolean isItemForce() | is item force
../3-Phrases/prefuse:void getForce(QForceItem;) | get force
../3-Phrases/prefuse:void forceHelper(QForceItem;QQuadTreeNode;FFFF) | force helper
../3-Phrases/prefuse:CONS SpringForce(FF) | spring force
../3-Phrases/prefuse:CONS SpringForce() | spring force
../3-Phrases/prefuse:boolean isSpringForce() | is spring force
../3-Phrases/prefuse:void getForce(QSpring;) | get force
../3-Phrases/prefuse:CONS DragForce(F) | drag force
../3-Phrases/prefuse:CONS DragForce() | drag force
../3-Phrases/prefuse:boolean isItemForce() | is item force
../3-Phrases/prefuse:void getForce(QForceItem;) | get force
../3-Phrases/prefuse:CONS ForceItem() | force item
../3-Phrases/prefuse:CONS WallForce(FFFFF) | wall force
../3-Phrases/prefuse:CONS WallForce(FFFF) | wall force
../3-Phrases/prefuse:boolean isItemForce() | is item force
../3-Phrases/prefuse:void getForce(QForceItem;) | get force
../3-Phrases/prefuse:CONS GravitationalForce(FF) | gravitational force
../3-Phrases/prefuse:CONS GravitationalForce() | gravitational force
../3-Phrases/prefuse:boolean isItemForce() | is item force
../3-Phrases/prefuse:void getForce(QForceItem;) | get force
../3-Phrases/prefuse:CONS JForcePanel(QForceSimulator;) | j force panel
../3-Phrases/prefuse:JFrame showForcePanel(QForceSimulator;) | show force panel
../3-Phrases/prefuse:void valueForPathChanged(QTreePath;QObject;) | value for path changed
../3-Phrases/prefuse:void setForeground(QColor;) | set foreground
../3-Phrases/prefuse:void setForeground(QColor;) | set foreground
../3-Phrases/prefuse:void setForeground(QColor;) | set foreground
../3-Phrases/prefuse:void DataMountainForceLayout(Z) | data mountain force layout
../3-Phrases/rhino:boolean isJSFormatChar(I) | is js format char
../3-Phrases/rhino:ErrorReporter forEval(QErrorReporter;) | for eval
../3-Phrases/rhino:int look_for_slash_slash([CII) | look for slash slash
../3-Phrases/rhino:int rewriteForNumberVariables(QNode;) | rewrite for number variables
../3-Phrases/rhino:Node createForIn(QNode;QNode;QNode;QNode;Z) | create for in
../3-Phrases/rhino:Node createFor(QNode;QNode;QNode;QNode;QNode;) | create for
../3-Phrases/rhino:String date_format(DI) | date format
../3-Phrases/rhino:String getSlashedForm(QString;) | get slashed form
../3-Phrases/rhino:String makeUrlForGeneratedScript(ZQString;I) | make url for generated script
../3-Phrases/rhino:void addFormatedError(QString;) | add formated error
../3-Phrases/rhino:void forcePackage(QString;QScriptable;) | force package
../3-Phrases/rhino:void look_for_id_definitions([CIIZ) | look for id definitions
../3-Phrases/rhino:void lookForVariableAccess(QOptFunctionNode;QNode;) | look for variable access
../3-Phrases/rhino:void resolveForwardGoto(I) | resolve forward goto
../3-Phrases/rhino:void resolveForwardJump([BII) | resolve forward jump
../3-Phrases/rhino:void setCheckForLabel() | set check for label
../3-Phrases/rhino:void valueForPathChanged(QTreePath;QObject;) | value for path changed
../3-Phrases/rhino-fieldSample:ErrorReporter forEval(QErrorReporter;) | for eval
../3-Phrases/rhino-fieldSample:boolean isJSFormatChar(I) | is js format char
../3-Phrases/SweetHome3D:String format(F) | format
../3-Phrases/SweetHome3D:Format getFormatWithUnit() | get format with unit
../3-Phrases/SweetHome3D:Format getAreaFormatWithUnit() | get area format with unit
../3-Phrases/SweetHome3D:Format getFormat() | get format
../3-Phrases/SweetHome3D:Format getFormatWithUnit() | get format with unit
../3-Phrases/SweetHome3D:Format getAreaFormatWithUnit() | get area format with unit
../3-Phrases/SweetHome3D:Format getFormat() | get format
../3-Phrases/SweetHome3D:Format getFormatWithUnit() | get format with unit
../3-Phrases/SweetHome3D:Format getAreaFormatWithUnit() | get area format with unit
../3-Phrases/SweetHome3D:Format getFormat() | get format
../3-Phrases/SweetHome3D:Format getFormatWithUnit() | get format with unit
../3-Phrases/SweetHome3D:Format getFormat() | get format
../3-Phrases/SweetHome3D:Format getAreaFormatWithUnit() | get area format with unit
../3-Phrases/SweetHome3D:StringBuffer format(DQStringBuffer;QFieldPosition;) | format
../3-Phrases/SweetHome3D:StringBuffer format(DQStringBuffer;QFieldPosition;) | format
../3-Phrases/SweetHome3D:Format getFormatWithUnit() | get format with unit
../3-Phrases/SweetHome3D:Format getFormat() | get format
../3-Phrases/SweetHome3D:void MeterFamilyFormat(QString;F) | meter family format
../3-Phrases/SweetHome3D:StringBuffer format(DQStringBuffer;QFieldPosition;) | format
../3-Phrases/SweetHome3D:StringBuffer format(JQStringBuffer;QFieldPosition;) | format
../3-Phrases/SweetHome3D:Format getAreaFormatWithUnit() | get area format with unit
../3-Phrases/SweetHome3D:void SquareMeterAreaFormatWithUnit(QString;) | square meter area format with unit
../3-Phrases/SweetHome3D:StringBuffer format(DQStringBuffer;QFieldPosition;) | format
../3-Phrases/SweetHome3D:String getHeaderFormat() | get header format
../3-Phrases/SweetHome3D:String getFooterFormat() | get footer format
../3-Phrases/SweetHome3D:void updateNameTextFieldForeground(QColor;) | update name text field foreground
../3-Phrases/SweetHome3D:String getFormatCode() | get format code
../3-Phrases/SweetHome3D:MessageFormat getMessageFormat(QString;) | get message format
../3-Phrases/SweetHome3D:PageFormat getPageFormat(QHomePrint;) | get page format
../3-Phrases/SweetHome3D:void valueForPathChanged(QTreePath;QObject;) | value for path changed
../3-Phrases/SweetHome3D:void updateToolTipTextFieldFormatterFactory(QJFormattedTextField;QPlanController.EditableProperty;QUserPreferences;) | update tool tip text field formatter factory
../3-Phrases/SweetHome3D:String getFormattedTickText(QNumberFormat;F) | get formatted tick text
../3-Phrases/SweetHome3D:JFormattedTextField.AbstractFormatter getFormatter(QJFormattedTextField;) | get formatter
../3-Phrases/SweetHome3D:void updateNameTextFieldForeground(QColor;) | update name text field foreground
../3-Phrases/vuze:ChatDiscussion getChatDiscussionFor(QVuzeBuddy;) | get chat discussion for
../3-Phrases/vuze:BuddyPluginBuddy getBuddyPluginBuddyForVuze(QString;) | get buddy plugin buddy for vu ze
../3-Phrases/vuze:void registerForSelection(QClientConnection;) | register for selection
../3-Phrases/vuze:int getPersistForSeconds() | get persist for seconds
../3-Phrases/vuze:int getPersistForSeconds() | get persist for seconds
../3-Phrases/vuze:byte[] getKeyForKeyBlock([B) | get key for key block
../3-Phrases/vuze:void setStorageForKey(QString;[B) | set storage for key
../3-Phrases/vuze:byte[] getStorageForKey(QString;) | get storage for key
../3-Phrases/vuze:int getMaxFailForLiveCount() | get max fail for live count
../3-Phrases/vuze:int getMaxFailForUnknownCount() | get max fail for unknown count
../3-Phrases/vuze:int getMaxFailForLiveCount() | get max fail for live count
../3-Phrases/vuze:int getMaxFailForUnknownCount() | get max fail for unknown count
../3-Phrases/vuze:DHTDBValue getValueForRelay(QDHTTransportContact;) | get value for relay
../3-Phrases/vuze:byte[] getKeyForKeyBlock([B) | get key for key block
../3-Phrases/vuze:void setStorageForKey(QString;[B) | set storage for key
../3-Phrases/vuze:byte[] getStorageForKey(QString;) | get storage for key
../3-Phrases/vuze:DHTDBValue getValueForRelay(QDHTTransportContact;) | get value for relay
../3-Phrases/vuze:DHTDBValue getValueForDeletion(I) | get value for deletion
../3-Phrases/vuze:int getMaxFailForLiveCount() | get max fail for live count
../3-Phrases/vuze:int getMaxFailForUnknownCount() | get max fail for unknown count
../3-Phrases/vuze:int getMaxFailForLiveCount() | get max fail for live count
../3-Phrases/vuze:int getMaxFailForUnknownCount() | get max fail for unknown count
../3-Phrases/vuze:int getMaxFailForLiveCount() | get max fail for live count
../3-Phrases/vuze:int getMaxFailForUnknownCount() | get max fail for unknown count
../3-Phrases/vuze:int getMaxFailForLiveCount() | get max fail for live count
../3-Phrases/vuze:int getMaxFailForUnknownCount() | get max fail for unknown count
../3-Phrases/vuze:InetSocketAddress askContactForExternalAddress(QDHTTransportUDPContactImpl;) | ask contact for external address
../3-Phrases/vuze:int getMaxFailForLiveCount() | get max fail for live count
../3-Phrases/vuze:int getMaxFailForUnknownCount() | get max fail for unknown count
../3-Phrases/vuze:String formatBytes(J) | format bytes
../3-Phrases/vuze:String formatSpeed(J) | format speed
../3-Phrases/vuze:void aquireLicenseFor(QString;) | aquire license for
../3-Phrases/vuze:boolean isForceStart() | is force start
../3-Phrases/vuze:void setForceStart(Z) | set force start
../3-Phrases/vuze:boolean hasOutstandingWriteRequestForPiece(I) | has outstanding write request for piece
../3-Phrases/vuze:boolean hasOutstandingReadRequestForPiece(I) | has outstanding read request for piece
../3-Phrases/vuze:boolean hasOutstandingCheckRequestForPiece(I) | has outstanding check request for piece
../3-Phrases/vuze:boolean checkBlockConsistencyForWrite(QString;IIQDirectByteBuffer;) | check block consistency for write
../3-Phrases/vuze:boolean checkBlockConsistencyForRead(QString;III) | check block consistency for read
../3-Phrases/vuze:boolean checkBlockConsistencyForHint(QString;III) | check block consistency for hint
../3-Phrases/vuze:boolean useAccuracyForRank() | use accuracy for rank
../3-Phrases/vuze:void setReadyForRead() | set ready for read
../3-Phrases/vuze:boolean waitForEvent(J) | wait for event
../3-Phrases/vuze:boolean isReadyForWrite(QEventWaiter;) | is ready for write
../3-Phrases/vuze:long isReadyForRead(QEventWaiter;) | is ready for read
../3-Phrases/vuze:boolean checkForTestDone() | check for test done
../3-Phrases/vuze:long checkForNewPeakValue(QDownloadStats;JJ) | check for new peak value
../3-Phrases/vuze:boolean isReadyForWrite(QEventWaiter;) | is ready for write
../3-Phrases/vuze:long isReadyForRead(QEventWaiter;) | is ready for read
../3-Phrases/vuze:void setReadyForRead() | set ready for read
../3-Phrases/vuze:Object[] checkForMatch(QTransportHelper;IQByteBuffer;Z) | check for match
../3-Phrases/vuze:void registerForReadSelects(QselectListener;QObject;) | register for read selects
../3-Phrases/vuze:void registerForWriteSelects(QselectListener;QObject;) | register for write selects
../3-Phrases/vuze:boolean isReadyForWrite(QEventWaiter;) | is ready for write
../3-Phrases/vuze:boolean readyForWrite(Z) | ready for write
../3-Phrases/vuze:long isReadyForRead(QEventWaiter;) | is ready for read
../3-Phrases/vuze:boolean readyForRead(Z) | ready for read
../3-Phrases/vuze:void setReadyForRead() | set ready for read
../3-Phrases/vuze:boolean isReadyForWrite(QEventWaiter;) | is ready for write
../3-Phrases/vuze:long isReadyForRead(QEventWaiter;) | is ready for read
../3-Phrases/vuze:void setReadyForRead() | set ready for read
../3-Phrases/vuze:void registerForReadSelects(QselectListener;QObject;) | register for read selects
../3-Phrases/vuze:void registerForWriteSelects(QselectListener;QObject;) | register for write selects
../3-Phrases/vuze:void registerForReadSelects(QselectListener;QObject;) | register for read selects
../3-Phrases/vuze:void registerForWriteSelects(QselectListener;QObject;) | register for write selects
../3-Phrases/vuze:void forDocumentation() | for documentation
../3-Phrases/vuze:void registerForTimeouts(QPeerManagerRegistrationImpl;) | register for timeouts
../3-Phrases/vuze:void forceSendOfPending() | force send of pending
../3-Phrases/vuze:String formatUnknownAzStyleClient(QString;) | format unknown az style client
../3-Phrases/vuze:String formatUnknownShadowStyleClient(QString;) | format unknown shadow style client
../3-Phrases/vuze:String checkForTransmissionBasedClients(QString;QString;QString;QString;[BQString;) | check for transmission based clients
../3-Phrases/vuze:int getPersistForSeconds() | get persist for seconds
../3-Phrases/vuze:int getPersistForSeconds() | get persist for seconds
../3-Phrases/vuze:SpeedManagerLimitEstimate adjustForPersistence(QlimitEstimate;QlimitEstimate;QlimitEstimate;Z) | adjust for persistence
../3-Phrases/vuze:boolean checkForLowerLimits() | check for lower limits
../3-Phrases/vuze:int checkForMinUploadValue(I) | check for min upload value
../3-Phrases/vuze:int checkForMinDownloadValue(I) | check for min download value
../3-Phrases/vuze:void checkForUnpinningCondition() | check for unpinning condition
../3-Phrases/vuze:boolean checkForLowerLimits() | check for lower limits
../3-Phrases/vuze:boolean forcePingSourceChange([QSpeedManagerPingSource;) | force ping source change
../3-Phrases/vuze:boolean checkForSlowSource([QSpeedManagerPingSource;) | check for slow source
../3-Phrases/vuze:boolean checkForBadPing([QSpeedManagerPingSource;) | check for bad ping
../3-Phrases/vuze:association getAssociationForPublish() | get association for publish
../3-Phrases/vuze:URLConnection openConnectionForceNoProxy(QURL;) | open connection force no proxy
../3-Phrases/vuze:URLConnection openConnectionForceNoProxy(QURL;) | open connection force no proxy
../3-Phrases/vuze:boolean useCompressionForFileType(QString;) | use compression for file type
../3-Phrases/vuze:byte[] getPNGBytesForWidth(I) | get png bytes for width
../3-Phrases/vuze:byte[] getPNGBytesForSize(II) | get png bytes for size
../3-Phrases/vuze:String formatExpiry(J) | format expiry
../3-Phrases/vuze:byte[] getKeyForKeyBlock([B) | get key for key block
../3-Phrases/vuze:void setStorageForKey(QString;[B) | set storage for key
../3-Phrases/vuze:byte[] getStorageForKey(QString;) | get storage for key
../3-Phrases/vuze:void checkForReSeed(Z) | check for re seed
../3-Phrases/vuze:boolean waitForCompletion(J) | wait for completion
../3-Phrases/vuze:boolean isForceActive() | is force active
../3-Phrases/vuze:String formatString() | format string
../3-Phrases/vuze:void checkDownloadForRegistration(QDownload;Z) | check download for registration
../3-Phrases/vuze:void forceTrack(QDownload;) | force track
../3-Phrases/vuze:String getOldDescriptionForPort(I) | get old description for port
../3-Phrases/vuze:String getDescriptionForPort(ZI) | get description for port
../3-Phrases/vuze:void runForAllRows(QTableGroupRowRunner;) | run for all rows
../3-Phrases/vuze:void runForAllRows(QTableGroupRowVisibilityRunner;) | run for all rows
../3-Phrases/vuze:void runForSelectedRows(QTableGroupRowRunner;) | run for selected rows
../3-Phrases/vuze:void runForAllRows(QTableGroupRowRunner;) | run for all rows
../3-Phrases/vuze:String getFormattedInviteMessage() | get formatted invite message
../3-Phrases/vuze:void checkForUpdates() | check for updates
../3-Phrases/vuze:String formatETA(J) | format eta
../3-Phrases/vuze:void cellMouseTriggerForRate(QTableCellMouseEvent;) | cell mouse trigger for rate
../3-Phrases/vuze:void cellPaintForRate(QGC;QTableCellSWT;) | cell paint for rate
../3-Phrases/vuze:void waitForLogin(QloginWaitListener;) | wait for login
../3-Phrases/vuze:boolean setForeground(QColor;) | set foreground
../3-Phrases/vuze:boolean setForeground(III) | set foreground
../3-Phrases/vuze:void setRowForeground(QColor;) | set row foreground
../3-Phrases/vuze:Color getForeground() | get foreground
../3-Phrases/vuze:void runForAllRows(QTableGroupRowVisibilityRunner;) | run for all rows
../3-Phrases/vuze:void runForSelectedRows(QTableGroupRowRunner;) | run for selected rows
../3-Phrases/vuze:void checkCellForSetting() | check cell for setting
../3-Phrases/vuze:Color getForeground() | get foreground
../3-Phrases/vuze:void setForeground(QColor;) | set foreground
../3-Phrases/vuze:void setForeground(III) | set foreground
../3-Phrases/vuze:void setForeground([I) | set foreground
../3-Phrases/vuze:void setForegroundToErrorColor() | set foreground to error color
../3-Phrases/vuze:void forceRecheckComplete(QDownloadManager;) | force recheck complete
../3-Phrases/vuze:int[] getForeground() | get foreground
../3-Phrases/vuze:boolean setForeground(III) | set foreground
../3-Phrases/vuze:boolean setForeground([I) | set foreground
../3-Phrases/vuze:boolean setForegroundToErrorColor() | set foreground to error color
../3-Phrases/vuze:boolean prepareForPlay(QDownloadManager;) | prepare for play
../3-Phrases/vuze:void forceRecheckComplete(QDownloadManager;) | force recheck complete
../3-Phrases/vuze:void increaseCheckingForAds() | increase checking for ads
../3-Phrases/vuze:void decreaseCheckingForAds() | decrease checking for ads
../3-Phrases/vuze:boolean isCheckingForNewAds() | is checking for new ads
../3-Phrases/vuze:boolean forceDirect() | force direct
../3-Phrases/vuze:boolean checkForEof() | check for eof
../3-Phrases/vuze:CONS V2Form(QGeneralNames;) | v 2 form
../3-Phrases/vuze:CONS V2Form(QASN1Sequence;) | v 2 form
../3-Phrases/vuze:X509CertificateStructure getForward() | get forward
../3-Phrases/vuze:String getFormat() | get format
../3-Phrases/vuze:String getFormat() | get format
../3-Phrases/vuze:String getFormat() | get format
../3-Phrases/vuze:String getFormat() | get format
../3-Phrases/vuze:boolean hasOutstandingWriteRequestForPiece(I) | has outstanding write request for piece
../3-Phrases/vuze:boolean hasOutstandingReadRequestForPiece(I) | has outstanding read request for piece
../3-Phrases/vuze:boolean hasOutstandingCheckRequestForPiece(I) | has outstanding check request for piece
../3-Phrases/vuze:boolean checkBlockConsistencyForWrite(QString;IIQDirectByteBuffer;) | check block consistency for write
../3-Phrases/vuze:boolean checkBlockConsistencyForRead(QString;III) | check block consistency for read
../3-Phrases/vuze:boolean checkBlockConsistencyForHint(QString;III) | check block consistency for hint
../3-Phrases/vuze:boolean hasOutstandingReadRequestForPiece(I) | has outstanding read request for piece
../3-Phrases/vuze:boolean hasOutstandingCheckRequestForPiece(I) | has outstanding check request for piece
../3-Phrases/vuze:boolean hasOutstandingWriteRequestForPiece(I) | has outstanding write request for piece
../3-Phrases/vuze:boolean checkBlockConsistencyForWrite(QString;IIQDirectByteBuffer;) | check block consistency for write
../3-Phrases/vuze:boolean checkBlockConsistencyForRead(QString;III) | check block consistency for read
../3-Phrases/vuze:boolean checkBlockConsistencyForHint(QString;III) | check block consistency for hint
../3-Phrases/vuze:boolean checkBlockConsistencyForHint(QDiskManager;QString;III) | check block consistency for hint
../3-Phrases/vuze:boolean checkBlockConsistencyForRead(QDiskManager;QString;III) | check block consistency for read
../3-Phrases/vuze:boolean hasOutstandingWriteRequestForPiece(I) | has outstanding write request for piece
../3-Phrases/vuze:boolean hasOutstandingReadRequestForPiece(I) | has outstanding read request for piece
../3-Phrases/vuze:boolean hasOutstandingCheckRequestForPiece(I) | has outstanding check request for piece
../3-Phrases/vuze:boolean hasOutstandingCheckRequestForPiece(I) | has outstanding check request for piece
../3-Phrases/vuze:boolean hasOutstandingWriteRequestForPiece(I) | has outstanding write request for piece
../3-Phrases/vuze:boolean hasOutstandingReadRequestForPiece(I) | has outstanding read request for piece
../3-Phrases/vuze:void forceRecheckComplete(QDownloadManager;) | force recheck complete
../3-Phrases/vuze:boolean canForceRecheck() | can force recheck
../3-Phrases/vuze:void forceRecheck() | force recheck
../3-Phrases/vuze:void forceRecheck(QForceRecheckListener;) | force recheck
../3-Phrases/vuze:boolean isForceStart() | is force start
../3-Phrases/vuze:void setForceStart(Z) | set force start
../3-Phrases/vuze:boolean canForceRecheck() | can force recheck
../3-Phrases/vuze:void forceRecheck(QForceRecheckListener;) | force recheck
../3-Phrases/vuze:boolean isForceStart() | is force start
../3-Phrases/vuze:void setForceStart(Z) | set force start
../3-Phrases/vuze:void forceRecheckDiskManagerListener(ZIQForceRecheckListener;) | force recheck disk manager listener
../3-Phrases/vuze:boolean canForceRecheck() | can force recheck
../3-Phrases/vuze:void forceRecheck() | force recheck
../3-Phrases/vuze:void forceRecheck(QForceRecheckListener;) | force recheck
../3-Phrases/vuze:boolean isForceStart() | is force start
../3-Phrases/vuze:void setForceStart(Z) | set force start
../3-Phrases/vuze:void checkForceStart(Z) | check force start
../3-Phrases/vuze:boolean keyExistsForDefaultLocale(QString;) | key exists for default locale
../3-Phrases/vuze:String getStringForSentence(QString;) | get string for sentence
../3-Phrases/vuze:int addWarningForIp(QString;) | add warning for ip
../3-Phrases/vuze:int getNbWarningForIp(QString;) | get nb warning for ip
../3-Phrases/vuze:int addWarningForIp(QString;) | add warning for ip
../3-Phrases/vuze:int getNbWarningForIp(QString;) | get nb warning for ip
../3-Phrases/vuze:Object queryForClass(QClass;) | query for class
../3-Phrases/vuze:Object queryForClass(QClass;[QObject;) | query for class
../3-Phrases/vuze:Object queryForClass([QObject;QClass;) | query for class
../3-Phrases/vuze:boolean isSafeForReconnect() | is safe for reconnect
../3-Phrases/vuze:void checkForBannedConnections() | check for banned connections
../3-Phrases/vuze:boolean isSafeForReconnect() | is safe for reconnect
../3-Phrases/vuze:void checkForReconnect(QHashWrapper;) | check for reconnect
../3-Phrases/vuze:void registerForMessageHandling() | register for message handling
../3-Phrases/vuze:TRTrackerBTScraperResponseImpl checkForNextScrape() | check for next scrape
../3-Phrases/vuze:void checkForPeerListCompaction(Z) | check for peer list compaction
../3-Phrases/vuze:int getSeedCountForScrape(Z) | get seed count for scrape
../3-Phrases/vuze:String computePortsForURL(ZZ) | compute ports for url
../3-Phrases/vuze:URL adjustURLForHosting(QURL;) | adjust url for hosting
../3-Phrases/vuze:void checkForBlacklistedURLs(QURL;) | check for blacklisted urls
../3-Phrases/vuze:String getPortsForURL() | get ports for url
../3-Phrases/vuze:String getPortsForURLFullCrypto() | get ports for url full crypto
../3-Phrases/vuze:Object removeForIndex(I) | remove for index
../3-Phrases/vuze:Object waitForResult() | wait for result
../3-Phrases/vuze:void releaseForever() | release forever
../3-Phrases/vuze:boolean isReleasedForever() | is released forever
../3-Phrases/vuze:void removeForIndex(I) | remove for index
../3-Phrases/vuze:byte[] textToNumericFormat(QString;) | text to numeric format
../3-Phrases/vuze:String format(J) | format
../3-Phrases/vuze:String format100ths(J) | format 100 ths
../3-Phrases/vuze:String formatColon(J) | format colon
../3-Phrases/vuze:String formatNanoAsMilli(J) | format nano as milli
../3-Phrases/vuze:boolean isValidVersionFormat(QString;) | is valid version format
../3-Phrases/vuze:String format(I) | format
../3-Phrases/vuze:String parseTextForURL(QString;Z) | parse text for url
../3-Phrases/vuze:String parseTextForURL(QString;ZZ) | parse text for url
../3-Phrases/vuze:String parseHTMLforURL(QString;) | parse html for url
../3-Phrases/vuze:Entry removeEntryForKey([B) | remove entry for key
../3-Phrases/vuze:int indexFor(II) | index for
../3-Phrases/vuze:String formatByteCountToKiBEtc(I) | format byte count to ki b etc
../3-Phrases/vuze:String formatByteCountToKiBEtc(J) | format byte count to ki b etc
../3-Phrases/vuze:String formatByteCountToKiBEtc(JZ) | format byte count to ki b etc
../3-Phrases/vuze:String formatByteCountToKiBEtc(JZZ) | format byte count to ki b etc
../3-Phrases/vuze:String formatByteCountToKiBEtc(JZZI) | format byte count to ki b etc
../3-Phrases/vuze:String formatDataProtByteCountToKiBEtc(JJ) | format data prot byte count to ki b etc
../3-Phrases/vuze:String formatDataProtByteCountToKiBEtcPerSec(JJ) | format data prot byte count to ki b etc per sec
../3-Phrases/vuze:String formatByteCountToKiBEtcPerSec(J) | format byte count to ki b etc per sec
../3-Phrases/vuze:String formatByteCountToKiBEtcPerSec(JZ) | format byte count to ki b etc per sec
../3-Phrases/vuze:String formatByteCountToBase10KBEtc(J) | format byte count to base 10 kb etc
../3-Phrases/vuze:String formatByteCountToBase10KBEtcPerSec(J) | format byte count to base 10 kb etc per sec
../3-Phrases/vuze:String formatByteCountToBitsPerSec(J) | format byte count to bits per sec
../3-Phrases/vuze:String formatBitCountToKiBEtcLocalImpl(JZZIZ) | format bit count to ki b etc local impl
../3-Phrases/vuze:String formatETA(J) | format eta
../3-Phrases/vuze:String formatDownloaded(QDownloadManagerStats;) | format downloaded
../3-Phrases/vuze:String formatHashFails(QDownloadManager;) | format hash fails
../3-Phrases/vuze:String formatDownloadStatus(QDownloadManager;) | format download status
../3-Phrases/vuze:String formatDownloadStatusDefaultLocale(QDownloadManager;) | format download status default locale
../3-Phrases/vuze:String formatPercentFromThousands(I) | format percent from thousands
../3-Phrases/vuze:String formatTimeStamp(J) | format time stamp
../3-Phrases/vuze:String formatIntToTwoDigits(I) | format int to two digits
../3-Phrases/vuze:String formatDate(JQString;) | format date
../3-Phrases/vuze:String formatDate(J) | format date
../3-Phrases/vuze:String formatDateShort(J) | format date short
../3-Phrases/vuze:String formatDateNum(J) | format date num
../3-Phrases/vuze:String formatCustomDateOnly(J) | format custom date only
../3-Phrases/vuze:String formatCustomTimeOnly(J) | format custom time only
../3-Phrases/vuze:String formatCustomTimeOnly(JZ) | format custom time only
../3-Phrases/vuze:String formatCustomDateTime(J) | format custom date time
../3-Phrases/vuze:String formatTime(J) | format time
../3-Phrases/vuze:String formatDecimal(DI) | format decimal
../3-Phrases/vuze:String formatDecimal(DIZZ) | format decimal
../3-Phrases/vuze:void setForce(Z) | set force
../3-Phrases/vuze:void checkForUpdate(QUpdateChecker;) | check for update
../3-Phrases/vuze:void checkForUpdate(QUpdateChecker;) | check for update
../3-Phrases/vuze:void forceSettingsMigration() | force settings migration
../3-Phrases/vuze:boolean isForceStart() | is force start
../3-Phrases/vuze:void setForceStart(Z) | set force start
../3-Phrases/vuze:boolean setForeground(III) | set foreground
../3-Phrases/vuze:boolean setForeground([I) | set foreground
../3-Phrases/vuze:boolean setForegroundToErrorColor() | set foreground to error color
../3-Phrases/vuze:int[] getForeground() | get foreground
../3-Phrases/vuze:void setForeground(III) | set foreground
../3-Phrases/vuze:void setForeground([I) | set foreground
../3-Phrases/vuze:void setForegroundToErrorColor() | set foreground to error color
../3-Phrases/vuze:void checkForUpdate(QUpdateChecker;) | check for update
../3-Phrases/vuze:Formatters getFormatters() | get formatters
../3-Phrases/vuze:String formatByteCountToKiBEtc(J) | format byte count to ki b etc
../3-Phrases/vuze:String formatByteCountToKiBEtcPerSec(J) | format byte count to ki b etc per sec
../3-Phrases/vuze:String formatPercentFromThousands(J) | format percent from thousands
../3-Phrases/vuze:String formatByteArray([BZ) | format byte array
../3-Phrases/vuze:String formatDate(J) | format date
../3-Phrases/vuze:String formatTimeOnly(J) | format time only
../3-Phrases/vuze:String formatTimeOnly(JZ) | format time only
../3-Phrases/vuze:String formatDateOnly(J) | format date only
../3-Phrases/vuze:String formatTimeFromSeconds(J) | format time from seconds
../3-Phrases/vuze:String formatETAFromSeconds(J) | format eta from seconds
../3-Phrases/vuze:Formatters getFormatters() | get formatters
../3-Phrases/vuze:void forceSettingsMigration() | force settings migration
../3-Phrases/vuze:boolean isForceStart() | is force start
../3-Phrases/vuze:void setForceStart(Z) | set force start
../3-Phrases/vuze:CopyOnWriteMap getAttributeMapForType(I) | get attribute map for type
../3-Phrases/vuze:void checkForUpdate(QUpdateChecker;) | check for update
../3-Phrases/vuze:void checkForUpdate(QUpdateChecker;) | check for update
../3-Phrases/vuze:String format(I) | format
../3-Phrases/vuze:boolean prepareForKeepAlive(Z) | prepare for keep alive
../3-Phrases/vuze:CONS PeerForeignNetworkConnection(QPeer;) | peer foreign network connection
../3-Phrases/vuze:boolean isReadyForWrite(QEventWaiter;) | is ready for write
../3-Phrases/vuze:long isReadyForRead(QEventWaiter;) | is ready for read
../3-Phrases/vuze:PEPeer mapForeignPeer(QPeer;) | map foreign peer
../3-Phrases/vuze:PeerForeignDelegate lookupForeignPeer(QPeer;) | lookup foreign peer
../3-Phrases/vuze:List mapForeignPeers([QPeer;) | map foreign peers
../3-Phrases/vuze:PeerImpl getPeerForPEPeer(QPEPeer;) | get peer for pe peer
../3-Phrases/vuze:CONS PeerForeignDelegate(QPeerManagerImpl;QPeer;) | peer foreign delegate
../3-Phrases/vuze:boolean isSafeForReconnect() | is safe for reconnect
../3-Phrases/vuze:int getPersistForSeconds() | get persist for seconds
../3-Phrases/vuze:void promptForInput() | prompt for input
../3-Phrases/vuze:void checkForFailedInstalls(QUpdateManager;) | check for failed installs
../3-Phrases/vuze:Formatters getFormatters() | get formatters
../3-Phrases/vuze:CONS FormattersImpl() | formatters impl
../3-Phrases/vuze:String formatByteCountToKiBEtc(J) | format byte count to ki b etc
../3-Phrases/vuze:String formatByteCountToKiBEtcPerSec(J) | format byte count to ki b etc per sec
../3-Phrases/vuze:String formatPercentFromThousands(J) | format percent from thousands
../3-Phrases/vuze:String formatByteArray([BZ) | format byte array
../3-Phrases/vuze:String formatDate(J) | format date
../3-Phrases/vuze:String formatTimeOnly(J) | format time only
../3-Phrases/vuze:String formatTimeOnly(JZ) | format time only
../3-Phrases/vuze:String formatDateOnly(J) | format date only
../3-Phrases/vuze:String formatTimeFromSeconds(J) | format time from seconds
../3-Phrases/vuze:String formatETAFromSeconds(J) | format eta from seconds
../3-Phrases/vuze:void setForceNoProxy(Z) | set force no proxy
../3-Phrases/vuze:String trimForDisplay(QURL;) | trim for display
../3-Phrases/vuze:boolean isForceStart() | is force start
../3-Phrases/vuze:void setForceStart(Z) | set force start
../3-Phrases/vuze:void checkForUpdate(QUpdateChecker;) | check for update
../3-Phrases/vuze:void checkForUpdate(QUpdateChecker;) | check for update
../3-Phrases/vuze:void checkForUpdate(QUpdateChecker;) | check for update
../3-Phrases/vuze:int checkForUpdateSupport(QUpdateChecker;[QString;Z) | check for update support
../3-Phrases/vuze:CONS TorrentForceStart() | torrent force start
../3-Phrases/vuze:String getDefaultSummaryFormat() | get default summary format
../3-Phrases/vuze:String getDefaultSummaryFormat() | get default summary format
../3-Phrases/vuze:void updateLanguageForControl(QWidget;) | update language for control
../3-Phrases/vuze:FormData getFilledFormData() | get filled form data
../3-Phrases/vuze:void waitForModals() | wait for mod als
../3-Phrases/vuze:void setTwistieForeground(QColor;) | set twistie foreground
../3-Phrases/vuze:void setForeground(QColor;) | set foreground
../3-Phrases/vuze:void addMaintenanceListenerForMenu(QMenu;QMenuBuilder;) | add maintenance listener for menu
../3-Phrases/vuze:void promptUserForComment([QDownloadManager;) | prompt user for comment
../3-Phrases/vuze:void promptForInput() | prompt for input
../3-Phrases/vuze:void promptForInput0() | prompt for input 0
../3-Phrases/vuze:void setForeground(QColor;) | set foreground
../3-Phrases/vuze:void setTwistieForeground(QColor;) | set twistie foreground
../3-Phrases/vuze:void loadImagesForSplashWindow(QDisplay;) | load images for splash window
../3-Phrases/vuze:Image force16height(QImage;) | force 16 height
../3-Phrases/vuze:void pollForConnections(QAzureusCore;) | poll for connections
../3-Phrases/vuze:void pollForConnectionsSupport(QAzureusCore;) | poll for connections support
../3-Phrases/vuze:int getPersistForSeconds() | get persist for seconds
../3-Phrases/vuze:int getPersistForSeconds() | get persist for seconds
../3-Phrases/vuze:void setForeground(QColor;) | set foreground
../3-Phrases/vuze:void setForeground(QColor;) | set foreground
../3-Phrases/vuze:Rectangle getBoundsForCanvas() | get bounds for canvas
../3-Phrases/vuze:void setRowForeground(QColor;) | set row foreground
../3-Phrases/vuze:boolean setForeground(QColor;) | set foreground
../3-Phrases/vuze:Color getForeground() | get foreground
../3-Phrases/vuze:boolean setForeground(III) | set foreground
../3-Phrases/vuze:Color getForeground() | get foreground
../3-Phrases/vuze:void setForegroundDebug(QString;QColor;) | set foreground debug
../3-Phrases/vuze:void setForegroundDebug(QString;III) | set foreground debug
../3-Phrases/vuze:void setForeground(QColor;) | set foreground
../3-Phrases/vuze:void setForeground(III) | set foreground
../3-Phrases/vuze:boolean setForeground(IQColor;) | set foreground
../3-Phrases/vuze:Color getForeground(I) | get foreground
../3-Phrases/vuze:Rectangle getBoundsForCanvas() | get bounds for canvas
../3-Phrases/vuze:void setRowForeground(QColor;) | set row foreground
../3-Phrases/vuze:boolean setForeground(QColor;) | set foreground
../3-Phrases/vuze:boolean setForeground(III) | set foreground
../3-Phrases/vuze:Color getForeground() | get foreground
../3-Phrases/vuze:String format(I) | format
../3-Phrases/vuze:String format(I) | format
../3-Phrases/vuze:String format(I) | format
../3-Phrases/vuze:void forceActive() | force active
../3-Phrases/vuze:void performForShells(QListener;) | perform for shells
../3-Phrases/vuze:Color[] getForegroundColors() | get foreground colors
../3-Phrases/vuze:Color[] getForegroundColors() | get foreground colors
../3-Phrases/vuze:Color[] getForegroundColors() | get foreground colors
../3-Phrases/vuze:Color[] getForegroundColors() | get foreground colors
../3-Phrases/vuze:Color getForegroundHover() | get foreground hover
../3-Phrases/vuze:void setForegroundHover(QColor;) | set foreground hover
../3-Phrases/vuze:Color getForegroundDisabled() | get foreground disabled
../3-Phrases/vuze:void setForegroundDisabled(QColor;) | set foreground disabled
../3-Phrases/vuze:void checkForRefresh() | check for refresh
../3-Phrases/vuze:void checkForWhatsNewWindow() | check for whats new window
../3-Phrases/vuze:void openTorrentsForTracking(QString;[QString;) | open torrents for tracking
../3-Phrases/vuze:MenuItem addOpenTorrentForTrackingMenuItem(QMenu;) | add open torrent for tracking menu item
../3-Phrases/vuze:boolean isEnabledForCurrentMode(QWidget;) | is enabled for current mode
../3-Phrases/vuze:void setForegroundDebug() | set foreground debug
../3-Phrases/vuze:void setForeground(III) | set foreground
../3-Phrases/vuze:void setForeground([I) | set foreground
../3-Phrases/vuze:void setForegroundToErrorColor() | set foreground to error color
../3-Phrases/vuze:MiniBar getMiniBarForObject(QObject;) | get mini bar for object
../3-Phrases/vuze:void forceSaveLocation() | force save location
../3-Phrases/vuze:void waitForClose() | wait for close
../3-Phrases/vuze:String formatForDisplay(QString;) | format for display
../3-Phrases/vuze:void formatLastPanel(QProgressReporterPanel;) | format last panel
../3-Phrases/vuze:void waitForDispose() | wait for dispose
../3-Phrases/vuze:void waitForComplete() | wait for complete
../3-Phrases/vuze:String format(QUpdateCheckInstance;QString;) | format
../3-Phrases/vuze:String format(QUpdateChecker;QString;) | format
../3-Phrases/vuze:void checkForUpdate(QUpdateChecker;) | check for update
../3-Phrases/vuze:void setForceHeaderVisible(Z) | set force header visible
../3-Phrases/vuze:boolean setCommentAndFormatLinks(QControl;QString;) | set comment and format links
../3-Phrases/vuze:int findInsertPointFor(QString;QObject;) | find insert point for
../3-Phrases/vuze:String askForRenameFilename(QDiskManagerFileInfo;) | ask for rename filename
../3-Phrases/vuze:String askForRetargetedFilename(QDiskManagerFileInfo;) | ask for retargeted filename
../3-Phrases/vuze:String askForSaveDirectory(QDiskManagerFileInfo;) | ask for save directory
../3-Phrases/vuze:String format(I) | format
../3-Phrases/vuze:String format(I) | format
../3-Phrases/vuze:Color getForeground() | get foreground
../3-Phrases/vuze:void setForeground(QColor;) | set foreground
../3-Phrases/vuze:boolean setForeground(QColor;) | set foreground
../3-Phrases/vuze:Color getForegroundSWT() | get foreground swt
../3-Phrases/vuze:Composite createSashForm(QComposite;) | create sash form
../3-Phrases/vuze:void runForSelectedRows(QTableGroupRowRunner;) | run for selected rows
../3-Phrases/vuze:void runForVisibleRows(QTableGroupRowRunner;) | run for visible rows
../3-Phrases/vuze:void runForAllRows(QTableGroupRowVisibilityRunner;) | run for all rows
../3-Phrases/vuze:void runForTableItems(QList;QTableGroupRowRunner;) | run for table items
../3-Phrases/vuze:void checkCellForSetting() | check cell for setting
../3-Phrases/vuze:Color getForegroundSWT() | get foreground swt
../3-Phrases/vuze:int[] getForeground() | get foreground
../3-Phrases/vuze:boolean setForeground(QColor;) | set foreground
../3-Phrases/vuze:boolean setForeground(III) | set foreground
../3-Phrases/vuze:boolean setForeground([I) | set foreground
../3-Phrases/vuze:boolean setForegroundToErrorColor() | set foreground to error color
../3-Phrases/vuze:void setForegroundDebug(QString;QColor;) | set foreground debug
../3-Phrases/vuze:void setForegroundDebug(QString;III) | set foreground debug
../3-Phrases/vuze:void setForeground(III) | set foreground
../3-Phrases/vuze:void setForeground(QColor;) | set foreground
../3-Phrases/vuze:void setForegroundInSWTThread(QColor;) | set foreground in swt thread
../3-Phrases/vuze:void setForeground([I) | set foreground
../3-Phrases/vuze:void setForegroundToErrorColor() | set foreground to error color
../3-Phrases/vuze:int[] getForeground() | get foreground
../3-Phrases/vuze:boolean setForeground(III) | set foreground
../3-Phrases/vuze:boolean setForeground([I) | set foreground
../3-Phrases/vuze:boolean setForegroundToErrorColor() | set foreground to error color
../3-Phrases/vuze:Color getForegroundSWT() | get foreground swt
../3-Phrases/vuze:boolean setForeground(QColor;) | set foreground
../3-Phrases/vuze:boolean isForceStartable(QDownloadManager;) | is force startable
../3-Phrases/vuze:void checkForUpdate(QUpdateChecker;) | check for update
../3-Phrases/vuze:void checkForUpdate(QUpdateChecker;) | check for update
../3-Phrases/weka:void findRulesBruteForce() | find rules brute force
../3-Phrases/weka:Associator forName(QString;[QString;) | for name
../3-Phrases/weka:double confidenceForRule(QAprioriItemSet;QAprioriItemSet;) | confidence for rule
../3-Phrases/weka:double liftForRule(QAprioriItemSet;QAprioriItemSet;I) | lift for rule
../3-Phrases/weka:double leverageForRule(QAprioriItemSet;QAprioriItemSet;II) | leverage for rule
../3-Phrases/weka:double convictionForRule(QAprioriItemSet;QAprioriItemSet;II) | conviction for rule
../3-Phrases/weka:FastVector[] generateRulesBruteForce(DIQFastVector;IID) | generate rules brute force
../3-Phrases/weka:CONS SubsetSizeForwardSelection() | subset size forward selection
../3-Phrases/weka:String conservativeForwardSelectionTipText() | conservative forward selection tip text
../3-Phrases/weka:void setConservativeForwardSelection(Z) | set conservative forward selection
../3-Phrases/weka:boolean getConservativeForwardSelection() | get conservative forward selection
../3-Phrases/weka:ASSearch forName(QString;[QString;) | for name
../3-Phrases/weka:BitSet forwardSearch(IQBitSet;[IIZIIQInstances;QSubsetEvaluator;Z) | forward search
../3-Phrases/weka:BitSet floatingForwardSearch(IQBitSet;[IIZIQInstances;QSubsetEvaluator;Z) | floating forward search
../3-Phrases/weka:Instances setOutputFormatOriginal() | set output format original
../3-Phrases/weka:Instances setOutputFormat() | set output format
../3-Phrases/weka:Instances setOutputFormat() | set output format
../3-Phrases/weka:CONS LinearForwardSelection() | linear forward selection
../3-Phrases/weka:String forwardSelectionMethodTipText() | forward selection method tip text
../3-Phrases/weka:void setForwardSelectionMethod(QSelectedTag;) | set forward selection method
../3-Phrases/weka:SelectedTag getForwardSelectionMethod() | get forward selection method
../3-Phrases/weka:ASEvaluation forName(QString;[QString;) | for name
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:void updateStatsForClassifier([DQInstance;) | update stats for classifier
../3-Phrases/weka:void updateStatsForPredictor(DQInstance;) | update stats for predictor
../3-Phrases/weka:void readOldFormat(QReader;) | read old format
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:Classifier forName(QString;[QString;) | for name
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:String displayModelInOldFormatTipText() | display model in old format tip text
../3-Phrases/weka:void setDisplayModelInOldFormat(Z) | set display model in old format
../3-Phrases/weka:boolean getDisplayModelInOldFormat() | get display model in old format
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:double[] countsForInstance(QInstance;) | counts for instance
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:double getLogProbForTargetClass(QInstance;) | get log prob for target class
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:double[] distributionForInstance(QBayesNet;QInstance;) | distribution for instance
../3-Phrases/weka:double[] distributionForInstance(QBayesNet;QInstance;) | distribution for instance
../3-Phrases/weka:double[] distributionForInstance(QBayesNet;QInstance;) | distribution for instance
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:boolean checkForMissing(QInstance;QInstances;) | check for missing
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:DiscreteFunction fitForSingleCluster(QDoubleVector;I) | fit for single cluster
../3-Phrases/weka:DiscreteFunction formalize() | formalize
../3-Phrases/weka:DecimalFormat[] format() | format
../3-Phrases/weka:DecimalFormat[] format(I) | format
../3-Phrases/weka:DecimalFormat[] format(IZ) | format
../3-Phrases/weka:DecimalFormat format(IIIIZ) | format
../3-Phrases/weka:DecimalFormat[] format(IIIIIZ) | format
../3-Phrases/weka:void forward(QPaceMatrix;QIntVector;I) | forward
../3-Phrases/weka:Kernel forName(QString;[QString;) | for name
../3-Phrases/weka:void updateIndexSetFor(ID) | update index set for
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:double[] localDistributionForInstance(QInstance;QIndexes;) | local distribution for instance
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:Instances metaFormat(QInstances;) | meta format
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:double[] distributionForInstanceAverage(QInstance;) | distribution for instance average
../3-Phrases/weka:double[] distributionForInstanceProduct(QInstance;) | distribution for instance product
../3-Phrases/weka:double[] distributionForInstanceMajorityVoting(QInstance;) | distribution for instance majority voting
../3-Phrases/weka:double[] distributionForInstanceMax(QInstance;) | distribution for instance max
../3-Phrases/weka:double[] distributionForInstanceMin(QInstance;) | distribution for instance min
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:Instances metaFormat(QInstances;) | meta format
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:CONS RotationForest() | rotation forest
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:double[] distributionForInstance([D) | distribution for instance
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:boolean checkForInstance(QInstances;) | check for instance
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:void forwardSelect(ZQInstances;I) | forward select
../3-Phrases/weka:void forwardSelectOrBackwardEliminate(ZQInstances;I) | forward select or backward eliminate
../3-Phrases/weka:void generateClassifierForNode(QInstances;QRange;QRandom;QClassifier;QHashtable;) | generate classifier for node
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:void generateClassifierForNode(QInstances;QRange;QRandom;QClassifier;QHashtable;[D) | generate classifier for node
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:void buildClassifierForNode(QNDTree;QInstances;) | build classifier for node
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:double[] distributionForInstance(QInstance;QNDTree;) | distribution for instance
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:double[] cumulativeDistributionForInstance(QInstance;) | cumulative distribution for instance
../3-Phrases/weka:DiscreteDistribution distributionForInstance(QInstance;D) | distribution for instance
../3-Phrases/weka:DiscreteDistribution distributionForInstanceBalanced(QInstance;D) | distribution for instance balanced
../3-Phrases/weka:CumulativeDiscreteDistribution cumulativeDistributionForInstance(QInstance;D) | cumulative distribution for instance
../3-Phrases/weka:CumulativeDiscreteDistribution cumulativeDistributionForInstanceBalanced(QInstance;D) | cumulative distribution for instance balanced
../3-Phrases/weka:String numberOfPartsForInterpolationParameterTipText() | number of parts for interpolation parameter tip text
../3-Phrases/weka:void setNumberOfPartsForInterpolationParameter(I) | set number of parts for interpolation parameter
../3-Phrases/weka:int getNumberOfPartsForInterpolationParameter() | get number of parts for interpolation parameter
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:Instances rulesetForOneClass(DQInstances;DD) | ruleset for one class
../3-Phrases/weka:int setUpForEval(QBitSet;) | set up for eval
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:double errorsForTree() | errors for tree
../3-Phrases/weka:double errorsForLeaf() | errors for leaf
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:double getEstimatedErrorsForTree() | get estimated errors for tree
../3-Phrases/weka:double getEstimatedErrorsForLeaf() | get estimated errors for leaf
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:void searchForBestTestSingle() | search for best test single
../3-Phrases/weka:void searchForBestTestSingle(QPredictionNode;QInstances;QInstances;) | search for best test single
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:double predictionValueForInstance(QInstance;QPredictionNode;D) | prediction value for instance
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:void setChildForBranch(IQPredictionNode;) | set child for branch
../3-Phrases/weka:PredictionNode getChildForBranch(I) | get child for branch
../3-Phrases/weka:void setChildForBranch(IQPredictionNode;) | set child for branch
../3-Phrases/weka:PredictionNode getChildForBranch(I) | get child for branch
../3-Phrases/weka:void setChildForBranch(IQPredictionNode;) | set child for branch
../3-Phrases/weka:PredictionNode getChildForBranch(I) | get child for branch
../3-Phrases/weka:void searchForBestTest() | search for best test
../3-Phrases/weka:void searchForBestTest(QPredictionNode;QInstances;) | search for best test
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:double[] predictionValuesForInstance(QInstance;QPredictionNode;[D) | prediction values for instance
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:void setChildForBranch(IQPredictionNode;) | set child for branch
../3-Phrases/weka:PredictionNode getChildForBranch(I) | get child for branch
../3-Phrases/weka:void setChildForBranch(IQPredictionNode;) | set child for branch
../3-Phrases/weka:PredictionNode getChildForBranch(I) | get child for branch
../3-Phrases/weka:void setChildForBranch(IQPredictionNode;) | set child for branch
../3-Phrases/weka:PredictionNode getChildForBranch(I) | get child for branch
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:void searchForBestTestSingle() | search for best test single
../3-Phrases/weka:void searchForBestTestSingle(QPredictionNode;QInstances;QInstances;) | search for best test single
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:double predictionValueForInstance(QInstance;QPredictionNode;D) | prediction value for instance
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:void setChildForBranch(IQPredictionNode;) | set child for branch
../3-Phrases/weka:PredictionNode getChildForBranch(I) | get child for branch
../3-Phrases/weka:void setChildForBranch(IQPredictionNode;) | set child for branch
../3-Phrases/weka:PredictionNode getChildForBranch(I) | get child for branch
../3-Phrases/weka:void setChildForBranch(IQPredictionNode;) | set child for branch
../3-Phrases/weka:PredictionNode getChildForBranch(I) | get child for branch
../3-Phrases/weka:void searchForBestTest() | search for best test
../3-Phrases/weka:void searchForBestTest(QPredictionNode;QInstances;) | search for best test
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:double[] predictionValuesForInstance(QInstance;QPredictionNode;[D) | prediction values for instance
../3-Phrases/weka:double getEstimatedErrorsForBranch(QInstances;) | get estimated errors for branch
../3-Phrases/weka:double getEstimatedErrorsForDistribution(QDistribution;) | get estimated errors for distribution
../3-Phrases/weka:double[] modelDistributionForInstance(QInstance;) | model distribution for instance
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:double[] distributionForInstance(QInstance;Z) | distribution for instance
../3-Phrases/weka:double errorsForTree() | errors for tree
../3-Phrases/weka:double errorsForLeaf() | errors for leaf
../3-Phrases/weka:double positivesForSubsetOfInterest() | positives for subset of interest
../3-Phrases/weka:double totalForSubsetOfInterest() | total for subset of interest
../3-Phrases/weka:double totalForSubset(I) | total for subset
../3-Phrases/weka:int maxClassForSubsetOfInterest() | max class for subset of interest
../3-Phrases/weka:double laplaceForSubsetOfInterest() | laplace for subset of interest
../3-Phrases/weka:double getEstimatedErrorsForBranch(QInstances;) | get estimated errors for branch
../3-Phrases/weka:double getEstimatedErrorsForDistribution(QDistribution;) | get estimated errors for distribution
../3-Phrases/weka:double getEstimatedErrorsForBranch(QInstances;) | get estimated errors for branch
../3-Phrases/weka:double getEstimatedErrorsForDistribution(QDistribution;) | get estimated errors for distribution
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:double[] modelDistributionForInstance(QInstance;) | model distribution for instance
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:double[] logDensityPerClusterForInstance(QInstance;) | log density per cluster for instance
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:String displayModelInOldFormatTipText() | display model in old format tip text
../3-Phrases/weka:void setDisplayModelInOldFormat(Z) | set display model in old format
../3-Phrases/weka:boolean getDisplayModelInOldFormat() | get display model in old format
../3-Phrases/weka:double[] logDensityPerClusterForInstance(QInstance;) | log density per cluster for instance
../3-Phrases/weka:Database databaseForName(QString;QInstances;) | database for name
../3-Phrases/weka:DataObject dataObjectForName(QString;QInstance;QString;QDatabase;) | data object for name
../3-Phrases/weka:double[] logDensityPerClusterForInstance(QInstance;) | log density per cluster for instance
../3-Phrases/weka:double logDensityForInstance(QInstance;) | log density for instance
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:double[] logJointDensitiesForInstance(QInstance;) | log joint densities for instance
../3-Phrases/weka:boolean checkForNominalAttributes(QInstances;) | check for nominal attributes
../3-Phrases/weka:String maxKMeansForChildrenTipText() | max k means for children tip text
../3-Phrases/weka:void setMaxKMeansForChildren(I) | set max k means for children
../3-Phrases/weka:int getMaxKMeansForChildren() | get max k means for children
../3-Phrases/weka:double[] cuScoresForChildren(QInstance;) | cu scores for children
../3-Phrases/weka:double cuScoreForBestTwoMerged(QCNode;QCNode;QCNode;QInstance;) | cu score for best two merged
../3-Phrases/weka:String format_dataObject(QDataObject;) | format data object
../3-Phrases/weka:Database databaseForName(QString;QInstances;) | database for name
../3-Phrases/weka:DataObject dataObjectForName(QString;QInstance;QString;QDatabase;) | data object for name
../3-Phrases/weka:double[] logDensityPerClusterForInstance(QInstance;) | log density per cluster for instance
../3-Phrases/weka:double logDensityForInstance(QInstance;) | log density for instance
../3-Phrases/weka:double[] logJointDensitiesForInstance(QInstance;) | log joint densities for instance
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:Clusterer forName(QString;[QString;) | for name
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:void forceDeleteAttributeAt(I) | force delete attribute at
../3-Phrases/weka:void forceInsertAttributeAt(I) | force insert attribute at
../3-Phrases/weka:void checkForRemainingOptions([QString;) | check for remaining options
../3-Phrases/weka:Object forName(QClass;QString;[QString;) | for name
../3-Phrases/weka:String getDateFormat() | get date format
../3-Phrases/weka:void forceAddValue(QString;) | force add value
../3-Phrases/weka:String formatDate(D) | format date
../3-Phrases/weka:boolean checkForAttributeType(I) | check for attribute type
../3-Phrases/weka:boolean checkForStringAttributes() | check for string attributes
../3-Phrases/weka:double stirlingFormula(D) | stirling formula
../3-Phrases/weka:void forceDeleteAttributeAt(I) | force delete attribute at
../3-Phrases/weka:void forceInsertAttributeAt(I) | force insert attribute at
../3-Phrases/weka:void setOutputFormat(I) | set output format
../3-Phrases/weka:int getOutputFormat() | get output format
../3-Phrases/weka:void setFormat(QString;) | set format
../3-Phrases/weka:String getFormat() | get format
../3-Phrases/weka:Object forName(QString;QClass;QString;[QString;) | for name
../3-Phrases/weka:void setRelationalFormat(IQInstances;) | set relational format
../3-Phrases/weka:Instances getRelationalFormat(I) | get relational format
../3-Phrases/weka:void setRelationalClassFormat(QInstances;) | set relational class format
../3-Phrases/weka:Instances getRelationalClassFormat() | get relational class format
../3-Phrases/weka:TestInstances forCapabilities(QCapabilities;) | for capabilities
../3-Phrases/weka:Capabilities forInstances(QInstances;) | for instances
../3-Phrases/weka:Capabilities forInstances(QInstances;Z) | for instances
../3-Phrases/weka:CONS NoSupportForMissingValuesException() | no support for missing values exception
../3-Phrases/weka:CONS NoSupportForMissingValuesException(QString;) | no support for missing values exception
../3-Phrases/weka:void forceDeleteAttributeAt(I) | force delete attribute at
../3-Phrases/weka:void forceInsertAttributeAt(I) | force insert attribute at
../3-Phrases/weka:Object getConverterForFile(QString;QHashtable<QString;QString;>;) | get converter for file
../3-Phrases/weka:Object getConverterForExtension(QString;QHashtable<QString;QString;>;) | get converter for extension
../3-Phrases/weka:AbstractFileLoader getLoaderForFile(QString;) | get loader for file
../3-Phrases/weka:AbstractFileLoader getLoaderForFile(QFile;) | get loader for file
../3-Phrases/weka:AbstractFileLoader getLoaderForExtension(QString;) | get loader for extension
../3-Phrases/weka:AbstractFileLoader getURLLoaderForFile(QString;) | get url loader for file
../3-Phrases/weka:AbstractFileLoader getURLLoaderForFile(QFile;) | get url loader for file
../3-Phrases/weka:AbstractFileLoader getURLLoaderForExtension(QString;) | get url loader for extension
../3-Phrases/weka:AbstractFileSaver getSaverForFile(QString;) | get saver for file
../3-Phrases/weka:AbstractFileSaver getSaverForFile(QFile;) | get saver for file
../3-Phrases/weka:AbstractFileSaver getSaverForExtension(QString;) | get saver for extension
../3-Phrases/weka:boolean checkForKey() | check for key
../3-Phrases/weka:void setRelationForTableName(Z) | set relation for table name
../3-Phrases/weka:boolean getRelationForTableName() | get relation for table name
../3-Phrases/weka:String relationForTableNameTipText() | relation for table name tip text
../3-Phrases/weka:CONS ExponentialFormat() | exponential format
../3-Phrases/weka:CONS ExponentialFormat(I) | exponential format
../3-Phrases/weka:CONS ExponentialFormat(IZ) | exponential format
../3-Phrases/weka:CONS ExponentialFormat(IIZZ) | exponential format
../3-Phrases/weka:StringBuffer format(DQStringBuffer;QFieldPosition;) | format
../3-Phrases/weka:CONS FlexibleDecimalFormat() | flexible decimal format
../3-Phrases/weka:CONS FlexibleDecimalFormat(I) | flexible decimal format
../3-Phrases/weka:CONS FlexibleDecimalFormat(IZ) | flexible decimal format
../3-Phrases/weka:CONS FlexibleDecimalFormat(IZZZ) | flexible decimal format
../3-Phrases/weka:CONS FlexibleDecimalFormat(D) | flexible decimal format
../3-Phrases/weka:void newFormat(D) | new format
../3-Phrases/weka:boolean needExponentialFormat(D) | need exponential format
../3-Phrases/weka:void setFormat() | set format
../3-Phrases/weka:void setFormat(D) | set format
../3-Phrases/weka:StringBuffer format(DQStringBuffer;QFieldPosition;) | format
../3-Phrases/weka:StringBuffer formatString(QString;) | format string
../3-Phrases/weka:CONS FloatingPointFormat() | floating point format
../3-Phrases/weka:CONS FloatingPointFormat(I) | floating point format
../3-Phrases/weka:CONS FloatingPointFormat(II) | floating point format
../3-Phrases/weka:CONS FloatingPointFormat(IIZ) | floating point format
../3-Phrases/weka:StringBuffer format(DQStringBuffer;QFieldPosition;) | format
../3-Phrases/weka:String dotFormat() | dot format
../3-Phrases/weka:String dotFormat() | dot format
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:void setFieldDefsForDerivedFields(QArrayList<QAttribute;>;) | set field defs for derived fields
../3-Phrases/weka:void setFieldDefsForDerivedFields(QInstances;) | set field defs for derived fields
../3-Phrases/weka:void updateDefsForArgumentsAndFunction() | update defs for arguments and function
../3-Phrases/weka:void checkForSnowball() | check for snowball
../3-Phrases/weka:void checkForXStream() | check for x stream
../3-Phrases/weka:void checkForKOML() | check for koml
../3-Phrases/weka:Instances defineDataFormat() | define data format
../3-Phrases/weka:void setDatasetFormat(QInstances;) | set dataset format
../3-Phrases/weka:Instances getDatasetFormat() | get dataset format
../3-Phrases/weka:String formatTipText() | format tip text
../3-Phrases/weka:String toStringFormat() | to string format
../3-Phrases/weka:Instances defineDataFormat() | define data format
../3-Phrases/weka:Instances defineDataFormat() | define data format
../3-Phrases/weka:Instances defineDataFormat() | define data format
../3-Phrases/weka:Instances defineDataFormat() | define data format
../3-Phrases/weka:Instances defineDataFormat() | define data format
../3-Phrases/weka:Instances defineDataFormat() | define data format
../3-Phrases/weka:Instances defineDataFormat() | define data format
../3-Phrases/weka:Instances defineDataFormat() | define data format
../3-Phrases/weka:Instances defineDataFormat() | define data format
../3-Phrases/weka:Estimator forName(QString;[QString;) | for name
../3-Phrases/weka:boolean checkForAllFailedHosts() | check for all failed hosts
../3-Phrases/weka:int getClassForIRStatistics() | get class for ir statistics
../3-Phrases/weka:void setClassForIRStatistics(I) | set class for ir statistics
../3-Phrases/weka:void checkForDuplicateKeys([QObject;) | check for duplicate keys
../3-Phrases/weka:void checkForMultipleDifferences() | check for multiple differences
../3-Phrases/weka:boolean hasImmediateOutputFormat() | has immediate output format
../3-Phrases/weka:boolean hasImmediateOutputFormat() | has immediate output format
../3-Phrases/weka:Instances determineOutputFormat(QInstances;) | determine output format
../3-Phrases/weka:boolean setInputFormat(QInstances;) | set input format
../3-Phrases/weka:void setOutputFormat(QInstances;) | set output format
../3-Phrases/weka:Instances getInputFormat() | get input format
../3-Phrases/weka:Instances inputFormatPeek() | input format peek
../3-Phrases/weka:Instances outputFormatPeek() | output format peek
../3-Phrases/weka:void testInputFormat(QInstances;) | test input format
../3-Phrases/weka:boolean setInputFormat(QInstances;) | set input format
../3-Phrases/weka:Instances getOutputFormat() | get output format
../3-Phrases/weka:boolean isOutputFormatDefined() | is output format defined
../3-Phrases/weka:boolean setInputFormat(QInstances;) | set input format
../3-Phrases/weka:boolean hasImmediateOutputFormat() | has immediate output format
../3-Phrases/weka:Instances determineOutputFormat(QInstances;) | determine output format
../3-Phrases/weka:boolean hasImmediateOutputFormat() | has immediate output format
../3-Phrases/weka:Instances determineOutputFormat(QInstances;) | determine output format
../3-Phrases/weka:Instances determineOutputFormat(QInstances;) | determine output format
../3-Phrases/weka:void setOutputFormat() | set output format
../3-Phrases/weka:boolean setInputFormat(QInstances;) | set input format
../3-Phrases/weka:boolean setInputFormat(QInstances;) | set input format
../3-Phrases/weka:void setOutputFormat() | set output format
../3-Phrases/weka:void setOutputFormatNominal() | set output format nominal
../3-Phrases/weka:void setOutputFormatNumeric() | set output format numeric
../3-Phrases/weka:boolean setInputFormat(QInstances;) | set input format
../3-Phrases/weka:double[] cutPointsForSubset(QInstances;III) | cut points for subset
../3-Phrases/weka:void setOutputFormat() | set output format
../3-Phrases/weka:Instances determineOutputFormat(QInstances;) | determine output format
../3-Phrases/weka:boolean setInputFormat(QInstances;) | set input format
../3-Phrases/weka:boolean setInputFormat(QInstances;) | set input format
../3-Phrases/weka:boolean setInputFormat(QInstances;) | set input format
../3-Phrases/weka:boolean setInputFormat(QInstances;) | set input format
../3-Phrases/weka:boolean setInputFormat(QInstances;) | set input format
../3-Phrases/weka:void setOutputFormat() | set output format
../3-Phrases/weka:Instances determineOutputFormat(QInstances;) | determine output format
../3-Phrases/weka:boolean setInputFormat(QInstances;) | set input format
../3-Phrases/weka:boolean setInputFormat(QInstances;) | set input format
../3-Phrases/weka:Instances determineOutputFormat(QInstances;) | determine output format
../3-Phrases/weka:boolean setInputFormat(QInstances;) | set input format
../3-Phrases/weka:boolean setInputFormat(QInstances;) | set input format
../3-Phrases/weka:boolean setInputFormat(QInstances;) | set input format
../3-Phrases/weka:Instances getOutputFormat() | get output format
../3-Phrases/weka:Instances determineOutputFormat(QInstances;) | determine output format
../3-Phrases/weka:boolean setInputFormat(QInstances;) | set input format
../3-Phrases/weka:boolean setInputFormat(QInstances;) | set input format
../3-Phrases/weka:boolean setInputFormat(QInstances;) | set input format
../3-Phrases/weka:Instances determineOutputFormat(QInstances;) | determine output format
../3-Phrases/weka:boolean setInputFormat(QInstances;) | set input format
../3-Phrases/weka:boolean setInputFormat(QInstances;) | set input format
../3-Phrases/weka:void setOutputFormat() | set output format
../3-Phrases/weka:boolean setInputFormat(QInstances;) | set input format
../3-Phrases/weka:void setOutputFormat() | set output format
../3-Phrases/weka:boolean setInputFormat(QInstances;) | set input format
../3-Phrases/weka:void setOutputFormat() | set output format
../3-Phrases/weka:boolean setInputFormat(QInstances;) | set input format
../3-Phrases/weka:String dateFormatTipText() | date format tip text
../3-Phrases/weka:String getDateFormat() | get date format
../3-Phrases/weka:void setDateFormat(QString;) | set date format
../3-Phrases/weka:boolean setInputFormat(QInstances;) | set input format
../3-Phrases/weka:boolean setInputFormat(QInstances;) | set input format
../3-Phrases/weka:void setOutputFormat() | set output format
../3-Phrases/weka:boolean setInputFormat(QInstances;) | set input format
../3-Phrases/weka:boolean setInputFormat(QInstances;) | set input format
../3-Phrases/weka:String dateFormatTipText() | date format tip text
../3-Phrases/weka:SimpleDateFormat getDateFormat() | get date format
../3-Phrases/weka:void setDateFormat(QString;) | set date format
../3-Phrases/weka:void setDateFormat(QSimpleDateFormat;) | set date format
../3-Phrases/weka:void setOutputFormat() | set output format
../3-Phrases/weka:boolean setInputFormat(QInstances;) | set input format
../3-Phrases/weka:void testInputFormat(QInstances;) | test input format
../3-Phrases/weka:boolean setInputFormat(QInstances;) | set input format
../3-Phrases/weka:boolean setInputFormat(QInstances;) | set input format
../3-Phrases/weka:void setOutputFormat() | set output format
../3-Phrases/weka:boolean setInputFormat(QInstances;) | set input format
../3-Phrases/weka:Instances determineOutputFormat(QInstances;) | determine output format
../3-Phrases/weka:boolean setInputFormat(QInstances;) | set input format
../3-Phrases/weka:void setOutputFormat() | set output format
../3-Phrases/weka:boolean setInputFormat(QInstances;) | set input format
../3-Phrases/weka:boolean isOutputFormatDefined() | is output format defined
../3-Phrases/weka:Instances determineOutputFormat(QInstances;) | determine output format
../3-Phrases/weka:boolean setInputFormat(QInstances;) | set input format
../3-Phrases/weka:boolean setInputFormat(QInstances;) | set input format
../3-Phrases/weka:void testInputFormat(QInstances;) | test input format
../3-Phrases/weka:boolean setInputFormat(QInstances;) | set input format
../3-Phrases/weka:Instances determineOutputFormat(QInstances;) | determine output format
../3-Phrases/weka:boolean setInputFormat(QInstances;) | set input format
../3-Phrases/weka:boolean setInputFormat(QInstances;) | set input format
../3-Phrases/weka:boolean setInputFormat(QInstances;) | set input format
../3-Phrases/weka:void setOutputFormat() | set output format
../3-Phrases/weka:boolean setInputFormat(QInstances;) | set input format
../3-Phrases/weka:boolean setInputFormat(QInstances;) | set input format
../3-Phrases/weka:boolean setInputFormat(QInstances;) | set input format
../3-Phrases/weka:boolean setInputFormat(QInstances;) | set input format
../3-Phrases/weka:boolean setInputFormat(QInstances;) | set input format
../3-Phrases/weka:Instances determineOutputFormat(QInstances;) | determine output format
../3-Phrases/weka:boolean setInputFormat(QInstances;) | set input format
../3-Phrases/weka:boolean setInputFormat(QInstances;) | set input format
../3-Phrases/weka:Instances determineOutputFormat(QInstances;) | determine output format
../3-Phrases/weka:boolean setInputFormat(QInstances;) | set input format
../3-Phrases/weka:boolean setInputFormat(QInstances;) | set input format
../3-Phrases/weka:void setOutputFormat() | set output format
../3-Phrases/weka:Instances determineOutputFormat(QInstances;) | determine output format
../3-Phrases/weka:boolean setInputFormat(QInstances;) | set input format
../3-Phrases/weka:boolean setInputFormat(QInstances;) | set input format
../3-Phrases/weka:boolean setInputFormat(QInstances;) | set input format
../3-Phrases/weka:boolean setInputFormat(QInstances;) | set input format
../3-Phrases/weka:boolean setInputFormat(QInstances;) | set input format
../3-Phrases/weka:boolean setInputFormat(QInstances;) | set input format
../3-Phrases/weka:Instances determineOutputFormat(QInstances;) | determine output format
../3-Phrases/weka:boolean setInputFormat(QInstances;) | set input format
../3-Phrases/weka:boolean setInputFormat(QInstances;) | set input format
../3-Phrases/weka:boolean setInputFormat(QInstances;) | set input format
../3-Phrases/weka:void setOutputFormat() | set output format
../3-Phrases/weka:boolean setInputFormat(QInstances;) | set input format
../3-Phrases/weka:boolean setInputFormat(QInstances;) | set input format
../3-Phrases/weka:boolean setInputFormat(QInstances;) | set input format
../3-Phrases/weka:void defaultFormat() | default format
../3-Phrases/weka:boolean isValidFormat() | is valid format
../3-Phrases/weka:void applyFormat() | apply format
../3-Phrases/weka:void formatChanged() | format changed
../3-Phrases/weka:CONS SimpleDateFormatEditor() | simple date format editor
../3-Phrases/weka:void newDataFormat(QDataSetEvent;) | new data format
../3-Phrases/weka:JScrollPane createScrollPaneForToolBar(QJToolBar;) | create scroll pane for tool bar
../3-Phrases/weka:JPanel makeHolderPanelForToolBarBean(QString;QObject;ZQString;Z) | make holder panel for tool bar bean
../3-Phrases/weka:void installWindowListenerForSavingUserBeans() | install window listener for saving user beans
../3-Phrases/weka:void setFileFormat(QTag;) | set file format
../3-Phrases/weka:Tag getFileFormat() | get file format
../3-Phrases/weka:Tag validateFileFormat(QTag;) | validate file format
../3-Phrases/weka:void newDataFormat(QDataSetEvent;) | new data format
../3-Phrases/weka:void setUpFileFormatComboBox() | set up file format combo box
../3-Phrases/weka:Instances getConnectedFormat() | get connected format
../3-Phrases/weka:void notifyDataFormatListeners() | notify data format listeners
../3-Phrases/weka:void addDataFormatListener(QDataFormatListener;) | add data format listener
../3-Phrases/weka:void removeDataFormatListener(QDataFormatListener;) | remove data format listener
../3-Phrases/weka:void setRelationNameForFilename(Z) | set relation name for filename
../3-Phrases/weka:boolean getRelationNameForFilename() | get relation name for filename
../3-Phrases/weka:void newDataFormat(QDataSetEvent;) | new data format
../3-Phrases/weka:Instances getConnectedFormat() | get connected format
../3-Phrases/weka:void notifyDataFormatListeners() | notify data format listeners
../3-Phrases/weka:void addDataFormatListener(QDataFormatListener;) | add data format listener
../3-Phrases/weka:void removeDataFormatListener(QDataFormatListener;) | remove data format listener
../3-Phrases/weka:boolean checkForSource(QBeanInstance;QVector;) | check for source
../3-Phrases/weka:boolean checkForTarget(QBeanInstance;QVector;) | check for target
../3-Phrases/weka:Vector getIDsForBeanInstances(QVector;) | get ids for bean instances
../3-Phrases/weka:Vector getBeanInstancesForIDs(QVector;) | get bean instances for ids
../3-Phrases/weka:boolean checkForAllFailedHosts() | check for all failed hosts
../3-Phrases/weka:void configureForClassAttribute() | configure for class attribute
../3-Phrases/weka:NumberFormat getNumberFormat() | get number format
../3-Phrases/weka:void setOutputFormatFromDialog() | set output format from dialog
../3-Phrases/weka:CONS OutputFormatDialog(QFrame;) | output format dialog
../3-Phrases/weka:void setFormat() | set format
../3-Phrases/weka:String getOutputFormat() | get output format
../3-Phrases/weka:boolean getClassifierStorePredictionsForVis() | get classifier store predictions for vis
../3-Phrases/weka:boolean getClustererStoreClustersForVis() | get clusterer store clusters for vis
../3-Phrases/weka:CONS BIFFormatException(QString;) | bif format exception
../3-Phrases/weka:void inputFormat(QInstances;) | input format
../3-Phrases/weka:boolean inputFormat(QInstances;) | input format
../3-Phrases/weka:Instances outputFormat() | output format
../3-Phrases/weka:void inputFormat(QInstances;) | input format
../3-Phrases/weka:Instances outputFormat() | output format
../3-Phrases/weka:void inputFormat(QInstances;) | input format
../3-Phrases/weka:Instances outputFormat() | output format
../3-Phrases/weka:void inputFormat(QInstances;) | input format
../3-Phrases/weka:double confidenceForRule(QAprioriItemSet;QAprioriItemSet;) | confidence for rule
../3-Phrases/weka:double liftForRule(QAprioriItemSet;QAprioriItemSet;I) | lift for rule
../3-Phrases/weka:double leverageForRule(QAprioriItemSet;QAprioriItemSet;II) | leverage for rule
../3-Phrases/weka:double convictionForRule(QAprioriItemSet;QAprioriItemSet;II) | conviction for rule
../3-Phrases/weka:FastVector[] generateRulesBruteForce(DIQFastVector;IID) | generate rules brute force
../3-Phrases/weka:void findRulesBruteForce() | find rules brute force
../3-Phrases/weka:Associator forName(QString;[QString;) | for name
../3-Phrases/weka:Instances setOutputFormatOriginal() | set output format original
../3-Phrases/weka:Instances setOutputFormat() | set output format
../3-Phrases/weka:CONS LinearForwardSelection() | linear forward selection
../3-Phrases/weka:String forwardSelectionMethodTipText() | forward selection method tip text
../3-Phrases/weka:void setForwardSelectionMethod(QSelectedTag;) | set forward selection method
../3-Phrases/weka:SelectedTag getForwardSelectionMethod() | get forward selection method
../3-Phrases/weka:ASEvaluation forName(QString;[QString;) | for name
../3-Phrases/weka:CONS SubsetSizeForwardSelection() | subset size forward selection
../3-Phrases/weka:String conservativeForwardSelectionTipText() | conservative forward selection tip text
../3-Phrases/weka:void setConservativeForwardSelection(Z) | set conservative forward selection
../3-Phrases/weka:boolean getConservativeForwardSelection() | get conservative forward selection
../3-Phrases/weka:Instances setOutputFormat() | set output format
../3-Phrases/weka:BitSet forwardSearch(IQBitSet;[IIZIIQInstances;QSubsetEvaluator;Z) | forward search
../3-Phrases/weka:BitSet floatingForwardSearch(IQBitSet;[IIZIQInstances;QSubsetEvaluator;Z) | floating forward search
../3-Phrases/weka:ASSearch forName(QString;[QString;) | for name
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:Classifier forName(QString;[QString;) | for name
../3-Phrases/weka:void readOldFormat(QReader;) | read old format
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:void updateStatsForClassifier([DQInstance;) | update stats for classifier
../3-Phrases/weka:void updateStatsForPredictor(DQInstance;) | update stats for predictor
../3-Phrases/weka:String format_dataObject(QDataObject;) | format data object
../3-Phrases/weka:Database databaseForName(QString;QInstances;) | database for name
../3-Phrases/weka:DataObject dataObjectForName(QString;QInstance;QString;QDatabase;) | data object for name
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:Clusterer forName(QString;[QString;) | for name
../3-Phrases/weka:Database databaseForName(QString;QInstances;) | database for name
../3-Phrases/weka:DataObject dataObjectForName(QString;QInstance;QString;QDatabase;) | data object for name
../3-Phrases/weka:double[] logDensityPerClusterForInstance(QInstance;) | log density per cluster for instance
../3-Phrases/weka:double logDensityForInstance(QInstance;) | log density for instance
../3-Phrases/weka:double[] logJointDensitiesForInstance(QInstance;) | log joint densities for instance
../3-Phrases/weka:double[] cuScoresForChildren(QInstance;) | cu scores for children
../3-Phrases/weka:double cuScoreForBestTwoMerged(QCNode;QCNode;QCNode;QInstance;) | cu score for best two merged
../3-Phrases/weka:double[] logDensityPerClusterForInstance(QInstance;) | log density per cluster for instance
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:boolean checkForNominalAttributes(QInstances;) | check for nominal attributes
../3-Phrases/weka:String maxKMeansForChildrenTipText() | max k means for children tip text
../3-Phrases/weka:void setMaxKMeansForChildren(I) | set max k means for children
../3-Phrases/weka:int getMaxKMeansForChildren() | get max k means for children
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:double[] logDensityPerClusterForInstance(QInstance;) | log density per cluster for instance
../3-Phrases/weka:double logDensityForInstance(QInstance;) | log density for instance
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:double[] logJointDensitiesForInstance(QInstance;) | log joint densities for instance
../3-Phrases/weka:String displayModelInOldFormatTipText() | display model in old format tip text
../3-Phrases/weka:void setDisplayModelInOldFormat(Z) | set display model in old format
../3-Phrases/weka:boolean getDisplayModelInOldFormat() | get display model in old format
../3-Phrases/weka:double[] logDensityPerClusterForInstance(QInstance;) | log density per cluster for instance
../3-Phrases/weka:Capabilities forInstances(QInstances;) | for instances
../3-Phrases/weka:Capabilities forInstances(QInstances;Z) | for instances
../3-Phrases/weka:void setOutputFormat(I) | set output format
../3-Phrases/weka:int getOutputFormat() | get output format
../3-Phrases/weka:void setFormat(QString;) | set format
../3-Phrases/weka:String getFormat() | get format
../3-Phrases/weka:String getDateFormat() | get date format
../3-Phrases/weka:void forceAddValue(QString;) | force add value
../3-Phrases/weka:String formatDate(D) | format date
../3-Phrases/weka:void forceDeleteAttributeAt(I) | force delete attribute at
../3-Phrases/weka:void forceInsertAttributeAt(I) | force insert attribute at
../3-Phrases/weka:boolean checkForAttributeType(I) | check for attribute type
../3-Phrases/weka:boolean checkForStringAttributes() | check for string attributes
../3-Phrases/weka:void forceDeleteAttributeAt(I) | force delete attribute at
../3-Phrases/weka:void forceInsertAttributeAt(I) | force insert attribute at
../3-Phrases/weka:void checkForRemainingOptions([QString;) | check for remaining options
../3-Phrases/weka:Object forName(QClass;QString;[QString;) | for name
../3-Phrases/weka:double stirlingFormula(D) | stirling formula
../3-Phrases/weka:Object forName(QString;QClass;QString;[QString;) | for name
../3-Phrases/weka:void setRelationalFormat(IQInstances;) | set relational format
../3-Phrases/weka:Instances getRelationalFormat(I) | get relational format
../3-Phrases/weka:void setRelationalClassFormat(QInstances;) | set relational class format
../3-Phrases/weka:Instances getRelationalClassFormat() | get relational class format
../3-Phrases/weka:TestInstances forCapabilities(QCapabilities;) | for capabilities
../3-Phrases/weka:void forceDeleteAttributeAt(I) | force delete attribute at
../3-Phrases/weka:void forceInsertAttributeAt(I) | force insert attribute at
../3-Phrases/weka:CONS NoSupportForMissingValuesException() | no support for missing values exception
../3-Phrases/weka:CONS NoSupportForMissingValuesException(QString;) | no support for missing values exception
../3-Phrases/weka:Instances defineDataFormat() | define data format
../3-Phrases/weka:void setDatasetFormat(QInstances;) | set dataset format
../3-Phrases/weka:Instances getDatasetFormat() | get dataset format
../3-Phrases/weka:String formatTipText() | format tip text
../3-Phrases/weka:String toStringFormat() | to string format
../3-Phrases/weka:Estimator forName(QString;[QString;) | for name
../3-Phrases/weka:int getClassForIRStatistics() | get class for ir statistics
../3-Phrases/weka:void setClassForIRStatistics(I) | set class for ir statistics
../3-Phrases/weka:boolean checkForAllFailedHosts() | check for all failed hosts
../3-Phrases/weka:void checkForDuplicateKeys([QObject;) | check for duplicate keys
../3-Phrases/weka:void checkForMultipleDifferences() | check for multiple differences
../3-Phrases/weka:boolean hasImmediateOutputFormat() | has immediate output format
../3-Phrases/weka:Instances determineOutputFormat(QInstances;) | determine output format
../3-Phrases/weka:boolean setInputFormat(QInstances;) | set input format
../3-Phrases/weka:boolean hasImmediateOutputFormat() | has immediate output format
../3-Phrases/weka:boolean hasImmediateOutputFormat() | has immediate output format
../3-Phrases/weka:Instances determineOutputFormat(QInstances;) | determine output format
../3-Phrases/weka:void setOutputFormat(QInstances;) | set output format
../3-Phrases/weka:Instances getInputFormat() | get input format
../3-Phrases/weka:Instances inputFormatPeek() | input format peek
../3-Phrases/weka:Instances outputFormatPeek() | output format peek
../3-Phrases/weka:void testInputFormat(QInstances;) | test input format
../3-Phrases/weka:boolean setInputFormat(QInstances;) | set input format
../3-Phrases/weka:Instances getOutputFormat() | get output format
../3-Phrases/weka:boolean isOutputFormatDefined() | is output format defined
../3-Phrases/weka:boolean hasImmediateOutputFormat() | has immediate output format
../3-Phrases/weka:Instances determineOutputFormat(QInstances;) | determine output format
../3-Phrases/weka:boolean setInputFormat(QInstances;) | set input format
../3-Phrases/weka:void defaultFormat() | default format
../3-Phrases/weka:boolean isValidFormat() | is valid format
../3-Phrases/weka:void applyFormat() | apply format
../3-Phrases/weka:void formatChanged() | format changed
../3-Phrases/weka:CONS SimpleDateFormatEditor() | simple date format editor
