../3-Phrases/3PS:boolean isStartTask() | is start task
../3-Phrases/Base_Verb:int getLengthOfTask() | get length of task
../3-Phrases/Base_Verb:Object executeTask(Object proposal, Object proposal_info) | execute task
../3-Phrases/Base_Verb:void callJavaTask(String name, VerilogReg doneReg, VerilogObject argVars) | call java task
../3-Phrases/Base_Verb:void addTask(String summary, Priority priority, int complete, long dateTime, long startDateTime, long completeDateTime, boolean select) | add task
../3-Phrases/Dguitar:int getLengthOfTask() | get length of task
../3-Phrases/DrawSWF:void showNewTask(QString;) | show new task
../3-Phrases/drjava2:void executeAsyncTask(QAsyncTask<QP;QR;>;QP;ZZ) | execute async task
../3-Phrases/drjava2:void executeAsyncTask(QAsyncTask<QP;QR;>;QP;ZZ) | execute async task
../3-Phrases/drjava2:void executeAsyncTask(QAsyncTask<QP;QR;>;QP;ZZ) | execute async task
../3-Phrases/drjava2:void executeAsyncTask(QAsyncTask<QP;QR;>;QP;ZZ) | execute async task
../3-Phrases/drjava2:void executeAsyncTask(QAsyncTask<QP;QR;>;QP;ZZ) | execute async task
../3-Phrases/drjava2:CONS AsyncTask() | async task
../3-Phrases/drjava2:CONS AsyncTask(QString;) | async task
../3-Phrases/drjava2:void executeTask(QAsyncTask<QP;QR;>;QP;ZZ) | execute task
../3-Phrases/freecol2:void RefreshCanvasSwingTask() | refresh canvas swing task
../3-Phrases/freecol2:void RefreshCanvasSwingTask(Z) | refresh canvas swing task
../3-Phrases/freecol2:void RefreshTilesSwingTask(QTile;QTile;) | refresh tiles swing task
../3-Phrases/freecol2:void UnitMoveAnimationCanvasSwingTask(QUnit;QTile;) | unit move animation canvas swing task
../3-Phrases/freecol2:void UnitMoveAnimationCanvasSwingTask(QUnit;QDirection;) | unit move animation canvas swing task
../3-Phrases/freecol2:void UnitMoveAnimationCanvasSwingTask(QUnit;QTile;Z) | unit move animation canvas swing task
../3-Phrases/freecol2:void ShowConfirmDialogSwingTask(QString;QString;QString;[QString;) | show confirm dialog swing task
../3-Phrases/freecol2:void ShowModelMessageSwingTask(QModelMessage;) | show model message swing task
../3-Phrases/freecol2:void ShowInformationMessageSwingTask(QString;[QString;) | show information message swing task
../3-Phrases/freecol2:void ShowErrorMessageSwingTask(QString;QString;) | show error message swing task
../3-Phrases/freecol2:void ShowSelectFoundingFatherSwingTask(QList<QFoundingFather;>;) | show select founding father swing task
../3-Phrases/freecol2:void ShowNegotiationDialogSwingTask(QUnit;QSettlement;QDiplomaticTrade;) | show negotiation dialog swing task
../3-Phrases/freecol2:void ShowMonarchPanelSwingTask(QMonarchAction;[QString;) | show monarch panel swing task
../3-Phrases/freemind:void TimerBlinkTask(Z) | timer blink task
../3-Phrases/gantt:Task newTask() | new task
../3-Phrases/gantt:CONS GanttPreviousStateTask(IQGanttCalendar;IZZ) | gantt previous state task
../3-Phrases/gantt:int printTask(QGraphics;QList;) | print task
../3-Phrases/gantt:Task getRootTask() | get root task
../3-Phrases/gantt:TaskNode getTaskNodeForTask(QTask;) | get task node for task
../3-Phrases/gantt:void writeTask(QWriter;QDefaultMutableTreeNode;) | write task
../3-Phrases/gantt:Task getTask() | get task
../3-Phrases/gantt:void setEditingTask(QTask;) | set editing task
../3-Phrases/gantt:GanttTask getSelectedTask() | get selected task
../3-Phrases/gantt:ArrayList getAllChildTask(QTask;) | get all child task
../3-Phrases/gantt:ArrayList getAllChildTask(QDefaultMutableTreeNode;) | get all child task
../3-Phrases/gantt:void selectTask(QTask;Z) | select task
../3-Phrases/gantt:void HiddenTask(QDefaultMutableTreeNode;QDefaultMutableTreeNode;I) | hidden task
../3-Phrases/gantt:Task getRootTask() | get root task
../3-Phrases/gantt:Task newTask() | new task
../3-Phrases/gantt:void propertiesTask() | properties task
../3-Phrases/gantt:void setCustomColumnValueToAllNestedTask(QTaskContainmentHierarchyFacade;QTask;QString;QObject;) | set custom column value to all nested task
../3-Phrases/gantt:void removeCustomColumnToAllNestedTask(QTaskContainmentHierarchyFacade;QTask;QString;) | remove custom column to all nested task
../3-Phrases/gantt:void renameCustomColumnForAllNestedTask(QTaskContainmentHierarchyFacade;QTask;QString;QString;) | rename custom column for all nested task
../3-Phrases/gantt:void editNewTask(QTask;) | edit new task
../3-Phrases/gantt:Task newTask() | new task
../3-Phrases/gantt:GanttTask getPredecessorTask() | get predecessor task
../3-Phrases/gantt:void setPredecessorTask(QTask;) | set predecessor task
../3-Phrases/gantt:void setPredecessorTask(I) | set predecessor task
../3-Phrases/gantt:Task getSuccessorTask() | get successor task
../3-Phrases/gantt:void setSuccessorTask(QTask;) | set successor task
../3-Phrases/gantt:void setSuccessorTask(I) | set successor task
../3-Phrases/gantt:CONS GanttTask(QString;QGanttCalendar;JQTaskManager;I) | gantt task
../3-Phrases/gantt:CONS GanttTask(QGanttTask;) | gantt task
../3-Phrases/gantt:void drawPreviousStateTask(QGanttPreviousStateTask;I) | draw previous state task
../3-Phrases/gantt:List getListForTask(QList;QTask;) | get list for task
../3-Phrases/gantt:Task getTask() | get task
../3-Phrases/gantt:String serializeTask(QTask;I) | serialize task
../3-Phrases/gantt:void beginTask(QString;I) | begin task
../3-Phrases/gantt:void subTask(QString;) | sub task
../3-Phrases/gantt:void changeNameOfTask() | change name of task
../3-Phrases/gantt:Task[] getReturnTask() | get return task
../3-Phrases/gantt:void setSelectedTask() | set selected task
../3-Phrases/gantt:boolean isProjectTask() | is project task
../3-Phrases/gantt:boolean canBeProjectTask(QTask;QTaskContainmentHierarchyFacade;) | can be project task
../3-Phrases/gantt:boolean isProjectTaskOrContainsProjectTask(QTask;) | is project task or contains project task
../3-Phrases/gantt:Task getTask() | get task
../3-Phrases/gantt:void writeTask(QTransformerHandler;QGanttTask;QCustomColumnsStorage;) | write task
../3-Phrases/gantt:void loadTask(QAttributes;) | load task
../3-Phrases/gantt:void writePreviousTask(QAttributes;) | write previous task
../3-Phrases/gantt:Task getTask() | get task
../3-Phrases/gantt:Task getTask() | get task
../3-Phrases/gantt:Task getTask() | get task
../3-Phrases/gantt:void setProjectTask(Z) | set project task
../3-Phrases/gantt:void addTask(QTask;) | add task
../3-Phrases/gantt:void removeTask(QTask;) | remove task
../3-Phrases/gantt:boolean isSupertask() | is super task
../3-Phrases/gantt:Task getSupertask() | get super task
../3-Phrases/gantt:void setProjectTask(Z) | set project task
../3-Phrases/gantt:boolean isSupertask() | is super task
../3-Phrases/gantt:boolean isProjectTask() | is project task
../3-Phrases/gantt:void setProjectTask(Z) | set project task
../3-Phrases/gantt:Task getTask() | get task
../3-Phrases/gantt:Task getRootTask() | get root task
../3-Phrases/gantt:GanttTask getTask(I) | get task
../3-Phrases/gantt:void registerTask(QTask;) | register task
../3-Phrases/gantt:GanttTask createTask() | create task
../3-Phrases/gantt:GanttTask createTask(I) | create task
../3-Phrases/gantt:void deleteTask(QTask;) | delete task
../3-Phrases/gantt:void processNewTask(QTask;) | process new task
../3-Phrases/gantt:Task getTask() | get task
../3-Phrases/gantt:Task getRootTask() | get root task
../3-Phrases/gantt:Task getRootTask() | get root task
../3-Phrases/gantt:Task getSupertask() | get super task
../3-Phrases/gantt:boolean isProjectTask() | is project task
../3-Phrases/gantt:void addTask(QTask;) | add task
../3-Phrases/gantt:Task getTask(I) | get task
../3-Phrases/gantt:void removeTask(QTask;) | remove task
../3-Phrases/gantt:GanttTask getTask(I) | get task
../3-Phrases/gantt:Task getRootTask() | get root task
../3-Phrases/gantt:void deleteTask(QTask;) | delete task
../3-Phrases/gantt:GanttTask createTask() | create task
../3-Phrases/gantt:GanttTask createTask(I) | create task
../3-Phrases/gantt:void registerTask(QTask;) | register task
../3-Phrases/gantt:void setTask(QTask;) | set task
../3-Phrases/gantt:Task getRootTask() | get root task
../3-Phrases/gantt:Task getTask() | get task
../3-Phrases/gantt:Task getTask() | get task
../3-Phrases/gantt:Task getTask() | get task
../3-Phrases/gantt:void shiftTask(QTask;QTaskLength;) | shift task
../3-Phrases/gantt:void processTask([QTask;QTask;QArrayList;) | process task
../3-Phrases/gantt:void markTask(QTask;) | mark task
../3-Phrases/gantt:Task getTask() | get task
../3-Phrases/gantt:Task getTask() | get task
../3-Phrases/gantt:Task getTask() | get task
../3-Phrases/gantt:Task getTask() | get task
../3-Phrases/gantt:Task getTask() | get task
../3-Phrases/gantt:void testLoopingDependencyTargetedAtSupertask() | test looping dependency targeted at super task
../3-Phrases/gantt:void testDependencyTargetedToNestedTask() | test dependency targeted to nested task
../3-Phrases/gantt:void testEventIsSentOnCreatingNewTask() | test event is sent on creating new task
../3-Phrases/hsqldb:Task addTask(JQRunnable;JZ) | add task
../3-Phrases/hsqldb:Task nextTask() | next task
../3-Phrases/hsqldb:void addTask(QTask;) | add task
../3-Phrases/hsqldb:Task peekTask() | peek task
../3-Phrases/hsqldb:Task removeTask() | remove task
../3-Phrases/JRobin:void createSyncTask(I) | create sync task
../3-Phrases/SweetHome3D:void executeTask(QView;) | execute task
../3-Phrases/SweetHome3D:void cancelTask() | cancel task
../3-Phrases/vuze:AzureusCoreOperationTask getTask() | get task
../3-Phrases/vuze:void reportCurrentTask(QString;) | report current task
../3-Phrases/vuze:void reportCurrentTask(QAzureusCoreOperation;QString;) | report current task
../3-Phrases/vuze:void DhtTask(QThreadPool;) | dht task
../3-Phrases/vuze:void interruptTask() | interrupt task
../3-Phrases/vuze:void reportCurrentTask(QString;) | report current task
../3-Phrases/vuze:AzureusCoreOperationTask getTask() | get task
../3-Phrases/vuze:void reportCurrentTask(QString;) | report current task
../3-Phrases/vuze:AzureusCoreOperationTask getTask() | get task
../3-Phrases/vuze:void reportCurrentTask(QString;) | report current task
../3-Phrases/vuze:void reportCurrentTask(QAzureusCoreOperation;QString;) | report current task
../3-Phrases/vuze:void reportCurrentTask(QString;) | report current task
../3-Phrases/vuze:void reportCurrentTask(QString;) | report current task
../3-Phrases/vuze:void reportCurrentTask(QString;) | report current task
../3-Phrases/vuze:void reportCurrentTask(QString;) | report current task
../3-Phrases/vuze:void reportCurrentTask(QAzureusCoreOperation;QString;) | report current task
../3-Phrases/vuze:void reportCurrentTask(QString;) | report current task
../3-Phrases/vuze:void reportCurrentTask(QString;) | report current task
../3-Phrases/vuze:void reportCurrentTask(QString;) | report current task
../3-Phrases/vuze:void reportCurrentTask(QString;) | report current task
../3-Phrases/vuze:void reportCurrentTask(QString;) | report current task
../3-Phrases/vuze:void interruptTask() | interrupt task
../3-Phrases/vuze:void interruptTask() | interrupt task
../3-Phrases/vuze:void interruptTask() | interrupt task
../3-Phrases/vuze:void interruptTask() | interrupt task
../3-Phrases/vuze:void interruptTask() | interrupt task
../3-Phrases/vuze:void addRealTimeTask() | add real time task
../3-Phrases/vuze:void removeRealTimeTask() | remove real time task
../3-Phrases/vuze:void interruptTask() | interrupt task
../3-Phrases/vuze:CONS TimeLimitedTask(QString;IIQtask;) | time limited task
../3-Phrases/vuze:void runAsTask(QAzureusCoreOperationTask;) | run as task
../3-Phrases/vuze:void reportCurrentTask(QString;) | report current task
../3-Phrases/vuze:DelayedTask createDelayedTask(QRunnable;) | create delayed task
../3-Phrases/vuze:void interruptTask() | interrupt task
../3-Phrases/vuze:void reportCurrentTask(QString;) | report current task
../3-Phrases/vuze:void reportCurrentTask(QString;) | report current task
../3-Phrases/vuze:void reportCurrentTask(QString;) | report current task
../3-Phrases/vuze:void reportCurrentTask(QString;) | report current task
../3-Phrases/vuze:DelayedTask createDelayedTask(QRunnable;) | create delayed task
../3-Phrases/vuze:DelayedTaskImpl addDelayedTask(QString;QRunnable;) | add delayed task
../3-Phrases/vuze:void queueTask(QDelayedTaskImpl;) | queue task
../3-Phrases/vuze:void setTask(QRunnable;) | set task
../3-Phrases/vuze:void reportCurrentTask(QString;) | report current task
../3-Phrases/vuze:void DMTask([QDownloadManager;) | dm task
../3-Phrases/vuze:void DMTask([QDownloadManager;Z) | dm task
../3-Phrases/vuze:void DMTask([QDownloadManager;ZZ) | dm task
../3-Phrases/vuze:void reportCurrentTask(QAzureusCoreOperation;QString;) | report current task
../3-Phrases/vuze:void reportCurrentTask(QString;) | report current task
../3-Phrases/vuze:void nextTask() | next task
../3-Phrases/vuze:void reportCurrentTask(QString;) | report current task
../3-Phrases/vuze:void reportCurrentTask(QString;) | report current task
../3-Phrases/vuze:void reportCurrentTask(QString;) | report current task
../3-Phrases/vuze:void scheduleAutocloseTask() | schedule autoclose task
../3-Phrases/vuze:void reportCurrentTask(QString;) | report current task
../3-Phrases/weka:Object executeTask(QTask;) | execute task
../3-Phrases/weka:void startTask() | start task
../3-Phrases/weka:CONS RemoteExperimentSubTask() | remote experiment sub task
../3-Phrases/weka:Object executeTask(QTask;) | execute task
../3-Phrases/weka:void TrainingTask(IIIIQInstances;) | training task
../3-Phrases/weka:void waitingTask(I) | waiting task
../3-Phrases/weka:CONS RemoteExperimentSubTask() | remote experiment sub task
../3-Phrases/weka:Object executeTask(QTask;) | execute task
../3-Phrases/weka:Object executeTask(QTask;) | execute task
../3-Phrases/weka:void startTask() | start task
