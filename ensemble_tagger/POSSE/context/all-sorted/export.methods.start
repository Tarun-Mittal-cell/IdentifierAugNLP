../3-Phrases/Base_Verb:SVGDocument exportChartToSVG(JFreeChart chart, Integer width, Integer height) | export chart to svg
../3-Phrases/Base_Verb:void exportSingleEvent(File file, IComponentInfo component, ICalendarStore store) | export single event
../3-Phrases/Base_Verb:Variant ExportRequest() | export request
../3-Phrases/Base_Verb:void exportCsv() | export csv
../3-Phrases/Base_Verb:void exportJobDescription() | export job description
../3-Phrases/Base_Verb:void exportZone(SimpleViewBuilder builder, int start, int end) | export zone
../3-Phrases/DrawSWF:void exportSymbols([QString;[QSymbol;) | export symbols
../3-Phrases/drjava2:void exportOldProject(QFile;QHashMap<QOpenDefinitionsDocument;QDocumentInfoGetter;>;) | export old project
../3-Phrases/freecol2:void exportDone(QJComponent;QTransferable;I) | export done
../3-Phrases/freecol2:void exportDone(QJComponent;QTransferable;I) | export done
../3-Phrases/freecol2:void exportAsDrag(QJComponent;QInputEvent;I) | export as drag
../3-Phrases/freecol2:CONS ExportData() | export data
../3-Phrases/freecol2:CONS ExportData(QGoodsType;) | export data
../3-Phrases/freecol2:CONS ExportData(QGoodsType;ZIII) | export data
../3-Phrases/freecol2:CONS ExportData(QGoodsType;ZI) | export data
../3-Phrases/freecol2:CONS ExportData(QGoodsType;QExportData;) | export data
../3-Phrases/freecol2:void exportGoods() | export goods
../3-Phrases/freemind:CONS ExportToImage() | export to image
../3-Phrases/freemind:boolean exportToImage(QBufferedImage;QString;QString;) | export to image
../3-Phrases/freemind:CONS ExportToOoWriter() | export to oo writer
../3-Phrases/freemind:void exportToOoWriter(QFile;) | export to oo writer
../3-Phrases/freemind:CONS ExportWithXSLT() | export with xslt
../3-Phrases/freemind:CONS ExportDialog(QFile;) | export dialog
../3-Phrases/freemind:CONS ExportListener(QExportDialog;) | export listener
../3-Phrases/freemind:CONS ExportListener(QExportDialog;Z) | export listener
../3-Phrases/freemind:void ExportToHTMLAction(QMindMapController;) | export to html action
../3-Phrases/freemind:void ExportBranchToHTMLAction(QMindMapController;) | export branch to html action
../3-Phrases/freemind:void ExportBranchAction() | export branch action
../3-Phrases/gantt:void ExportFileInfo(QFile;IQGanttExportSettings;) | export file info
../3-Phrases/gantt:CONS ExportFileWizardImpl(QUIFacade;QIGanttProject;QGanttOptions;) | export file wizard impl
../3-Phrases/gantt:CONS ExportFileWizardImpl(QUIFacade;QIGanttProject;QChart;QChart;QChart;QGanttOptions;) | export file wizard impl
../3-Phrases/gantt:CONS ExportException(QString;QThrowable;) | export exception
../3-Phrases/gantt:CONS ExportException(QString;) | export exception
../3-Phrases/gantt:CONS ExportFileAction(QUIFacade;QIGanttProject;QGanttOptions;) | export file action
../3-Phrases/gantt:CONS ExportSettingsPanel(QGanttProject;) | export settings panel
../3-Phrases/iReport:void exportReport() | export report
../3-Phrases/iReport:void exportReportToWriter() | export report to writer
../3-Phrases/iReport:void exportPage(QJRPrintPage;) | export page
../3-Phrases/iReport:void exportQueryButtonActionPerformed(Qjava.awt.event.ActionEvent;) | export query button action performed
../3-Phrases/iReport:String exportString(QJComponent;) | export string
../3-Phrases/iReport:String exportString(QJComponent;) | export string
../3-Phrases/iReport:void exportDone(QJComponent;QTransferable;I) | export done
../3-Phrases/iReport:CONS ExportPreferencesDialog(Qjava.awt.Frame;Z) | export preferences dialog
../3-Phrases/Jabref:void exportPreferences(QString;) | export preferences
../3-Phrases/Jabref:void ExportAction(QJabRefFrame;Z) | export action
../3-Phrases/Jabref:void exportOpenDocumentSpreadsheet(QFile;QBibtexDatabase;QSet<QString;>;) | export open document spreadsheet
../3-Phrases/Jabref:void exportOpenDocumentSpreadsheetXML(QFile;QBibtexDatabase;QSet<QString;>;) | export open document spreadsheet xml
../3-Phrases/Jabref:CONS ExportCustomizationDialog(QJabRefFrame;) | export customization dialog
../3-Phrases/Jabref:CONS ExportToClipboardAction(QJabRefFrame;QBibtexDatabase;) | export to clipboard action
../3-Phrases/Jabref:CONS ExportFileFilter(QIExportFormat;QString;) | export file filter
../3-Phrases/Jabref:void exportOpenOfficeCalc(QFile;QBibtexDatabase;QSet<QString;>;) | export open office calc
../3-Phrases/Jabref:void exportOpenOfficeCalcXML(QFile;QBibtexDatabase;QSet<QString;>;) | export open office calc xml
../3-Phrases/Jabref:CONS ExportFormat(QString;QString;QString;QString;QString;) | export format
../3-Phrases/Jabref:CONS ExportFormat() | export format
../3-Phrases/Jabref:void exportAsDrag(QJComponent;QInputEvent;I) | export as drag
../3-Phrases/Jabref:void exportDone(QJComponent;QTransferable;I) | export done
../3-Phrases/Jabref:void exportToClipboard(QJComponent;QClipboard;I) | export to clipboard
../3-Phrases/Jabref:void ExportFormatTemplateExtension(QPlugin;QExtension;) | export format template extension
../3-Phrases/Jabref:void ExportFormatExtension(QPlugin;QExtension;) | export format extension
../3-Phrases/Jabref:void ExportFormatProviderExtension(QPlugin;QExtension;) | export format provider extension
../3-Phrases/Jabref:void exportDatabase(QBibtexDatabase;QMetaData;QSet<QString;>;QString;QDBTYPE;) | export database
../3-Phrases/Jabref:void exportDatabase(QBibtexDatabase;QMetaData;QSet<QString;>;QDBStrings;) | export database
../3-Phrases/Jabref:void exportDatabase_worker(QDBTYPE;QBibtexDatabase;QMetaData;QSet<QString;>;QObject;) | export database worker
../3-Phrases/jajuk:CONS ExportFileFilter(QString;) | export file filter
../3-Phrases/javaHMO:void exportDone(QJComponent;QTransferable;I) | export done
../3-Phrases/javaHMO:void exportDone(QJComponent;QTransferable;I) | export done
../3-Phrases/javaHMO:void exportDone(QJComponent;QTransferable;I) | export done
../3-Phrases/jbidwatcher:boolean exportTab(QString;QString;) | export tab
../3-Phrases/JHotDraw-7.0.8:CONS ExportAction(QApplication;) | export action
../3-Phrases/JHotDraw-7.0.8:void exportToFile(QExportableProject;QFile;Qjavax.swing.filechooser.FileFilter;QComponent;) | export to file
../3-Phrases/JRobin:void exportXml(QOutputStream;) | export xml
../3-Phrases/JRobin:void exportXml(QString;) | export xml
../3-Phrases/JRobin:String exportXml() | export xml
../3-Phrases/JRobin:void exportXml(QOutputStream;) | export xml
../3-Phrases/JRobin:void exportXml(QString;) | export xml
../3-Phrases/JRobin:String exportXml() | export xml
../3-Phrases/JRobin:void exportXml(QOutputStream;) | export xml
../3-Phrases/JRobin:String exportXml() | export xml
../3-Phrases/JRobin:void exportXml(QString;) | export xml
../3-Phrases/JRobin:void exportXmlTemplate(QOutputStream;) | export xml template
../3-Phrases/JRobin:String exportXmlTemplate() | export xml template
../3-Phrases/JRobin:void exportXmlTemplate(QString;) | export xml template
../3-Phrases/JRobin:void exportXmlTemplate(QXmlWriter;) | export xml template
../3-Phrases/JRobin:void exportXml(QXmlWriter;) | export xml
../3-Phrases/JRobin:void exportXmlTemplate(QXmlWriter;) | export xml template
../3-Phrases/JRobin:void exportXmlTemplate(QOutputStream;) | export xml template
../3-Phrases/JRobin:String exportXmlTemplate() | export xml template
../3-Phrases/JRobin:void exportXmlTemplate(QString;) | export xml template
../3-Phrases/JRobin:void exportXml(QXmlWriter;) | export xml
../3-Phrases/JRobin:void exportXmlTemplate(QXmlWriter;QString;) | export xml template
../3-Phrases/JRobin:void exportXml(QXmlWriter;) | export xml
../3-Phrases/JRobin:void exportXmlTemplate(QXmlWriter;) | export xml template
../3-Phrases/JRobin:void exportXmlTemplate(QXmlWriter;) | export xml template
../3-Phrases/JRobin:void exportXmlTemplate(QXmlWriter;QString;) | export xml template
../3-Phrases/JRobin:void exportXmlTemplate(QXmlWriter;) | export xml template
../3-Phrases/JRobin:void exportXmlTemplate(QXmlWriter;) | export xml template
../3-Phrases/JRobin:void exportXmlTemplate(QXmlWriter;) | export xml template
../3-Phrases/JRobin:void exportXmlTemplate(QXmlWriter;) | export xml template
../3-Phrases/JRobin:void exportXmlTemplate(QXmlWriter;QString;) | export xml template
../3-Phrases/JRobin:void exportXmlTemplate(QOutputStream;) | export xml template
../3-Phrases/JRobin:CONS ExportData() | export data
../3-Phrases/JRobin:CONS ExportData([J[QSource;QHashMap;) | export data
../3-Phrases/JRobin:CONS ExportData(QString;) | export data
../3-Phrases/JRobin:CONS ExportData(QString;Z) | export data
../3-Phrases/JRobin:CONS ExportData(QString;QString;) | export data
../3-Phrases/JRobin:CONS ExportData(QFile;) | export data
../3-Phrases/JRobin:CONS ExportData(QFile;Z) | export data
../3-Phrases/JRobin:CONS ExportData(QFile;QString;) | export data
../3-Phrases/JRobin:void exportXml(QOutputStream;) | export xml
../3-Phrases/JRobin:void exportXml(QString;) | export xml
../3-Phrases/JRobin:String exportXml() | export xml
../3-Phrases/JRobin:void exportXmlTemplate(QXmlWriter;QString;) | export xml template
../3-Phrases/JRobin:void exportXmlTemplate(QXmlWriter;QString;) | export xml template
../3-Phrases/JRobin:void exportXmlTemplate(QXmlWriter;QString;) | export xml template
../3-Phrases/prefuse:CONS ExportDisplayAction(QDisplay;) | export display action
../3-Phrases/rhino:IdFunctionObject exportAsJSClass(IQScriptable;Z) | export as js class
../3-Phrases/rhino:void exportAsScopeProperty() | export as scope property
../3-Phrases/rhino-fieldSample:void exportAsScopeProperty() | export as scope property
../3-Phrases/rhino-fieldSample:void exportAsScopeProperty() | export as scope property
../3-Phrases/SweetHome3D:void exportNode(QNode;ZZ) | export node
../3-Phrases/SweetHome3D:void exportNode(QNode;QNode;ZZ) | export node
../3-Phrases/SweetHome3D:void exportNodeGeometry(QGeometry;QTransform3D;QString;Z) | export node geometry
../3-Phrases/SweetHome3D:void exportVertex(QTransform3D;QPoint3f;I[F) | export vertex
../3-Phrases/SweetHome3D:void exportNormal(QTransform3D;QVector3f;I[F) | export normal
../3-Phrases/SweetHome3D:void exportTextureCoordinates(QTexCoord2f;I[F) | export texture coordinates
../3-Phrases/SweetHome3D:void exportIndexedTriangle(QIndexedGeometryArray;III[II) | export indexed triangle
../3-Phrases/SweetHome3D:void exportTriangle(QGeometryArray;III[II) | export triangle
../3-Phrases/SweetHome3D:void exportAppearance(QAppearance;QString;ZZ) | export appearance
../3-Phrases/SweetHome3D:void exportDone(QJComponent;QTransferable;I) | export done
../3-Phrases/SweetHome3D:void exportAsDrag(QJComponent;QInputEvent;I) | export as drag
../3-Phrases/SweetHome3D:void exportDone(QJComponent;QTransferable;I) | export done
../3-Phrases/SweetHome3D:void exportToSVG(QOutputStream;) | export to svg
../3-Phrases/SweetHome3D:void exportToSVG(QOutputStream;QPlanComponent;) | export to svg
../3-Phrases/SweetHome3D:void exportToSVG(QString;) | export to svg
../3-Phrases/SweetHome3D:void exportToOBJ(QString;) | export to obj
../3-Phrases/SweetHome3D:void exportToSVG() | export to svg
../3-Phrases/SweetHome3D:void exportToOBJ() | export to obj
../3-Phrases/SweetHome3D:void exportToSVG(QString;) | export to svg
../3-Phrases/SweetHome3D:void exportToOBJ(QString;) | export to obj
../3-Phrases/vuze:void exportToVuzeFile(QFile;) | export to vu ze file
../3-Phrases/vuze:void exportCustomization(QCustomizationImpl;QFile;) | export customization
../3-Phrases/vuze:void exportToVuzeFile(QFile;) | export to vu ze file
../3-Phrases/vuze:void exportState(QDataOutputStream;I) | export state
../3-Phrases/vuze:void exportState(QDataOutputStream;I) | export state
../3-Phrases/vuze:void exportState(QDataOutputStream;I) | export state
../3-Phrases/vuze:void exportContact(QDataOutputStream;) | export contact
../3-Phrases/vuze:void exportState(QDataOutputStream;I) | export state
../3-Phrases/vuze:void exportContact(QDataOutputStream;) | export contact
../3-Phrases/vuze:void exportContact(QDHTTransportContact;QDataOutputStream;) | export contact
../3-Phrases/vuze:void exportContact(QDataOutputStream;) | export contact
../3-Phrases/vuze:void exportContact(QDHTTransportContact;QDataOutputStream;) | export contact
../3-Phrases/vuze:void exportContact(QDataOutputStream;) | export contact
../3-Phrases/vuze:Map exportToBencodedMap() | export to bencoded map
../3-Phrases/vuze:String exportToJSONString() | export to json string
../3-Phrases/vuze:void exportToVuzeFile(QFile;) | export to vu ze file
../3-Phrases/vuze:void exportToBencodedMap(QMap;) | export to bencoded map
../3-Phrases/vuze:void exportToJSONObject(QJSONObject;) | export to json object
../3-Phrases/vuze:void exportJSONMappings(QJSONObject;QString;QList;Z) | export json mappings
../3-Phrases/vuze:void exportBEncodedMappings(QMap;QString;QList;) | export b encoded mappings
../3-Phrases/vuze:String exportToJSONString() | export to json string
../3-Phrases/vuze:void exportToVuzeFile(QFile;) | export to vu ze file
../3-Phrases/vuze:Map exportToBencodedMap() | export to bencoded map
../3-Phrases/vuze:void exportToBencodedMap(QMap;) | export to bencoded map
../3-Phrases/vuze:void exportToJSONObject(QJSONObject;) | export to json object
../3-Phrases/vuze:Map exportToBencodedMap() | export to bencoded map
../3-Phrases/vuze:void exportToJSONObject(QJSONObject;) | export to json object
../3-Phrases/vuze:Map exportToBencodedMap() | export to bencoded map
../3-Phrases/vuze:void exportToJSONObject(QJSONObject;) | export to json object
../3-Phrases/vuze:Map exportToBencodedMap() | export to bencoded map
../3-Phrases/vuze:String exportKeys() | export keys
../3-Phrases/vuze:String exportKeys() | export keys
../3-Phrases/vuze:byte[] exportToBytes() | export to bytes
../3-Phrases/vuze:byte[] exportToBytes() | export to bytes
../3-Phrases/vuze:void exportContacts(QDHT;) | export contacts
../3-Phrases/vuze:byte[] exportShortIDs(QList;) | export short ids
../3-Phrases/vuze:byte[][] exportFullIDs(QList;) | export full ids
../3-Phrases/vuze:void exportString(QMap;QString;QString;) | export string
../3-Phrases/vuze:void exportJSONString(QMap;QString;QString;) | export json string
../3-Phrases/vuze:void exportBoolean(QMap;QString;Z) | export boolean
../3-Phrases/vuze:void exportJSONBoolean(QMap;QString;Z) | export json boolean
../3-Phrases/vuze:void exportURL(QMap;QString;QString;) | export url
../3-Phrases/vuze:void exportJSONURL(QMap;QString;QString;) | export json url
../3-Phrases/vuze:void exportStringArray(QMap;QString;[QString;) | export string array
../3-Phrases/vuze:void exportJSONStringArray(QMap;QString;[QString;) | export json string array
../3-Phrases/vuze:List exportGroup(QTOTorrentAnnounceURLGroup;) | export group
../3-Phrases/vuze:Map exportTrackerCache() | export tracker cache
../3-Phrases/vuze:Map exportAnnounceToMap(QString;QHashMap;QTRTrackerServerPeerImpl;ZIJJZBBQDHTNetworkPosition;) | export announce to map
../3-Phrases/vuze:void exportPeer(QLinkedList;QTRTrackerServerPeerImpl;ZBBQDHTNetworkPosition;) | export peer
../3-Phrases/vuze:Map exportScrapeToMap(QString;QString;Z) | export scrape to map
../3-Phrases/vuze:CONS ExportTorrentWizardInputPanel(QWizard;QIWizardPanel;) | export torrent wizard input panel
../3-Phrases/vuze:CONS ExportTorrentWizardOutputPanel(QWizard;QIWizardPanel;) | export torrent wizard output panel
../3-Phrases/vuze:CONS ExportTorrentWizard(QAzureusCore;QDisplay;) | export torrent wizard
../3-Phrases/vuze:CONS ExportTorrentWizard(QAzureusCore;QDisplay;QDownloadManager;) | export torrent wizard
../3-Phrases/vuze:CONS ExportTorrentWizardFinishPanel(QExportTorrentWizard;QIWizardPanel;) | export torrent wizard finish panel
