../3-Phrases/Base_Verb:TabItemLoadHandler getTabItemLoadHandlerNewInstance() | get tab item load handler new instance
../3-Phrases/Base_Verb:static ACConnector loadMenu(File file, String packageName) | acconnector load menu
../3-Phrases/Base_Verb:void test_LoadAggregation_0() | test load aggregation  0
../3-Phrases/Base_Verb:static BufferedImage loadBufferedImage(String path, int imageType) | buffered image load buffered image
../3-Phrases/Base_Verb:static Document loadDocument(String docName) | document load document
../3-Phrases/Base_Verb:static void loadFavorites() | void load favorites
../3-Phrases/Base_Verb:static String loadString(String ID, String b) | string load string
../3-Phrases/Base_Verb:static Image loadImage(byte bytes) | image load image
../3-Phrases/Base_Verb:void setLoadCompleteScript(String loadCompleteScript) | set load complete script
../3-Phrases/Base_Verb:static Properties loadProperties(String name) | properties load properties
../3-Phrases/Base_Verb:static void loadLibrary(String lib_name) | void load library
../3-Phrases/Dguitar:void menuOptionsConfirmLoadActionPerformed(Qjava.awt.event.ActionEvent;) | menu options confirm load action performed
../3-Phrases/Dguitar:void finishLoadAndDisplay() | finish load and display
../3-Phrases/drjava2:void configureAndLoadDrJavaRoot([QString;) | configure and load dr java root
../3-Phrases/drjava2:void testSaveClearAndLoadHistory() | test save clear and load history
../3-Phrases/drjava2:void testLoadHistoryWithAndWithoutSemicolons() | test load history with and without semicolons
../3-Phrases/drjava2:void safeLoadHistory(QFileSelector;) | safe load history
../3-Phrases/drjava2:void testSaveAndLoadConstructors() | test save and load constructors
../3-Phrases/freecol2:File showLoadDialog(QFile;) | show load dialog
../3-Phrases/freecol2:File showLoadDialog(QFile;[QFileFilter;) | show load dialog
../3-Phrases/freecol2:FreeColDialog createLoadDialog(QFile;[QFileFilter;) | create load dialog
../3-Phrases/gantt:void setResourceUnderloadColor(QColor;) | set resource under load color
../3-Phrases/gantt:CONS ResourceLoadGraphicArea(QGanttProject;QZoomManager;) | resource load graphic area
../3-Phrases/gantt:Color getResourceNormalLoadColor() | get resource normal load color
../3-Phrases/gantt:Color getResourceUnderLoadColor() | get resource under load color
../3-Phrases/gantt:void ResourceLoadOption(QString;QString;QString;) | resource load option
../3-Phrases/gantt:CONS ResourceLoadRenderer(QChartModelResource;QResourceChart;) | resource load renderer
../3-Phrases/gantt:List getLoadRectangles(QList;QDate;I) | get load rectangles
../3-Phrases/gantt:Color getResourceUnderloadColor() | get resource under load color
../3-Phrases/gantt:void setResourceUnderloadColor(QColor;) | set resource under load color
../3-Phrases/hibernate-3.3.1.GA:NativeSQLQueryCollectionReturn bindLoadCollection(QElement;QMappings;) | bind load collection
../3-Phrases/hibernate-3.3.1.GA:LoadContexts getLoadContexts() | get load contexts
../3-Phrases/hibernate-3.3.1.GA:LoadContexts getLoadContexts() | get load contexts
../3-Phrases/hibernate-3.3.1.GA:CollectionLoadContext getCollectionLoadContext(QResultSet;) | get collection load context
../3-Phrases/hibernate-3.3.1.GA:EntityLoadContext getEntityLoadContext(QResultSet;) | get entity load context
../3-Phrases/hibernate-3.3.1.GA:CONS EntityLoadContext(QLoadContexts;QResultSet;) | entity load context
../3-Phrases/hibernate-3.3.1.GA:CONS CollectionLoadContext(QLoadContexts;QResultSet;) | collection load context
../3-Phrases/hibernate-3.3.1.GA:LoadContexts getLoadContext() | get load context
../3-Phrases/hibernate-3.3.1.GA:LoadEventListener[] getLoadEventListeners() | get load event listeners
../3-Phrases/hibernate-3.3.1.GA:void setLoadEventListeners([QLoadEventListener;) | set load event listeners
../3-Phrases/hibernate-3.3.1.GA:PostLoadEventListener[] getPostLoadEventListeners() | get post load event listeners
../3-Phrases/hibernate-3.3.1.GA:void setPostLoadEventListeners([QPostLoadEventListener;) | set post load event listeners
../3-Phrases/hibernate-3.3.1.GA:PreLoadEventListener[] getPreLoadEventListeners() | get pre load event listeners
../3-Phrases/hibernate-3.3.1.GA:void setPreLoadEventListeners([QPreLoadEventListener;) | set pre load event listeners
../3-Phrases/hibernate-3.3.1.GA:CONS PostLoadEvent(QEventSource;) | post load event
../3-Phrases/hibernate-3.3.1.GA:CONS PreLoadEvent(QEventSource;) | pre load event
../3-Phrases/hibernate-3.3.1.GA:long getEntityLoadCount() | get entity load count
../3-Phrases/hibernate-3.3.1.GA:long getCollectionLoadCount() | get collection load count
../3-Phrases/hibernate-3.3.1.GA:long getLoadCount() | get load count
../3-Phrases/hibernate-3.3.1.GA:long getLoadCount() | get load count
../3-Phrases/hibernate-3.3.1.GA:long getEntityLoadCount() | get entity load count
../3-Phrases/hibernate-3.3.1.GA:long getCollectionLoadCount() | get collection load count
../3-Phrases/hibernate-3.3.1.GA:void scheduleBatchLoadIfNeeded(QSerializable;QSessionImplementor;) | schedule batch load if needed
../3-Phrases/iReport:boolean isLoadOnStartup() | is load on startup
../3-Phrases/iReport:void setLoadOnStartup(Z) | set load on startup
../3-Phrases/iReport:long getLoadTime() | get load time
../3-Phrases/iReport:void setLoadTime(J) | set load time
../3-Phrases/Jabref:void downLoadFile(QString;QFieldEditor;QComponent;) | down load file
../3-Phrases/javaHMO:void preLoadFonts() | pre load fonts
../3-Phrases/jbidwatcher:boolean extractAndLoadLibrary() | extract and load library
../3-Phrases/jbidwatcher:void doLoadAuctions() | do load auctions
../3-Phrases/MegaMek-0.32.0:String getMechReadoutLoadout() | get mech readout load out
../3-Phrases/MegaMek-0.32.0:void updateLoadButtons() | update load buttons
../3-Phrases/MegaMek-0.32.0:void setLoadEnabled(Z) | set load enabled
../3-Phrases/MegaMek-0.32.0:void setMoveLoadEnabled(Z) | set move load enabled
../3-Phrases/MegaMek-0.32.0:void setDeployLoadEnabled(Z) | set deploy load enabled
../3-Phrases/MegaMek-0.32.0:void setLoadEnabled(Z) | set load enabled
../3-Phrases/MegaMek-0.32.0:String getMechReadoutLoadout() | get mech readout load out
../3-Phrases/MegaMek-0.32.0:void setMoveLoadEnabled(Z) | set move load enabled
../3-Phrases/MegaMek-0.32.0:void setDeployLoadEnabled(Z) | set deploy load enabled
../3-Phrases/MegaMek-0.32.0:void updateLoadButtons() | update load buttons
../3-Phrases/MegaMek-0.32.0:void setLoadEnabled(Z) | set load enabled
../3-Phrases/MegaMek-0.32.0:void setLoadEnabled(Z) | set load enabled
../3-Phrases/MegaMek-0.32.0:void postLoadInit(QEntity;) | post load init
../3-Phrases/prefuse:void testLoadFromMySQLDatabase() | test load from my sql database
../3-Phrases/rhino:boolean testIfCanLoadRhinoClasses(QClassLoader;) | test if can load rhino classes
../3-Phrases/rhino:void addLoadConstant(D) | add load constant
../3-Phrases/rhino:void addLoadConstant(F) | add load constant
../3-Phrases/rhino:void addLoadConstant(I) | add load constant
../3-Phrases/rhino:void addLoadConstant(J) | add load constant
../3-Phrases/rhino:void addLoadConstant(QString;) | add load constant
../3-Phrases/rhino:void addLoadThis() | add load this
../3-Phrases/rhino:void dcpLoadAsNumber(I) | dcp load as number
../3-Phrases/rhino:void dcpLoadAsObject(I) | dcp load as object
../3-Phrases/rhino-sample100:void addLoadConstant(F) | add load constant
../3-Phrases/vuze:Class peerLoadClass(QString;) | peer load class
../3-Phrases/vuze:void handlePageLoadCompleted() | handle page load completed
../3-Phrases/vuze:void handlePageLoadCompleted() | handle page load completed
../3-Phrases/vuze:void handlePageLoadCompleted() | handle page load completed
../3-Phrases/vuze:void unLoadImages() | un load images
../3-Phrases/vuze:ASN1EncodableVector rLoadVector(QInputStream;) | r load vector
../3-Phrases/vuze:void validateAndLoadValues(QMap;) | validate and load values
../3-Phrases/vuze:CONS TrackerLoadTester(II) | tracker load tester
../3-Phrases/vuze:void testLoadSave() | test load save
../3-Phrases/vuze:void unLoadImages() | un load images
../3-Phrases/weka:boolean isLoadModelsPanelSelected() | is load models panel selected
../3-Phrases/weka:void createLoadModelsPanel() | create load models panel
../3-Phrases/weka:boolean isLoadModelsPanelSelected() | is load models panel selected
