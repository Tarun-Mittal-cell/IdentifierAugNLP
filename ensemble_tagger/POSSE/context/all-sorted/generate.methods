../3-Phrases/Base_Verb:void generateDaysToAdd(Connection conn, File outputDir) | generate days to add
../3-Phrases/Base_Verb:void generate() | generate
../3-Phrases/Base_Verb:Serializable generate(AccessCallback callback) | generate
../3-Phrases/Base_Verb:void generate(Node tree, ErrorTracker tracker) | generate
../3-Phrases/Base_Verb:void generate(double x, double z) | generate
../3-Phrases/Base_Verb:MKInstruction generateArity(LinkedList buffer) | generate arity
../3-Phrases/Base_Verb:String generateHTTPString() | generate http string
../3-Phrases/Base_Verb:StringBuilder generateUsage(StringBuilder buffer, List options) | generate usage
../3-Phrases/Base_Verb:String generateJavaPk(TableMetadata table) | generate java pk
../3-Phrases/Base_Verb:PlayerCharacter generateCharacter() | generate character
../3-Phrases/Base_Verb:void generateHTML(TagWriter t, String content, String defaultBackgroundColor, String defaultStyleClass, int rowNo) | generate html
../3-Phrases/Base_Verb:static String generatePrefix(String namespace) | string generate prefix
../3-Phrases/Base_Verb:static byte generateProxyClass(String name, Class interfaces) | byte generate proxy class
../3-Phrases/Base_Verb:String generateLabelString(XYDataset dataset, int series, int item) | generate label string
../3-Phrases/Base_Verb:Protein createNewProtein(SPTREntry sptrEntry, BioSource bioSource, boolean generateProteinShortlabelUsingBiosource) | create new protein
../3-Phrases/Base_Verb:static BigInteger generateX509SerialNumber() | big integer generate x 509 serial number
../3-Phrases/Base_Verb:X509Certificate generateX509Certificate(PrivateKey key, String provider, SecureRandom random) | generate x 509 certificate
../3-Phrases/Base_Verb:static Document generateStartkarten(AWettkampf<T> wk) | document generate startkarten
../3-Phrases/DrawSWF:void generateFile(QString;QLinkedList;) | generate file
../3-Phrases/drjava2:void generateJavadoc(QFileSaveSelector;) | generate javadoc
../3-Phrases/drjava2:void generateJavadoc(QFileSaveSelector;) | generate javadoc
../3-Phrases/drjava2:void generateJavadoc(QFileSaveSelector;) | generate javadoc
../3-Phrases/drjava2:void generateJavadoc(QFileSaveSelector;) | generate javadoc
../3-Phrases/drjava2:String generateBanner(QFile;) | generate banner
../3-Phrases/drjava2:List<QJavaAPIListEntry;> _generateJavaAPIList(QString;QString;QString;) | generate java api list
../3-Phrases/drjava2:List<QJavaAPIListEntry;> _generateJavaAPIList(QString;QString;QURL;) | generate java api list
../3-Phrases/drjava2:void generateJavaAPIList() | generate java api list
../3-Phrases/drjava2:File generateNewFileName(QFile;) | generate new file name
../3-Phrases/drjava2:File generateNewFileName(QFile;QString;) | generate new file name
../3-Phrases/drjava2:File generateNewFileName(QFile;QString;QString;) | generate new file name
../3-Phrases/drjava2:File generateNewFileName(QFile;QString;QString;I) | generate new file name
../3-Phrases/drjava2:String generatePathString(QTreePath;) | generate path string
../3-Phrases/drjava2:void testGeneratePathString() | test generate path string
../3-Phrases/freecol2:CombatResult generateAttackResult(QUnit;QUnit;) | generate attack result
../3-Phrases/freecol2:CombatResult generateAttackResult(QColony;QUnit;) | generate attack result
../3-Phrases/freecol2:CombatResult generateAttackResult(QUnit;QUnit;) | generate attack result
../3-Phrases/freecol2:CombatResult generateAttackResult(QColony;QUnit;) | generate attack result
../3-Phrases/freecol2:int getGeneratedUnitCount() | get generated unit count
../3-Phrases/freecol2:UnitType generateRecruitable(QString;) | generate recruit able
../3-Phrases/freecol2:void generateInitialRecruits() | generate initial recruits
../3-Phrases/freecol2:UnitType generateSkillForLocation(QMap;QTile;QNationType;) | generate skill for location
../3-Phrases/freemind:String generateHtml() | generate html
../3-Phrases/freemind:String generateUniqueID(QString;) | generate unique id
../3-Phrases/freemind:String generateUniqueLinkID(QString;) | generate unique link id
../3-Phrases/freemind:String generateUniqueID(QString;) | generate unique id
../3-Phrases/freemind:String generateUniqueLinkID(QString;) | generate unique link id
../3-Phrases/freemind:String generateID(QString;QHashMap;QString;) | generate id
../3-Phrases/freemind:void generateEncryptedContent(QMindMapLinkRegistry;) | generate encrypted content
../3-Phrases/hibernate-3.3.1.GA:Serializable getGeneratedId() | get generated id
../3-Phrases/hibernate-3.3.1.GA:EntityKey generateDelayedEntityKey() | generate delayed entity key
../3-Phrases/hibernate-3.3.1.GA:int generateHashCode() | generate hash code
../3-Phrases/hibernate-3.3.1.GA:boolean isGetGeneratedKeysEnabled() | is get generated keys enabled
../3-Phrases/hibernate-3.3.1.GA:void setGetGeneratedKeysEnabled(Z) | set get generated keys enabled
../3-Phrases/hibernate-3.3.1.GA:String[] generateDropSchemaScript(QDialect;) | generate drop schema script
../3-Phrases/hibernate-3.3.1.GA:String[] generateSchemaCreationScript(QDialect;) | generate schema creation script
../3-Phrases/hibernate-3.3.1.GA:String[] generateSchemaUpdateScript(QDialect;QDatabaseMetadata;) | generate schema update script
../3-Phrases/hibernate-3.3.1.GA:boolean jvmSupportsGetGeneratedKeys() | jvm supports get generated keys
../3-Phrases/hibernate-3.3.1.GA:String generateSQLAlias() | generate sql alias
../3-Phrases/hibernate-3.3.1.GA:String generateTemporaryTableName(QString;) | generate temporary table name
../3-Phrases/hibernate-3.3.1.GA:String generateTemporaryTableName(QString;) | generate temporary table name
../3-Phrases/hibernate-3.3.1.GA:String generateTemporaryTableName(QString;) | generate temporary table name
../3-Phrases/hibernate-3.3.1.GA:String generateTemporaryTableName(QString;) | generate temporary table name
../3-Phrases/hibernate-3.3.1.GA:String generateTemporaryTableName(QString;) | generate temporary table name
../3-Phrases/hibernate-3.3.1.GA:String generateTemporaryTableName(QString;) | generate temporary table name
../3-Phrases/hibernate-3.3.1.GA:String generateTemporaryTableName(QString;) | generate temporary table name
../3-Phrases/hibernate-3.3.1.GA:String generateTemporaryTableName(QString;) | generate temporary table name
../3-Phrases/hibernate-3.3.1.GA:String generateTemporaryTableName(QString;) | generate temporary table name
../3-Phrases/hibernate-3.3.1.GA:String generateLockString() | generate lock string
../3-Phrases/hibernate-3.3.1.GA:String generateLockString() | generate lock string
../3-Phrases/hibernate-3.3.1.GA:int generateHashCode() | generate hash code
../3-Phrases/hibernate-3.3.1.GA:int generateHashCode(QSessionFactoryImplementor;) | generate hash code
../3-Phrases/hibernate-3.3.1.GA:int generateHashCode() | generate hash code
../3-Phrases/hibernate-3.3.1.GA:Serializable saveWithGeneratedOrRequestedId(QSaveOrUpdateEvent;) | save with generated or requested id
../3-Phrases/hibernate-3.3.1.GA:Serializable saveWithGeneratedId(QObject;QString;QObject;QEventSource;Z) | save with generated id
../3-Phrases/hibernate-3.3.1.GA:Serializable saveWithGeneratedOrRequestedId(QSaveOrUpdateEvent;) | save with generated or requested id
../3-Phrases/hibernate-3.3.1.GA:String[][] generateColumnNames([QType;QSessionFactoryImplementor;) | generate column names
../3-Phrases/hibernate-3.3.1.GA:AST generateSyntheticDotNodeForNonQualifiedPropertyRef(QAST;QFromElement;) | generate synthetic dot node for non qualified property ref
../3-Phrases/hibernate-3.3.1.GA:boolean isDatabaseGeneratedTimestamp(QType;) | is database generated timestamp
../3-Phrases/hibernate-3.3.1.GA:AST generatePositionalParameter(QAST;) | generate positional parameter
../3-Phrases/hibernate-3.3.1.GA:AST generateNamedParameter(QAST;QAST;) | generate named parameter
../3-Phrases/hibernate-3.3.1.GA:AST generateVersionPropertyNode(QQueryable;) | generate version property node
../3-Phrases/hibernate-3.3.1.GA:void generate(QAST;) | generate
../3-Phrases/hibernate-3.3.1.GA:String generateIdInsertSelect(QQueryable;QString;QAST;) | generate id insert select
../3-Phrases/hibernate-3.3.1.GA:String generateIdSubselect(QQueryable;) | generate id subselect
../3-Phrases/hibernate-3.3.1.GA:String generateSuffix(II) | generate suffix
../3-Phrases/hibernate-3.3.1.GA:String[][] generateColumnNames([QType;) | generate column names
../3-Phrases/hibernate-3.3.1.GA:void generateSingleScalarColumn(QHqlSqlWalkerNode;I) | generate single scalar column
../3-Phrases/hibernate-3.3.1.GA:void generateScalarColumns(QHqlSqlWalkerNode;[QString;I) | generate scalar columns
../3-Phrases/hibernate-3.3.1.GA:Serializable generate(QSessionImplementor;QObject;) | generate
../3-Phrases/hibernate-3.3.1.GA:Serializable generate(QSessionImplementor;QObject;) | generate
../3-Phrases/hibernate-3.3.1.GA:Serializable getGeneratedIdentity(QResultSet;QType;) | get generated identity
../3-Phrases/hibernate-3.3.1.GA:InsertGeneratedIdentifierDelegate getInsertGeneratedIdentifierDelegate(QPostInsertIdentityPersister;QDialect;Z) | get insert generated identifier delegate
../3-Phrases/hibernate-3.3.1.GA:void GetGeneratedKeysDelegate(QPostInsertIdentityPersister;QDialect;) | get generated keys delegate
../3-Phrases/hibernate-3.3.1.GA:Serializable determineGeneratedIdentifier(QSessionImplementor;QObject;) | determine generated identifier
../3-Phrases/hibernate-3.3.1.GA:Serializable generate(QSessionImplementor;QObject;) | generate
../3-Phrases/hibernate-3.3.1.GA:Serializable generate(QSessionImplementor;QObject;) | generate
../3-Phrases/hibernate-3.3.1.GA:Serializable generate(QSessionImplementor;QObject;) | generate
../3-Phrases/hibernate-3.3.1.GA:InsertGeneratedIdentifierDelegate getInsertGeneratedIdentifierDelegate(QPostInsertIdentityPersister;QDialect;Z) | get insert generated identifier delegate
../3-Phrases/hibernate-3.3.1.GA:Serializable generate(QSessionImplementor;QObject;) | generate
../3-Phrases/hibernate-3.3.1.GA:InsertGeneratedIdentifierDelegate getInsertGeneratedIdentifierDelegate(QPostInsertIdentityPersister;QDialect;Z) | get insert generated identifier delegate
../3-Phrases/hibernate-3.3.1.GA:Serializable generate(QSessionImplementor;QObject;) | generate
../3-Phrases/hibernate-3.3.1.GA:Serializable generate(QSessionImplementor;QObject;) | generate
../3-Phrases/hibernate-3.3.1.GA:Serializable generate(QSessionImplementor;QObject;) | generate
../3-Phrases/hibernate-3.3.1.GA:Serializable generate(QSessionImplementor;QObject;) | generate
../3-Phrases/hibernate-3.3.1.GA:Serializable generate(QSessionImplementor;QObject;) | generate
../3-Phrases/hibernate-3.3.1.GA:Serializable generate(QSessionImplementor;QObject;) | generate
../3-Phrases/hibernate-3.3.1.GA:InsertGeneratedIdentifierDelegate getInsertGeneratedIdentifierDelegate(QPostInsertIdentityPersister;QDialect;Z) | get insert generated identifier delegate
../3-Phrases/hibernate-3.3.1.GA:Serializable generate(QSessionImplementor;QObject;) | generate
../3-Phrases/hibernate-3.3.1.GA:Serializable generate(QAccessCallback;) | generate
../3-Phrases/hibernate-3.3.1.GA:Serializable generate(QAccessCallback;) | generate
../3-Phrases/hibernate-3.3.1.GA:Serializable generate(QAccessCallback;) | generate
../3-Phrases/hibernate-3.3.1.GA:Serializable generate(QSessionImplementor;QObject;) | generate
../3-Phrases/hibernate-3.3.1.GA:Serializable generate(QSessionImplementor;QObject;) | generate
../3-Phrases/hibernate-3.3.1.GA:Serializable generate(QAccessCallback;) | generate
../3-Phrases/hibernate-3.3.1.GA:NativeSQLQuerySpecification generateQuerySpecification(QMap;) | generate query specification
../3-Phrases/hibernate-3.3.1.GA:Connection generateProxy(QConnectionManager;) | generate proxy
../3-Phrases/hibernate-3.3.1.GA:String[] generateSuffixes(I) | generate suffixes
../3-Phrases/hibernate-3.3.1.GA:String[] generateSuffixes(II) | generate suffixes
../3-Phrases/hibernate-3.3.1.GA:CONS GeneratedCollectionAliases(QMap;QCollectionPersister;QString;) | generated collection aliases
../3-Phrases/hibernate-3.3.1.GA:CONS GeneratedCollectionAliases(QCollectionPersister;QString;) | generated collection aliases
../3-Phrases/hibernate-3.3.1.GA:String generateTableAlias(IQString;QJoinable;) | generate table alias
../3-Phrases/hibernate-3.3.1.GA:String generateRootAlias(QString;) | generate root alias
../3-Phrases/hibernate-3.3.1.GA:String generateSQLAlias() | generate sql alias
../3-Phrases/hibernate-3.3.1.GA:String generateTableAlias(IQString;QJoinable;) | generate table alias
../3-Phrases/hibernate-3.3.1.GA:String generateRootAlias(QString;) | generate root alias
../3-Phrases/hibernate-3.3.1.GA:List generateCustomReturns(Z) | generate custom returns
../3-Phrases/hibernate-3.3.1.GA:String generateEntitySuffix() | generate entity suffix
../3-Phrases/hibernate-3.3.1.GA:String generateCollectionSuffix() | generate collection suffix
../3-Phrases/hibernate-3.3.1.GA:boolean isGenerated(QDialect;) | is generated
../3-Phrases/hibernate-3.3.1.GA:boolean isGenerated(QDialect;) | is generated
../3-Phrases/hibernate-3.3.1.GA:String generateDeleteString() | generate delete string
../3-Phrases/hibernate-3.3.1.GA:String generateInsertRowString() | generate insert row string
../3-Phrases/hibernate-3.3.1.GA:String generateUpdateRowString() | generate update row string
../3-Phrases/hibernate-3.3.1.GA:String generateDeleteRowString() | generate delete row string
../3-Phrases/hibernate-3.3.1.GA:String generateDeleteString() | generate delete string
../3-Phrases/hibernate-3.3.1.GA:String generateInsertRowString() | generate insert row string
../3-Phrases/hibernate-3.3.1.GA:String generateUpdateRowString() | generate update row string
../3-Phrases/hibernate-3.3.1.GA:String generateDeleteRowString() | generate delete row string
../3-Phrases/hibernate-3.3.1.GA:String generateSelectSizeString(Z) | generate select size string
../3-Phrases/hibernate-3.3.1.GA:String generateDetectRowByIndexString() | generate detect row by index string
../3-Phrases/hibernate-3.3.1.GA:String generateSelectRowByIndexString() | generate select row by index string
../3-Phrases/hibernate-3.3.1.GA:String generateDetectRowByElementString() | generate detect row by element string
../3-Phrases/hibernate-3.3.1.GA:SelectFragment generateSelectFragment(QString;QString;) | generate select fragment
../3-Phrases/hibernate-3.3.1.GA:String generateDeleteString() | generate delete string
../3-Phrases/hibernate-3.3.1.GA:String generateDeleteRowString() | generate delete row string
../3-Phrases/hibernate-3.3.1.GA:String generateUpdateRowString() | generate update row string
../3-Phrases/hibernate-3.3.1.GA:String generateInsertRowString() | generate insert row string
../3-Phrases/hibernate-3.3.1.GA:String generateFilterConditionAlias(QString;) | generate filter condition alias
../3-Phrases/hibernate-3.3.1.GA:String generateFilterConditionAlias(QString;) | generate filter condition alias
../3-Phrases/hibernate-3.3.1.GA:String generateLazySelectString() | generate lazy select string
../3-Phrases/hibernate-3.3.1.GA:String generateSelectVersionString() | generate select version string
../3-Phrases/hibernate-3.3.1.GA:String generateInsertGeneratedValuesSelectString() | generate insert generated values select string
../3-Phrases/hibernate-3.3.1.GA:String generateUpdateGeneratedValuesSelectString() | generate update generated values select string
../3-Phrases/hibernate-3.3.1.GA:String generateGeneratedValuesSelectString([QValueInclusion;) | generate generated values select string
../3-Phrases/hibernate-3.3.1.GA:String generateSnapshotSelectString() | generate snapshot select string
../3-Phrases/hibernate-3.3.1.GA:String generateVersionIncrementUpdateString() | generate version increment update string
../3-Phrases/hibernate-3.3.1.GA:LockingStrategy generateLocker(QLockMode;) | generate locker
../3-Phrases/hibernate-3.3.1.GA:String generateTableAlias(QString;I) | generate table alias
../3-Phrases/hibernate-3.3.1.GA:String generateUpdateString([ZIZ) | generate update string
../3-Phrases/hibernate-3.3.1.GA:String generateUpdateString([ZI[QObject;Z) | generate update string
../3-Phrases/hibernate-3.3.1.GA:String generateInsertString([ZI) | generate insert string
../3-Phrases/hibernate-3.3.1.GA:String generateInsertString(Z[Z) | generate insert string
../3-Phrases/hibernate-3.3.1.GA:String generateInsertString(Z[ZI) | generate insert string
../3-Phrases/hibernate-3.3.1.GA:String generateIdentityInsertString([Z) | generate identity insert string
../3-Phrases/hibernate-3.3.1.GA:String generateDeleteString(I) | generate delete string
../3-Phrases/hibernate-3.3.1.GA:boolean useGetGeneratedKeys() | use get generated keys
../3-Phrases/hibernate-3.3.1.GA:String[] generateSQLDeletStrings([QObject;) | generate sql delet strings
../3-Phrases/hibernate-3.3.1.GA:String generateFilterConditionAlias(QString;) | generate filter condition alias
../3-Phrases/hibernate-3.3.1.GA:boolean hasInsertGeneratedProperties() | has insert generated properties
../3-Phrases/hibernate-3.3.1.GA:boolean hasUpdateGeneratedProperties() | has update generated properties
../3-Phrases/hibernate-3.3.1.GA:boolean isVersionPropertyGenerated() | is version property generated
../3-Phrases/hibernate-3.3.1.GA:void processInsertGeneratedProperties(QSerializable;QObject;[QObject;QSessionImplementor;) | process insert generated properties
../3-Phrases/hibernate-3.3.1.GA:void processUpdateGeneratedProperties(QSerializable;QObject;[QObject;QSessionImplementor;) | process update generated properties
../3-Phrases/hibernate-3.3.1.GA:void processGeneratedProperties(QSerializable;QObject;[QObject;QSessionImplementor;QString;[QValueInclusion;) | process generated properties
../3-Phrases/hibernate-3.3.1.GA:boolean hasInsertGeneratedProperties() | has insert generated properties
../3-Phrases/hibernate-3.3.1.GA:boolean hasUpdateGeneratedProperties() | has update generated properties
../3-Phrases/hibernate-3.3.1.GA:boolean isVersionPropertyGenerated() | is version property generated
../3-Phrases/hibernate-3.3.1.GA:void processInsertGeneratedProperties(QSerializable;QObject;[QObject;QSessionImplementor;) | process insert generated properties
../3-Phrases/hibernate-3.3.1.GA:void processUpdateGeneratedProperties(QSerializable;QObject;[QObject;QSessionImplementor;) | process update generated properties
../3-Phrases/hibernate-3.3.1.GA:String generateSequentialSelect(QLoadable;) | generate sequential select
../3-Phrases/hibernate-3.3.1.GA:String generateSelectString(QLockMode;) | generate select string
../3-Phrases/hibernate-3.3.1.GA:String generateSubquery(QPersistentClass;QMapping;) | generate subquery
../3-Phrases/hibernate-3.3.1.GA:boolean isInsertGenerated() | is insert generated
../3-Phrases/hibernate-3.3.1.GA:boolean isUpdateGenerated() | is update generated
../3-Phrases/hibernate-3.3.1.GA:Map generateMap() | generate map
../3-Phrases/hibernate-3.3.1.GA:boolean hasInsertGeneratedValues() | has insert generated values
../3-Phrases/hibernate-3.3.1.GA:boolean hasUpdateGeneratedValues() | has update generated values
../3-Phrases/hibernate-3.3.1.GA:String generateAlias(QString;) | generate alias
../3-Phrases/hibernate-3.3.1.GA:String generateAlias(QString;I) | generate alias
../3-Phrases/hibernate-3.3.1.GA:String generateAliasRoot(QString;) | generate alias root
../3-Phrases/hibernate-3.3.1.GA:String getGetGeneratedKeysEnabled() | get get generated keys enabled
../3-Phrases/hibernate-3.3.1.GA:void setGetGeneratedKeysEnabled(QString;) | set get generated keys enabled
../3-Phrases/hibernate-3.3.1.GA:Element generateDom4jElement(QString;) | generate dom 4 j element
../3-Phrases/hsqldb:Table generateTable(I) | generate table
../3-Phrases/hsqldb:Table generateTable(I) | generate table
../3-Phrases/hsqldb:boolean supportsGetGeneratedKeys() | supports get generated keys
../3-Phrases/hsqldb:ResultSet getGeneratedKeys() | get generated keys
../3-Phrases/hsqldb:String generatePKWhere() | generate pk where
../3-Phrases/hsqldb:String generateWhere([QString;ZZZ) | generate where
../3-Phrases/Jabref:void GenerateKeyAction(QJabRefFrame;) | generate key action
../3-Phrases/Jabref:void autoGenerateKeysBeforeSaving() | auto generate keys before saving
../3-Phrases/Jabref:void generateKeySelectedEntry() | generate key selected entry
../3-Phrases/Jabref:void generateKeys(Z) | generate keys
../3-Phrases/Jabref:Map<QString;QBoolean;> generateCitationList(QMap<QString;QBoolean;>;QBibtexDatabase;) | generate citation list
../3-Phrases/Jabref:String generateCanonicalNumber(QBibtexEntry;) | generate canonical number
../3-Phrases/Jabref:String generateCanonicalNumber(QString;) | generate canonical number
../3-Phrases/Jabref:String generateCanonicalIdentifier(QBibtexEntry;) | generate canonical identifier
../3-Phrases/Jabref:String generateCanonicalURL(QString;) | generate canonical url
../3-Phrases/Jabref:String generateCanonicalURL(QBibtexEntry;) | generate canonical url
../3-Phrases/Jabref:boolean generateIdentifierList(QBibtexEntry;QMap<QString;QBoolean;>;QHashtable<QInteger;QBibtexEntry;>;) | generate identifier list
../3-Phrases/Jabref:Vector<QString;> generate(QString;QBibtexDatabase;) | generate
../3-Phrases/Jabref:BibtexDatabase getGeneratedDatabase() | get generated database
../3-Phrases/Jabref:void generate_actionPerformed(QActionEvent;) | generate action performed
../3-Phrases/Jabref:BibtexDatabase getGenerateDB() | get generate db
../3-Phrases/Jabref:CONS FromAuxDialog_generate_actionAdapter(QFromAuxDialog;) | from aux dialog generate action adapter
../3-Phrases/jajuk:ArrayList<QFile;> generatePlaylist() | generate playlist
../3-Phrases/jajuk:ArrayList<QFile;> generatePlaylist() | generate playlist
../3-Phrases/jajuk:ArrayList<QFile;> generatePlaylist() | generate playlist
../3-Phrases/jajuk:ArrayList<QFile;> generatePlaylist() | generate playlist
../3-Phrases/javaHMO:void setGenerateThumbnails(Z) | set generate thumbnails
../3-Phrases/javaHMO:boolean getGenerateThumbnails() | get generate thumbnails
../3-Phrases/javaHMO:void setGenerateThumbnails(Z) | set generate thumbnails
../3-Phrases/javaHMO:boolean getGenerateThumbnails() | get generate thumbnails
../3-Phrases/JHotDraw-7.0.8:Point2D.Double[] generateBezier([QPoint2D.Double;II[DQPoint2D.Double;QPoint2D.Double;) | generate bezier
../3-Phrases/JRobin:boolean shouldGenerate(J) | should generate
../3-Phrases/JRobin:boolean shouldGenerate(QFile;) | should generate
../3-Phrases/MegaMek-0.32.0:String generateBattleArmorPreview() | generate battle armor preview
../3-Phrases/MegaMek-0.32.0:String generateBattleArmorPreview() | generate battle armor preview
../3-Phrases/MegaMek-0.32.0:void generateDisplayName() | generate display name
../3-Phrases/MegaMek-0.32.0:void generateShortName() | generate short name
../3-Phrases/MegaMek-0.32.0:TurnVectors generateTurnOrder(QVector;QIGame;) | generate turn order
../3-Phrases/MegaMek-0.32.0:MMRandom generate(I) | generate
../3-Phrases/MegaMek-0.32.0:IBoard generateRandom(QMapSettings;) | generate random
../3-Phrases/MegaMek-0.32.0:void generateElevation(IIIIII[[II) | generate elevation
../3-Phrases/MegaMek-0.32.0:void generateMountain(QIBoard;IQCoords;II) | generate mountain
../3-Phrases/MegaMek-0.32.0:Vector generateCity(Z) | generate city
../3-Phrases/prefuse:ParseException generateParseException() | generate parse exception
../3-Phrases/rhino:boolean generate_letter_switch_r(IIIIZZ) | generate letter switch r
../3-Phrases/rhino:boolean isGenerateDebugInfo() | is generate debug info
../3-Phrases/rhino:boolean isGeneratedScript() | is generated script
../3-Phrases/rhino:boolean isGeneratedScript(QString;) | is generated script
../3-Phrases/rhino:byte[] generateCode(QString;) | generate code
../3-Phrases/rhino:int generatePushParam(QClassFileWriter;IQClass;) | generate push param
../3-Phrases/rhino:int generateWrapArg(QClassFileWriter;IQClass;) | generate wrap arg
../3-Phrases/rhino:String generateStackTrace() | generate stack trace
../3-Phrases/rhino:String makeUrlForGeneratedScript(ZQString;I) | make url for generated script
../3-Phrases/rhino:void generateActivationExit() | generate activation exit
../3-Phrases/rhino:void generateBodyCode() | generate body code
../3-Phrases/rhino:void generate_body(III) | generate body
../3-Phrases/rhino:void generateCallArgArray(QNode;QNode;Z) | generate call arg array
../3-Phrases/rhino:void generateCallFunAndThis(QNode;) | generate call fun and this
../3-Phrases/rhino:void generateCallMethod(QClassFileWriter;) | generate call method
../3-Phrases/rhino:void generateCatchBlock(ISIII) | generate catch block
../3-Phrases/rhino:void generateCtor(QClassFileWriter;QString;QString;) | generate ctor
../3-Phrases/rhino:void generateEmptyCtor(QClassFileWriter;QString;QString;QString;) | generate empty ctor
../3-Phrases/rhino:void generateEpilogue() | generate epilogue
../3-Phrases/rhino:void generateExecute(QClassFileWriter;QScriptOrFnNode;) | generate execute
../3-Phrases/rhino:void generateExpression(QNode;QNode;) | generate expression
../3-Phrases/rhino:void generateFunctionAndThisObj(QNode;QNode;) | generate function and this obj
../3-Phrases/rhino:void generateFunctionConstructor(QClassFileWriter;) | generate function constructor
../3-Phrases/rhino:void generateFunctionICode() | generate function i code
../3-Phrases/rhino:void generateFunctionInit(QClassFileWriter;QOptFunctionNode;) | generate function init
../3-Phrases/rhino:void generateICodeFromTree(QNode;) | generate i code from tree
../3-Phrases/rhino:void generateIfJump(QNode;QNode;II) | generate if jump
../3-Phrases/rhino:void generate_java_code() | generate java code
../3-Phrases/rhino:void generate_length_switch(III) | generate length switch
../3-Phrases/rhino:void generate_letter_switch(IIIZZ) | generate letter switch
../3-Phrases/rhino:void generateMain(QClassFileWriter;) | generate main
../3-Phrases/rhino:void generateMethod(QClassFileWriter;QString;QString;[QClass;QClass;) | generate method
../3-Phrases/rhino:void generateNativeFunctionOverrides(QClassFileWriter;QString;) | generate native function overrides
../3-Phrases/rhino:void generateNestedFunctions() | generate nested functions
../3-Phrases/rhino:void generatePopResult(QClassFileWriter;QClass;) | generate pop result
../3-Phrases/rhino:void generatePrintIds(QNode;QObjToIntMap;) | generate print ids
../3-Phrases/rhino:void generatePrologue() | generate prologue
../3-Phrases/rhino:void generatePushWrappedArgs(QClassFileWriter;[QClass;I) | generate push wrapped args
../3-Phrases/rhino:void generateRegExpLiterals() | generate reg exp literals
../3-Phrases/rhino:void generateReturnResult(QClassFileWriter;QClass;Z) | generate return result
../3-Phrases/rhino:void generateScriptCtor(QClassFileWriter;QScriptOrFnNode;) | generate script ctor
../3-Phrases/rhino:void generateSerialCtor(QClassFileWriter;QString;QString;) | generate serial ctor
../3-Phrases/rhino:void generateStatement(QNode;QNode;) | generate statement
../3-Phrases/rhino:void generateSuper(QClassFileWriter;QString;QString;QString;QString;[QClass;QClass;) | generate super
../3-Phrases/rhino:void generateSwitch([QIdValuePair;QString;) | generate switch
../3-Phrases/rhino:void generateSwitch([QString;QString;) | generate switch
../3-Phrases/rhino:void setGenerateDebugInfo(Z) | set generate debug info
../3-Phrases/rhino-fieldSample:boolean isGenerateDebugInfo() | is generate debug info
../3-Phrases/rhino-fieldSample:void setGenerateDebugInfo(Z) | set generate debug info
../3-Phrases/rhino-fieldSample:void generateReturnResult(QClassFileWriter;QClass;Z) | generate return result
../3-Phrases/rhino-fieldSample:void generateFunctionAndThisObj(QNode;QNode;) | generate function and this obj
../3-Phrases/rhino-sample100:void generateSwitch([QString;QString;) | generate switch
../3-Phrases/vuze:String generateBuddyAHREF(QString;QString;QString;) | generate buddy ahref
../3-Phrases/vuze:int generateSpoofID(QDHTTransportContact;) | generate spoof id
../3-Phrases/vuze:void generate(QIndentWriter;) | generate
../3-Phrases/vuze:void generate(QIndentWriter;) | generate
../3-Phrases/vuze:void generateEvidence(QIndentWriter;) | generate evidence
../3-Phrases/vuze:void generate(QIndentWriter;) | generate
../3-Phrases/vuze:void generateEvidence(QIndentWriter;) | generate evidence
../3-Phrases/vuze:void generateEvidence(QIndentWriter;) | generate evidence
../3-Phrases/vuze:void generateEvidence(QIndentWriter;) | generate evidence
../3-Phrases/vuze:void generate(QIndentWriter;) | generate
../3-Phrases/vuze:void generate(QIndentWriter;) | generate
../3-Phrases/vuze:void generateDiagnostics(QIndentWriter;) | generate diagnostics
../3-Phrases/vuze:void generate(QIndentWriter;) | generate
../3-Phrases/vuze:void generateDiagnostics(QIndentWriter;) | generate diagnostics
../3-Phrases/vuze:void generateDiagnostics(QIndentWriter;QSet;) | generate diagnostics
../3-Phrases/vuze:void generateDiagnostics(QIndentWriter;QSet;) | generate diagnostics
../3-Phrases/vuze:void generateDiagnostics(QIndentWriter;[QNetworkAdminProtocol;) | generate diagnostics
../3-Phrases/vuze:KeyPair generateDHKeyPair(QTransportHelper;Z) | generate dh key pair
../3-Phrases/vuze:void generate(QIndentWriter;) | generate
../3-Phrases/vuze:void generate(QIndentWriter;) | generate
../3-Phrases/vuze:void generateEvidence(QIndentWriter;) | generate evidence
../3-Phrases/vuze:void generateEvidence(QIndentWriter;) | generate evidence
../3-Phrases/vuze:ArrayList generateTestPeers() | generate test peers
../3-Phrases/vuze:byte[] generateSecret() | generate secret
../3-Phrases/vuze:void generate(QIndentWriter;) | generate
../3-Phrases/vuze:void generateEvidence(QIndentWriter;) | generate evidence
../3-Phrases/vuze:void generate(QIndentWriter;) | generate
../3-Phrases/vuze:void generate(QMap;) | generate
../3-Phrases/vuze:void generate(QIndentWriter;) | generate
../3-Phrases/vuze:void generate(QIndentWriter;) | generate
../3-Phrases/vuze:void generate(QIndentWriter;) | generate
../3-Phrases/vuze:void generate(QIndentWriter;) | generate
../3-Phrases/vuze:byte[] generateUUID() | generate uuid
../3-Phrases/vuze:String generateUUIDString() | generate uuid string
../3-Phrases/vuze:URL[] generateURLs() | generate urls
../3-Phrases/vuze:byte[] generatePeerID(QTorrent;Z) | generate peer id
../3-Phrases/vuze:void generateHTTPProperties(QProperties;) | generate http properties
../3-Phrases/vuze:void generate(QIndentWriter;) | generate
../3-Phrases/vuze:void generateDiagnostics(QIndentWriter;) | generate diagnostics
../3-Phrases/vuze:void generateDiagnostics(QIndentWriter;) | generate diagnostics
../3-Phrases/vuze:Image generateObfusticatedImage() | generate obfusticated image
../3-Phrases/vuze:void generate(QIndentWriter;) | generate
../3-Phrases/vuze:Image generateObfusticatedImage() | generate obfusticated image
../3-Phrases/vuze:void generateDiagnostics(QIndentWriter;) | generate diagnostics
../3-Phrases/vuze:void generate(QIndentWriter;) | generate
../3-Phrases/vuze:void generate(QIndentWriter;) | generate
../3-Phrases/vuze:boolean generate(QTrackerWebPageRequest;QTrackerWebPageResponse;) | generate
../3-Phrases/vuze:Vector generateOcts() | generate octs
../3-Phrases/vuze:X509Extensions generate() | generate
../3-Phrases/vuze:TBSCertList generateTBSCertList() | generate tbs cert list
../3-Phrases/vuze:TBSCertificateStructure generateTBSCertificate() | generate tbs certificate
../3-Phrases/vuze:AttributeCertificateInfo generateAttributeCertificateInfo() | generate attribute certificate info
../3-Phrases/vuze:TBSCertificateStructure generateTBSCertificate() | generate tbs certificate
../3-Phrases/vuze:BigInteger[] generateSignature([B) | generate signature
../3-Phrases/vuze:int generateBytes([BII) | generate bytes
../3-Phrases/vuze:AsymmetricCipherKeyPair generateKeyPair() | generate key pair
../3-Phrases/vuze:CipherParameters generateDerivedParameters(I) | generate derived parameters
../3-Phrases/vuze:CipherParameters generateDerivedParameters(II) | generate derived parameters
../3-Phrases/vuze:CipherParameters generateDerivedMacParameters(I) | generate derived mac parameters
../3-Phrases/vuze:byte[] generateKey() | generate key
../3-Phrases/vuze:byte[] generateDerivedKey(II) | generate derived key
../3-Phrases/vuze:CipherParameters generateDerivedParameters(I) | generate derived parameters
../3-Phrases/vuze:CipherParameters generateDerivedParameters(II) | generate derived parameters
../3-Phrases/vuze:CipherParameters generateDerivedMacParameters(I) | generate derived mac parameters
../3-Phrases/vuze:AsymmetricCipherKeyPair generateKeyPair() | generate key pair
../3-Phrases/vuze:byte[] generateKey() | generate key
../3-Phrases/vuze:AsymmetricCipherKeyPair generateKeyPair() | generate key pair
../3-Phrases/vuze:DHParameters generateParameters() | generate parameters
../3-Phrases/vuze:byte[] generateDerivedKey(I) | generate derived key
../3-Phrases/vuze:CipherParameters generateDerivedParameters(I) | generate derived parameters
../3-Phrases/vuze:CipherParameters generateDerivedParameters(II) | generate derived parameters
../3-Phrases/vuze:CipherParameters generateDerivedMacParameters(I) | generate derived mac parameters
../3-Phrases/vuze:AsymmetricCipherKeyPair generateKeyPair() | generate key pair
../3-Phrases/vuze:AsymmetricCipherKeyPair generateKeyPair() | generate key pair
../3-Phrases/vuze:byte[] generateKey() | generate key
../3-Phrases/vuze:int generateBytes([BII) | generate bytes
../3-Phrases/vuze:int generateBytes([BII) | generate bytes
../3-Phrases/vuze:ElGamalParameters generateParameters() | generate parameters
../3-Phrases/vuze:AsymmetricCipherKeyPair generateKeyPair() | generate key pair
../3-Phrases/vuze:AsymmetricCipherKeyPair generateKeyPair() | generate key pair
../3-Phrases/vuze:DSAParameters generateParameters() | generate parameters
../3-Phrases/vuze:byte[] generateDerivedKey() | generate derived key
../3-Phrases/vuze:CipherParameters generateDerivedParameters(I) | generate derived parameters
../3-Phrases/vuze:CipherParameters generateDerivedParameters(II) | generate derived parameters
../3-Phrases/vuze:CipherParameters generateDerivedMacParameters(I) | generate derived mac parameters
../3-Phrases/vuze:BigInteger[] generateSignature([B) | generate signature
../3-Phrases/vuze:X509Certificate generateX509Certificate(QPrivateKey;) | generate x 509 certificate
../3-Phrases/vuze:X509Certificate generateX509Certificate(QPrivateKey;QSecureRandom;) | generate x 509 certificate
../3-Phrases/vuze:X509Certificate generateX509Certificate(QPrivateKey;QString;) | generate x 509 certificate
../3-Phrases/vuze:X509Certificate generateX509Certificate(QPrivateKey;QString;QSecureRandom;) | generate x 509 certificate
../3-Phrases/vuze:X509Certificate generateX509Certificate(QPrivateKey;) | generate x 509 certificate
../3-Phrases/vuze:X509Certificate generateX509Certificate(QPrivateKey;QSecureRandom;) | generate x 509 certificate
../3-Phrases/vuze:X509Certificate generateX509Certificate(QPrivateKey;QString;) | generate x 509 certificate
../3-Phrases/vuze:X509Certificate generateX509Certificate(QPrivateKey;QString;QSecureRandom;) | generate x 509 certificate
../3-Phrases/vuze:X509CRL generateX509CRL(QPrivateKey;) | generate x 509 crl
../3-Phrases/vuze:X509CRL generateX509CRL(QPrivateKey;QSecureRandom;) | generate x 509 crl
../3-Phrases/vuze:X509CRL generateX509CRL(QPrivateKey;QString;) | generate x 509 crl
../3-Phrases/vuze:X509CRL generateX509CRL(QPrivateKey;QString;QSecureRandom;) | generate x 509 crl
../3-Phrases/vuze:PrivateKey engineGeneratePrivate(QKeySpec;) | engine generate private
../3-Phrases/vuze:PublicKey engineGeneratePublic(QKeySpec;) | engine generate public
../3-Phrases/vuze:AsymmetricKeyParameter generatePublicKeyParameter(QPublicKey;) | generate public key parameter
../3-Phrases/vuze:AsymmetricKeyParameter generatePrivateKeyParameter(QPrivateKey;) | generate private key parameter
../3-Phrases/vuze:byte[] generateSecret() | generate secret
../3-Phrases/vuze:byte[] engineGenerateSecret() | engine generate secret
../3-Phrases/vuze:int engineGenerateSecret([BI) | engine generate secret
../3-Phrases/vuze:SecretKey engineGenerateSecret(QString;) | engine generate secret
../3-Phrases/vuze:AsymmetricKeyParameter generatePublicKeyParameter(QPublicKey;) | generate public key parameter
../3-Phrases/vuze:AsymmetricKeyParameter generatePrivateKeyParameter(QPrivateKey;) | generate private key parameter
../3-Phrases/vuze:RSAKeyParameters generatePublicKeyParameter(QRSAPublicKey;) | generate public key parameter
../3-Phrases/vuze:RSAKeyParameters generatePrivateKeyParameter(QRSAPrivateKey;) | generate private key parameter
../3-Phrases/vuze:KeyPair generateKeyPair() | generate key pair
../3-Phrases/vuze:KeyPair generateKeyPair() | generate key pair
../3-Phrases/vuze:AsymmetricKeyParameter generatePublicKeyParameter(QPublicKey;) | generate public key parameter
../3-Phrases/vuze:AsymmetricKeyParameter generatePrivateKeyParameter(QPrivateKey;) | generate private key parameter
../3-Phrases/vuze:AsymmetricKeyParameter generatePublicKeyParameter(QPublicKey;) | generate public key parameter
../3-Phrases/vuze:AsymmetricKeyParameter generatePrivateKeyParameter(QPrivateKey;) | generate private key parameter
../3-Phrases/vuze:Certificate engineGenerateCertificate(QInputStream;) | engine generate certificate
../3-Phrases/vuze:Collection engineGenerateCertificates(QInputStream;) | engine generate certificates
../3-Phrases/vuze:CRL engineGenerateCRL(QInputStream;) | engine generate crl
../3-Phrases/vuze:Collection engineGenerateCRLs(QInputStream;) | engine generate cr ls
../3-Phrases/vuze:CertPath engineGenerateCertPath(QInputStream;) | engine generate cert path
../3-Phrases/vuze:CertPath engineGenerateCertPath(QInputStream;QString;) | engine generate cert path
../3-Phrases/vuze:CertPath engineGenerateCertPath(QList;) | engine generate cert path
../3-Phrases/vuze:AlgorithmParameters engineGenerateParameters() | engine generate parameters
../3-Phrases/vuze:AlgorithmParameters engineGenerateParameters() | engine generate parameters
../3-Phrases/vuze:AlgorithmParameters engineGenerateParameters() | engine generate parameters
../3-Phrases/vuze:AlgorithmParameters engineGenerateParameters() | engine generate parameters
../3-Phrases/vuze:AlgorithmParameters engineGenerateParameters() | engine generate parameters
../3-Phrases/vuze:AlgorithmParameters engineGenerateParameters() | engine generate parameters
../3-Phrases/vuze:AlgorithmParameters engineGenerateParameters() | engine generate parameters
../3-Phrases/vuze:AlgorithmParameters engineGenerateParameters() | engine generate parameters
../3-Phrases/vuze:GeneralNames generateGeneralNames(QX509Principal;) | generate general names
../3-Phrases/vuze:void generate(QIndentWriter;) | generate
../3-Phrases/vuze:void generateEvidence(QIndentWriter;) | generate evidence
../3-Phrases/vuze:void generateEvidence(QIndentWriter;) | generate evidence
../3-Phrases/vuze:void generateEvidence(QIndentWriter;) | generate evidence
../3-Phrases/vuze:void generateEvidence(QIndentWriter;) | generate evidence
../3-Phrases/vuze:void generateEvidence(QIndentWriter;) | generate evidence
../3-Phrases/vuze:void generateEvidence(QIndentWriter;) | generate evidence
../3-Phrases/vuze:void generateEvidence(QIndentWriter;) | generate evidence
../3-Phrases/vuze:void generateEvidence(QIndentWriter;) | generate evidence
../3-Phrases/vuze:void generateEvidence(QIndentWriter;) | generate evidence
../3-Phrases/vuze:void generate(QIndentWriter;) | generate
../3-Phrases/vuze:void generateEvidence(QIndentWriter;) | generate evidence
../3-Phrases/vuze:void generateEvidence(QIndentWriter;) | generate evidence
../3-Phrases/vuze:void generateEvidence(QIndentWriter;) | generate evidence
../3-Phrases/vuze:void generateSessionId() | generate session id
../3-Phrases/vuze:void generateEvidence(QIndentWriter;) | generate evidence
../3-Phrases/vuze:void generateEvidence(QIndentWriter;) | generate evidence
../3-Phrases/vuze:byte[] generate20BytesHash(I) | generate 20 bytes hash
../3-Phrases/vuze:void generate(QIndentWriter;) | generate
../3-Phrases/vuze:void generateEvidence(QIndentWriter;) | generate evidence
../3-Phrases/vuze:void generateEvidence(QIndentWriter;) | generate evidence
../3-Phrases/vuze:void generate(QIndentWriter;) | generate
../3-Phrases/vuze:void generateEvidence(QPrintWriter;) | generate evidence
../3-Phrases/vuze:void generate(QIndentWriter;) | generate
../3-Phrases/vuze:void generate(QIndentWriter;) | generate
../3-Phrases/vuze:void generateEvidence(QIndentWriter;) | generate evidence
../3-Phrases/vuze:byte[] generateRandomBytes(I) | generate random bytes
../3-Phrases/vuze:String generateRandomAlphanumerics(I) | generate random alphanumerics
../3-Phrases/vuze:int generateRandomNetworkListenPort() | generate random network listen port
../3-Phrases/vuze:int generateRandomPlusMinus1() | generate random plus minus 1
../3-Phrases/vuze:int generateRandomIntUpto(I) | generate random int upto
../3-Phrases/vuze:int generateRandomIntBetween(II) | generate random int between
../3-Phrases/vuze:void generate(QIndentWriter;) | generate
../3-Phrases/vuze:byte[] generatePeerID(QTorrent;Z) | generate peer id
../3-Phrases/vuze:void generateHTTPProperties(QProperties;) | generate http properties
../3-Phrases/vuze:boolean generate(QTrackerWebPageRequest;QTrackerWebPageResponse;) | generate
../3-Phrases/vuze:void setGenerateIntermediateEvents(Z) | set generate intermediate events
../3-Phrases/vuze:boolean getGenerateIntermediateEvents() | get generate intermediate events
../3-Phrases/vuze:void generateEvidence(QIndentWriter;) | generate evidence
../3-Phrases/vuze:void generate(QIndentWriter;) | generate
../3-Phrases/vuze:byte[] generatePeerID(QTOTorrent;Z) | generate peer id
../3-Phrases/vuze:void generateHTTPProperties(QProperties;) | generate http properties
../3-Phrases/vuze:void generateEvidence(QIndentWriter;) | generate evidence
../3-Phrases/vuze:void generate(QIndentWriter;) | generate
../3-Phrases/vuze:void generate(QIndentWriter;QShareResourceDirContents;) | generate
../3-Phrases/vuze:void setGenerateIntermediateEvents(Z) | set generate intermediate events
../3-Phrases/vuze:boolean getGenerateIntermediateEvents() | get generate intermediate events
../3-Phrases/vuze:void generateDiagnostics(QIndentWriter;) | generate diagnostics
../3-Phrases/vuze:void setGenerateIntermediateEvents(Z) | set generate intermediate events
../3-Phrases/vuze:void setGenerateIntermediateEvents(Z) | set generate intermediate events
../3-Phrases/vuze:void generate() | generate
../3-Phrases/vuze:Image generateObfusticatedImage() | generate obfusticated image
../3-Phrases/vuze:void generate(QIndentWriter;) | generate
../3-Phrases/vuze:void generateMenuItems(QMenu;QAzureusCore;QGlobalManager;Z) | generate menu items
../3-Phrases/vuze:void generate(QIndentWriter;) | generate
../3-Phrases/vuze:Image generateObfusticatedImage() | generate obfusticated image
../3-Phrases/vuze:void generateDiagnostics(QIndentWriter;) | generate diagnostics
../3-Phrases/vuze:void generateDiagnostics(QIndentWriter;) | generate diagnostics
../3-Phrases/vuze:void generateDiagnostics(QIndentWriter;) | generate diagnostics
../3-Phrases/vuze:void generateDiagnostics(QIndentWriter;) | generate diagnostics
../3-Phrases/vuze:void generateGeneralGroup() | generate general group
../3-Phrases/vuze:void generateReadsGroup() | generate reads group
../3-Phrases/vuze:void generateSpeedGroup() | generate speed group
../3-Phrases/vuze:void generateWritesGroup() | generate writes group
../3-Phrases/vuze:void generateDiagnostics(QIndentWriter;) | generate diagnostics
../3-Phrases/vuze:void generate(QIndentWriter;) | generate
../3-Phrases/vuze:void generateDiagnostics(QIndentWriter;) | generate diagnostics
../3-Phrases/vuze:boolean generateSupport(QTrackerWebPageRequest;QTrackerWebPageResponse;) | generate support
../3-Phrases/vuze:boolean generate(QTrackerWebPageRequest;QTrackerWebPageResponse;) | generate
../3-Phrases/weka:TreeSet generateRules(I[DQHashtable;DQInstances;QTreeSet;I) | generate rules
../3-Phrases/weka:TreeSet generateRules(I[DQHashtable;DQInstances;QTreeSet;I) | generate rules
../3-Phrases/weka:FastVector[] generateRules(DQFastVector;I) | generate rules
../3-Phrases/weka:FastVector[] generateRulesBruteForce(DIQFastVector;IID) | generate rules brute force
../3-Phrases/weka:RuleItem generateRuleItem(QItemSet;QItemSet;QInstances;II[DQHashtable;) | generate rule item
../3-Phrases/weka:void generateDistribution() | generate distribution
../3-Phrases/weka:FastVector[] generateRules(DZ) | generate rules
../3-Phrases/weka:FastVector generateKCandidates(QFastVector;) | generate k candidates
../3-Phrases/weka:String generateRankingTipText() | generate ranking tip text
../3-Phrases/weka:void setGenerateRanking(Z) | set generate ranking
../3-Phrases/weka:boolean getGenerateRanking() | get generate ranking
../3-Phrases/weka:String generateRankingTipText() | generate ranking tip text
../3-Phrases/weka:void setGenerateRanking(Z) | set generate ranking
../3-Phrases/weka:boolean getGenerateRanking() | get generate ranking
../3-Phrases/weka:void setGenerateRanking(Z) | set generate ranking
../3-Phrases/weka:boolean getGenerateRanking() | get generate ranking
../3-Phrases/weka:BitSet generateRandomSubset() | generate random subset
../3-Phrases/weka:String generateRankingTipText() | generate ranking tip text
../3-Phrases/weka:void setGenerateRanking(Z) | set generate ranking
../3-Phrases/weka:boolean getGenerateRanking() | get generate ranking
../3-Phrases/weka:String generateDataOutputTipText() | generate data output tip text
../3-Phrases/weka:void setGenerateDataOutput(Z) | set generate data output
../3-Phrases/weka:boolean getGenerateDataOutput() | get generate data output
../3-Phrases/weka:void generateNextSubset(IQBitSet;) | generate next subset
../3-Phrases/weka:String generateRankingTipText() | generate ranking tip text
../3-Phrases/weka:void setGenerateRanking(Z) | set generate ranking
../3-Phrases/weka:boolean getGenerateRanking() | get generate ranking
../3-Phrases/weka:void GenerateReferenceSet(QList<QSubset;>;II) | generate reference set
../3-Phrases/weka:int generateRandomNumber(I) | generate random number
../3-Phrases/weka:void ActionGenerateNetwork() | action generate network
../3-Phrases/weka:void ActionGenerateData() | action generate data
../3-Phrases/weka:void generateRandomNetwork() | generate random network
../3-Phrases/weka:void generateRandomNetworkStructure(II) | generate random network structure
../3-Phrases/weka:void generateTree(I) | generate tree
../3-Phrases/weka:void generateRandomDistributions(II) | generate random distributions
../3-Phrases/weka:void generateInstances() | generate instances
../3-Phrases/weka:void generateRandomNet(QBayesNet;QInstances;) | generate random net
../3-Phrases/weka:void generateRandomNet(QBayesNet;QInstances;) | generate random net
../3-Phrases/weka:void generateRandomClassColomns() | generate random class colo mns
../3-Phrases/weka:void generateAttrDistribution() | generate attr distribution
../3-Phrases/weka:void generateMetaLevel(QInstances;QRandom;) | generate meta level
../3-Phrases/weka:Instances generateArtificialData(IQInstances;) | generate artificial data
../3-Phrases/weka:void generate() | generate
../3-Phrases/weka:void generateMetaLevel(QInstances;QRandom;) | generate meta level
../3-Phrases/weka:void generateGroupsFromSizes(QInstances;QRandom;) | generate groups from sizes
../3-Phrases/weka:void generateGroupsFromNumbers(QInstances;QRandom;) | generate groups from numbers
../3-Phrases/weka:void generateMetaLevel(QInstances;QRandom;) | generate meta level
../3-Phrases/weka:void generateClassifierForNode(QInstances;QRange;QRandom;QClassifier;QHashtable;) | generate classifier for node
../3-Phrases/weka:void generateClassifierForNode(QInstances;QRange;QRandom;QClassifier;QHashtable;[D) | generate classifier for node
../3-Phrases/weka:Instances generateRandomSample(QInstances;IQRandom;) | generate random sample
../3-Phrases/weka:void generateAttributeIndicesSingle() | generate attribute indices single
../3-Phrases/weka:void generateStaticPotentialSplittersAndNumericIndices() | generate static potential splitters and numeric indices
../3-Phrases/weka:void generateAttributeIndicesSingle() | generate attribute indices single
../3-Phrases/weka:void generateStaticPotentialSplittersAndNumericIndices() | generate static potential splitters and numeric indices
../3-Phrases/weka:String generateRulesTipText() | generate rules tip text
../3-Phrases/weka:void setGenerateRules(Z) | set generate rules
../3-Phrases/weka:boolean getGenerateRules() | get generate rules
../3-Phrases/weka:int getNumberOfGeneratedClusters() | get number of generated clusters
../3-Phrases/weka:String generateJavadoc(I) | generate javadoc
../3-Phrases/weka:String generateJavadoc(I) | generate javadoc
../3-Phrases/weka:String generateJavadoc(I) | generate javadoc
../3-Phrases/weka:Attribute generateAttribute(II) | generate attribute
../3-Phrases/weka:double generateClassValue(QInstances;) | generate class value
../3-Phrases/weka:double generateAttributeValue(QInstances;ID) | generate attribute value
../3-Phrases/weka:Instances generate() | generate
../3-Phrases/weka:String generateHelp() | generate help
../3-Phrases/weka:String generate() | generate
../3-Phrases/weka:String generateJavadoc(I) | generate javadoc
../3-Phrases/weka:String generateJavadoc() | generate javadoc
../3-Phrases/weka:String generate() | generate
../3-Phrases/weka:String generateHelp() | generate help
../3-Phrases/weka:String generateJavadoc(I) | generate javadoc
../3-Phrases/weka:String generateID() | generate id
../3-Phrases/weka:void generate(QFile;) | generate
../3-Phrases/weka:void generate([QString;) | generate
../3-Phrases/weka:Instance generateExample() | generate example
../3-Phrases/weka:Instances generateExamples() | generate examples
../3-Phrases/weka:String generateStart() | generate start
../3-Phrases/weka:String generateFinished() | generate finished
../3-Phrases/weka:Instance generateExample() | generate example
../3-Phrases/weka:Instances generateExamples() | generate examples
../3-Phrases/weka:String generateStart() | generate start
../3-Phrases/weka:String generateFinished() | generate finished
../3-Phrases/weka:Instance generateExample() | generate example
../3-Phrases/weka:Instances generateExamples() | generate examples
../3-Phrases/weka:String generateStart() | generate start
../3-Phrases/weka:String generateFinished() | generate finished
../3-Phrases/weka:Instance generateExample() | generate example
../3-Phrases/weka:Instances generateExamples() | generate examples
../3-Phrases/weka:String generateStart() | generate start
../3-Phrases/weka:String generateFinished() | generate finished
../3-Phrases/weka:Instance generateExample() | generate example
../3-Phrases/weka:Instances generateExamples() | generate examples
../3-Phrases/weka:Instances generateExamples(IQRandom;QInstances;) | generate examples
../3-Phrases/weka:FastVector generateTestList(QRandom;QInstance;) | generate test list
../3-Phrases/weka:Instance generateExample(QRandom;QInstances;) | generate example
../3-Phrases/weka:String generateStart() | generate start
../3-Phrases/weka:String generateFinished() | generate finished
../3-Phrases/weka:Instance generateExample() | generate example
../3-Phrases/weka:Instances generateExamples() | generate examples
../3-Phrases/weka:String generateStart() | generate start
../3-Phrases/weka:String generateFinished() | generate finished
../3-Phrases/weka:Instance generateExample() | generate example
../3-Phrases/weka:Instances generateExamples() | generate examples
../3-Phrases/weka:String generateStart() | generate start
../3-Phrases/weka:String generateFinished() | generate finished
../3-Phrases/weka:Instance generateExample() | generate example
../3-Phrases/weka:Instances generateExamples() | generate examples
../3-Phrases/weka:String generateStart() | generate start
../3-Phrases/weka:String generateFinished() | generate finished
../3-Phrases/weka:Instance generateExample() | generate example
../3-Phrases/weka:Instances generateExamples() | generate examples
../3-Phrases/weka:Instances generateExamples(QRandom;QInstances;) | generate examples
../3-Phrases/weka:Instance generateInstance(QInstances;QRandom;D[DQString;) | generate instance
../3-Phrases/weka:String generateFinished() | generate finished
../3-Phrases/weka:String generateStart() | generate start
../3-Phrases/weka:Instance generateExample() | generate example
../3-Phrases/weka:Instances generateExamples() | generate examples
../3-Phrases/weka:Instance generateExample(QInstances;QRandom;QSubspaceClusterDefinition;QString;) | generate example
../3-Phrases/weka:void generateUniformExamples(QInstances;IQSubspaceClusterDefinition;QString;) | generate uniform examples
../3-Phrases/weka:void generateUniformIntegerExamples(QInstances;IQSubspaceClusterDefinition;QString;) | generate uniform integer examples
../3-Phrases/weka:void generateGaussianExamples(QInstances;IQRandom;QSubspaceClusterDefinition;QString;) | generate gaussian examples
../3-Phrases/weka:String generateFinished() | generate finished
../3-Phrases/weka:String generateStart() | generate start
../3-Phrases/weka:Instances generateSubset(QInstances;QRange;) | generate subset
../3-Phrases/weka:void generateOutputProperties() | generate output properties
../3-Phrases/weka:double[][] generateInstances([I) | generate instances
../3-Phrases/weka:double[][] generateInstances([I) | generate instances
../3-Phrases/weka:void generateInstances() | generate instances
../3-Phrases/weka:void showGeneratedInstances(QString;) | show generated instances
../3-Phrases/weka:Node generateStructures() | generate structures
../3-Phrases/weka:void generateOutput() | generate output
../3-Phrases/weka:void generateOutput() | generate output
../3-Phrases/weka:void generateOutput() | generate output
../3-Phrases/weka:void generateOutput() | generate output
../3-Phrases/weka:void generateOutput() | generate output
../3-Phrases/weka:TreeSet generateRules(I[DQHashtable;DQInstances;QTreeSet;I) | generate rules
../3-Phrases/weka:TreeSet generateRules(I[DQHashtable;DQInstances;QTreeSet;I) | generate rules
../3-Phrases/weka:void generateDistribution() | generate distribution
../3-Phrases/weka:FastVector[] generateRules(DQFastVector;I) | generate rules
../3-Phrases/weka:FastVector[] generateRulesBruteForce(DIQFastVector;IID) | generate rules brute force
../3-Phrases/weka:RuleItem generateRuleItem(QItemSet;QItemSet;QInstances;II[DQHashtable;) | generate rule item
../3-Phrases/weka:FastVector[] generateRules(DZ) | generate rules
../3-Phrases/weka:String generateRankingTipText() | generate ranking tip text
../3-Phrases/weka:void setGenerateRanking(Z) | set generate ranking
../3-Phrases/weka:boolean getGenerateRanking() | get generate ranking
../3-Phrases/weka:String generateDataOutputTipText() | generate data output tip text
../3-Phrases/weka:void setGenerateDataOutput(Z) | set generate data output
../3-Phrases/weka:boolean getGenerateDataOutput() | get generate data output
../3-Phrases/weka:String generateRankingTipText() | generate ranking tip text
../3-Phrases/weka:void setGenerateRanking(Z) | set generate ranking
../3-Phrases/weka:boolean getGenerateRanking() | get generate ranking
../3-Phrases/weka:BitSet generateRandomSubset() | generate random subset
../3-Phrases/weka:void setGenerateRanking(Z) | set generate ranking
../3-Phrases/weka:boolean getGenerateRanking() | get generate ranking
../3-Phrases/weka:void generateNextSubset(IQBitSet;) | generate next subset
../3-Phrases/weka:String generateRankingTipText() | generate ranking tip text
../3-Phrases/weka:void setGenerateRanking(Z) | set generate ranking
../3-Phrases/weka:boolean getGenerateRanking() | get generate ranking
../3-Phrases/weka:void GenerateReferenceSet(QList<QSubset;>;II) | generate reference set
../3-Phrases/weka:int generateRandomNumber(I) | generate random number
../3-Phrases/weka:String generateRankingTipText() | generate ranking tip text
../3-Phrases/weka:void setGenerateRanking(Z) | set generate ranking
../3-Phrases/weka:boolean getGenerateRanking() | get generate ranking
../3-Phrases/weka:String generateJavadoc(I) | generate javadoc
../3-Phrases/weka:String generateJavadoc(I) | generate javadoc
../3-Phrases/weka:String generateJavadoc(I) | generate javadoc
../3-Phrases/weka:String generateHelp() | generate help
../3-Phrases/weka:String generate() | generate
../3-Phrases/weka:String generateJavadoc(I) | generate javadoc
../3-Phrases/weka:String generateID() | generate id
../3-Phrases/weka:Attribute generateAttribute(II) | generate attribute
../3-Phrases/weka:double generateClassValue(QInstances;) | generate class value
../3-Phrases/weka:double generateAttributeValue(QInstances;ID) | generate attribute value
../3-Phrases/weka:Instances generate() | generate
../3-Phrases/weka:String generateJavadoc(I) | generate javadoc
../3-Phrases/weka:String generateJavadoc() | generate javadoc
../3-Phrases/weka:String generate() | generate
../3-Phrases/weka:String generateHelp() | generate help
../3-Phrases/weka:Instance generateExample() | generate example
../3-Phrases/weka:Instances generateExamples() | generate examples
../3-Phrases/weka:String generateStart() | generate start
../3-Phrases/weka:String generateFinished() | generate finished
../3-Phrases/weka:void generateOutputProperties() | generate output properties
