../3-Phrases/Base_Verb:static List<PrimaryKey> findEnabledByLogin(String login) | list<primary key> find enabled by login
../3-Phrases/Base_Verb:static List<PrimaryKey> findEnabledByMainCountry(String country) | list<primary key> find enabled by main country
../3-Phrases/Base_Verb:static List<PrimaryKey> findEnabledByLastName(String name) | list<primary key> find enabled by last name
../3-Phrases/Base_Verb:static List<PrimaryKey> findEnabledBySocialSecurityNumber(String ssn) | list<primary key> find enabled by social security number
../3-Phrases/Base_Verb:static List<PrimaryKey> findEnabledByAddress2(String address) | list<primary key> find enabled by address 2
../3-Phrases/Base_Verb:List<PrimaryKey> findEnabledPrimaryKeysByFirstName(String name) | find enabled primary keys by first name
../3-Phrases/Base_Verb:List<StandardGlobalCatalogAccount> findEnabledByEmployeeID(String employeeID) | find enabled by employee id
../3-Phrases/Base_Verb:List<StandardReadBean> findByEnabledFlag(String enabledFlag) | find by enabled flag
../3-Phrases/Base_Verb:List<StandardReadBean> findByEnabledFlag(String enabledFlag) | find by enabled flag
../3-Phrases/Base_Verb:List<PrimaryKey> findPrimaryKeysByEnabledFlag(String enabledFlag) | find primary keys by enabled flag
../3-Phrases/Base_Verb:void setEnabledFlag(String enabledFlag) | set enabled flag
../3-Phrases/Base_Verb:String getEnabledFlag() | get enabled flag
../3-Phrases/drjava2:boolean saveEnabledHuh() | save enabled huh
../3-Phrases/freecol2:void setEnabledComponents() | set enabled components
../3-Phrases/freemind:MenuItemEnabledListener getEnabledListener() | get enabled listener
../3-Phrases/freemind:void setEnabledListener(QMenuItemEnabledListener;) | set enabled listener
../3-Phrases/gantt:void setEnabledTree(QJComponent;Z) | set enabled tree
../3-Phrases/gantt:void setEnabledTree(QJComponent;Z) | set enabled tree
../3-Phrases/gantt:Role[] getEnabledRoles() | get enabled roles
../3-Phrases/gantt:Role[] getEnabledRoles() | get enabled roles
../3-Phrases/hibernate-3.3.1.GA:Filter getEnabledFilter(QString;) | get enabled filter
../3-Phrases/hibernate-3.3.1.GA:boolean isMinimalPutsEnabledByDefault() | is minimal puts enabled by default
../3-Phrases/hibernate-3.3.1.GA:boolean isMinimalPutsEnabledByDefault() | is minimal puts enabled by default
../3-Phrases/hibernate-3.3.1.GA:boolean isMinimalPutsEnabledByDefault() | is minimal puts enabled by default
../3-Phrases/hibernate-3.3.1.GA:boolean isMinimalPutsEnabledByDefault() | is minimal puts enabled by default
../3-Phrases/hibernate-3.3.1.GA:CONS NoCachingEnabledException() | no caching enabled exception
../3-Phrases/hibernate-3.3.1.GA:boolean isMinimalPutsEnabledByDefault() | is minimal puts enabled by default
../3-Phrases/hibernate-3.3.1.GA:boolean isMinimalPutsEnabledByDefault() | is minimal puts enabled by default
../3-Phrases/hibernate-3.3.1.GA:Map getEnabledFilters() | get enabled filters
../3-Phrases/hibernate-3.3.1.GA:Set getEnabledFilterNames() | get enabled filter names
../3-Phrases/hibernate-3.3.1.GA:Map getEnabledFilters() | get enabled filters
../3-Phrases/hibernate-3.3.1.GA:Map getEnabledFilters() | get enabled filters
../3-Phrases/hibernate-3.3.1.GA:Map getEnabledFilters() | get enabled filters
../3-Phrases/hibernate-3.3.1.GA:Map getEnabledFilters() | get enabled filters
../3-Phrases/hibernate-3.3.1.GA:Map getEnabledFilters() | get enabled filters
../3-Phrases/hibernate-3.3.1.GA:Filter getEnabledFilter(QString;) | get enabled filter
../3-Phrases/hibernate-3.3.1.GA:Map getEnabledFilters() | get enabled filters
../3-Phrases/hibernate-3.3.1.GA:Map getEnabledFilters() | get enabled filters
../3-Phrases/hibernate-3.3.1.GA:Map getEnabledFilters() | get enabled filters
../3-Phrases/hibernate-3.3.1.GA:boolean isJoinedFetchEnabledInMapping(QFetchMode;QAssociationType;) | is joined fetch enabled in mapping
../3-Phrases/hibernate-3.3.1.GA:boolean isAffectedByEnabledFilters(QSessionImplementor;) | is affected by enabled filters
../3-Phrases/hibernate-3.3.1.GA:boolean isAffectedByEnabledFilters(QSessionImplementor;) | is affected by enabled filters
../3-Phrases/Jabref:void updateEnabledState() | update enabled state
../3-Phrases/Jabref:void setBackAndForwardEnabledState() | set back and forward enabled state
../3-Phrases/JHotDraw-7.0.8:void updateEnabledState() | update enabled state
../3-Phrases/JHotDraw-7.0.8:void updateEnabledState() | update enabled state
../3-Phrases/JHotDraw-7.0.8:void updateEnabledState() | update enabled state
../3-Phrases/JHotDraw-7.0.8:void updateEnabledState() | update enabled state
../3-Phrases/JHotDraw-7.0.8:void updateEnabledState() | update enabled state
../3-Phrases/JHotDraw-7.0.8:void updateEnabledState() | update enabled state
../3-Phrases/JHotDraw-7.0.8:void updateEnabledState() | update enabled state
../3-Phrases/JHotDraw-7.0.8:void updateEnabledState() | update enabled state
../3-Phrases/MegaMek-0.32.0:boolean[] createEnabledMask(I) | create enabled mask
../3-Phrases/MegaMek-0.32.0:boolean[] createEnabledMask(I) | create enabled mask
../3-Phrases/PlanetaMessenger:void setEnabledControls(Z) | set enabled controls
../3-Phrases/PlanetaMessenger:void setEnabledControls(Z) | set enabled controls
../3-Phrases/SweetHome3D:boolean containsEnabledItems(QJMenu;) | contains enabled items
../3-Phrases/vuze:void setEnabledSupport(Z) | set enabled support
../3-Phrases/vuze:void setEnabledInternal(Z) | set enabled internal
../3-Phrases/vuze:void fireEnabledStateChanged() | fire enabled state changed
../3-Phrases/vuze:void checkEnabledState() | check enabled state
../3-Phrases/vuze:void fireEnabledChanged(Z) | fire enabled changed
../3-Phrases/vuze:boolean isAdEnabledContent(QDownloadManager;) | is ad enabled content
../3-Phrases/vuze:boolean isPeerSourceEnabledByDefault(QString;) | is peer source enabled by default
../3-Phrases/vuze:String[] getDefaultEnabledPeerSources() | get default enabled peer sources
../3-Phrases/vuze:void addEnabledOnSelection(QParameter;) | add enabled on selection
../3-Phrases/vuze:void addEnabledOnSelection(QParameter;) | add enabled on selection
../3-Phrases/vuze:List getEnabledOnSelectionParameters() | get enabled on selection parameters
../3-Phrases/vuze:void updateEnabledStates(QMenu;) | update enabled states
../3-Phrases/vuze:boolean isEnabledForCurrentMode(QWidget;) | is enabled for current mode
../3-Phrases/weka:boolean isEnabledNot(QCapability;) | is enabled not
../3-Phrases/weka:void setControlEnabledStatus(Z) | set control enabled status
../3-Phrases/weka:boolean isEnabledNot(QCapability;) | is enabled not
