../3-Phrases/3PS:boolean implementsIHostServiceForBean() | implements i host service for bean
../3-Phrases/3PS:boolean implementsIHostServiceForBean() | implements i host service for bean
../3-Phrases/3PS:static boolean isUserAuthorisedForBlogAsBlogContributor(Blog blog) | boolean is user authorised for blog as blog contributor
../3-Phrases/Base_Verb:static String getLifeCycleTaskNameForLifeCycleState(int lifeCycleState) | string get life cycle task name for life cycle state
../3-Phrases/Base_Verb:void saveMyEntityForSrvDMPckEnNoConfMyEntityForSrvDMPckEnNoConf(MyEntityForSrvDMPckEnNoConf myEntityForSrvDMPckEnNoConf) | save my entity for srv dm pck en no conf my entity for srv dm pck en no conf
../3-Phrases/Base_Verb:startAndEndTimes getStartAndEndTimesForOnTheFlyAnnotation(startAndEndTimes times) | get start and end times for on the fly annotation
../3-Phrases/Base_Verb:List getDataSetsForServer(String serverURL, String portString) | get data sets for server
../3-Phrases/Base_Verb:void waitForBandwidth() | wait for bandwidth
../3-Phrases/Base_Verb:void testJsonHashShouldNotReturnBuildSinceForNonActiveBuild() | test json hash should not return build since for non active build
../3-Phrases/Base_Verb:static void waitForEnterKey(String println) | void wait for enter key
../3-Phrases/Base_Verb:int look_for_num() | look for num
../3-Phrases/Base_Verb:StatementsForClassIF getStatementsForClass(ConnectionManagerIF conMan) | get statements for class
../3-Phrases/Base_Verb:void testOptimalEncodingSwapsBackToBForLetters() | test optimal encoding swaps back to b for letters
../3-Phrases/Base_Verb:void setFixedRangeAxisSpaceForSubplots(AxisSpace space) | set fixed range axis space for subplots
../3-Phrases/Base_Verb:void setFixedDomainAxisSpaceForSubplots(AxisSpace space) | set fixed domain axis space for subplots
../3-Phrases/Base_Verb:WSRole updateActionsForRole(WSRole wsRole, String ids) | update actions for role
../3-Phrases/Base_Verb:static String expandSqlForTable(String templateSql, Table table) | string expand sql for table
../3-Phrases/Base_Verb:static PieDataset createPieDatasetForColumn(CategoryDataset dataset, int column) | pie dataset create pie dataset for column
../3-Phrases/Base_Verb:boolean waitForRegistrationAndSynchronization(String ticket, int timeout) | wait for registration and synchronization
../3-Phrases/Base_Verb:static String getHoverTextForOffset(int offset, ErlangEditor editor) | string get hover text for offset
../3-Phrases/Base_Verb:String getForKto7Sa(long vishandle) | get for kto 7 sa
../3-Phrases/Base_Verb:void createSelectConditionForWhere(Vector vSelectStatement) | create select condition for where
../3-Phrases/Base_Verb:void askForParameters(String classExpr) | ask for parameters
../3-Phrases/Base_Verb:void addHandlerForMimeType(String mimetype, String className) | add handler for mime type
../3-Phrases/Base_Verb:Method getCreateMethodForDOI(DomainObjectEBLocalHome aHomeInterface, IdentifiedDomainObjectDOI aDOI) | get create method for doi
../3-Phrases/Base_Verb:Rectangle positionForDisplay(Rectangle in) | position for display
../3-Phrases/Base_Verb:void testCreateUniqueEntityEntryKeyForAssignIdGenerator() | test create unique entity entry key for assign id generator
../3-Phrases/Base_Verb:String getKeyWordsForImage(DiskObject f) | get key words for image
../3-Phrases/Base_Verb:long queryForLong(String sql, Object args, int argTypes) | query for long
../3-Phrases/Base_Verb:Runner prepareForAbort(Runner runners) | prepare for abort
../3-Phrases/Base_Verb:get events for period(calendar calendar, date dt start, date dt end)
../3-Phrases/Base_Verb:ListConfigurationVO getForUserByTypeAndName(Type type, String name, UserVO user) | get for user by type and name
../3-Phrases/Base_Verb:void getClassForByName(String className) | get class for by name
../3-Phrases/Base_Verb:static MediaType getMediaTypeForSchema(String schema) | media type get media type for schema
../3-Phrases/Base_Verb:Collection getMaterialItemInfosBySupSetForPrepare(Integer p0_Integer) | get material item infos by sup set for prepare
../3-Phrases/Base_Verb:Errors validateForDelete(Release p0_Release) | validate for delete
../3-Phrases/Base_Verb:void expectValidateForDelete(Task p0_Task, Throwable toThrow) | expect validate for delete
../3-Phrases/Base_Verb:List queryForList(String sql, Map paramMap, Class elementType) | query for list
../3-Phrases/Base_Verb:long rightTickForMove() | right tick for move
../3-Phrases/Base_Verb:static int parseStringForDateInformation(int information, String stringValue, Calendar cal, int fromI) | int parse string for date information
../3-Phrases/Base_Verb:void initForContext(Context context) | init for context
../3-Phrases/Base_Verb:void testForID() | test for id
../3-Phrases/Base_Verb:void setAdjustForWindow(boolean TF) | set adjust for window
../3-Phrases/Base_Verb:BIN findBinForInsert(Key key, LogManager logManager, INList inMemoryINs) | find bin for insert
../3-Phrases/Base_Verb:UserGroup getForName(String name) | get for name
../3-Phrases/Base_Verb:Object getIdForObject(Object object) | get id for object
../3-Phrases/Base_Verb:static OpenFileFilter getFileFilterForField(String fieldName) | open file filter get file filter for field
../3-Phrases/Base_Verb:void setApplication_for_selected_or_unselected_KB() | set application for selected or unselected kb
../3-Phrases/Base_Verb:sfvec3f getNormalForVertex(int vertexNum, di_progress progress) | get normal for vertex
../3-Phrases/Base_Verb:ArrayList getSummaryForProtein(ArrayList Gis) | get summary for protein
../3-Phrases/Dguitar:Point positionForEON(QGP4EffectsOnNote;QPoint;QDimension;) | position for eon
../3-Phrases/Dguitar:void waitForCompletion() | wait for completion
../3-Phrases/Dguitar:void waitForCompletion() | wait for completion
../3-Phrases/DrawSWF:void waitForFrame(IQString;) | wait for frame
../3-Phrases/DrawSWF:void waitForFrame(QString;) | wait for frame
../3-Phrases/DrawSWF:Shape shapeForImage(QInputStream;[I) | shape for image
../3-Phrases/DrawSWF:Shape shapeForImage(QImage;DD) | shape for image
../3-Phrases/DrawSWF:boolean isUsedForHitArea() | is used for hit area
../3-Phrases/DrawSWF:boolean isUsedForUp() | is used for up
../3-Phrases/DrawSWF:boolean isUsedForDown() | is used for down
../3-Phrases/DrawSWF:boolean isUsedForOver() | is used for over
../3-Phrases/DrawSWF:void usedForHitArea(Z) | used for hit area
../3-Phrases/DrawSWF:void usedForUp(Z) | used for up
../3-Phrases/DrawSWF:void usedForDown(Z) | used for down
../3-Phrases/DrawSWF:void usedForOver(Z) | used for over
../3-Phrases/DrawSWF:void waitForFrame(IQString;) | wait for frame
../3-Phrases/DrawSWF:void waitForFrame(QString;) | wait for frame
../3-Phrases/DrawSWF:void waitForFrame(IQString;) | wait for frame
../3-Phrases/DrawSWF:void waitForFrame(QString;) | wait for frame
../3-Phrases/DrawSWF:void waitForFrame(IQString;) | wait for frame
../3-Phrases/DrawSWF:void waitForFrame(QString;) | wait for frame
../3-Phrases/drjava2:void prepareForRun(QOpenDefinitionsDocument;) | prepare for run
../3-Phrases/drjava2:OpenDefinitionsDocument getDocumentForFile(QFile;) | get document for file
../3-Phrases/drjava2:OpenDefinitionsDocument getODDForDocument(QAbstractDocumentInterface;) | get odd for document
../3-Phrases/drjava2:String fixPathForNavigator(QString;) | fix path for navigator
../3-Phrases/drjava2:void testGetDocumentForFile() | test get document for file
../3-Phrases/drjava2:void testSaveAsExistsForOverwrite() | test save as exists for overwrite
../3-Phrases/drjava2:OpenDefinitionsDocument getDocumentForFile(QFile;) | get document for file
../3-Phrases/drjava2:File classForJava(QFile;QString;) | class for java
../3-Phrases/drjava2:void prepareForRun(QOpenDefinitionsDocument;) | prepare for run
../3-Phrases/drjava2:void prepareForRun(QOpenDefinitionsDocument;) | prepare for run
../3-Phrases/drjava2:String adapterForCompiler(QJavaVersion;) | adapter for compiler
../3-Phrases/drjava2:String adapterForDebugger(QJavaVersion;) | adapter for debugger
../3-Phrases/drjava2:void prepareForRun(QOpenDefinitionsDocument;) | prepare for run
../3-Phrases/drjava2:String fixPathForNavigator(QString;) | fix path for navigator
../3-Phrases/drjava2:OpenDefinitionsDocument getODDForDocument(QAbstractDocumentInterface;) | get odd for document
../3-Phrases/drjava2:OpenDefinitionsDocument getDocumentForFile(QFile;) | get document for file
../3-Phrases/drjava2:String fixPathForNavigator(QString;) | fix path for navigator
../3-Phrases/drjava2:OpenDefinitionsDocument getODDForDocument(QAbstractDocumentInterface;) | get odd for document
../3-Phrases/drjava2:OpenDefinitionsDocument getDocumentForFile(QFile;) | get document for file
../3-Phrases/drjava2:void testGetDocumentForFile() | test get document for file
../3-Phrases/drjava2:boolean _prepareForCompile() | prepare for compile
../3-Phrases/drjava2:OpenDefinitionsDocument getDocumentForFile(QFile;) | get document for file
../3-Phrases/drjava2:void _shutdownAndWaitForInteractionEnded() | shutdown and wait for interaction ended
../3-Phrases/drjava2:void _switchToInterpreterForThreadReference(QThreadReference;) | switch to interpreter for thread reference
../3-Phrases/drjava2:void setFormattingForState(QGraphics;I) | set formatting for state
../3-Phrases/drjava2:void testFor2() | test for 2
../3-Phrases/drjava2:void setFormattingForState(QGraphics;I) | set formatting for state
../3-Phrases/drjava2:void testForStatement() | test for statement
../3-Phrases/drjava2:void testMultiLineForStatement() | test multi line for statement
../3-Phrases/drjava2:void testStartOfStmtCheckForEndCharacters() | test start of stmt check for end characters
../3-Phrases/drjava2:void testFieldsForCurrentLocation() | test fields for current location
../3-Phrases/drjava2:void testPromptForDestination() | test prompt for destination
../3-Phrases/drjava2:File getFileForClassName(QString;) | get file for class name
../3-Phrases/drjava2:File getFileForClassName(QString;) | get file for class name
../3-Phrases/drjava2:void testSaveAsExistsForOverwrite() | test save as exists for overwrite
../3-Phrases/drjava2:void setWaitingForFirstInterpreter(Z) | set waiting for first interpreter
../3-Phrases/drjava2:File getFileForClassName(QString;) | get file for class name
../3-Phrases/drjava2:File getFileForClassName(QString;) | get file for class name
../3-Phrases/drjava2:File getFileForClassName(QString;) | get file for class name
../3-Phrases/drjava2:File getFileForClassName(QString;) | get file for class name
../3-Phrases/drjava2:RegionListUserObj<QR;> getUserObjForRegion(QR;) | get user obj for region
../3-Phrases/drjava2:void addActionForKeyStroke(QKeyStroke;QAction;) | add action for key stroke
../3-Phrases/drjava2:void addActionForKeyStroke(QKeyStroke;QAction;) | add action for key stroke
../3-Phrases/drjava2:int _getIndexForError(QDJError;) | get index for error
../3-Phrases/drjava2:void prepareForRun(QOpenDefinitionsDocument;) | prepare for run
../3-Phrases/drjava2:RegionListUserObj<QBrowserDocumentRegion;> getUserObjForRegion(QBrowserDocumentRegion;) | get user obj for region
../3-Phrases/drjava2:LeafNode<QItemT;> getNodeForDoc(QItemT;) | get node for doc
../3-Phrases/freecol2:ArrayList<QGoods;> getGoodsForSaleInIndianSettlement(QUnit;QSettlement;) | get goods for sale in indian settlement
../3-Phrases/freecol2:void payForBuilding(QColony;) | pay for building
../3-Phrases/freecol2:Integer getTurnForMessageIgnored(QString;) | get turn for message ignored
../3-Phrases/freecol2:void updateGotoPathForActiveUnit() | update goto path for active unit
../3-Phrases/freecol2:UnitType getExpertForProducing(QGoodsType;) | get expert for producing
../3-Phrases/freecol2:int paidForSale(QGoodsType;) | paid for sale
../3-Phrases/freecol2:int getPaidForSale() | get paid for sale
../3-Phrases/freecol2:void setPaidForSale(I) | set paid for sale
../3-Phrases/freecol2:boolean isForested() | is for ested
../3-Phrases/freecol2:boolean checkForNewMissionaryConvert() | check for new missionary convert
../3-Phrases/freecol2:void checkForNewIndian() | check for new indian
../3-Phrases/freecol2:boolean isForested() | is for ested
../3-Phrases/freecol2:boolean checkForDeath(QPlayer;) | check for death
../3-Phrases/freecol2:int getTurnsForRepair() | get turns for repair
../3-Phrases/freecol2:Building getBuildingForProducing(QGoodsType;) | get building for producing
../3-Phrases/freecol2:Building getBuildingForConsuming(QGoodsType;) | get building for consuming
../3-Phrases/freecol2:int getPriceForBuilding() | get price for building
../3-Phrases/freecol2:void payForBuilding() | pay for building
../3-Phrases/freecol2:void checkForNewColonist() | check for new colonist
../3-Phrases/freecol2:ModelMessage checkForGovMgtChangeMessage() | check for gov mgt change message
../3-Phrases/freecol2:void waitForAndSetNewQuestionId() | wait for and set new question id
../3-Phrases/freecol2:NetworkReplyObject waitForNetworkReply(I) | wait for network reply
../3-Phrases/freecol2:NetworkReplyObject waitForStreamedNetworkReply(I) | wait for streamed network reply
../3-Phrases/freecol2:void revealMapForAllPlayers() | reveal map for all players
../3-Phrases/freecol2:void checkForREFDefeat() | check for ref defeat
../3-Phrases/freecol2:boolean isWorkForREF() | is work for ref
../3-Phrases/freecol2:boolean isWorkForREF() | is work for ref
../3-Phrases/freecol2:AIUnit getBraveForSeekAndDestroy(QIndianSettlement;) | get br ave for seek and destroy
../3-Phrases/freecol2:boolean isTargetValidForSeekAndDestroy(QUnit;QUnit;) | is target valid for seek and destroy
../3-Phrases/freecol2:boolean isTargetValidForSeekAndDestroy(QUnit;QUnit;) | is target valid for seek and destroy
../3-Phrases/freecol2:boolean checkForREFDefeat() | check for ref defeat
../3-Phrases/freecol2:Element payForBuilding(QConnection;QElement;) | pay for building
../3-Phrases/freecol2:void checkGeneralCondForTradeQuery(QElement;QPlayer;QUnit;QSettlement;QGoods;) | check general cond for trade query
../3-Phrases/freecol2:Element goodsForSaleRequest(QConnection;QElement;) | goods for sale request
../3-Phrases/freecol2:Player checkForWinner() | check for winner
../3-Phrases/freecol2:UnitType generateSkillForLocation(QMap;QTile;QNationType;) | generate skill for location
../3-Phrases/freemind:void stopTimerForDelayedSelection() | stop timer for delayed selection
../3-Phrases/freemind:void obtainFocusForSelected() | obtain focus for selected
../3-Phrases/freemind:String getItemForZoom(F) | get item for zoom
../3-Phrases/freemind:String getProgramForFile(QString;) | get program for file
../3-Phrases/freemind:JPopupMenu getPopupForModel(Qjava.lang.Object;) | get popup for model
../3-Phrases/freemind:MindMapNode getTargetForID(QString;) | get target for id
../3-Phrases/freemind:MindMapLink getLinkForID(QString;) | get link for id
../3-Phrases/freemind:MindMapNode getTargetForID(QString;) | get target for id
../3-Phrases/freemind:MindMapLink getLinkForID(QString;) | get link for id
../3-Phrases/freemind:JPopupMenu getPopupForModel(Qjava.lang.Object;) | get popup for model
../3-Phrases/freemind:void valueForPathChanged(QTreePath;QObject;) | value for path changed
../3-Phrases/freemind:String getShortTextForLink(QMindMapNode;) | get short text for link
../3-Phrases/freemind:JPopupMenu getPopupForModel(Qjava.lang.Object;) | get popup for model
../3-Phrases/freemind:JPopupMenu getPopupForModel(Qjava.lang.Object;) | get popup for model
../3-Phrases/freemind:void removeSelectionForHooks(QNodeView;) | remove selection for hooks
../3-Phrases/freemind:void addSelectionForHooks(QNodeView;) | add selection for hooks
../3-Phrases/freemind:boolean isWaitForMapSharingSelected() | is wait for map sharing selected
../3-Phrases/freemind:SpringLayout.Constraints getConstraintsForCell(IIQContainer;I) | get constraints for cell
../3-Phrases/gantt:TaskNode getTaskNodeForTask(QTask;) | get task node for task
../3-Phrases/gantt:void setAskForSave(Z) | set ask for save
../3-Phrases/gantt:ResourceNode getNodeForResource(QProjectResource;) | get node for resource
../3-Phrases/gantt:AssignmentNode getNodeForAssigment(QResourceAssignment;) | get node for assigment
../3-Phrases/gantt:void renameCustomColumnForAllNestedTask(QTaskContainmentHierarchyFacade;QTask;QString;QString;) | rename custom column for all nested task
../3-Phrases/gantt:String getIdForName(QString;) | get id for name
../3-Phrases/gantt:String getNameForId(QString;) | get name for id
../3-Phrases/gantt:int getOrderForName(QString;) | get order for name
../3-Phrases/gantt:String getNameForOrder(I) | get name for order
../3-Phrases/gantt:List getListForTask(QList;QTask;) | get list for task
../3-Phrases/gantt:boolean isValidForMRU() | is valid for mru
../3-Phrases/gantt:boolean isValidForMRU() | is valid for mru
../3-Phrases/gantt:boolean isValidForMRU() | is valid for mru
../3-Phrases/gantt:boolean isValidForMRU() | is valid for mru
../3-Phrases/gantt:boolean isValidForMRU() | is valid for mru
../3-Phrases/gantt:SpringLayout.Constraints getConstraintsForCell(IIQContainer;I) | get constraints for cell
../3-Phrases/gantt:boolean askForApplyChanges() | ask for apply changes
../3-Phrases/gantt:String formatRoleForTooltip(QRole;) | format role for tooltip
../3-Phrases/gantt:Role getRoleForAssigment() | get role for assigment
../3-Phrases/gantt:void setRoleForAssigment(QRole;) | set role for assigment
../3-Phrases/gantt:Role getRoleForAssignment() | get role for assignment
../3-Phrases/gantt:void setRoleForAssignment(QRole;) | set role for assignment
../3-Phrases/gantt:Role getRoleForAssignment() | get role for assignment
../3-Phrases/gantt:void setRoleForAssignment(QRole;) | set role for assignment
../3-Phrases/gantt:boolean existsForID(QString;) | exists for id
../3-Phrases/gantt:Role getRoleForAssignment() | get role for assignment
../3-Phrases/gantt:void setRoleForAssignment(QRole;) | set role for assignment
../3-Phrases/gantt:Role getRoleForAssignment() | get role for assignment
../3-Phrases/gantt:void setRoleForAssignment(QRole;) | set role for assignment
../3-Phrases/hibernate-3.3.1.GA:boolean useStreamsForBinary() | use streams for binary
../3-Phrases/hibernate-3.3.1.GA:String getForUpdateNowaitString() | get for update nowait string
../3-Phrases/hibernate-3.3.1.GA:String getForUpdateString(QString;) | get for update string
../3-Phrases/hibernate-3.3.1.GA:String getForUpdateNowaitString(QString;) | get for update nowait string
../3-Phrases/hibernate-3.3.1.GA:boolean useMaxForLimit() | use max for limit
../3-Phrases/hibernate-3.3.1.GA:boolean useMaxForLimit() | use max for limit
../3-Phrases/hibernate-3.3.1.GA:boolean supportsForUpdate() | supports for update
../3-Phrases/hibernate-3.3.1.GA:boolean supportsForUpdateOf() | supports for update of
../3-Phrases/hibernate-3.3.1.GA:boolean supportsForUpdateNowait() | supports for update nowait
../3-Phrases/hibernate-3.3.1.GA:boolean supportsOuterJoinForUpdate() | supports outer join for update
../3-Phrases/hibernate-3.3.1.GA:boolean useMaxForLimit() | use max for limit
../3-Phrases/hibernate-3.3.1.GA:boolean useMaxForLimit() | use max for limit
../3-Phrases/hibernate-3.3.1.GA:boolean supportsForUpdate() | supports for update
../3-Phrases/hibernate-3.3.1.GA:boolean supportsOuterJoinForUpdate() | supports outer join for update
../3-Phrases/hibernate-3.3.1.GA:String getForUpdateString(QString;) | get for update string
../3-Phrases/hibernate-3.3.1.GA:boolean supportsOuterJoinForUpdate() | supports outer join for update
../3-Phrases/hibernate-3.3.1.GA:boolean supportsForUpdateOf() | supports for update of
../3-Phrases/hibernate-3.3.1.GA:boolean useMaxForLimit() | use max for limit
../3-Phrases/hibernate-3.3.1.GA:String getForUpdateNowaitString() | get for update nowait string
../3-Phrases/hibernate-3.3.1.GA:String getForUpdateString(QString;) | get for update string
../3-Phrases/hibernate-3.3.1.GA:String getForUpdateNowaitString(QString;) | get for update nowait string
../3-Phrases/hibernate-3.3.1.GA:boolean useMaxForLimit() | use max for limit
../3-Phrases/hibernate-3.3.1.GA:String getForUpdateString() | get for update string
../3-Phrases/hibernate-3.3.1.GA:String getForUpdateString() | get for update string
../3-Phrases/hibernate-3.3.1.GA:String getForUpdateString(QString;) | get for update string
../3-Phrases/hibernate-3.3.1.GA:String getForUpdateString() | get for update string
../3-Phrases/hibernate-3.3.1.GA:boolean useMaxForLimit() | use max for limit
../3-Phrases/hibernate-3.3.1.GA:String getForUpdateString() | get for update string
../3-Phrases/hibernate-3.3.1.GA:boolean useMaxForLimit() | use max for limit
../3-Phrases/hibernate-3.3.1.GA:String getForUpdateString(QLockMode;) | get for update string
../3-Phrases/hibernate-3.3.1.GA:String getForUpdateString() | get for update string
../3-Phrases/hibernate-3.3.1.GA:boolean supportsOuterJoinForUpdate() | supports outer join for update
../3-Phrases/hibernate-3.3.1.GA:String getForUpdateString(QString;) | get for update string
../3-Phrases/hibernate-3.3.1.GA:String getForUpdateNowaitString() | get for update nowait string
../3-Phrases/hibernate-3.3.1.GA:String getForUpdateNowaitString(QString;) | get for update nowait string
../3-Phrases/hibernate-3.3.1.GA:String getForUpdateString() | get for update string
../3-Phrases/hibernate-3.3.1.GA:boolean useMaxForLimit() | use max for limit
../3-Phrases/hibernate-3.3.1.GA:String getForUpdateString() | get for update string
../3-Phrases/hibernate-3.3.1.GA:String getForUpdateString() | get for update string
../3-Phrases/hibernate-3.3.1.GA:boolean useMaxForLimit() | use max for limit
../3-Phrases/hibernate-3.3.1.GA:boolean supportsOuterJoinForUpdate() | supports outer join for update
../3-Phrases/hibernate-3.3.1.GA:String getForUpdateString() | get for update string
../3-Phrases/hibernate-3.3.1.GA:String getForUpdateString() | get for update string
../3-Phrases/hibernate-3.3.1.GA:boolean supportsOuterJoinForUpdate() | supports outer join for update
../3-Phrases/hibernate-3.3.1.GA:boolean useMaxForLimit() | use max for limit
../3-Phrases/hibernate-3.3.1.GA:String getForUpdateString() | get for update string
../3-Phrases/hibernate-3.3.1.GA:String getForUpdateString() | get for update string
../3-Phrases/hibernate-3.3.1.GA:void prepareCollectionForUpdate(QPersistentCollection;QCollectionEntry;QEntityMode;QSessionFactoryImplementor;) | prepare collection for update
../3-Phrases/hibernate-3.3.1.GA:AST generateSyntheticDotNodeForNonQualifiedPropertyRef(QAST;QFromElement;) | generate synthetic dot node for non qualified property ref
../3-Phrases/hibernate-3.3.1.GA:List getFromElementsForLoad() | get from elements for load
../3-Phrases/hibernate-3.3.1.GA:void checkForDuplicateClassAlias(QString;) | check for duplicate class alias
../3-Phrases/hibernate-3.3.1.GA:void prepareForDot(QString;) | prepare for dot
../3-Phrases/hibernate-3.3.1.GA:void checkForCorrelatedSubquery(QString;) | check for correlated subquery
../3-Phrases/hibernate-3.3.1.GA:void prepareForDot(QString;) | prepare for dot
../3-Phrases/hibernate-3.3.1.GA:void prepareForIndex(QQueryTranslatorImpl;) | prepare for index
../3-Phrases/hibernate-3.3.1.GA:String createNameForCollection(QString;) | create name for collection
../3-Phrases/hibernate-3.3.1.GA:Queryable getEntityPersisterForName(QString;) | get entity persister for name
../3-Phrases/hibernate-3.3.1.GA:int getIndexForColumnName(QString;QResultSetWrapper;) | get index for column name
../3-Phrases/hibernate-3.3.1.GA:boolean isReadyForSerialization() | is ready for serialization
../3-Phrases/hibernate-3.3.1.GA:String[] getReturnAliasesForTransformer() | get return aliases for transformer
../3-Phrases/hibernate-3.3.1.GA:void prepareForAutoDiscovery(QMetadata;) | prepare for auto discovery
../3-Phrases/hibernate-3.3.1.GA:String getSubclassForDiscriminatorValue(QObject;) | get subclass for discriminator value
../3-Phrases/hibernate-3.3.1.GA:String getSubclassForDiscriminatorValue(QObject;) | get subclass for discriminator value
../3-Phrases/hibernate-3.3.1.GA:String getSubclassForDiscriminatorValue(QObject;) | get subclass for discriminator value
../3-Phrases/hibernate-3.3.1.GA:String getSubclassForDiscriminatorValue(QObject;) | get subclass for discriminator value
../3-Phrases/hibernate-3.3.1.GA:Object getForInsert(QObject;QMap;QSessionImplementor;) | get for insert
../3-Phrases/hibernate-3.3.1.GA:Object getForInsert(QObject;QMap;QSessionImplementor;) | get for insert
../3-Phrases/hibernate-3.3.1.GA:Object getForInsert(QObject;QMap;QSessionImplementor;) | get for insert
../3-Phrases/hibernate-3.3.1.GA:Object getForInsert(QObject;QMap;QSessionImplementor;) | get for insert
../3-Phrases/hibernate-3.3.1.GA:Object getForInsert(QObject;QMap;QSessionImplementor;) | get for insert
../3-Phrases/hibernate-3.3.1.GA:Object getForInsert(QObject;QMap;QSessionImplementor;) | get for insert
../3-Phrases/hibernate-3.3.1.GA:Object getForInsert(QObject;QMap;QSessionImplementor;) | get for insert
../3-Phrases/hibernate-3.3.1.GA:Object getForInsert(QObject;QMap;QSessionImplementor;) | get for insert
../3-Phrases/hibernate-3.3.1.GA:Object getForInsert(QObject;QMap;QSessionImplementor;) | get for insert
../3-Phrases/hibernate-3.3.1.GA:Namespace getNamespaceForPrefix(QString;) | get namespace for prefix
../3-Phrases/hibernate-3.3.1.GA:Namespace getNamespaceForURI(QString;) | get namespace for uri
../3-Phrases/hibernate-3.3.1.GA:List getNamespacesForURI(QString;) | get namespaces for uri
../3-Phrases/hibernate-3.3.1.GA:Namespace getNamespaceForPrefix(QString;) | get namespace for prefix
../3-Phrases/hibernate-3.3.1.GA:Namespace getNamespaceForURI(QString;) | get namespace for uri
../3-Phrases/hibernate-3.3.1.GA:List getNamespacesForURI(QString;) | get namespaces for uri
../3-Phrases/hibernate-3.3.1.GA:String getStreamsForBinaryEnabled() | get streams for binary enabled
../3-Phrases/hibernate-3.3.1.GA:void setStreamsForBinaryEnabled(QString;) | set streams for binary enabled
../3-Phrases/hibernate-3.3.1.GA:Class classForName(QString;) | class for name
../3-Phrases/hibernate-3.3.1.GA:Class classForName(QString;QClass;) | class for name
../3-Phrases/hibernate-3.3.1.GA:boolean isMarkedForRollback(I) | is marked for rollback
../3-Phrases/hibernate-3.3.1.GA:boolean isMarkedForRollback(Qjavax.transaction.Transaction;) | is marked for rollback
../3-Phrases/hsqldb:Index getUniqueConstraintIndexForColumns([I) | get unique constraint index for columns
../3-Phrases/hsqldb:Constraint getConstraintForColumns(QTable;[I[I) | get constraint for columns
../3-Phrases/hsqldb:Constraint getUniqueConstraintForColumns([I) | get unique constraint for columns
../3-Phrases/hsqldb:Constraint getUniqueOrPKConstraintForIndex(QIndex;) | get unique or pk constraint for index
../3-Phrases/hsqldb:Index getIndexForColumn(QSession;I) | get index for column
../3-Phrases/hsqldb:Index getIndexForColumns([Z) | get index for columns
../3-Phrases/hsqldb:Index getIndexForColumns([IZ) | get index for columns
../3-Phrases/hsqldb:int typeForClass(QClass;) | type for class
../3-Phrases/hsqldb:RowIterator findFirstRowForDelete(QSession;[QObject;[I) | find first row for delete
../3-Phrases/hsqldb:int compareRowForInsert(QSession;QRow;QRow;) | compare row for insert
../3-Phrases/hsqldb:void updateForDelete(QNode;) | update for delete
../3-Phrases/hsqldb:Table findUserTableForIndex(QSession;QString;QString;) | find user table for index
../3-Phrases/hsqldb:Class classForMethodFQN(QString;) | class for method fqn
../3-Phrases/hsqldb:Class classForName(QString;) | class for name
../3-Phrases/hsqldb:Expression getExpressionForAlias([QExpression;I) | get expression for alias
../3-Phrases/hsqldb:void resolveTypeForLike(QSession;) | resolve type for like
../3-Phrases/hsqldb:void resolveTypeForIn(QSession;) | resolve type for in
../3-Phrases/hsqldb:boolean setForJoin(QTableFilter;Z) | set for join
../3-Phrases/hsqldb:HsqlName getSchemaHsqlNameForWrite(QString;) | get schema hsql name for write
../3-Phrases/hsqldb:String getSchemaNameForWrite(QString;) | get schema name for write
../3-Phrases/hsqldb:boolean supportsSelectForUpdate() | supports select for update
../3-Phrases/hsqldb:String getForEachSpec(I) | get for each spec
../3-Phrases/hsqldb:String promptForPassword(QString;) | prompt for password
../3-Phrases/hsqldb:void parseFileForTables() | parse file for tables
../3-Phrases/hsqldb:void parseFileForTheRest(QTransferTable;QDataAccessPoint;) | parse file for the rest
../3-Phrases/hsqldb:TransferResultSet parseFileForData(QString;) | parse file for data
../3-Phrases/iReport:boolean isIsForPrompting() | is is for prompting
../3-Phrases/iReport:void setIsForPrompting(Z) | set is for prompting
../3-Phrases/iReport:void checkForModifiedFiles() | check for modified files
../3-Phrases/iReport:void setUsingCurrentFilesDirectoryForCompiles(Z) | set using current files directory for compiles
../3-Phrases/iReport:boolean isUsingCurrentFilesDirectoryForCompiles() | is using current files directory for compiles
../3-Phrases/iReport:void jCheckBoxUseCurrentFilesDirectoryForCompilesActionPerformed(Qjava.awt.event.ActionEvent;) | j check box use current files directory for compiles action performed
../3-Phrases/iReport:HashMap promptForParameters(QReport;) | prompt for parameters
../3-Phrases/Jabref:int waitForImpl() | wait for impl
../3-Phrases/Jabref:String[] getRequiredFieldsForCustomization() | get required fields for customization
../3-Phrases/Jabref:String getKeysForSelection() | get keys for selection
../3-Phrases/Jabref:String[] getRequiredFieldsForCustomization() | get required fields for customization
../3-Phrases/Jabref:String[] getRequiredFieldsForCustomization() | get required fields for customization
../3-Phrases/Jabref:String[] getRequiredFieldsForCustomization() | get required fields for customization
../3-Phrases/Jabref:String[] getRequiredFieldsForCustomization() | get required fields for customization
../3-Phrases/Jabref:KeyStroke getKeyForMac(QKeyStroke;) | get key for mac
../3-Phrases/Jabref:void updateTypesForEntries(QString;) | update types for entries
../3-Phrases/Jabref:boolean setCiteKeyForEntry(QString;QString;) | set cite key for entry
../3-Phrases/Jabref:String resolveForStrings(QString;) | resolve for strings
../3-Phrases/Jabref:List<QBibtexEntry;> resolveForStrings(QCollection<QBibtexEntry;>;Z) | resolve for strings
../3-Phrases/Jabref:BibtexEntry resolveForStrings(QBibtexEntry;Z) | resolve for strings
../3-Phrases/Jabref:boolean checkForDuplicateKeyAndAdd(QString;QString;Z) | check for duplicate key and add
../3-Phrases/Jabref:String fixAuthorForAlphabetization(QString;) | fix author for alphabetization
../3-Phrases/Jabref:String getAuthorsForAlphabetization() | get authors for alphabetization
../3-Phrases/Jabref:String getNameForAlphabetization() | get name for alphabetization
../3-Phrases/Jabref:void updateCompletersForEntry(QHashMap<QString;QAbstractAutoCompleter;>;QBibtexEntry;) | update completers for entry
../3-Phrases/Jabref:String quoteForHTML(QString;) | quote for html
../3-Phrases/Jabref:OpenFileFilter getFileFilterForField(QString;) | get file filter for field
../3-Phrases/Jabref:List<QString;> findEncodingsForString(QString;) | find encodings for string
../3-Phrases/Jabref:boolean waitForFileLock(QFile;I) | wait for file lock
../3-Phrases/Jabref:CONS AutoSetExternalFileForEntries(QBasePanel;QString;) | auto set external file for entries
../3-Phrases/Jabref:List<QFileListEntry;> getExternalLinksForEntries(QList<QBibtexEntry;>;) | get external links for entries
../3-Phrases/Jabref:FindResult lookForFullTextAtURL(QString;) | look for full text at url
../3-Phrases/Jabref:Map<QBibtexEntry;Qjava.util.List<QFile;>;> findFilesForSet(QCollection<QBibtexEntry;>;QCollection<QString;>;QList<QFile;>;QString;) | find files for set
../3-Phrases/Jabref:String getDescriptionForPreview() | get description for preview
../3-Phrases/Jabref:void refreshForNewDatabase(QBibtexDatabase;) | refresh for new database
../3-Phrases/Jabref:String getDescriptionForPreview(QString;QString;ZZ) | get description for preview
../3-Phrases/Jabref:void refreshGroupsForNewDatabase(QBibtexDatabase;) | refresh groups for new database
../3-Phrases/Jabref:void setLayoutForSelectedGroup() | set layout for selected group
../3-Phrases/Jabref:AbstractUndoableEdit getUndoForAddPreviousEntries() | get undo for add previous entries
../3-Phrases/Jabref:void refreshForNewDatabase(QBibtexDatabase;) | refresh for new database
../3-Phrases/Jabref:String getDescriptionForPreview(QString;QAST;ZZ) | get description for preview
../3-Phrases/Jabref:void updateTypesForEntries(QString;) | update types for entries
../3-Phrases/Jabref:String[] getIconTypeForColumn(I) | get icon type for column
../3-Phrases/Jabref:String getNewFileForMac(QJFrame;QFile;QString;IZZQFilenameFilter;) | get new file for mac
../3-Phrases/Jabref:String[] getIconTypeForColumn(I) | get icon type for column
../3-Phrases/Jabref:Comparator<QBibtexEntry;> getComparatorForColumn(I) | get comparator for column
../3-Phrases/Jabref:SortedList<QBibtexEntry;> getSortedForTable() | get sorted for table
../3-Phrases/Jabref:String checkForEncoding(QReader;) | check for encoding
../3-Phrases/Jabref:void schedulePluginForDeletion(QString;) | schedule plugin for deletion
../3-Phrases/Jabref:void setStyleForTag(QString;QString;QStyledDocument;) | set style for tag
../3-Phrases/Jabref:void insertTextForTag() | insert text for tag
../3-Phrases/Jabref:void testFixAuthorForAlphabetization() | test fix author for alphabetization
../3-Phrases/Jabref:void testGetAuthorsForAlphabetization() | test get authors for alphabetization
../3-Phrases/Jabref:void testEntryEditorForNameFieldAutoCompleter() | test entry editor for name field auto completer
../3-Phrases/Jabref:void testEntryEditorForFieldAnotherAutoCompleter() | test entry editor for field another auto completer
../3-Phrases/jajuk:Directory getDirectoryForIO(Qjava.io.File;) | get directory for io
../3-Phrases/jajuk:String getTitleForType(I) | get title for type
../3-Phrases/javaHMO:Show pickNextShowForDownloading() | pick next show for downloading
../3-Phrases/jbidwatcher:XMLParseException valueMissingForAttribute(QString;I) | value missing for attribute
../3-Phrases/jbidwatcher:SpringLayout.Constraints getConstraintsForCell(IIQContainer;I) | get constraints for cell
../3-Phrases/jbidwatcher:String getHTMLForEntry(QString;QString;) | get html for entry
../3-Phrases/jbidwatcher:AuctionServer getServerForIdentifier(QString;) | get server for identifier
../3-Phrases/jbidwatcher:AuctionServer getServerForUrlString(QString;) | get server for url string
../3-Phrases/jbidwatcher:void setSendsNotificationForEachKeystroke(Z) | set sends notification for each keystroke
../3-Phrases/Jftp:NtlmChallenge getChallengeForDomain() | get challenge for domain
../3-Phrases/Jftp:void checkForUpgrade() | check for upgrade
../3-Phrases/Jftp:int checkForExistingFile(QDirEntry;) | check for existing file
../3-Phrases/JHotDraw-7.0.8:Window getWindowForComponent(QComponent;) | get window for component
../3-Phrases/MegaMek-0.32.0:void updateRangeDisplayForAmmo(QMounted;) | update range display for ammo
../3-Phrases/MegaMek-0.32.0:boolean getNagForBotReadme() | get nag for bot readme
../3-Phrases/MegaMek-0.32.0:boolean getNagForMapEdReadme() | get nag for map ed readme
../3-Phrases/MegaMek-0.32.0:boolean getNagForMASC() | get nag for masc
../3-Phrases/MegaMek-0.32.0:boolean getNagForNoAction() | get nag for no action
../3-Phrases/MegaMek-0.32.0:boolean getNagForPSR() | get nag for psr
../3-Phrases/MegaMek-0.32.0:boolean getNagForReadme() | get nag for readme
../3-Phrases/MegaMek-0.32.0:void setNagForBotReadme(Z) | set nag for bot readme
../3-Phrases/MegaMek-0.32.0:void setNagForMapEdReadme(Z) | set nag for map ed readme
../3-Phrases/MegaMek-0.32.0:void setNagForMASC(Z) | set nag for masc
../3-Phrases/MegaMek-0.32.0:void setNagForNoAction(Z) | set nag for no action
../3-Phrases/MegaMek-0.32.0:void setNagForPSR(Z) | set nag for psr
../3-Phrases/MegaMek-0.32.0:void setNagForReadme(Z) | set nag for readme
../3-Phrases/MegaMek-0.32.0:void waitForHex(QIHex;) | wait for hex
../3-Phrases/MegaMek-0.32.0:void waitForHex(QIHex;) | wait for hex
../3-Phrases/MegaMek-0.32.0:void updateRangeDisplayForAmmo(QMounted;) | update range display for ammo
../3-Phrases/MegaMek-0.32.0:boolean getNagForBotReadme() | get nag for bot readme
../3-Phrases/MegaMek-0.32.0:boolean getNagForMapEdReadme() | get nag for map ed readme
../3-Phrases/MegaMek-0.32.0:boolean getNagForMASC() | get nag for masc
../3-Phrases/MegaMek-0.32.0:boolean getNagForNoAction() | get nag for no action
../3-Phrases/MegaMek-0.32.0:boolean getNagForPSR() | get nag for psr
../3-Phrases/MegaMek-0.32.0:boolean getNagForReadme() | get nag for readme
../3-Phrases/MegaMek-0.32.0:void setNagForBotReadme(Z) | set nag for bot readme
../3-Phrases/MegaMek-0.32.0:void setNagForMapEdReadme(Z) | set nag for map ed readme
../3-Phrases/MegaMek-0.32.0:void setNagForMASC(Z) | set nag for masc
../3-Phrases/MegaMek-0.32.0:void setNagForNoAction(Z) | set nag for no action
../3-Phrases/MegaMek-0.32.0:void setNagForPSR(Z) | set nag for psr
../3-Phrases/MegaMek-0.32.0:void setNagForReadme(Z) | set nag for readme
../3-Phrases/MegaMek-0.32.0:void modifyPhysicalBTHForAdvantages(QEntity;QEntity;QToHitData;QIGame;) | modify physical bth for advantages
../3-Phrases/MegaMek-0.32.0:Team getTeamForPlayer(QPlayer;) | get team for player
../3-Phrases/MegaMek-0.32.0:void checkForCompleteDeployment() | check for complete deployment
../3-Phrases/MegaMek-0.32.0:boolean shouldDeployForRound(I) | should deploy for round
../3-Phrases/MegaMek-0.32.0:boolean checkForMagneticClamp() | check for magnetic clamp
../3-Phrases/MegaMek-0.32.0:boolean checkForValidNonInfantryAndOrProtomechs(I) | check for valid non infantry and or protomechs
../3-Phrases/MegaMek-0.32.0:void adjustStartingPosForReinforcements() | adjust starting pos for reinforcements
../3-Phrases/MegaMek-0.32.0:int modifyPhysicalDamagaForMeleeSpecialist() | modify physical da ma ga for melee specialist
../3-Phrases/MegaMek-0.32.0:int lateralShiftForTurn(II) | lateral shift for turn
../3-Phrases/MegaMek-0.32.0:int turnForLateralShift(I) | turn for lateral shift
../3-Phrases/MegaMek-0.32.0:LosEffects losForCoords(QIGame;QAttackInfo;QCoords;QBuilding;) | los for coords
../3-Phrases/MegaMek-0.32.0:boolean isEligibleForMovement() | is eligible for movement
../3-Phrases/MegaMek-0.32.0:boolean checkForMASCFailure(QMovePath;QVector;QVector;) | check for masc failure
../3-Phrases/MegaMek-0.32.0:int getGyroTypeForString(QString;) | get gyro type for string
../3-Phrases/MegaMek-0.32.0:int getCockpitTypeForString(QString;) | get cockpit type for string
../3-Phrases/MegaMek-0.32.0:boolean isEligibleForMovement() | is eligible for movement
../3-Phrases/MegaMek-0.32.0:boolean isEligibleForFiring() | is eligible for firing
../3-Phrases/MegaMek-0.32.0:boolean isEligibleForMovement() | is eligible for movement
../3-Phrases/MegaMek-0.32.0:boolean isEligibleForOffboard() | is eligible for offboard
../3-Phrases/MegaMek-0.32.0:boolean isEligibleForPhysical() | is eligible for physical
../3-Phrases/MegaMek-0.32.0:boolean isEligibleForTargetingPhase() | is eligible for targeting phase
../3-Phrases/MegaMek-0.32.0:void addPilotingModifierForTerrain(QPilotingRollData;QCoords;) | add piloting modifier for terrain
../3-Phrases/MegaMek-0.32.0:void addPilotingModifierForTerrain(QPilotingRollData;QMoveStep;) | add piloting modifier for terrain
../3-Phrases/MegaMek-0.32.0:void addPilotingModifierForTerrain(QPilotingRollData;) | add piloting modifier for terrain
../3-Phrases/MegaMek-0.32.0:Team getTeamForPlayer(QPlayer;) | get team for player
../3-Phrases/MegaMek-0.32.0:void checkForCompleteDeployment() | check for complete deployment
../3-Phrases/MegaMek-0.32.0:boolean shouldDeployForRound(I) | should deploy for round
../3-Phrases/MegaMek-0.32.0:Vector getEntitiesToDeployForRound(I) | get entities to deploy for round
../3-Phrases/MegaMek-0.32.0:boolean checkForMagneticClamp() | check for magnetic clamp
../3-Phrases/MegaMek-0.32.0:boolean checkForValidNonInfantryAndOrProtomechs(I) | check for valid non infantry and or protomechs
../3-Phrases/MegaMek-0.32.0:void markForTesting() | mark for testing
../3-Phrases/MegaMek-0.32.0:void checkCriticalSlotsForEquipment(QEntity;QVector;QVector;QVector;) | check critical slots for equipment
../3-Phrases/MegaMek-0.32.0:void checkForObservers() | check for observers
../3-Phrases/MegaMek-0.32.0:void prepareForPhase(I) | prepare for phase
../3-Phrases/MegaMek-0.32.0:void checkForWashedInfernos(QEntity;QCoords;) | check for washed infernos
../3-Phrases/MegaMek-0.32.0:void checkFor20Damage() | check for 20 damage
../3-Phrases/MegaMek-0.32.0:void checkForFlamingDeath() | check for flaming death
../3-Phrases/MegaMek-0.32.0:void checkForVacuumDeath() | check for vacuum death
../3-Phrases/MegaMek-0.32.0:void checkForSuffocation() | check for suffocation
../3-Phrases/MegaMek-0.32.0:Vector scanForBoardsInDir(QFile;QString;II) | scan for boards in dir
../3-Phrases/MegaMek-0.32.0:Vector scanForBoards(II) | scan for boards
../3-Phrases/MegaMek-0.32.0:Vector scanForBoards(IIZ) | scan for boards
../3-Phrases/MegaMek-0.32.0:boolean checkForCollapse(QBuilding;QHashtable;) | check for collapse
../3-Phrases/MegaMek-0.32.0:void checkForVehicleFire(QTank;Z) | check for vehicle fire
../3-Phrases/np:int tokenForName(String name) | token for name
../3-Phrases/np:Type typeForString(String typeName) | type for string
../3-Phrases/np:static Window windowForComponent(Component comp) | window window for component
../3-Phrases/np:int indexForPropertyName(String propertyName) | index for property name
../3-Phrases/np:int actualHashForEqual() | actual hash for equal
../3-Phrases/PlanetaMessenger:boolean checkForPluginUser(I) | check for plugin user
../3-Phrases/prefuse:void waitForImage(QImage;) | wait for image
../3-Phrases/prefuse:void checkForComodification() | check for comodification
../3-Phrases/prefuse:void valueForPathChanged(QTreePath;QObject;) | value for path changed
../3-Phrases/rhino:int look_for_slash_slash([CII) | look for slash slash
../3-Phrases/rhino:int rewriteForNumberVariables(QNode;) | rewrite for number variables
../3-Phrases/rhino:Node createForIn(QNode;QNode;QNode;QNode;Z) | create for in
../3-Phrases/rhino:String makeUrlForGeneratedScript(ZQString;I) | make url for generated script
../3-Phrases/rhino:void look_for_id_definitions([CIIZ) | look for id definitions
../3-Phrases/rhino:void lookForVariableAccess(QOptFunctionNode;QNode;) | look for variable access
../3-Phrases/rhino:void setCheckForLabel() | set check for label
../3-Phrases/rhino:void valueForPathChanged(QTreePath;QObject;) | value for path changed
../3-Phrases/SweetHome3D:void valueForPathChanged(QTreePath;QObject;) | value for path changed
../3-Phrases/vuze:BuddyPluginBuddy getBuddyPluginBuddyForVuze(QString;) | get buddy plugin buddy for vu ze
../3-Phrases/vuze:void registerForSelection(QClientConnection;) | register for selection
../3-Phrases/vuze:int getPersistForSeconds() | get persist for seconds
../3-Phrases/vuze:int getPersistForSeconds() | get persist for seconds
../3-Phrases/vuze:byte[] getKeyForKeyBlock([B) | get key for key block
../3-Phrases/vuze:void setStorageForKey(QString;[B) | set storage for key
../3-Phrases/vuze:byte[] getStorageForKey(QString;) | get storage for key
../3-Phrases/vuze:int getMaxFailForLiveCount() | get max fail for live count
../3-Phrases/vuze:int getMaxFailForUnknownCount() | get max fail for unknown count
../3-Phrases/vuze:int getMaxFailForLiveCount() | get max fail for live count
../3-Phrases/vuze:int getMaxFailForUnknownCount() | get max fail for unknown count
../3-Phrases/vuze:DHTDBValue getValueForRelay(QDHTTransportContact;) | get value for relay
../3-Phrases/vuze:byte[] getKeyForKeyBlock([B) | get key for key block
../3-Phrases/vuze:void setStorageForKey(QString;[B) | set storage for key
../3-Phrases/vuze:byte[] getStorageForKey(QString;) | get storage for key
../3-Phrases/vuze:DHTDBValue getValueForRelay(QDHTTransportContact;) | get value for relay
../3-Phrases/vuze:DHTDBValue getValueForDeletion(I) | get value for deletion
../3-Phrases/vuze:int getMaxFailForLiveCount() | get max fail for live count
../3-Phrases/vuze:int getMaxFailForUnknownCount() | get max fail for unknown count
../3-Phrases/vuze:int getMaxFailForLiveCount() | get max fail for live count
../3-Phrases/vuze:int getMaxFailForUnknownCount() | get max fail for unknown count
../3-Phrases/vuze:int getMaxFailForLiveCount() | get max fail for live count
../3-Phrases/vuze:int getMaxFailForUnknownCount() | get max fail for unknown count
../3-Phrases/vuze:int getMaxFailForLiveCount() | get max fail for live count
../3-Phrases/vuze:int getMaxFailForUnknownCount() | get max fail for unknown count
../3-Phrases/vuze:InetSocketAddress askContactForExternalAddress(QDHTTransportUDPContactImpl;) | ask contact for external address
../3-Phrases/vuze:int getMaxFailForLiveCount() | get max fail for live count
../3-Phrases/vuze:int getMaxFailForUnknownCount() | get max fail for unknown count
../3-Phrases/vuze:boolean hasOutstandingWriteRequestForPiece(I) | has outstanding write request for piece
../3-Phrases/vuze:boolean hasOutstandingReadRequestForPiece(I) | has outstanding read request for piece
../3-Phrases/vuze:boolean hasOutstandingCheckRequestForPiece(I) | has outstanding check request for piece
../3-Phrases/vuze:boolean checkBlockConsistencyForWrite(QString;IIQDirectByteBuffer;) | check block consistency for write
../3-Phrases/vuze:boolean checkBlockConsistencyForRead(QString;III) | check block consistency for read
../3-Phrases/vuze:boolean checkBlockConsistencyForHint(QString;III) | check block consistency for hint
../3-Phrases/vuze:boolean useAccuracyForRank() | use accuracy for rank
../3-Phrases/vuze:void setReadyForRead() | set ready for read
../3-Phrases/vuze:boolean waitForEvent(J) | wait for event
../3-Phrases/vuze:boolean isReadyForWrite(QEventWaiter;) | is ready for write
../3-Phrases/vuze:long isReadyForRead(QEventWaiter;) | is ready for read
../3-Phrases/vuze:boolean checkForTestDone() | check for test done
../3-Phrases/vuze:long checkForNewPeakValue(QDownloadStats;JJ) | check for new peak value
../3-Phrases/vuze:boolean isReadyForWrite(QEventWaiter;) | is ready for write
../3-Phrases/vuze:long isReadyForRead(QEventWaiter;) | is ready for read
../3-Phrases/vuze:void setReadyForRead() | set ready for read
../3-Phrases/vuze:Object[] checkForMatch(QTransportHelper;IQByteBuffer;Z) | check for match
../3-Phrases/vuze:void registerForReadSelects(QselectListener;QObject;) | register for read selects
../3-Phrases/vuze:void registerForWriteSelects(QselectListener;QObject;) | register for write selects
../3-Phrases/vuze:boolean isReadyForWrite(QEventWaiter;) | is ready for write
../3-Phrases/vuze:boolean readyForWrite(Z) | ready for write
../3-Phrases/vuze:long isReadyForRead(QEventWaiter;) | is ready for read
../3-Phrases/vuze:boolean readyForRead(Z) | ready for read
../3-Phrases/vuze:void setReadyForRead() | set ready for read
../3-Phrases/vuze:boolean isReadyForWrite(QEventWaiter;) | is ready for write
../3-Phrases/vuze:long isReadyForRead(QEventWaiter;) | is ready for read
../3-Phrases/vuze:void setReadyForRead() | set ready for read
../3-Phrases/vuze:void registerForReadSelects(QselectListener;QObject;) | register for read selects
../3-Phrases/vuze:void registerForWriteSelects(QselectListener;QObject;) | register for write selects
../3-Phrases/vuze:void registerForReadSelects(QselectListener;QObject;) | register for read selects
../3-Phrases/vuze:void registerForWriteSelects(QselectListener;QObject;) | register for write selects
../3-Phrases/vuze:void registerForTimeouts(QPeerManagerRegistrationImpl;) | register for timeouts
../3-Phrases/vuze:String checkForTransmissionBasedClients(QString;QString;QString;QString;[BQString;) | check for transmission based clients
../3-Phrases/vuze:int getPersistForSeconds() | get persist for seconds
../3-Phrases/vuze:int getPersistForSeconds() | get persist for seconds
../3-Phrases/vuze:SpeedManagerLimitEstimate adjustForPersistence(QlimitEstimate;QlimitEstimate;QlimitEstimate;Z) | adjust for persistence
../3-Phrases/vuze:boolean checkForLowerLimits() | check for lower limits
../3-Phrases/vuze:int checkForMinUploadValue(I) | check for min upload value
../3-Phrases/vuze:int checkForMinDownloadValue(I) | check for min download value
../3-Phrases/vuze:void checkForUnpinningCondition() | check for unpinning condition
../3-Phrases/vuze:boolean checkForLowerLimits() | check for lower limits
../3-Phrases/vuze:boolean checkForSlowSource([QSpeedManagerPingSource;) | check for slow source
../3-Phrases/vuze:boolean checkForBadPing([QSpeedManagerPingSource;) | check for bad ping
../3-Phrases/vuze:association getAssociationForPublish() | get association for publish
../3-Phrases/vuze:boolean useCompressionForFileType(QString;) | use compression for file type
../3-Phrases/vuze:byte[] getPNGBytesForWidth(I) | get png bytes for width
../3-Phrases/vuze:byte[] getPNGBytesForSize(II) | get png bytes for size
../3-Phrases/vuze:byte[] getKeyForKeyBlock([B) | get key for key block
../3-Phrases/vuze:void setStorageForKey(QString;[B) | set storage for key
../3-Phrases/vuze:byte[] getStorageForKey(QString;) | get storage for key
../3-Phrases/vuze:void checkForReSeed(Z) | check for re seed
../3-Phrases/vuze:boolean waitForCompletion(J) | wait for completion
../3-Phrases/vuze:void checkDownloadForRegistration(QDownload;Z) | check download for registration
../3-Phrases/vuze:String getOldDescriptionForPort(I) | get old description for port
../3-Phrases/vuze:String getDescriptionForPort(ZI) | get description for port
../3-Phrases/vuze:void runForAllRows(QTableGroupRowRunner;) | run for all rows
../3-Phrases/vuze:void runForAllRows(QTableGroupRowVisibilityRunner;) | run for all rows
../3-Phrases/vuze:void runForSelectedRows(QTableGroupRowRunner;) | run for selected rows
../3-Phrases/vuze:void runForAllRows(QTableGroupRowRunner;) | run for all rows
../3-Phrases/vuze:void checkForUpdates() | check for updates
../3-Phrases/vuze:void cellMouseTriggerForRate(QTableCellMouseEvent;) | cell mouse trigger for rate
../3-Phrases/vuze:void cellPaintForRate(QGC;QTableCellSWT;) | cell paint for rate
../3-Phrases/vuze:void waitForLogin(QloginWaitListener;) | wait for login
../3-Phrases/vuze:void runForAllRows(QTableGroupRowVisibilityRunner;) | run for all rows
../3-Phrases/vuze:void runForSelectedRows(QTableGroupRowRunner;) | run for selected rows
../3-Phrases/vuze:void checkCellForSetting() | check cell for setting
../3-Phrases/vuze:boolean prepareForPlay(QDownloadManager;) | prepare for play
../3-Phrases/vuze:void increaseCheckingForAds() | increase checking for ads
../3-Phrases/vuze:void decreaseCheckingForAds() | decrease checking for ads
../3-Phrases/vuze:boolean isCheckingForNewAds() | is checking for new ads
../3-Phrases/vuze:boolean checkForEof() | check for eof
../3-Phrases/vuze:boolean hasOutstandingWriteRequestForPiece(I) | has outstanding write request for piece
../3-Phrases/vuze:boolean hasOutstandingReadRequestForPiece(I) | has outstanding read request for piece
../3-Phrases/vuze:boolean hasOutstandingCheckRequestForPiece(I) | has outstanding check request for piece
../3-Phrases/vuze:boolean checkBlockConsistencyForWrite(QString;IIQDirectByteBuffer;) | check block consistency for write
../3-Phrases/vuze:boolean checkBlockConsistencyForRead(QString;III) | check block consistency for read
../3-Phrases/vuze:boolean checkBlockConsistencyForHint(QString;III) | check block consistency for hint
../3-Phrases/vuze:boolean hasOutstandingReadRequestForPiece(I) | has outstanding read request for piece
../3-Phrases/vuze:boolean hasOutstandingCheckRequestForPiece(I) | has outstanding check request for piece
../3-Phrases/vuze:boolean hasOutstandingWriteRequestForPiece(I) | has outstanding write request for piece
../3-Phrases/vuze:boolean checkBlockConsistencyForWrite(QString;IIQDirectByteBuffer;) | check block consistency for write
../3-Phrases/vuze:boolean checkBlockConsistencyForRead(QString;III) | check block consistency for read
../3-Phrases/vuze:boolean checkBlockConsistencyForHint(QString;III) | check block consistency for hint
../3-Phrases/vuze:boolean checkBlockConsistencyForHint(QDiskManager;QString;III) | check block consistency for hint
../3-Phrases/vuze:boolean checkBlockConsistencyForRead(QDiskManager;QString;III) | check block consistency for read
../3-Phrases/vuze:boolean hasOutstandingWriteRequestForPiece(I) | has outstanding write request for piece
../3-Phrases/vuze:boolean hasOutstandingReadRequestForPiece(I) | has outstanding read request for piece
../3-Phrases/vuze:boolean hasOutstandingCheckRequestForPiece(I) | has outstanding check request for piece
../3-Phrases/vuze:boolean hasOutstandingCheckRequestForPiece(I) | has outstanding check request for piece
../3-Phrases/vuze:boolean hasOutstandingWriteRequestForPiece(I) | has outstanding write request for piece
../3-Phrases/vuze:boolean hasOutstandingReadRequestForPiece(I) | has outstanding read request for piece
../3-Phrases/vuze:boolean keyExistsForDefaultLocale(QString;) | key exists for default locale
../3-Phrases/vuze:String getStringForSentence(QString;) | get string for sentence
../3-Phrases/vuze:int addWarningForIp(QString;) | add warning for ip
../3-Phrases/vuze:int getNbWarningForIp(QString;) | get nb warning for ip
../3-Phrases/vuze:int addWarningForIp(QString;) | add warning for ip
../3-Phrases/vuze:int getNbWarningForIp(QString;) | get nb warning for ip
../3-Phrases/vuze:Object queryForClass(QClass;) | query for class
../3-Phrases/vuze:Object queryForClass(QClass;[QObject;) | query for class
../3-Phrases/vuze:Object queryForClass([QObject;QClass;) | query for class
../3-Phrases/vuze:boolean isSafeForReconnect() | is safe for reconnect
../3-Phrases/vuze:void checkForBannedConnections() | check for banned connections
../3-Phrases/vuze:boolean isSafeForReconnect() | is safe for reconnect
../3-Phrases/vuze:void checkForReconnect(QHashWrapper;) | check for reconnect
../3-Phrases/vuze:void registerForMessageHandling() | register for message handling
../3-Phrases/vuze:TRTrackerBTScraperResponseImpl checkForNextScrape() | check for next scrape
../3-Phrases/vuze:void checkForPeerListCompaction(Z) | check for peer list compaction
../3-Phrases/vuze:int getSeedCountForScrape(Z) | get seed count for scrape
../3-Phrases/vuze:String computePortsForURL(ZZ) | compute ports for url
../3-Phrases/vuze:URL adjustURLForHosting(QURL;) | adjust url for hosting
../3-Phrases/vuze:void checkForBlacklistedURLs(QURL;) | check for blacklisted urls
../3-Phrases/vuze:String getPortsForURL() | get ports for url
../3-Phrases/vuze:String getPortsForURLFullCrypto() | get ports for url full crypto
../3-Phrases/vuze:Object removeForIndex(I) | remove for index
../3-Phrases/vuze:Object waitForResult() | wait for result
../3-Phrases/vuze:void removeForIndex(I) | remove for index
../3-Phrases/vuze:String parseTextForURL(QString;Z) | parse text for url
../3-Phrases/vuze:String parseTextForURL(QString;ZZ) | parse text for url
../3-Phrases/vuze:String parseHTMLforURL(QString;) | parse html for url
../3-Phrases/vuze:Entry removeEntryForKey([B) | remove entry for key
../3-Phrases/vuze:void checkForUpdate(QUpdateChecker;) | check for update
../3-Phrases/vuze:void checkForUpdate(QUpdateChecker;) | check for update
../3-Phrases/vuze:void checkForUpdate(QUpdateChecker;) | check for update
../3-Phrases/vuze:CopyOnWriteMap getAttributeMapForType(I) | get attribute map for type
../3-Phrases/vuze:void checkForUpdate(QUpdateChecker;) | check for update
../3-Phrases/vuze:void checkForUpdate(QUpdateChecker;) | check for update
../3-Phrases/vuze:boolean prepareForKeepAlive(Z) | prepare for keep alive
../3-Phrases/vuze:boolean isReadyForWrite(QEventWaiter;) | is ready for write
../3-Phrases/vuze:long isReadyForRead(QEventWaiter;) | is ready for read
../3-Phrases/vuze:PeerImpl getPeerForPEPeer(QPEPeer;) | get peer for pe peer
../3-Phrases/vuze:boolean isSafeForReconnect() | is safe for reconnect
../3-Phrases/vuze:int getPersistForSeconds() | get persist for seconds
../3-Phrases/vuze:void promptForInput() | prompt for input
../3-Phrases/vuze:void checkForFailedInstalls(QUpdateManager;) | check for failed installs
../3-Phrases/vuze:String trimForDisplay(QURL;) | trim for display
../3-Phrases/vuze:void checkForUpdate(QUpdateChecker;) | check for update
../3-Phrases/vuze:void checkForUpdate(QUpdateChecker;) | check for update
../3-Phrases/vuze:void checkForUpdate(QUpdateChecker;) | check for update
../3-Phrases/vuze:int checkForUpdateSupport(QUpdateChecker;[QString;Z) | check for update support
../3-Phrases/vuze:void updateLanguageForControl(QWidget;) | update language for control
../3-Phrases/vuze:void waitForModals() | wait for mod als
../3-Phrases/vuze:void addMaintenanceListenerForMenu(QMenu;QMenuBuilder;) | add maintenance listener for menu
../3-Phrases/vuze:void promptUserForComment([QDownloadManager;) | prompt user for comment
../3-Phrases/vuze:void promptForInput() | prompt for input
../3-Phrases/vuze:void promptForInput0() | prompt for input 0
../3-Phrases/vuze:void loadImagesForSplashWindow(QDisplay;) | load images for splash window
../3-Phrases/vuze:void pollForConnections(QAzureusCore;) | poll for connections
../3-Phrases/vuze:void pollForConnectionsSupport(QAzureusCore;) | poll for connections support
../3-Phrases/vuze:int getPersistForSeconds() | get persist for seconds
../3-Phrases/vuze:int getPersistForSeconds() | get persist for seconds
../3-Phrases/vuze:Rectangle getBoundsForCanvas() | get bounds for canvas
../3-Phrases/vuze:Rectangle getBoundsForCanvas() | get bounds for canvas
../3-Phrases/vuze:void performForShells(QListener;) | perform for shells
../3-Phrases/vuze:void checkForRefresh() | check for refresh
../3-Phrases/vuze:void checkForWhatsNewWindow() | check for whats new window
../3-Phrases/vuze:void openTorrentsForTracking(QString;[QString;) | open torrents for tracking
../3-Phrases/vuze:MenuItem addOpenTorrentForTrackingMenuItem(QMenu;) | add open torrent for tracking menu item
../3-Phrases/vuze:boolean isEnabledForCurrentMode(QWidget;) | is enabled for current mode
../3-Phrases/vuze:MiniBar getMiniBarForObject(QObject;) | get mini bar for object
../3-Phrases/vuze:void waitForClose() | wait for close
../3-Phrases/vuze:String formatForDisplay(QString;) | format for display
../3-Phrases/vuze:void waitForDispose() | wait for dispose
../3-Phrases/vuze:void waitForComplete() | wait for complete
../3-Phrases/vuze:void checkForUpdate(QUpdateChecker;) | check for update
../3-Phrases/vuze:String askForRenameFilename(QDiskManagerFileInfo;) | ask for rename filename
../3-Phrases/vuze:String askForRetargetedFilename(QDiskManagerFileInfo;) | ask for retargeted filename
../3-Phrases/vuze:String askForSaveDirectory(QDiskManagerFileInfo;) | ask for save directory
../3-Phrases/vuze:void runForSelectedRows(QTableGroupRowRunner;) | run for selected rows
../3-Phrases/vuze:void runForVisibleRows(QTableGroupRowRunner;) | run for visible rows
../3-Phrases/vuze:void runForAllRows(QTableGroupRowVisibilityRunner;) | run for all rows
../3-Phrases/vuze:void runForTableItems(QList;QTableGroupRowRunner;) | run for table items
../3-Phrases/vuze:void checkCellForSetting() | check cell for setting
../3-Phrases/vuze:void checkForUpdate(QUpdateChecker;) | check for update
../3-Phrases/vuze:void checkForUpdate(QUpdateChecker;) | check for update
../3-Phrases/weka:double confidenceForRule(QAprioriItemSet;QAprioriItemSet;) | confidence for rule
../3-Phrases/weka:double liftForRule(QAprioriItemSet;QAprioriItemSet;I) | lift for rule
../3-Phrases/weka:double leverageForRule(QAprioriItemSet;QAprioriItemSet;II) | leverage for rule
../3-Phrases/weka:double convictionForRule(QAprioriItemSet;QAprioriItemSet;II) | conviction for rule
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:void updateStatsForClassifier([DQInstance;) | update stats for classifier
../3-Phrases/weka:void updateStatsForPredictor(DQInstance;) | update stats for predictor
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:double[] countsForInstance(QInstance;) | counts for instance
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:double getLogProbForTargetClass(QInstance;) | get log prob for target class
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:double[] distributionForInstance(QBayesNet;QInstance;) | distribution for instance
../3-Phrases/weka:double[] distributionForInstance(QBayesNet;QInstance;) | distribution for instance
../3-Phrases/weka:double[] distributionForInstance(QBayesNet;QInstance;) | distribution for instance
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:boolean checkForMissing(QInstance;QInstances;) | check for missing
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:DiscreteFunction fitForSingleCluster(QDoubleVector;I) | fit for single cluster
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:double[] localDistributionForInstance(QInstance;QIndexes;) | local distribution for instance
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:double[] distributionForInstanceAverage(QInstance;) | distribution for instance average
../3-Phrases/weka:double[] distributionForInstanceProduct(QInstance;) | distribution for instance product
../3-Phrases/weka:double[] distributionForInstanceMajorityVoting(QInstance;) | distribution for instance majority voting
../3-Phrases/weka:double[] distributionForInstanceMax(QInstance;) | distribution for instance max
../3-Phrases/weka:double[] distributionForInstanceMin(QInstance;) | distribution for instance min
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:double[] distributionForInstance([D) | distribution for instance
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:boolean checkForInstance(QInstances;) | check for instance
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:void generateClassifierForNode(QInstances;QRange;QRandom;QClassifier;QHashtable;) | generate classifier for node
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:void generateClassifierForNode(QInstances;QRange;QRandom;QClassifier;QHashtable;[D) | generate classifier for node
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:void buildClassifierForNode(QNDTree;QInstances;) | build classifier for node
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:double[] distributionForInstance(QInstance;QNDTree;) | distribution for instance
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:double[] cumulativeDistributionForInstance(QInstance;) | cumulative distribution for instance
../3-Phrases/weka:DiscreteDistribution distributionForInstance(QInstance;D) | distribution for instance
../3-Phrases/weka:DiscreteDistribution distributionForInstanceBalanced(QInstance;D) | distribution for instance balanced
../3-Phrases/weka:CumulativeDiscreteDistribution cumulativeDistributionForInstance(QInstance;D) | cumulative distribution for instance
../3-Phrases/weka:CumulativeDiscreteDistribution cumulativeDistributionForInstanceBalanced(QInstance;D) | cumulative distribution for instance balanced
../3-Phrases/weka:String numberOfPartsForInterpolationParameterTipText() | number of parts for interpolation parameter tip text
../3-Phrases/weka:void setNumberOfPartsForInterpolationParameter(I) | set number of parts for interpolation parameter
../3-Phrases/weka:int getNumberOfPartsForInterpolationParameter() | get number of parts for interpolation parameter
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:Instances rulesetForOneClass(DQInstances;DD) | ruleset for one class
../3-Phrases/weka:int setUpForEval(QBitSet;) | set up for eval
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:double errorsForTree() | errors for tree
../3-Phrases/weka:double errorsForLeaf() | errors for leaf
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:double getEstimatedErrorsForTree() | get estimated errors for tree
../3-Phrases/weka:double getEstimatedErrorsForLeaf() | get estimated errors for leaf
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:void searchForBestTestSingle() | search for best test single
../3-Phrases/weka:void searchForBestTestSingle(QPredictionNode;QInstances;QInstances;) | search for best test single
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:double predictionValueForInstance(QInstance;QPredictionNode;D) | prediction value for instance
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:void setChildForBranch(IQPredictionNode;) | set child for branch
../3-Phrases/weka:PredictionNode getChildForBranch(I) | get child for branch
../3-Phrases/weka:void setChildForBranch(IQPredictionNode;) | set child for branch
../3-Phrases/weka:PredictionNode getChildForBranch(I) | get child for branch
../3-Phrases/weka:void setChildForBranch(IQPredictionNode;) | set child for branch
../3-Phrases/weka:PredictionNode getChildForBranch(I) | get child for branch
../3-Phrases/weka:void searchForBestTest() | search for best test
../3-Phrases/weka:void searchForBestTest(QPredictionNode;QInstances;) | search for best test
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:double[] predictionValuesForInstance(QInstance;QPredictionNode;[D) | prediction values for instance
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:void setChildForBranch(IQPredictionNode;) | set child for branch
../3-Phrases/weka:PredictionNode getChildForBranch(I) | get child for branch
../3-Phrases/weka:void setChildForBranch(IQPredictionNode;) | set child for branch
../3-Phrases/weka:PredictionNode getChildForBranch(I) | get child for branch
../3-Phrases/weka:void setChildForBranch(IQPredictionNode;) | set child for branch
../3-Phrases/weka:PredictionNode getChildForBranch(I) | get child for branch
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:void searchForBestTestSingle() | search for best test single
../3-Phrases/weka:void searchForBestTestSingle(QPredictionNode;QInstances;QInstances;) | search for best test single
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:double predictionValueForInstance(QInstance;QPredictionNode;D) | prediction value for instance
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:void setChildForBranch(IQPredictionNode;) | set child for branch
../3-Phrases/weka:PredictionNode getChildForBranch(I) | get child for branch
../3-Phrases/weka:void setChildForBranch(IQPredictionNode;) | set child for branch
../3-Phrases/weka:PredictionNode getChildForBranch(I) | get child for branch
../3-Phrases/weka:void setChildForBranch(IQPredictionNode;) | set child for branch
../3-Phrases/weka:PredictionNode getChildForBranch(I) | get child for branch
../3-Phrases/weka:void searchForBestTest() | search for best test
../3-Phrases/weka:void searchForBestTest(QPredictionNode;QInstances;) | search for best test
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:double[] predictionValuesForInstance(QInstance;QPredictionNode;[D) | prediction values for instance
../3-Phrases/weka:double getEstimatedErrorsForBranch(QInstances;) | get estimated errors for branch
../3-Phrases/weka:double getEstimatedErrorsForDistribution(QDistribution;) | get estimated errors for distribution
../3-Phrases/weka:double[] modelDistributionForInstance(QInstance;) | model distribution for instance
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:double[] distributionForInstance(QInstance;Z) | distribution for instance
../3-Phrases/weka:double errorsForTree() | errors for tree
../3-Phrases/weka:double errorsForLeaf() | errors for leaf
../3-Phrases/weka:double positivesForSubsetOfInterest() | positives for subset of interest
../3-Phrases/weka:double totalForSubsetOfInterest() | total for subset of interest
../3-Phrases/weka:double totalForSubset(I) | total for subset
../3-Phrases/weka:int maxClassForSubsetOfInterest() | max class for subset of interest
../3-Phrases/weka:double laplaceForSubsetOfInterest() | laplace for subset of interest
../3-Phrases/weka:double getEstimatedErrorsForBranch(QInstances;) | get estimated errors for branch
../3-Phrases/weka:double getEstimatedErrorsForDistribution(QDistribution;) | get estimated errors for distribution
../3-Phrases/weka:double getEstimatedErrorsForBranch(QInstances;) | get estimated errors for branch
../3-Phrases/weka:double getEstimatedErrorsForDistribution(QDistribution;) | get estimated errors for distribution
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:double[] modelDistributionForInstance(QInstance;) | model distribution for instance
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:double[] logDensityPerClusterForInstance(QInstance;) | log density per cluster for instance
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:double[] logDensityPerClusterForInstance(QInstance;) | log density per cluster for instance
../3-Phrases/weka:Database databaseForName(QString;QInstances;) | database for name
../3-Phrases/weka:DataObject dataObjectForName(QString;QInstance;QString;QDatabase;) | data object for name
../3-Phrases/weka:double[] logDensityPerClusterForInstance(QInstance;) | log density per cluster for instance
../3-Phrases/weka:double logDensityForInstance(QInstance;) | log density for instance
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:double[] logJointDensitiesForInstance(QInstance;) | log joint densities for instance
../3-Phrases/weka:boolean checkForNominalAttributes(QInstances;) | check for nominal attributes
../3-Phrases/weka:String maxKMeansForChildrenTipText() | max k means for children tip text
../3-Phrases/weka:void setMaxKMeansForChildren(I) | set max k means for children
../3-Phrases/weka:int getMaxKMeansForChildren() | get max k means for children
../3-Phrases/weka:double[] cuScoresForChildren(QInstance;) | cu scores for children
../3-Phrases/weka:double cuScoreForBestTwoMerged(QCNode;QCNode;QCNode;QInstance;) | cu score for best two merged
../3-Phrases/weka:Database databaseForName(QString;QInstances;) | database for name
../3-Phrases/weka:DataObject dataObjectForName(QString;QInstance;QString;QDatabase;) | data object for name
../3-Phrases/weka:double[] logDensityPerClusterForInstance(QInstance;) | log density per cluster for instance
../3-Phrases/weka:double logDensityForInstance(QInstance;) | log density for instance
../3-Phrases/weka:double[] logJointDensitiesForInstance(QInstance;) | log joint densities for instance
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:void checkForRemainingOptions([QString;) | check for remaining options
../3-Phrases/weka:boolean checkForAttributeType(I) | check for attribute type
../3-Phrases/weka:boolean checkForStringAttributes() | check for string attributes
../3-Phrases/weka:CONS NoSupportForMissingValuesException() | no support for missing values exception
../3-Phrases/weka:CONS NoSupportForMissingValuesException(QString;) | no support for missing values exception
../3-Phrases/weka:Object getConverterForFile(QString;QHashtable<QString;QString;>;) | get converter for file
../3-Phrases/weka:Object getConverterForExtension(QString;QHashtable<QString;QString;>;) | get converter for extension
../3-Phrases/weka:AbstractFileLoader getLoaderForFile(QString;) | get loader for file
../3-Phrases/weka:AbstractFileLoader getLoaderForFile(QFile;) | get loader for file
../3-Phrases/weka:AbstractFileLoader getLoaderForExtension(QString;) | get loader for extension
../3-Phrases/weka:AbstractFileLoader getURLLoaderForFile(QString;) | get url loader for file
../3-Phrases/weka:AbstractFileLoader getURLLoaderForFile(QFile;) | get url loader for file
../3-Phrases/weka:AbstractFileLoader getURLLoaderForExtension(QString;) | get url loader for extension
../3-Phrases/weka:AbstractFileSaver getSaverForFile(QString;) | get saver for file
../3-Phrases/weka:AbstractFileSaver getSaverForFile(QFile;) | get saver for file
../3-Phrases/weka:AbstractFileSaver getSaverForExtension(QString;) | get saver for extension
../3-Phrases/weka:boolean checkForKey() | check for key
../3-Phrases/weka:void setRelationForTableName(Z) | set relation for table name
../3-Phrases/weka:boolean getRelationForTableName() | get relation for table name
../3-Phrases/weka:String relationForTableNameTipText() | relation for table name tip text
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:void setFieldDefsForDerivedFields(QArrayList<QAttribute;>;) | set field defs for derived fields
../3-Phrases/weka:void setFieldDefsForDerivedFields(QInstances;) | set field defs for derived fields
../3-Phrases/weka:void updateDefsForArgumentsAndFunction() | update defs for arguments and function
../3-Phrases/weka:void checkForSnowball() | check for snowball
../3-Phrases/weka:void checkForXStream() | check for x stream
../3-Phrases/weka:void checkForKOML() | check for koml
../3-Phrases/weka:boolean checkForAllFailedHosts() | check for all failed hosts
../3-Phrases/weka:int getClassForIRStatistics() | get class for ir statistics
../3-Phrases/weka:void setClassForIRStatistics(I) | set class for ir statistics
../3-Phrases/weka:void checkForDuplicateKeys([QObject;) | check for duplicate keys
../3-Phrases/weka:void checkForMultipleDifferences() | check for multiple differences
../3-Phrases/weka:double[] cutPointsForSubset(QInstances;III) | cut points for subset
../3-Phrases/weka:JScrollPane createScrollPaneForToolBar(QJToolBar;) | create scroll pane for tool bar
../3-Phrases/weka:JPanel makeHolderPanelForToolBarBean(QString;QObject;ZQString;Z) | make holder panel for tool bar bean
../3-Phrases/weka:void installWindowListenerForSavingUserBeans() | install window listener for saving user beans
../3-Phrases/weka:void setRelationNameForFilename(Z) | set relation name for filename
../3-Phrases/weka:boolean getRelationNameForFilename() | get relation name for filename
../3-Phrases/weka:boolean checkForSource(QBeanInstance;QVector;) | check for source
../3-Phrases/weka:boolean checkForTarget(QBeanInstance;QVector;) | check for target
../3-Phrases/weka:Vector getIDsForBeanInstances(QVector;) | get ids for bean instances
../3-Phrases/weka:Vector getBeanInstancesForIDs(QVector;) | get bean instances for ids
../3-Phrases/weka:boolean checkForAllFailedHosts() | check for all failed hosts
../3-Phrases/weka:void configureForClassAttribute() | configure for class attribute
../3-Phrases/weka:boolean getClassifierStorePredictionsForVis() | get classifier store predictions for vis
../3-Phrases/weka:boolean getClustererStoreClustersForVis() | get clusterer store clusters for vis
../3-Phrases/weka:double confidenceForRule(QAprioriItemSet;QAprioriItemSet;) | confidence for rule
../3-Phrases/weka:double liftForRule(QAprioriItemSet;QAprioriItemSet;I) | lift for rule
../3-Phrases/weka:double leverageForRule(QAprioriItemSet;QAprioriItemSet;II) | leverage for rule
../3-Phrases/weka:double convictionForRule(QAprioriItemSet;QAprioriItemSet;II) | conviction for rule
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:void updateStatsForClassifier([DQInstance;) | update stats for classifier
../3-Phrases/weka:void updateStatsForPredictor(DQInstance;) | update stats for predictor
../3-Phrases/weka:Database databaseForName(QString;QInstances;) | database for name
../3-Phrases/weka:DataObject dataObjectForName(QString;QInstance;QString;QDatabase;) | data object for name
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:Database databaseForName(QString;QInstances;) | database for name
../3-Phrases/weka:DataObject dataObjectForName(QString;QInstance;QString;QDatabase;) | data object for name
../3-Phrases/weka:double[] logDensityPerClusterForInstance(QInstance;) | log density per cluster for instance
../3-Phrases/weka:double logDensityForInstance(QInstance;) | log density for instance
../3-Phrases/weka:double[] logJointDensitiesForInstance(QInstance;) | log joint densities for instance
../3-Phrases/weka:double[] cuScoresForChildren(QInstance;) | cu scores for children
../3-Phrases/weka:double cuScoreForBestTwoMerged(QCNode;QCNode;QCNode;QInstance;) | cu score for best two merged
../3-Phrases/weka:double[] logDensityPerClusterForInstance(QInstance;) | log density per cluster for instance
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:boolean checkForNominalAttributes(QInstances;) | check for nominal attributes
../3-Phrases/weka:String maxKMeansForChildrenTipText() | max k means for children tip text
../3-Phrases/weka:void setMaxKMeansForChildren(I) | set max k means for children
../3-Phrases/weka:int getMaxKMeansForChildren() | get max k means for children
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:double[] logDensityPerClusterForInstance(QInstance;) | log density per cluster for instance
../3-Phrases/weka:double logDensityForInstance(QInstance;) | log density for instance
../3-Phrases/weka:double[] distributionForInstance(QInstance;) | distribution for instance
../3-Phrases/weka:double[] logJointDensitiesForInstance(QInstance;) | log joint densities for instance
../3-Phrases/weka:double[] logDensityPerClusterForInstance(QInstance;) | log density per cluster for instance
../3-Phrases/weka:boolean checkForAttributeType(I) | check for attribute type
../3-Phrases/weka:boolean checkForStringAttributes() | check for string attributes
../3-Phrases/weka:void checkForRemainingOptions([QString;) | check for remaining options
../3-Phrases/weka:CONS NoSupportForMissingValuesException() | no support for missing values exception
../3-Phrases/weka:CONS NoSupportForMissingValuesException(QString;) | no support for missing values exception
../3-Phrases/weka:int getClassForIRStatistics() | get class for ir statistics
../3-Phrases/weka:void setClassForIRStatistics(I) | set class for ir statistics
../3-Phrases/weka:boolean checkForAllFailedHosts() | check for all failed hosts
../3-Phrases/weka:void checkForDuplicateKeys([QObject;) | check for duplicate keys
../3-Phrases/weka:void checkForMultipleDifferences() | check for multiple differences
