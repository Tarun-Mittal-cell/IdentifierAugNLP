boolean[] canSplitUpClass(II) | can split up class
boolean getSplitByDataSet() | get split by data set
boolean getSplitOnResiduals() | get split on residuals
boolean getSplitPoint() | get split point
double[] findNumericSplitpointAndLS(QInstances;I) | find numeric split point and ls
double findSplitNominal(I) | find split nominal
double findSplitNominalNominal(I) | find split nominal nominal
double findSplitNominalNumeric(I) | find split nominal numeric
double findSplitNumeric(I) | find split numeric
double findSplitNumericNominal(I) | find split numeric nominal
double findSplitNumericNumeric(I) | find split numeric numeric
double getSplitPoint() | get split point
double getSplitValue() | get split value
FastVector computeSplitInfo(QBFTree;QInstances;[[I[[D[[[D[[D[[DZZ) | compute split info
int basicSplitSegment(QPoint2D.Double;) | basic split segment
int basicSplitSegment(QPoint2D.Double;F) | basic split segment
int getSplitDim() | get split dim
int nextSplitAddedOrder() | next split added order
JSplitPane createSplitPane(IQComponent;QComponent;D) | create split pane
SplitEvaluator getSplitEvaluator() | get split evaluator
String binSplitTipText() | bin split tip text
UIFSplitPane createStrippedSplitPane(IQComponent;QComponent;) | create stripped split pane
void canSplitUpClass(QAttrTypes;I) | can split up class
void configureSplitPane(QJSplitPane;QHome;QString;DQHomeController;) | configure split pane
void evaluateNominalSplitSingle(IQPredictionNode;QInstances;QInstances;) | evaluate nominal split single
void evaluateNumericSplitSingle(IQPredictionNode;QInstances;QInstances;QInstances;) | evaluate numeric split single
void postSplitSelectedWall(QJoinedWall;QJoinedWall;QJoinedWall;QList<QSelectable;>;Z) | post split selected wall
void setSplitByDataSet(Z) | set split by data set
void setSplitEvaluator(QSplitEvaluator;) | set split evaluator
void setSplitOnResiduals(Z) | set split on residuals
void setSplitPoint(D) | set split point
void setSplitPoint(QInstances;) | set split point
void testCompositeTagCorrectionWithSplitLines() | test composite tag correction with split lines
void testSplitFile() | test split file
