boolean hasLegActuatorCrit() | has leg actuator crit
boolean isLegal() | is legal
boolean isLegalDeployment(QCoords;QPlayer;) | is legal deployment
boolean isLegalEndPos() | is legal end pos
boolean isLegal(II) | is legal
boolean isLegal(IIZ) | is legal
boolean isLegalPosition(int row, int column) | is legal position
boolean isLegal(QString;) | is legal
boolean isLowerLegActuator(J) | is lower leg actuator
boolean isMoveLegal() | is move legal
boolean isSetLegInstrRegistry() | is set leg instr registry
boolean isSetLegLastPx() | is set leg last px
boolean isShowLegend() | is show legend
boolean legalNumParams(I) | legal num params
boolean legHasHipCrit(I) | leg has hip crit
boolean locationIsLeg(I) | location is leg
boolean showLegend() | show legend
Composite createLegendComposite(QComposite;[QColor;[QString;) | create legend composite
Composite createLegendComposite(QComposite;[QColor;[QString;QObject;) | create legend composite
double getLegActuatorCost() | get leg actuator cost
EncodedLegSecurityDesc getEncodedLegSecurityDesc() | get encoded leg security desc
int countBadLegs() | count bad legs
int countLegActuatorCrits(I) | count leg actuator crits
int getLeg() | get leg
int getLegalMinimumAgeLimit() | get legal minimum age limit
int getLegendURLMaxCount() | get legend url max count
Iterator<QString;> getLegalValues() | get legal values
LegendItemCollection getFixedLegendItems() | get fixed legend items
LegendItemCollection getLegendItems() | get legend items
LegRedemptionDate getLegRedemptionDate() | get leg redemption date
LegSecurityType getLegSecurityType() | get leg security type
PeerManagerRegistration registerLegacyManager(QHashWrapper;QPeerManagerRegistrationAdapter;) | register legacy manager
Set getTasksWithLegacyFixedStart() | get tasks with legacy fixed start
String checkLegalKey(QString;) | check legal key
String getExportLegend(QString;) | get export legend
String legend() | legend
ToHitData getLegAttackBaseToHit(QEntity;QEntity;) | get leg attack base to hit
Vector getLegendText() | get legend text
void addLegendLabel(String label, int iconType, Color color, boolean hollow) | add legend label
void addLegend(QString;QColor;) | add legend
void addTaskWithLegacyFixedStart(QTask;) | add task with legacy fixed start
void LegacyData(IZ[QMessage;) | legacy data
void LegacyData(IZ[QMessage;B) | legacy data
void LegendEntry(QPlotData2D;I) | legend entry
void setLegendText(QVector;) | set legend text
void setLeg(I) | set leg
void setShowLegend(Z) | set show legend
void switchToLegend() | switch to legend
void testCheckLegalKey() | test check legal key
void testLegacyParseProject() | test legacy parse project
void testLegacyParseProjectPJT() | test legacy parse project pjt
void testMakeLabelAndCheckLegalKeys() | test make label and check legal keys
void testMakeLabelAndCheckLegalKeysAccentGrave() | test make label and check legal keys accent grave
void updateLegends() | update legends
WeaponType createLegAttack() | create leg attack
