AST generateVersionPropertyNode(QQueryable;) | generate version property node
BigInteger getRC2ParameterVersion() | get rc 2 parameter version
boolean checkDRMVersion(QString;QString;) | check drm version
boolean checkJavaVersion() | check java version
boolean checkNewBetaVersion(QBox<QString;>;QBox<QDate;>;) | check new beta version
boolean checkNewDevVersion(QBox<QString;>;QBox<QDate;>;) | check new dev version
boolean checkNewStableVersion(QBox<QString;>;QBox<QDate;>;) | check new stable version
boolean checkNewVersion() | check new version
boolean checkVersion([Z) | check version
boolean[] declaresSerialVersionUID() | declares serial version uid
boolean deleteOlderVersions(QFile;) | delete older versions
boolean[] getPropertyVersionability() | get property version ability
boolean isApplicationVersionSuperiorTo(QString;) | is application version superior to
boolean isBadVersion(QString;QString;) | is bad version
boolean isCVSVersion() | is cvs version
boolean isCVSVersion(QString;) | is cvs version
boolean isExplicitVersionInsertion() | is explicit version insertion
boolean isJavaVersionSuperiorTo(QString;) | is java version superior to
boolean isJdbcBatchVersionedData() | is jdbc batch versioned data
boolean isNewVersion() | is new version
boolean isValidLanguageVersion(I) | is valid language version
boolean isValidVersionFormat(QString;) | is valid version format
boolean isVersionable() | is versionable
boolean isVersionCheckDataValid(I) | is version check data valid
boolean isVersionECMA1() | is version ecma 1
boolean isVersionPropertyInsertable() | is version property insertable
boolean seedVersion([QObject;IQVersionType;QSessionImplementor;) | seed version
boolean shouldOverwriteCurrentVersion(QObject;QObject;QObject;QVersionType;) | should overwrite current version
boolean supportedVersion(QString;) | supported version
byte getAZVersion() | get az version
byte[] getMessageVersions() | get message versions
byte getOriginatorVersion() | get originator version
byte getProtocolVersion() | get protocol version
byte getVersion() | get version
Comparator getVersionComparator() | get version comparator
Delete setVersionColumnName(QString;) | set version column name
DERInteger getVersion() | get version
DERInteger getVersionNumber() | get version number
double version(QContext;QScriptable;[QObject;QFunction;) | version
EReference getCodingSchemeVersion_Relations() | get coding scheme version relations
File[] getHighestJarVersions([QFile;[QString;[QString;Z) | get highest jar versions
FullVersion guessVersion(QFile;) | guess version
FullVersion version() | version
int checkInstalledVersion(QFile;) | check installed version
int comparePluginVersions(QString;QString;) | compare plugin versions
int compareVersions(QString;QString;) | compare versions
int getAZVersion() | get az version
int getCurrentVersion() | get current version
int getDatabaseMajorVersion() | get database major version
int getDatabaseMajorVersion(QDatabaseMetaData;) | get database major version
int getDatabaseMinorVersion() | get database minor version
int getDriverMajorVersion() | get driver major version
int getDriverMinorVersion() | get driver minor version
int getHighestUserPromptedVersion() | get highest user prompted version
int getHighestVersion() | get highest version
int getJabrefMajorVersion() | get jabref major version
int getJabrefMinorVersion() | get jabref minor version
int getJDBCMajorVersion() | get jdbc major version
int getJDBCMinorVersion() | get jdbc minor version
int getLanguageVersion() | get language version
int getLatestVersion() | get latest version
int getMajorVersion() | get major version
int getMinorVersion() | get minor version
int getNextValueVersion() | get next value version
int getNextValueVersions(I) | get next value versions
int getP2BFileVersion(QInputStream;) | get p 2 b file version
int getPublicationVersion(QMap;) | get publication version
int getRPCVersion() | get rpc version
int getSigningInfoVersion() | get signing info version
int getUnixScriptVersion() | get unix script version
int getVerifiedPublicationVersion(QMap;) | get verified publication version
int getVersion() | get version
int getVersionProperty() | get version property
int getVersionPropertyIndex() | get version property index
java.lang.String getJasper_version() | get jasper version
JavaVersion version() | version
long getSerialVersionUID() | get serial version uid
long getVersion() | get version
Map constructVersionCheckMessage(QString;) | construct version check message
Map getMostRecentVersionCheckData() | get most recent version check data
Map getVersionCheckInfo(QString;) | get version check info
Map getVersionCheckInfo(QString;I) | get version check info
Map getVersionCheckInfoSupport(QString;ZZZ) | get version check info support
Map performVersionCheck(QMap;ZZZ) | perform version check
Map<QVersionNumber;QFile;> getInstalledVersions(QString;) | get installed versions
Object forceVersionIncrement(QSerializable;QObject;QSessionImplementor;) | force version increment
Object getCurrentVersion(QSerializable;QSessionImplementor;) | get current version
Object getNextVersion(QFlushEntityEvent;) | get next version
Object getVersion() | get version
Object getVersion(QObject;) | get version
Object getVersion(QObject;QEntityMode;) | get version
Object getVersion([QObject;QEntityPersister;) | get version
Property getVersion() | get version
ResultSet getVersionColumns(QString;QString;QString;) | get version columns
String decodeAzStyleVersionNumber(QString;QString;) | decode az style version number
String decodeCustomVersionNumber(QString;QString;) | decode custom version number
String extractReadableVersionSubstringFromPeerID(QString;) | extract readable version substring from peer id
String generateSelectVersionString() | generate select version string
String generateVersionIncrementUpdateString() | generate version increment update string
String getAzStyleClientVersion(QString;QString;) | get az style client version
String getAzureusVersion() | get azureus version
String getBaseVersion() | get base version
String getBaseVersion(QString;) | get base version
String getBUILD_VERSION() | get build version
String getClientVersion() | get client version
String getCVSVersion() | get cvs version
String getDatabaseFullProductVersion() | get database full product version
String getDatabaseProductVersion() | get database product version
String getDesignVersion() | get design version
String getDriverVersion() | get driver version
String getDrJavaVersion() | get dr java version
String getDRMVersion() | get drm version
String getFreeColProtocolVersion() | get free col protocol version
String getFreemindVersion() | get freemind version
String getImplementationVersion() | get implementation version
String getJabrefVersion() | get jabref version
String getJavaSpecVersion() | get java spec version
String getMainlineStyleVersionNumber(QString;) | get mainline style version number
String getMajorVersion() | get major version
String getMaxVersion() | get max version
String getMinVersion() | get min version
String[] getNameAndVersion(QFile;) | get name and version
String getNewVersion() | get new version
String getNextSOCKSProxyVersion() | get next socks proxy version
String getPluginVersion() | get plugin version
String getPMMLVersion() | get pm ml version
String getProductVersion() | get product version
String getServerVersion() | get server version
String getShadowStyleVersionNumber(QString;) | get shadow style version number
String getSubstringStyleClientVersion(QClientData;QString;[B) | get substring style client version
String[] getSuffixedVersionAliases() | get suffixed version aliases
String getSWVersion() | get sw version
String getTwoByteThreePartVersion(BB) | get two byte three part version
String getUpdaterPluginVersion() | get updater plugin version
String getVersion() | get version
String getVersionColumnName() | get version column name
String getVersionedTableName() | get versioned table name
String getVersionFromJAR(QFile;) | get version from jar
String getVersion(QJAXBContext;) | get version
String getVersionSelectString() | get version select string
String getVersionString() | get version string
String processMgrVersion() | process mgr version
String readJabRefVersionNumber() | read jab ref version number
String supportedVersions() | supported versions
String version() | version
String versionName(String name) | version name
Table SYSTEM_VERSIONCOLUMNS() | system version columns
Type locateVersionType() | locate version type
Update setVersionColumnName(QString;) | set version column name
VersionProperty buildVersionProperty(QProperty;Z) | build version property
VersionProperty getVersionProperty() | get version property
VersionType getVersionType() | get version type
VersionValue getUnsavedVersionValue(QString;QGetter;QVersionType;QConstructor;) | get unsaved version value
void addRequestEditParameter(String id, String version, String name) | add request edit parameter
void addToVersionCheckMessage(QMap;) | add to version check message
void addVersionedClient(QClientData;QString;I) | add versioned client
void addVersionedClient(QClientData;QString;II) | add versioned client
void addVersionedClient(QClientData;QString;IQString;) | add versioned client
void addVersionedClient(QClientData;QString;IQString;I) | add versioned client
void announceNewVersion() | announce new version
void begin_class(int version, int access, String className, Type superType, Type interfaces, String sourceFile) | begin class
void bindVersioningProperty(QTable;QElement;QMappings;QString;QRootClass;Qjava.util.Map;) | bind versioning property
void checkAzureusVersion(QString;QProperties;Z) | check azureus version
void checkJavaVersion() | check java version
void checkJDKVersion(QString;QProperties;Z) | check jdk version
void checkLanguageVersion(I) | check language version
void checkVersion() | check version
void checkVersion(IQLoadable;QSerializable;QObject;QResultSet;QSessionImplementor;) | check version
void delete(Serializable id, Object version, Object object, SessionImplementor session) | delete
void displayVersion() | display version
void downloadLatestVersion() | download latest version
void drawGPVersion(QGraphics;) | draw gp version
void initialVersion() | initial version
void makeVersion(QElement;QSimpleValue;) | make version
void NameAndVersion(QString;QVersionNumber;ZQFile;) | name and version
void parseVersion(QString;[I[I[I) | parse version
void prependVersionColumnSpec() | prepend version column spec
void proxyStateVersion() | proxy state version
void readBuildVersionData(QString;) | read build version data
void readVersionData() | read version data
void resetHighestVersion() | reset highest version
void setDrJavaVersion(QString;) | set dr java version
void setHaveVersion(BB) | set have version
void setHighestUserPromptedVersion(I) | set highest user prompted version
void setInstanceIDAndVersion(IB) | set instance id and version
void setJabrefMajorVersion(I) | set jabref major version
void setJabrefMinorVersion(I) | set jabref minor version
void setJabrefVersion(QString;) | set jabref version
void setJasper_version(Qjava.lang.String;) | set jasper version
void setJdbcBatchVersionedData(Z) | set jdbc batch versioned data
void setJspVersion(String jspVersion) | set jsp version
void setLanguageVersion(I) | set language version
void setMajorMinorVersions() | set major minor versions
void setPieceVersion(B) | set piece version
void setPluginVersion(QString;) | set plugin version
void setPMMLVersion(QDocument;) | set pm ml version
void setProcessVersion(long processVersion) | set process version
void setProtocolVersion(B) | set protocol version
void setUnlessAntLike(String version) | set unless ant like
void setVersion(I) | set version
void setVersion([QObject;QObject;QEntityPersister;) | set version
void setVersion(QProperty;) | set version
void setVersion(QString;) | set version
void setVersion(String version) | set version
void show_version() | show version
void testUtilVersion() | test util version
void testVersion(QString;) | test version
void VersionInsensitiveMapper(QString;) | version insensitive mapper
void VersionNumberData(QString;IQString;I) | version number data
void VersionNumber(QString;) | version number
void writeVersionData() | write version data
