AbstractGroup[] getMatchingGroups(QBibtexEntry;) | get matching groups
ArrayList getNewsGroups() | get news groups
boolean announceGroupsContainsURL(QTOTorrent;QString;) | announce groups contains url
boolean getNumberOfGroups() | get number of groups
boolean importGroups() | import groups
Enumeration getGroups() | get groups
GPOptionGroup[] getChartOptionGroups() | get chart option groups
GPOptionGroup[] getNetworkOptionGroups() | get network option groups
GPOptionGroup[] getOptionGroups() | get option groups
GPOptionGroup[] getOptionGroups(QIGanttProject;QUIFacade;) | get option groups
GroupTreeNode getGroups() | get groups
GroupTreeNode importFlatGroups(QVector<QString;>;) | import flat groups
GroupTreeNode importGroups(QVector<QString;>;QBibtexDatabase;I) | import groups
HashSet getGroups() | get groups
it.businesslogic.ireport.gui.GroupsDialog getGroupsDialog() | get groups dialog
java.util.Vector getGroups() | get groups
List announceGroupsToList(QTOTorrent;) | announce groups to list
List getGroupsbyId(CaGroups caGroups) | get groups by id
String numberOfGroupsTipText() | number of groups tip text
void addGroups(QGroupTreeNode;QCompoundEdit;) | add groups
void addOptionGroups([QGPOptionGroup;) | add option groups
void announceGroupsInsertFirst(QTOTorrent;QString;) | announce groups insert first
void announceGroupsInsertFirst(QTOTorrent;[QURL;) | announce groups insert first
void announceGroupsInsertFirst(QTOTorrent;QURL;) | announce groups insert first
void announceGroupsInsertLast(QTOTorrent;[QURL;) | announce groups insert last
void announceGroupsSetFirst(QTOTorrent;QString;) | announce groups set first
void disableGroups(I) | disable groups
void enableGroups(QString;) | enable groups
void generateGroupsFromNumbers(QInstances;QRandom;) | generate groups from numbers
void generateGroupsFromSizes(QInstances;QRandom;) | generate groups from sizes
void GroupsEnumeration() | groups enumeration
void importGroupsTree(QDBTYPE;QMetaData;QHashMap<QString;QBibtexEntry;>;QConnection;) | import groups tree
void initDataGroups() | init data groups
void listToAnnounceGroups(QList;QTOTorrent;) | list to announce groups
void parseGroupsFrom(String gs) | parse groups from
void printGroups() | print groups
void putGroups(QVector<QString;>;QBibtexDatabase;I) | put groups
void refreshGroupsForNewDatabase(QBibtexDatabase;) | refresh groups for new database
void removeFromAllGroups() | remove from all groups
void revalidateGroups() | revalidate groups
void revalidateGroups(QGroupTreeNode;) | revalidate groups
void revalidateGroups([QTreePath;QEnumeration<QTreePath;>;) | revalidate groups
void revalidateGroups([QTreePath;QEnumeration<QTreePath;>;QGroupTreeNode;) | revalidate groups
void scanGroups(QMetaData;QMetaData;QMetaData;) | scan groups
void setDataGroups(QString;QString;) | set data groups
void setGroups() | set groups
void setGroupsDialog(Qit.businesslogic.ireport.gui.GroupsDialog;) | set groups dialog
void setGroups(QGroupTreeNode;) | set groups
void setGroups(QHashSet;) | set groups
void setGroups(Qjava.util.Vector;) | set groups
void setNewsGroups(QArrayList;) | set news groups
void setNumberOfGroups(Z) | set number of groups
void showMatchingGroups([QBibtexEntry;Z) | show matching groups
void showOverlappingGroups(QList<QBibtexEntry;>;) | show overlapping groups
void updateGroups() | update groups
void writeXMLGroups(QVector;Qjava.io.PrintWriter;ZI) | write xml groups
