AZInstance getMyInstance() | get my instance
boolean isMyTurn() | is my turn
ChartModelImpl getMyChartModel() | get my chart model
DatabaseDataSource getMySQLConnection(QString;QString;QString;QString;) | get my sql connection
DatabaseDataSource getMySQLConnection(QString;QString;QString;QString;QSQLDataHandler;) | get my sql connection
HBCIKey getMyPrivateDigKey() | get my private dig key
ImageDescriptor getMyThumbnailDescriptor() | get my thumbnail descriptor
JobDefinitionDocument populateMyProxyElements(JobDefinitionDocument pJSDL, CommandLine pCmdLine, Properties pSettings) | populate my proxy elements
MenuItem addMySharesMenuItem(QMenu;) | add my shares menu item
MenuItem addMyTorrentsMenuItem(QMenu;) | add my torrents menu item
MenuItem addMyTrackerMenuItem(QMenu;) | add my tracker menu item
Player getMyPlayer() | get my player
PrivateKey getMyPrivateKey(QString;) | get my private key
PublicKey getMyPublicKey(QString;Z) | get my public key
String getExceptionMessage_MySQL(QException;) | get exception message my sql
String getMyNodeText() | get my node text
SWTSkinObject createMySash(QSWTSkinProperties;QString;QString;[QString;QSWTSkinObject;Z) | create my sash
void beginMyTurn() | begin my turn
void calculateMyTurn() | calculate my turn
void doMyEbaySynchronize(QString;) | do my ebay synchronize
void endMyTurn() | end my turn
void getMyEbayItems(QString;) | get my ebay items
void saveMyEntity1(MyEntity1 myEntity1) | save my entity 1
void saveMyEntityForSrvDMPckEnNoConfMyEntityForSrvDMPckEnNoConf(MyEntityForSrvDMPckEnNoConf myEntityForSrvDMPckEnNoConf) | save my entity for srv dm pck en no conf my entity for srv dm pck en no conf
void setMyNodeText(QString;) | set my node text
void setMyPlayer(QPlayer;) | set my player
void setupMyMediaTable(Z) | setup my media table
void showMyShares() | show my shares
void showMyTorrents() | show my torrents
void showMyTracker() | show my tracker
void signalChangeMyDisplayedItems(LinkableObject oldItem, LinkableObject newItem) | signal change my displayed items
void testLoadFromMySQLDatabase() | test load from my sql database
