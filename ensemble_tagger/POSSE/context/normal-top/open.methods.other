boolean canOpenBrowser() | can open browser
boolean getOpenTips() | get open tips
boolean hasOpenResources() | has open resources
boolean isOpenBrace() | is open brace
boolean isOpenComment() | is open comment
boolean isShowOpenTicks() | is show open ticks
boolean supportsMultipleOpenResults() | supports multiple open results
boolean supportsOpenCursorsAcrossCommit() | supports open cursors across commit
boolean supportsOpenCursorsAcrossRollback() | supports open cursors across rollback
boolean supportsOpenStatementsAcrossCommit() | supports open statements across commit
boolean supportsOpenStatementsAcrossRollback() | supports open statements across rollback
boolean toOpenTab() | to open tab
ConcreteOpenDefDoc _createOpenDefinitionsDocument(QFile;) | create open definitions document
ConcreteOpenDefDoc _createOpenDefinitionsDocument(QNullFile;) | create open definitions document
File[] getOpenFiles(QJFileChooser;) | get open files
GPAction getOpenProjectAction() | get open project action
GPAction getOpenURLAction() | get open url action
int _findNextOpenCurly(QString;I) | find next open curly
int getMultipleOpenId() | get multiple open id
int parseOpenBrackets() | parse open brackets
int parseOpenBracketsSelect() | parse open brackets select
int showOpenDialog(QComponent;) | show open dialog
JFileChooser createOpenChooser() | create open chooser
JFileChooser getOpenChooser() | get open chooser
List<QOpenDefinitionsDocument;> getOpenDefinitionsDocuments() | get open definitions documents
List<QOpenDefinitionsDocument;> getSortedOpenDefinitionsDocuments() | get sorted open definitions documents
long getSessionOpenCount() | get session open count
MenuItem addOpenTorrentForTrackingMenuItem(QMenu;) | add open torrent for tracking menu item
MenuItem addOpenTorrentMenuItem(QMenu;) | add open torrent menu item
MenuItem addOpenVuzeFileMenuItem(QMenu;) | add open vu ze file menu item
MenuItem createOpenMenuItem(QMenu;) | create open menu item
OpenDefinitionsDocument getOpenDefDoc() | get open def doc
OpenDefinitionsDocument getOpenDefDocument() | get open def document
OpenDefinitionsDocument _getOpenDoc() | get open doc
OpenDefinitionsDocument getOpenDocument() | get open document
OpenDefinitionsDocument _getOpenDocument(QFile;) | get open document
OpenDefinitionsDocument[] getOpenDocuments() | get open documents
OpenDefinitionsDocument _rawOpenFile(QFile;) | raw open file
ParserResult importToOpenBase(QString;) | import to open base
String getDefaultOpenDir() | get default open dir
String getOpenExpression() | get open expression
String getOpenWith() | get open with
String showOpenDialog() | show open dialog
String showOpenDialog(QView;QString;QContentType;) | show open dialog
String writeOpenCloseGroup(QPrintWriter;QString;QString;) | write open close group
UISWTView[] getOpenViews(QString;) | get open views
void actualOpenProject(String fileName) | actual open project
void addComponentListenerToOpenDocumentsList(QComponentListener;) | add component listener to open documents list
void _assertNumOpenDocs(I) | assert num open docs
void assertNumOpenDocs(I) | assert num open docs
void assertOpenCount(I) | assert open count
void _completeOpenFile(QOpenDefinitionsDocument;) | complete open file
void ConcreteOpenDefDoc(QFile;) | concrete open def doc
void ConcreteOpenDefDoc(QFile;QFile;J) | concrete open def doc
void ConcreteOpenDefDoc(QNullFile;) | concrete open def doc
void exportOpenDocumentSpreadsheet(QFile;QBibtexDatabase;QSet<QString;>;) | export open document spreadsheet
void exportOpenDocumentSpreadsheetXML(QFile;QBibtexDatabase;QSet<QString;>;) | export open document spreadsheet xml
void exportOpenOfficeCalc(QFile;QBibtexDatabase;QSet<QString;>;) | export open office calc
void exportOpenOfficeCalcXML(QFile;QBibtexDatabase;QSet<QString;>;) | export open office calc xml
void handleAlreadyOpenDocument(QOpenDefinitionsDocument;) | handle already open document
void handleOpenFile(QApplicationEvent;) | handle open file
void handleOpenURL() | handle open url
void handleReOpenApplication(QApplicationEvent;) | handle re open application
void initOpenJavadocDialog() | init open javadoc dialog
void junitOpenDefDocs(QList<QOpenDefinitionsDocument;>;Z) | junit open def docs
void logOpenPreparedStatement() | log open prepared statement
void logOpenResults() | log open results
void performPostOpenActions(QBasePanel;QParserResult;Z) | perform post open actions
void processAutoOpenMap(QString;QMap;QIViewInfo;) | process auto open map
void _rawJUnitOpenDefDocs(QList<QOpenDefinitionsDocument;>;Z) | raw j unit open def docs
void resetOpenJavadocDialogPosition() | reset open javadoc dialog position
void setDefaultOpenDir(QString;) | set default open dir
void setMultipleOpenId(I) | set multiple open id
void setOpenDefDoc(QOpenDefinitionsDocument;) | set open def doc
void setOpenExpression(QString;) | set open expression
void setOpenImage(String openImage) | set open image
void setOpenTips(Z) | set open tips
void setOpenWindow(boolean _open) | set open window
void setOpenWith(QString;) | set open with
void setShowOpenTicks(Z) | set show open ticks
void setToOpenTab(Z) | set to open tab
void showOpenGamePanel() | show open game panel
void showOpenSheet(QJFileChooser;QComponent;QSheetListener;) | show open sheet
void storeOpenDocumentSpreadsheetFile(QFile;QInputStream;) | store open document spreadsheet file
void storeOpenOfficeFile(QFile;QInputStream;) | store open office file
void testAnnotationsAfterOpenCurly() | test annotations after open curly
void testCancelOpenFile() | test cancel open file
void testCancelOpenMultipleFiles() | test cancel open multiple files
void testFindReplaceInAllOpenFiles() | test find replace in all open files
void testFindReplaceInAllOpenFilesWholeWord() | test find replace in all open files whole word
void testOpenBracePrefix() | test open brace prefix
void testOpenBracket() | test open bracket
void TestOpenDoc(QDefinitionsDocument;) | test open doc
void testOpenMany() | test open many
void testOpenMultipleFiles() | test open multiple files
void testOpenMultipleFilesError() | test open multiple files error
void testOpenMultipleNonexistentFiles() | test open multiple nonexistent files
void testOpenNonexistentFile() | test open nonexistent file
void testOpenOne() | test open one
void testOpenParen() | test open paren
void testOpenRealFile() | test open real file
void updateOpenFiles(QFile;) | update open files
void updateOpenRecentHomeMenu(QJMenu;QHomeController;) | update open recent home menu
void updateOpenRecentMenu(QJMenu;) | update open recent menu
void writeOpenComment(Writer writer, Comments comments) | write open comment
