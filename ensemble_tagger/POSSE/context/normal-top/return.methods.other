boolean voidReturnFlag() | void return flag
CaseFragment setReturnColumnName(QString;) | set return column name
CaseFragment setReturnColumnName(QString;QString;) | set return column name
Class getReturnClass() | get return class
Class getReturnType() | get return type
double getReturnValue(I) | get return value
int getReturnCode() | get return code
int getReturnType() | get return type
int getReturnValue() | get return value
it.businesslogic.ireport.JRSubreportReturnValue getSubreportReturnValue() | get subreport return value
NativeSQLQueryJoinReturn bindReturnJoin(QElement;QMappings;) | bind return join
ReturnMetadata getReturnMetadata() | get return metadata
String getFunctionReturnClassName(QString;) | get function return class name
String[] getQueryReturnAliases() | get query return aliases
String[] getReturnAliases() | get return aliases
String[] getReturnAliasesForTransformer() | get return aliases for transformer
String[] getReturnAliases(QString;) | get return aliases
String getReturnClassName() | get return class name
String getReturnEntityName() | get return entity name
Task[] getReturnTask() | get return task
Type findFunctionReturnType(QString;QAST;) | find function return type
Type[] getQueryReturnTypes() | get query return types
Type getReturnType() | get return type
Type getReturnType(QType;QMapping;) | get return type
Type[] getReturnTypes() | get return types
Type[] getReturnTypes(QString;) | get return types
Type getReturnTypes(String queryString) | get return types
Vector getReturnValues() | get return values
void generateReturnResult(QClassFileWriter;QClass;Z) | generate return result
void setReturnValue(I) | set return value
void setReturnValue(int returnValue) | set return value
void setReturnValues(QVector;) | set return values
void setSubreportReturnValue(Qit.businesslogic.ireport.JRSubreportReturnValue;) | set subreport return value
void testJsonHashShouldNotReturnBuildSinceForNonActiveBuild() | test json hash should not return build since for non active build
void testReturnConstant() | test return constant
void testShouldBeAbleToReturnLastSuccessfulBuild() | test should be able to return last successful build
