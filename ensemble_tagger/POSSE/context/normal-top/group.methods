AbstractGroup getGroup() | get group
AbstractGroup[] getMatchingGroups(QBibtexEntry;) | get matching groups
AbstractGroup getResultingGroup() | get resulting group
AbstractUndoableEdit addToGroup([QBibtexEntry;) | add to group
AbstractUndoableEdit removeFromGroup([QBibtexEntry;) | remove from group
ArrayList getNewsGroups() | get news groups
BitSet getBestGroup() | get best group
BitSet getBestGroupOfSize(I) | get best group of size
boolean announceGroupsContainsURL(QTOTorrent;QString;) | announce groups contains url
boolean canBeInGroupBy() | can be in group by
boolean canGroup() | can group
boolean getNumberOfGroups() | get number of groups
boolean groupSelectedElements() | group selected elements
boolean hasStagingGroup() | has staging group
boolean importGroups() | import groups
boolean inAggregateOrGroupByClause(QExpression;) | in aggregate or group by clause
boolean isChildGroup(QString;) | is child group
boolean isGroupAddress() | is group address
boolean isGroupHit() | is group hit
boolean isGrouping() | is grouping
boolean isInGroup(QString;) | is in group
boolean isInGroup(QVisualItem;QString;) | is in group
boolean isSelectedInGroup(QItemT;) | is selected in group
boolean removeGroup(QString;) | remove group
boolean supportsGroupBy() | supports group by
boolean supportsGroupByBeyondSelect() | supports group by beyond select
cacheGroup importGroup(QList;) | import group
char getGroupChar() | get group char
Enumeration getGroups() | get groups
FileGroupingState makeFlatFileGroupingState() | make flat file grouping state
FileGroupingState makeProjectFileGroupingState(QFile;QString;QFile;QFile;QFile;[QFile;[QFile;[QFile;QIterable<QFile;>;QFile;IZ) | make project file grouping state
GeneralName getTargetGroup() | get target group
GPOptionGroup[] getChartOptionGroups() | get chart option groups
GPOptionGroup[] getNetworkOptionGroups() | get network option groups
GPOptionGroup getOptionGroup() | get option group
GPOptionGroup[] getOptionGroups() | get option groups
GPOptionGroup[] getOptionGroups(QIGanttProject;QUIFacade;) | get option groups
Group getGroupByName(QString;) | get group by name
GroupNodeWrapper createGroupNodeWrapper(Group group) | create group node wrapper
GroupSelector getGroupSelector() | get group selector
GroupTreeNode getGroups() | get groups
GroupTreeNode getGroupTreeRoot() | get group tree root
GroupTreeNode importFlatGroups(QVector<QString;>;) | import flat groups
GroupTreeNode importGroups(QVector<QString;>;QBibtexDatabase;I) | import groups
HashSet getGroups() | get groups
Histogram addHistogram(Group group, String name, Object histData) | add histogram
IModelGroup getModelGroup() | get model group
int charGroup(C) | char group
int getAssociatedGroupAddresses() | get associated group addresses
int getGroupId() | get group id
int getGroupRateLimit(QLimitedRateGroup;) | get group rate limit
int getGroupSelectedCount() | get group selected count
int getMaxColumnsInGroupBy() | get max columns in group by
int getMaxGroup() | get max group
int getMinGroup() | get min group
int getPieceGroupSize() | get piece group size
IProgressMonitor createProgressGroup() | create progress group
it.businesslogic.ireport.Band getGroupFooter() | get group footer
it.businesslogic.ireport.Band getGroupHeader() | get group header
it.businesslogic.ireport.Group readGroupElement(QSubDataset;QNode;Z) | read group element
it.businesslogic.ireport.gui.GroupsDialog getGroupsDialog() | get groups dialog
java.lang.String getEvaluationGroup() | get evaluation group
java.lang.String getGroup() | get group
java.lang.String getGroupExpression() | get group expression
java.lang.String getGroupName() | get group name
java.lang.String getPrintWhenGroupChanges() | get print when group changes
java.lang.String getResetGroup() | get reset group
java.util.Set<QString;> getNamesOfSelectedTopLevelGroup() | get names of selected top level group
java.util.Vector getGroups() | get groups
JComponent createGroupComponent(QGPOptionGroup;) | create group component
JournalTemplate findByG_S_PrevAndNext(long id, long groupId, String structureId, OrderByComparator obc) | find by g s prev and next
JToggleGroup createCheckboxGroup() | create checkbox group
JToggleGroup createRadioGroup() | create radio group
JToggleGroup createToggleGroup(I) | create toggle group
LayoutSet getLayoutSet(long groupId, boolean privateLayout) | get layout set
LimitedRateGroup getDownloadLimitedRateGroup() | get download limited rate group
LimitedRateGroup getUploadLimitedRateGroup() | get upload limited rate group
List announceGroupsToList(QTOTorrent;) | announce groups to list
List exportGroup(QTOTorrentAnnounceURLGroup;) | export group
List getAllGroupnames(UserTransaction trans) | get all group names
List getGroupsbyId(CaGroups caGroups) | get groups by id
long getGroupId() | get group id
OptionGroup addGroup(QString;) | add group
OptionGroup addGroup(QString;QString;) | add group
OptionGroup getOptionGroup(QString;) | get option group
ParameterGroup createGroup(QString;[Qorg.gudy.azureus2.plugins.ui.config.Parameter;) | create group
ParameterGroup createGroup(QString;[QParameter;) | create group
ParameterGroupImpl getGroup() | get group
PMAreasGroup getContentGroup() | get content group
Projection sqlGroupProjection(QString;QString;[QString;[QType;) | sql group projection
PropertyProjection group() | group
PropertyProjection groupProperty(QString;) | group property
Select setGroupByClause(QString;) | set group by clause
String createChildGroup(QString;) | create child group
String findGroupTypeName(QString;QConnection;) | find group type name
String getAddedGroup() | get added group
String getChildGroup(QString;) | get child group
String getCurrentGroup() | get current group
String getElementGroup() | get element group
String getEvaluationGroup() | get evaluation group
String getGroup() | get group
String getGroupBy() | get group by
String getGroupDisplayableName(QString;) | get group displayable name
String getGroupedAlphaKey(QString;) | get grouped alpha key
String getGroupId() | get group id
String _getGroup(long _pointer_) | get group
String getGroupName(FacesContext facesContext) | get group name
String getGroupName(QString;QString;) | get group name
String getGroup(QTuple;) | get group
String getIncrementGroup() | get increment group
String getNewElementGroup() | get new element group
String getOldElementGroup() | get old element group
String getOptionGroupLabel(QGPOptionGroup;) | get option group label
String getParentGroup(QString;) | get parent group
String getResetGroup() | get reset group
String maxGroupTipText() | max group tip text
String minGroupTipText() | min group tip text
String numberOfGroupsTipText() | number of groups tip text
String toGroupSqlString(QCriteria;QCriteriaQuery;) | to group sql string
String writeOpenCloseGroup(QPrintWriter;QString;QString;) | write open close group
TaxonParentGroup getTaxonParentGroup(TaxonParentFilter filter) | get taxon parent group
TOTorrentAnnounceURLGroup getAnnounceURLGroup() | get announce url group
TransformGroup getNormalizedTransformGroup(QNode;[[FF) | get normalized transform group
TreeItem newGroup() | new group
TreeItem newGroup(QString;) | new group
TriangleMesh bevelFacesAsGroup(double height, double width) | bevel faces as group
TupleSet getFocusGroup(QString;) | get focus group
TupleSet getGroup(QString;) | get group
TupleSet getVisualGroup(QString;) | get visual group
void addDataGroup(QString;QVisualTupleSet;QTupleSet;) | add data group
void addElementToGroup(QDocumentStructureTreeNode;QString;QReportElement;QList;) | add element to group
void addElementToGroup(Qit.businesslogic.ireport.util.TreeNode;QString;QReportElement;) | add element to group
void addFocusGroup(QString;) | add focus group
void addFocusGroup(QString;QTupleSet;) | add focus group
void AddGroupAction() | add group action
void addGroup(QGroup;) | add group
void addGroup(QGroup;Z) | add group
void addGroup(QIOptionGroup;QGridBagLayout;QGridBagConstraints;) | add group
void addGroup(QString;) | add group
void addGroups(QGroupTreeNode;QCompoundEdit;) | add groups
void addNewsGroup(QNewsGroup;) | add news group
void addOptionGroup(QOptionGroup;) | add option group
void addOptionGroups([QGPOptionGroup;) | add option groups
void AddToGroupAction(QGroupTreeNode;) | add to group action
void addToGroup(QString;) | add to group
void addTopLevelGroup(QString;QINavigatorItemFilter<-QItemT;>;) | add top level group
void addTopLevelGroupToRoot(QInnerNode<*QItemT;>;) | add top level group to root
void afterGroupInit(QString;) | after group init
void announceGroupsInsertFirst(QTOTorrent;QString;) | announce groups insert first
void announceGroupsInsertFirst(QTOTorrent;[QURL;) | announce groups insert first
void announceGroupsInsertFirst(QTOTorrent;QURL;) | announce groups insert first
void announceGroupsInsertLast(QTOTorrent;[QURL;) | announce groups insert last
void announceGroupsSetFirst(QTOTorrent;QString;) | announce groups set first
void appendGroupByToken(QString;) | append group by token
void beforeGroupInit(QString;) | before group init
void cacheGroup(QList;) | cache group
void checkAggregateOrGroupByColumns(II) | check aggregate or group by columns
void checkAggregateOrGroupByOrderColumns(II) | check aggregate or group by order columns
void checkGroupExists(QString;) | check group exists
void collectInGroupByExpressions(QHsqlArrayList;) | collect in group by expressions
void concludeMoveGroup(QAbstractUndoableEdit;QGroupTreeNode;) | conclude move group
void createGroup() | create group
void createIsDbfProjectGroup(Composite parent) | create is dbf project group
void createMoveOnEventGrouping(QComposite;QString;QString;QString;QString;QString;QString;) | create move on event grouping
void delGroup(QGroup;) | del group
void disableGroups(I) | disable groups
void EditGroupAction() | edit group action
void elementGroupResort(QBand;) | element group resort
void enableGroups(QString;) | enable groups
void fixGroup() | fix group
void generateGeneralGroup() | generate general group
void generateGroupsFromNumbers(QInstances;QRandom;) | generate groups from numbers
void generateGroupsFromSizes(QInstances;QRandom;) | generate groups from sizes
void generateReadsGroup() | generate reads group
void generateSpeedGroup() | generate speed group
void generateWritesGroup() | generate writes group
void groupBuild(QNode;) | group build
void GroupData(QByteBucket;) | group data
void groupFigures(QDrawingView;QCompositeFigure;QCollection<QFigure;>;) | group figures
void groupFind(QNode;I) | group find
void GroupingWorker(QSearchRuleSet;QHashtable<QString;QString;>;) | grouping worker
void grouping(Z) | grouping
void GroupProxy(QIBasicOptionGroup;) | group proxy
void Group(QString;) | group
void groupSemaphore(I) | group semaphore
void GroupsEnumeration() | groups enumeration
void importGroupsTree(QDBTYPE;QMetaData;QHashMap<QString;QBibtexEntry;>;QConnection;) | import groups tree
void initDataGroups() | init data groups
void initialiseActivityGroup() | initialise activity group
void initialiseDBGroup() | initialise db group
void initialiseGeneralGroup() | initialise general group
void initialiseOperationDetailsGroup() | initialise operation details group
void initialiseTransportDetailsGroup() | initialise transport details group
void listToAnnounceGroups(QList;QTOTorrent;) | list to announce groups
void loadGroup(QParsedXML;QIPreferenceStore;) | load group
void moveGroup(QGroup;I) | move group
void OptionGroupButton(QString;QOptionGroupUI;) | option group button
void OptionGroupPanel() | option group panel
void parseGroupsFrom(String gs) | parse groups from
void printGroup(QBitSet;I) | print group
void printGroups() | print groups
void ProcessChainThreadGroup(QProcessChain;) | process chain thread group
void ProcessSequenceThreadGroup(QProcessSequence;) | process sequence thread group
void ProjectFileGroupingState(QFile;) | project file grouping state
void ProjectFileGroupingState(QFile;QString;QFile;QFile;QFile;[QFile;[QFile;[QFile;QIterable<QFile;>;QFile;IZ) | project file grouping state
void putGroups(QVector<QString;>;QBibtexDatabase;I) | put groups
void refreshGroupsForNewDatabase(QBibtexDatabase;) | refresh groups for new database
void releaseGroup(I) | release group
void removeFromAllGroups() | remove from all groups
void removeFromGroup(QString;) | remove from group
void RemoveGroupAndSubgroupsAction() | remove group and subgroups action
void RemoveGroupKeepSubgroupsAction() | remove group keep subgroups action
void removeUserFromGroup(String userName, String groupName) | remove user from group
void reserveGroup(I) | reserve group
void resultGroup([QDHTSpeedTesterContact;[I) | result group
void ResultGroup([QObject;) | result group
void revalidateGroups() | revalidate groups
void revalidateGroups(QGroupTreeNode;) | revalidate groups
void revalidateGroups([QTreePath;QEnumeration<QTreePath;>;) | revalidate groups
void revalidateGroups([QTreePath;QEnumeration<QTreePath;>;QGroupTreeNode;) | revalidate groups
void scanGroups(QMetaData;QMetaData;QMetaData;) | scan groups
void selectGroup(Z) | select group
void sendToGroup([B) | send to group
void sendToGroup(QString;) | send to group
void setAddedGroup(QString;) | set added group
void setArchiveSampleGroup_CollectionDummy(Throwable toThrow) | set archive sample group collection dummy
void setCapabilities(TransformGroup group) | set capabilities
void setCurrentGroup(QString;) | set current group
void setDataGroups(QString;QString;) | set data groups
void setElementGroup(QString;) | set element group
void setEvaluationGroup(Qjava.lang.String;) | set evaluation group
void setEvaluationGroup(QString;) | set evaluation group
void setFileGroupingState(QFileGroupingState;) | set file grouping state
void setGroupByTokens(QIterator;) | set group by tokens
void setGroupDAO(GroupDAO groupDAO) | set group dao
void setGroupExpression(Qjava.lang.String;) | set group expression
void setGroupFocusable(Z) | set group focusable
void setGroupFontAndIcon(QJMenuItem;QAbstractGroup;) | set group font and icon
void setGroupFooter(Qit.businesslogic.ireport.Band;) | set group footer
void setGroupHeader(Qit.businesslogic.ireport.Band;) | set group header
void setGroupHit(Z) | set group hit
void setGroupId(I) | set group id
void setGrouping(Z) | set grouping
void setGroupMatcher(QMatcher<QBibtexEntry;>;) | set group matcher
void setGroupName(Qjava.lang.String;) | set group name
void SetGroupPositionAction(QFastVector;II) | set group position action
void setGroup(QAbstractGroup;) | set group
void setGroup(Qit.businesslogic.ireport.Group;) | set group
void setGroup(Qjava.lang.String;) | set group
void setGroup(QParameterGroupImpl;) | set group
void setGroup(QString;) | set group
void setGroups() | set groups
void setGroupsDialog(Qit.businesslogic.ireport.gui.GroupsDialog;) | set groups dialog
void setGroups(QGroupTreeNode;) | set groups
void setGroups(QHashSet;) | set groups
void setGroups(Qjava.util.Vector;) | set groups
void setGroup(String s) | set group
void setIncrementGroup(QString;) | set increment group
void setLayoutForSelectedGroup() | set layout for selected group
void setMaxGroup(I) | set max group
void setMinGroup(I) | set min group
void setNewElementGroup(QString;) | set new element group
void setNewsGroups(QArrayList;) | set news groups
void setNumberOfGroups(Z) | set number of groups
void setOldElementGroup(QString;) | set old element group
void setPrintWhenGroupChanges(Qjava.lang.String;) | set print when group changes
void setResetGroup(Qjava.lang.String;) | set reset group
void setResetGroup(QString;) | set reset group
void setSeriesToGroupMap(KeyToGroupMap map) | set series to group map
void showFloatGrouping(QMatcher<QBibtexEntry;>;) | show float grouping
void showMatchingGroups([QBibtexEntry;Z) | show matching groups
void showOverlappingGroups(QList<QBibtexEntry;>;) | show overlapping groups
void stopShowingFloatGrouping() | stop showing float grouping
void stopShowingGroup() | stop showing group
void testAggregatedGroupBy() | test aggregated group by
void testAggregatedGroupByHaving1() | test aggregated group by having 1
void testAggregatedGroupByHaving2() | test aggregated group by having 2
void testGetNamesOfSelectedTopLevelGroup() | test get names of selected top level group
void testHavingWithoutGroupBy1() | test having without group by 1
void testHavingWithoutGroupBy2() | test having without group by 2
void testRemoveGroup() | test remove group
void testRepeatGroup() | test repeat group
void updateGroups() | update groups
void validateAddMember(String groupIDs, String personIDs) | validate add member
void viewGroup() | view group
void _wakeFrontGroupOfWaitQueue() | wake front group of wait queue
void writeXMLGroups(QVector;Qjava.io.PrintWriter;ZI) | write xml groups
