AmmoType getOneshotAmmo(QMounted;) | get oneshot ammo
boolean containsOverOneEvent() | contains over one event
boolean getUseOneSE() | get use one se
boolean hasExactlyOneChild(QAST;) | has exactly one child
boolean _hasOneEmptyDocument() | has one empty document
boolean isInverseOneToManyOrNoOrphanDelete() | is inverse one to many or no orphan delete
boolean isOneLeftSideOfRoot() | is one left side of root
boolean isOneToMany() | is one to many
boolean isOneToOne() | is one to one
boolean isOneUse() | is one use
boolean KononenkosMDL([D[[DDI) | kon one nk os mdl
boolean oneIsSet() | one is set
CollectionInitializer createBatchingOneToManyInitializer(QQueryableCollection;IQSessionFactoryImplementor;QMap;) | create batching one to many initializer
double evaluateInstanceLeaveOneOut(QInstance;[D) | evaluate instance leave one out
double leaveOneOutCV(QBayesNet;) | leave one out cv
EntityType manyToOne(QString;) | many to one
EntityType manyToOne(QString;QString;ZZZZ) | many to one
EntityType manyToOne(QString;Z) | many to one
EntityType oneToOne(QString;QForeignKeyDirection;QString;ZZZQString;QString;) | one to one
FastVector getOneElements(QInstances;) | get one elements
FastVector oneElementsToSequences(QFastVector;) | one elements to sequences
Instances rulesetForOneClass(DQInstances;DD) | ruleset for one class
int addOne(I) | add one
int doOne(IIII) | do one
int leaveOneOut(QIndexes;[[[I[I[Z) | leave one out
int nextAssignedOne(II[I) | next assigned one
int oneUcs4ToUtf8Char([BI) | one ucs 4 to utf 8 char
int readOneTag() | read one tag
int scanOneAttribute(char input, int offset, int end, int lineNr) | scan one attribute
int scanOneAttribute([CII[I) | scan one attribute
lalr_item get_one() | get one
Number getOneValue() | get one value
Point2D getOneControlPoint(QCubicCurve2D;) | get one control point
String findOneDown(II) | find one down
String getOneToOneOwnerName() | get one to one owner name
String oneAuthorPlusIni(QString;) | one author plus ini
String oneToManyFilterFragment(QString;) | one to many filter fragment
String readStringIntegerPlusOne() | read string integer plus one
String useOneSETipText() | use one se tip text
TileBlock[] splitOneGo() | split one go
Vector oneCriticalEntity(QEntity;I) | one critical entity
void abortInvalidAndOneTimeMissions() | abort invalid and one time missions
void addOne() | add one
void bindManyToOne(QElement;QManyToOne;QString;ZQMappings;) | bind many to one
void bindOneToMany(QElement;QOneToMany;QMappings;) | bind one to many
void bindOneToOne(QElement;QOneToOne;QString;ZQMappings;) | bind one to one
void cascadeToOne(QObject;QType;QCascadeStyle;QObject;Z) | cascade to one
void foldOneStage(QMindMapNode;) | fold one stage
void ManyToOneSecondPass(QManyToOne;) | many to one second pass
void OneRRule(QInstances;QAttribute;) | one r rule
void OneRRule(QInstances;QAttribute;I) | one r rule
void performOneTimeDisable(QMenuItem;Z) | perform one time disable
void preparedTestOne(I) | prepared test one
void setParentOneFirstName(String _p1_first_name) | set parent one first name
void setUseOneSE(Z) | set use one se
void testColonInTernaryOpOneLineStmts() | test colon in ternary op one line stmts
void testColonInTernaryOpTwoStmtsOnOneLine() | test colon in ternary op two stmts on one line
void testConstructOneDocWithBoth() | test construct one doc with both
void testConstructOneDocWithLineNums() | test construct one doc with line nums
void testConstructOneDocWithoutLineNums() | test construct one doc without line nums
void testElspethOneJUnitError() | test el sp eth one j unit error
void testFileOnePackage() | test file one package
void testFilesOnePackage() | test files one package
void testGetSourceRootPackageOneDeepValid() | test get source root package one deep valid
void testOneAuthorCommonName() | test one author common name
void testOneAuthorSimpleName() | test one author simple name
void testOneDependencyDeletionDoesntAffectOthers() | test one dependency deletion doesnt affect others
void testOneJUnitError() | test one j unit error
void testOpenOne() | test open one
void testRemembersOneEditedEntry() | test remembers one edited entry
void testTaskStartingOnSaturdayLastingOneDayEndsOnTuesday() | test task starting on saturday lasting one day ends on tuesday
void testTaskStartingOnSundayLastingOneDayEndsOnTuesday() | test task starting on sunday lasting one day ends on tuesday
void unfoldOneStage(QMindMapNode;) | unfold one stage
void validateOneToManyRelationship() | validate one to many relationship
