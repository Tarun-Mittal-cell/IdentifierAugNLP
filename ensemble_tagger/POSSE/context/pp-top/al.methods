boolean alreadyInstrumented(QClassFile;) | already instrumented
boolean connectionAllowed(QEventSetDescriptor;) | connection allowed
boolean connectionAllowed(QString;) | connection allowed
boolean criticalSlotsAllocated(QEntity;QMounted;QVector;) | critical slots allocated
boolean DHTEnableAllowed() | dht enable allowed
boolean DHTExtendedUseAllowed() | dht extended use allowed
boolean getAllNetworksSupported() | get all networks supported
boolean getAllWrapped() | get all wrapped
boolean getInRangeAddressesAreAllowed() | get in range addresses are allowed
boolean isAliasQuoted() | is alias quoted
boolean isAllowed(QClass;QString;) | is allowed
boolean isAllowed(QInetSocketAddress;) | is allowed
boolean isAllowed(QObject;QString;) | is allowed
boolean isAlreadyConnected(QPeerItem;) | is already connected
boolean isAlreadyEncoded() | is already encoded
boolean isAlreadyInstalled() | is already installed
boolean isAlreadyInstrumented([QString;) | is already instrumented
boolean isAlreadyOpened() | is already opened
boolean isAlreadySlotted(QUploadSession;) | is already slotted
boolean isAlwaysDirtyChecked() | is always dirty checked
boolean isAntiAliasingEnabled() | is anti aliasing enabled
boolean isCancelAllowed() | is cancel allowed
boolean isClientTypeAllowed(QString;) | is client type allowed
boolean isDataAlreadyAllocated() | is data already allocated
boolean isDriverAllReadyRegistered(QDriver;) | is driver all ready registered
boolean isEmulatorAllowed(String emulator) | is emulator allowed
boolean isExtendedUseAllowed() | is extended use allowed
boolean isNullValueAllowed() | is null value allowed
boolean isRetryAllowed() | is retry allowed
boolean isSaveAllRequired() | is save all required
boolean isSaveAsAllowed() | is save as allowed
boolean isSplitAllowed() | is split allowed
boolean isTileAllowed(QTile;) | is tile allowed
boolean isTileTypeAllowed(QTileType;) | is tile type allowed
boolean isWorkerAllowed(QUnit;) | is worker allowed
boolean isWorkerTypeAllowed(QUnitType;) | is worker type allowed
boolean removeAllowed(QClass;QString;) | remove allowed
CONS MultiplyAlphaRed(QCachableRed;QCachableRed;) | multiply alpha red
double getMaximumVariancePercentageAllowed() | get maximum variance percentage allowed
Enumeration allowed() | allowed
int calcRarestAllowed() | calc rarest allowed
int getCurrentNumBytesAllowed() | get current num bytes allowed
int getMaxNewConnectionsAllowed() | get max new connections allowed
int numNewConnectionsAllowed(QPeerIdentityDataID;I) | num new connections allowed
long getAllocated() | get allocated
void addAllowed(QClass;QString;) | add allowed
void alertLogged(IQString;Z) | alert logged
void alertLogged(QString;QThrowable;Z) | alert logged
void alertRaised(QLogAlert;) | alert raised
void checkUploadAllowed() | check upload allowed
void enableOrAlgChanged() | enable or alg changed
void findAllUnused(QIBoard;IQHashSet;QHashSet;QIHex;QHashMap;) | find all unused
void instanceAlreadyLoaded(QResultSet;IQLoadable;QEntityKey;QObject;QLockMode;QSessionImplementor;) | instance already loaded
void jButtonAlignBottomActionPerformed(Qjava.awt.event.ActionEvent;) | j button align bottom action performed
void jButtonAlignCenterActionPerformed(Qjava.awt.event.ActionEvent;) | j button align center action performed
void jButtonAlignJustifyActionPerformed(Qjava.awt.event.ActionEvent;) | j button align justify action performed
void jButtonAlignLeftActionPerformed(Qjava.awt.event.ActionEvent;) | j button align left action performed
void jButtonAlignMiddleActionPerformed(Qjava.awt.event.ActionEvent;) | j button align middle action performed
void jButtonAlignRightActionPerformed(Qjava.awt.event.ActionEvent;) | j button align right action performed
void jButtonAlignTopActionPerformed(Qjava.awt.event.ActionEvent;) | j button align top action performed
void jButtonCompileAllActionPerformed(Qjava.awt.event.ActionEvent;) | j button compile all action performed
void jButtonFormatAlignBottomActionPerformed(Qjava.awt.event.ActionEvent;) | j button format align bottom action performed
void jButtonFormatAlignLeftActionPerformed(Qjava.awt.event.ActionEvent;) | j button format align left action performed
void jButtonFormatAlignRightActionPerformed(Qjava.awt.event.ActionEvent;) | j button format align right action performed
void jButtonFormatAlignToBandBottomActionPerformed(Qjava.awt.event.ActionEvent;) | j button format align to band bottom action performed
void jButtonFormatAlignToBandTopActionPerformed(Qjava.awt.event.ActionEvent;) | j button format align to band top action performed
void jButtonFormatAlignToLeftMarginActionPerformed(Qjava.awt.event.ActionEvent;) | j button format align to left margin action performed
void jButtonFormatAlignTopActionPerformed(Qjava.awt.event.ActionEvent;) | j button format align top action performed
void jButtonFormatAlignToRightMarginActionPerformed(Qjava.awt.event.ActionEvent;) | j button format align to right margin action performed
void jButtonOrderByAlphaActionPerformed(Qjava.awt.event.ActionEvent;) | j button order by alpha action performed
void jCheckBoxSplitAllowedActionPerformed(Qjava.awt.event.ActionEvent;) | j check box split allowed action performed
void jComboBoxHAlignActionPerformed(Qjava.awt.event.ActionEvent;) | j combo box h align action performed
void jComboBoxHorizontalAlignmentActionPerformed(Qjava.awt.event.ActionEvent;) | j combo box horizontal alignment action performed
void jComboBoxVAlignActionPerformed(Qjava.awt.event.ActionEvent;) | j combo box v align action performed
void jComboBoxVerticalAlignmentActionPerformed(Qjava.awt.event.ActionEvent;) | j combo box vertical alignment action performed
void jMenuAlignActionPerformed(Qjava.awt.event.ActionEvent;) | j menu align action performed
void jMenuItemAlignBottomActionPerformed(Qjava.awt.event.ActionEvent;) | j menu item align bottom action performed
void jMenuItemAlignHorizontalAxisActionPerformed(Qjava.awt.event.ActionEvent;) | j menu item align horizontal axis action performed
void jMenuItemAlignLeftActionPerformed(Qjava.awt.event.ActionEvent;) | j menu item align left action performed
void jMenuItemAlignRightActionPerformed(Qjava.awt.event.ActionEvent;) | j menu item align right action performed
void jMenuItemAlignToBandBottomActionPerformed(Qjava.awt.event.ActionEvent;) | j menu item align to band bottom action performed
void jMenuItemAlignToBandTopActionPerformed(Qjava.awt.event.ActionEvent;) | j menu item align to band top action performed
void jMenuItemAlignTopActionPerformed(Qjava.awt.event.ActionEvent;) | j menu item align top action performed
void jMenuItemAlignVerticalAxisActionPerformed(Qjava.awt.event.ActionEvent;) | j menu item align vertical axis action performed
void jMenuItemCloseAllActionPerformed(Qjava.awt.event.ActionEvent;) | j menu item close all action performed
void jMenuItemCloseAllExceptThisActionPerformed(Qjava.awt.event.ActionEvent;) | j menu item close all except this action performed
void jMenuItemCloseAllExceptThisFromListActionPerformed(Qjava.awt.event.ActionEvent;) | j menu item close all except this from list action performed
void jMenuItemCloseAllFromListActionPerformed(Qjava.awt.event.ActionEvent;) | j menu item close all from list action performed
void jMenuItemSaveAllActionPerformed(Qjava.awt.event.ActionEvent;) | j menu item save all action performed
void jMenuItemSaveAllFromListActionPerformed(Qjava.awt.event.ActionEvent;) | j menu item save all from list action performed
void jMenuItemSelectAllActionPerformed(Qjava.awt.event.ActionEvent;) | j menu item select all action performed
void performCommandIfAllowed(QConsoleInput;QList;QDownloadManager;QString;QString;) | perform command if allowed
void performCommandIfAllowed(QConsoleInput;QList;QTRHostTorrent;QString;QString;) | perform command if allowed
void setAllocated(J) | set allocated
void setCancelAllowed(Z) | set cancel allowed
void setDataAlreadyAllocated(Z) | set data already allocated
void setInRangeAddressesAreAllowed(Z) | set in range addresses are allowed
void setMaximumVariancePercentageAllowed(D) | set maximum variance percentage allowed
void setRetryAllowed(Z) | set retry allowed
void setSplitAllowed(Z) | set split allowed
void testCancelSaveAlreadySaved() | test cancel save already saved
void testCancelSaveAsAlreadySaved() | test cancel save as already saved
void testCompletionIs0WhenAllNestedTasksNotStarted() | test completion is 0 when all nested tasks not started
void testCompletionIs100WhenAllNestedTasksCompleted() | test completion is 100 when all nested tasks completed
void testCompletionIs50WhenAllNestedTasksHalfCompleted() | test completion is 50 when all nested tasks half completed
void testSaveAlreadySaved() | test save already saved
void testSaveAsAlreadySaved() | test save as already saved
